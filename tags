!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	third_party/gmock/gmock/gmock.h	/^inline Matcher<T> A() { return MakeMatcher(new internal::AnyMatcherImpl<T>()); }$/;"	f	namespace:testing
A00	src/sqlite/shell.c	854;"	d	file:
A01	src/sqlite/shell.c	855;"	d	file:
A02	src/sqlite/shell.c	856;"	d	file:
A03	src/sqlite/shell.c	857;"	d	file:
A04	src/sqlite/shell.c	858;"	d	file:
A10	src/sqlite/shell.c	859;"	d	file:
A11	src/sqlite/shell.c	860;"	d	file:
A12	src/sqlite/shell.c	861;"	d	file:
A13	src/sqlite/shell.c	862;"	d	file:
A14	src/sqlite/shell.c	863;"	d	file:
A20	src/sqlite/shell.c	864;"	d	file:
A21	src/sqlite/shell.c	865;"	d	file:
A22	src/sqlite/shell.c	866;"	d	file:
A23	src/sqlite/shell.c	867;"	d	file:
A24	src/sqlite/shell.c	868;"	d	file:
A30	src/sqlite/shell.c	869;"	d	file:
A31	src/sqlite/shell.c	870;"	d	file:
A32	src/sqlite/shell.c	871;"	d	file:
A33	src/sqlite/shell.c	872;"	d	file:
A34	src/sqlite/shell.c	873;"	d	file:
A40	src/sqlite/shell.c	874;"	d	file:
A41	src/sqlite/shell.c	875;"	d	file:
A42	src/sqlite/shell.c	876;"	d	file:
A43	src/sqlite/shell.c	877;"	d	file:
A44	src/sqlite/shell.c	878;"	d	file:
ACTION	third_party/gmock/gmock/gmock.h	3572;"	d
ACTION_P	third_party/gmock/gmock/gmock.h	/^ACTION_P(ReturnPointee, pointer) { return *pointer; }$/;"	f	namespace:testing
ACTION_P	third_party/gmock/gmock/gmock.h	/^ACTION_P(Throw, exception) { throw exception; }$/;"	f	namespace:testing
ACTION_P	third_party/gmock/gmock/gmock.h	3617;"	d
ACTION_P10	third_party/gmock/gmock/gmock.h	4249;"	d
ACTION_P2	third_party/gmock/gmock/gmock.h	3667;"	d
ACTION_P3	third_party/gmock/gmock/gmock.h	3722;"	d
ACTION_P4	third_party/gmock/gmock/gmock.h	3780;"	d
ACTION_P5	third_party/gmock/gmock/gmock.h	3847;"	d
ACTION_P6	third_party/gmock/gmock/gmock.h	3917;"	d
ACTION_P7	third_party/gmock/gmock/gmock.h	3990;"	d
ACTION_P8	third_party/gmock/gmock/gmock.h	4071;"	d
ACTION_P9	third_party/gmock/gmock/gmock.h	4158;"	d
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(DeleteArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(InvokeArgument,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(ReturnArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(ReturnNew,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(SaveArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(SaveArgPointee,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(SetArgReferee,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	/^ACTION_TEMPLATE(SetArrayArgument,$/;"	f	namespace:testing
ACTION_TEMPLATE	third_party/gmock/gmock/gmock.h	3508;"	d
ADDR	src/sqlite/sqlite3.c	13596;"	d	file:
ADD_FAILURE	third_party/gmock/gtest/gtest.h	19277;"	d
ADD_FAILURE_AT	third_party/gmock/gtest/gtest.h	19281;"	d
AGGREGATE	src/sqlite/sqlite3.c	15314;"	d	file:
AGGREGATE2	src/sqlite/sqlite3.c	15317;"	d	file:
ALLBITS	src/sqlite/sqlite3.c	16180;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	12130;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	12133;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	12136;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	146319;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	146322;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	146327;"	d	file:
ALWAYS	src/sqlite/sqlite3.c	183177;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	414;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	420;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	423;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	426;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ASSERT_ANY_THROW	third_party/gmock/gtest/gtest.h	19322;"	d
ASSERT_DEATH	third_party/gmock/gtest/gtest.h	8615;"	d
ASSERT_DEATH_IF_SUPPORTED	third_party/gmock/gtest/gtest.h	8719;"	d
ASSERT_DEATH_IF_SUPPORTED	third_party/gmock/gtest/gtest.h	8724;"	d
ASSERT_DEBUG_DEATH	third_party/gmock/gtest/gtest.h	8697;"	d
ASSERT_DEBUG_DEATH	third_party/gmock/gtest/gtest.h	8705;"	d
ASSERT_DOUBLE_EQ	third_party/gmock/gtest/gtest.h	19865;"	d
ASSERT_EQ	third_party/gmock/gtest/gtest.h	19782;"	d
ASSERT_EXIT	third_party/gmock/gtest/gtest.h	8604;"	d
ASSERT_FALSE	third_party/gmock/gtest/gtest.h	19337;"	d
ASSERT_FLOAT_EQ	third_party/gmock/gtest/gtest.h	19861;"	d
ASSERT_GE	third_party/gmock/gtest/gtest.h	19798;"	d
ASSERT_GT	third_party/gmock/gtest/gtest.h	19802;"	d
ASSERT_HRESULT_FAILED	third_party/gmock/gtest/gtest.h	19910;"	d
ASSERT_HRESULT_SUCCEEDED	third_party/gmock/gtest/gtest.h	19904;"	d
ASSERT_LE	third_party/gmock/gtest/gtest.h	19790;"	d
ASSERT_LT	third_party/gmock/gtest/gtest.h	19794;"	d
ASSERT_NE	third_party/gmock/gtest/gtest.h	19786;"	d
ASSERT_NEAR	third_party/gmock/gtest/gtest.h	19873;"	d
ASSERT_NO_FATAL_FAILURE	third_party/gmock/gtest/gtest.h	19925;"	d
ASSERT_NO_THROW	third_party/gmock/gtest/gtest.h	19320;"	d
ASSERT_PRED1	third_party/gmock/gtest/gtest.h	19461;"	d
ASSERT_PRED2	third_party/gmock/gtest/gtest.h	19509;"	d
ASSERT_PRED3	third_party/gmock/gtest/gtest.h	19564;"	d
ASSERT_PRED4	third_party/gmock/gtest/gtest.h	19626;"	d
ASSERT_PRED5	third_party/gmock/gtest/gtest.h	19695;"	d
ASSERT_PRED_FORMAT1	third_party/gmock/gtest/gtest.h	19459;"	d
ASSERT_PRED_FORMAT2	third_party/gmock/gtest/gtest.h	19507;"	d
ASSERT_PRED_FORMAT3	third_party/gmock/gtest/gtest.h	19562;"	d
ASSERT_PRED_FORMAT4	third_party/gmock/gtest/gtest.h	19624;"	d
ASSERT_PRED_FORMAT5	third_party/gmock/gtest/gtest.h	19693;"	d
ASSERT_STRCASEEQ	third_party/gmock/gtest/gtest.h	19834;"	d
ASSERT_STRCASENE	third_party/gmock/gtest/gtest.h	19836;"	d
ASSERT_STREQ	third_party/gmock/gtest/gtest.h	19830;"	d
ASSERT_STRNE	third_party/gmock/gtest/gtest.h	19832;"	d
ASSERT_SZLEAF_OK	src/sqlite/sqlite3.c	191131;"	d	file:
ASSERT_THAT	third_party/gmock/gmock/gmock.h	8631;"	d
ASSERT_THROW	third_party/gmock/gtest/gtest.h	19318;"	d
ASSERT_TRUE	third_party/gmock/gtest/gtest.h	19334;"	d
Abort	src/concurrency/transaction_manager.cpp	/^void TransactionManager::Abort(Transaction *txn) {$/;"	f	class:cmudb::TransactionManager
Abort	third_party/gmock/gmock-gtest-all.cc	/^void Abort() {$/;"	f	namespace:testing::internal::posix
Abort	third_party/gmock/gmock-gtest-all.cc	/^void DeathTestImpl::Abort(AbortReason reason) {$/;"	f	class:testing::internal::DeathTestImpl
Abort	third_party/gmock/gtest/gtest.h	/^inline void Abort() { abort(); }$/;"	f	namespace:std::tr1::posix
AbortReason	third_party/gmock/gtest/gtest.h	/^  enum AbortReason {$/;"	g	class:testing::internal::DeathTest
AbstractSocketWriter	third_party/gmock/gmock-gtest-all.cc	/^  class AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener	file:
Action	third_party/gmock/gmock/gmock.h	/^  Action() : impl_(NULL) {}$/;"	f	class:testing::Action
Action	third_party/gmock/gmock/gmock.h	/^  Action(const Action& action) : impl_(action.impl_) {}$/;"	f	class:testing::Action
Action	third_party/gmock/gmock/gmock.h	/^  explicit Action(ActionInterface<F>* impl) : impl_(impl) {}$/;"	f	class:testing::Action
Action	third_party/gmock/gmock/gmock.h	/^Action<To>::Action(const Action<From>& from)$/;"	f	class:testing::Action
Action	third_party/gmock/gmock/gmock.h	/^class Action {$/;"	c	namespace:testing
ActionAdaptor	third_party/gmock/gmock/gmock.h	/^  explicit ActionAdaptor(const Action<F2>& from) : impl_(from.impl_) {}$/;"	f	class:testing::internal::ActionAdaptor
ActionAdaptor	third_party/gmock/gmock/gmock.h	/^class ActionAdaptor : public ActionInterface<F1> {$/;"	c	namespace:testing::internal
ActionHelper	third_party/gmock/gmock/gmock.h	/^class ActionHelper {$/;"	c	namespace:testing::internal
ActionInterface	third_party/gmock/gmock/gmock.h	/^  ActionInterface() {}$/;"	f	class:testing::ActionInterface
ActionInterface	third_party/gmock/gmock/gmock.h	/^class ActionInterface {$/;"	c	namespace:testing
ActionResultHolder	third_party/gmock/gmock/gmock.h	/^  explicit ActionResultHolder(T a_value) : value_(a_value) {}$/;"	f	class:testing::internal::ActionResultHolder
ActionResultHolder	third_party/gmock/gmock/gmock.h	/^class ActionResultHolder : public UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
ActionResultHolder	third_party/gmock/gmock/gmock.h	/^class ActionResultHolder<void> : public UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
Add	src/include/type/value.h	/^  inline Value Add(const Value &o) const {$/;"	f	class:cmudb::Value
Add	src/type/bigint_type.cpp	/^Value BigintType::Add(const Value &left, const Value &right) const {$/;"	f	class:cmudb::BigintType
Add	src/type/decimal_type.cpp	/^Value DecimalType::Add(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Add	src/type/integer_type.cpp	/^Value IntegerType::Add(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerType
Add	src/type/smallint_type.cpp	/^Value SmallintType::Add(const Value &left, const Value &right) const {$/;"	f	class:cmudb::SmallintType
Add	src/type/tinyint_type.cpp	/^Value TinyintType::Add(const Value &left, const Value &right) const {$/;"	f	class:cmudb::TinyintType
Add	src/type/type.cpp	/^Value Type::Add(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
Add	test/common/rwmutex_test.cpp	/^  void Add(int num) {$/;"	f	class:cmudb::Counter
AddArgument	third_party/gmock/gmock-gtest-all.cc	/^  void AddArgument(const char* argument) {$/;"	f	class:testing::internal::Arguments
AddArguments	third_party/gmock/gmock-gtest-all.cc	/^  void AddArguments(const ::std::vector<Str>& arguments) {$/;"	f	class:testing::internal::Arguments
AddEnvironment	third_party/gmock/gmock-gtest-all.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;"	f	class:testing::UnitTest
AddExpectation	third_party/gmock/gmock-gtest-all.cc	/^void Sequence::AddExpectation(const Expectation& expectation) const {$/;"	f	class:testing::Sequence
AddGlobalTestEnvironment	third_party/gmock/gtest/gtest.h	/^inline Environment* AddGlobalTestEnvironment(Environment* env) {$/;"	f	namespace:testing
AddIntoDeletedPageSet	src/include/concurrency/transaction.h	/^  inline void AddIntoDeletedPageSet(page_id_t page_id) {$/;"	f	class:cmudb::Transaction
AddIntoPageSet	src/include/concurrency/transaction.h	/^  inline void AddIntoPageSet(Page *page) { page_set_->push_back(page); }$/;"	f	class:cmudb::Transaction
AddRef	third_party/gmock/gtest/gtest.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddRef	third_party/gmock/gtest/gtest.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddReference	third_party/gmock/gtest/gtest.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddReference	third_party/gmock/gtest/gtest.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddTestCaseInstantiation	third_party/gmock/gtest/gtest.h	/^  int AddTestCaseInstantiation(const string& instantiation_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddTestInfo	third_party/gmock/gmock-gtest-all.cc	/^  void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,$/;"	f	class:testing::internal::UnitTestImpl
AddTestInfo	third_party/gmock/gmock-gtest-all.cc	/^void TestCase::AddTestInfo(TestInfo * test_info) {$/;"	f	class:testing::TestCase
AddTestName	third_party/gmock/gtest/gtest.h	/^  bool AddTestName(const char* file, int line, const char* case_name,$/;"	f	class:testing::internal::TypedTestCasePState
AddTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::TestResult
AddTestPattern	third_party/gmock/gtest/gtest.h	/^  void AddTestPattern(const char* test_case_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddToFreeList	src/buffer/buffer_pool_manager.cpp	/^bool BufferPoolManager::AddToFreeList(Page *tmp_page) {$/;"	f	class:cmudb::BufferPoolManager
AddValue	src/include/type/integer_parent_type.h	/^Value IntegerParentType::AddValue(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerParentType
AdjustRoot	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::AdjustRoot(BPlusTreePage *old_root_node) $/;"	f	class:cmudb::BPLUSTREE_TYPE
AdjustTree	src/sqlite/sqlite3.c	/^static int AdjustTree($/;"	f	file:
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Advance	third_party/gmock/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
After	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& After(const ExpectationSet& s) {$/;"	f	class:testing::internal::TypedExpectation
After	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2) {$/;"	f	class:testing::internal::TypedExpectation
After	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,$/;"	f	class:testing::internal::TypedExpectation
AggInfo	src/sqlite/sqlite3.c	/^struct AggInfo {$/;"	s	file:
AggInfo	src/sqlite/sqlite3.c	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo	file:
AggInfo_col	src/sqlite/sqlite3.c	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo	file:
AggInfo_func	src/sqlite/sqlite3.c	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo	file:
AllArgs	third_party/gmock/gmock/gmock.h	/^inline InnerMatcher AllArgs(const InnerMatcher& matcher) { return matcher; }$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9, M10 m10) {$/;"	f	namespace:testing
AllOf	third_party/gmock/gmock/gmock.h	/^inline internal::AllOfMatcher<Args...> AllOf(const Args&... matchers) {$/;"	f	namespace:testing
AllOfResult1	third_party/gmock/gmock/gmock.h	/^struct AllOfResult1 {$/;"	s	namespace:testing::internal
AllOfResult10	third_party/gmock/gmock/gmock.h	/^struct AllOfResult10 {$/;"	s	namespace:testing::internal
AllOfResult2	third_party/gmock/gmock/gmock.h	/^struct AllOfResult2 {$/;"	s	namespace:testing::internal
AllOfResult3	third_party/gmock/gmock/gmock.h	/^struct AllOfResult3 {$/;"	s	namespace:testing::internal
AllOfResult4	third_party/gmock/gmock/gmock.h	/^struct AllOfResult4 {$/;"	s	namespace:testing::internal
AllOfResult5	third_party/gmock/gmock/gmock.h	/^struct AllOfResult5 {$/;"	s	namespace:testing::internal
AllOfResult6	third_party/gmock/gmock/gmock.h	/^struct AllOfResult6 {$/;"	s	namespace:testing::internal
AllOfResult7	third_party/gmock/gmock/gmock.h	/^struct AllOfResult7 {$/;"	s	namespace:testing::internal
AllOfResult8	third_party/gmock/gmock/gmock.h	/^struct AllOfResult8 {$/;"	s	namespace:testing::internal
AllOfResult9	third_party/gmock/gmock/gmock.h	/^struct AllOfResult9 {$/;"	s	namespace:testing::internal
AllocatePage	src/disk/disk_manager.cpp	/^page_id_t DiskManager::AllocatePage() { return next_page_id_++; }$/;"	f	class:cmudb::DiskManager
AlmostEquals	third_party/gmock/gtest/gtest.h	/^  bool AlmostEquals(const FloatingPoint& rhs) const {$/;"	f	class:testing::internal::FloatingPoint
AlwaysFalse	third_party/gmock/gtest/gtest.h	/^inline bool AlwaysFalse() { return !AlwaysTrue(); }$/;"	f	namespace:testing::internal
AlwaysTrue	third_party/gmock/gmock-gtest-all.cc	/^bool AlwaysTrue() {$/;"	f	namespace:testing::internal
An	third_party/gmock/gmock/gmock.h	/^inline Matcher<T> An() { return A<T>(); }$/;"	f	namespace:testing
AnalyzeElements	third_party/gmock/gmock/gmock.h	/^  MatchMatrix AnalyzeElements(ElementIter elem_first, ElementIter elem_last,$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
AnsiToUtf16	third_party/gmock/gmock-gtest-all.cc	/^LPCWSTR String::AnsiToUtf16(const char* ansi) {$/;"	f	class:testing::internal::String
AnyMatcherImpl	third_party/gmock/gmock/gmock.h	/^class AnyMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
AnyNumber	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ Cardinality AnyNumber() { return AtLeast(0); }$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9, M10 m10) {$/;"	f	namespace:testing
AnyOf	third_party/gmock/gmock/gmock.h	/^inline internal::AnyOfMatcher<Args...> AnyOf(const Args&... matchers) {$/;"	f	namespace:testing
AnyOfResult1	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult1 {$/;"	s	namespace:testing::internal
AnyOfResult10	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult10 {$/;"	s	namespace:testing::internal
AnyOfResult2	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult2 {$/;"	s	namespace:testing::internal
AnyOfResult3	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult3 {$/;"	s	namespace:testing::internal
AnyOfResult4	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult4 {$/;"	s	namespace:testing::internal
AnyOfResult5	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult5 {$/;"	s	namespace:testing::internal
AnyOfResult6	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult6 {$/;"	s	namespace:testing::internal
AnyOfResult7	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult7 {$/;"	s	namespace:testing::internal
AnyOfResult8	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult8 {$/;"	s	namespace:testing::internal
AnyOfResult9	third_party/gmock/gmock/gmock.h	/^struct AnyOfResult9 {$/;"	s	namespace:testing::internal
AnythingMatcher	third_party/gmock/gmock/gmock.h	/^class AnythingMatcher {$/;"	c	namespace:testing::internal
Append	third_party/gmock/gmock-gtest-all.cc	/^void TestEventListeners::Append(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Append	third_party/gmock/gmock-gtest-all.cc	/^void TestEventRepeater::Append(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
Append	third_party/gmock/gmock-gtest-all.cc	/^void TestPartResultArray::Append(const TestPartResult& result) {$/;"	f	class:testing::TestPartResultArray
AppendMessage	third_party/gmock/gtest/gtest.h	/^  void AppendMessage(const Message& a_message) {$/;"	f	class:testing::AssertionResult
AppendUserMessage	third_party/gmock/gmock-gtest-all.cc	/^std::string AppendUserMessage(const std::string& gtest_msg,$/;"	f	namespace:testing::internal
ApplyCostMultiplier	src/sqlite/sqlite3.c	133261;"	d	file:
ApplyCostMultiplier	src/sqlite/sqlite3.c	133263;"	d	file:
ApplyDelete	src/page/table_page.cpp	/^void TablePage::ApplyDelete(const RID &rid, Transaction *txn) {$/;"	f	class:cmudb::TablePage
ApplyDelete	src/table/table_heap.cpp	/^void TableHeap::ApplyDelete(const RID &rid, Transaction *txn) {$/;"	f	class:cmudb::TableHeap
Args	third_party/gmock/gmock/gmock.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing
ArgsMatcher	third_party/gmock/gmock/gmock.h	/^  explicit ArgsMatcher(const InnerMatcher& inner_matcher)$/;"	f	class:testing::internal::ArgsMatcher
ArgsMatcher	third_party/gmock/gmock/gmock.h	/^class ArgsMatcher {$/;"	c	namespace:testing::internal
ArgsMatcherImpl	third_party/gmock/gmock/gmock.h	/^  explicit ArgsMatcherImpl(const InnerMatcher& inner_matcher)$/;"	f	class:testing::internal::ArgsMatcherImpl
ArgsMatcherImpl	third_party/gmock/gmock/gmock.h	/^class ArgsMatcherImpl : public MatcherInterface<ArgsTuple> {$/;"	c	namespace:testing::internal
Argument1	third_party/gmock/gmock/gmock.h	/^  typedef A1 Argument1;$/;"	t	struct:testing::internal::Function
Argument10	third_party/gmock/gmock/gmock.h	/^  typedef A10 Argument10;$/;"	t	struct:testing::internal::Function
Argument2	third_party/gmock/gmock/gmock.h	/^  typedef A2 Argument2;$/;"	t	struct:testing::internal::Function
Argument3	third_party/gmock/gmock/gmock.h	/^  typedef A3 Argument3;$/;"	t	struct:testing::internal::Function
Argument4	third_party/gmock/gmock/gmock.h	/^  typedef A4 Argument4;$/;"	t	struct:testing::internal::Function
Argument5	third_party/gmock/gmock/gmock.h	/^  typedef A5 Argument5;$/;"	t	struct:testing::internal::Function
Argument6	third_party/gmock/gmock/gmock.h	/^  typedef A6 Argument6;$/;"	t	struct:testing::internal::Function
Argument7	third_party/gmock/gmock/gmock.h	/^  typedef A7 Argument7;$/;"	t	struct:testing::internal::Function
Argument8	third_party/gmock/gmock/gmock.h	/^  typedef A8 Argument8;$/;"	t	struct:testing::internal::Function
Argument9	third_party/gmock/gmock/gmock.h	/^  typedef A9 Argument9;$/;"	t	struct:testing::internal::Function
ArgumentMatcherTuple	third_party/gmock/gmock/gmock.h	/^      ArgumentMatcherTuple;$/;"	t	class:testing::internal::MockSpec
ArgumentMatcherTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::FunctionMockerBase
ArgumentMatcherTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::OnCallSpec
ArgumentMatcherTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::TypedExpectation
ArgumentMatcherTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename MatcherTuple<ArgumentTuple>::type ArgumentMatcherTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^      A10> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::DoBothAction::Impl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnAction::Impl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnRefAction::Impl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnRefOfCopyAction::Impl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::WithArgsAction::Impl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::PolymorphicAction::MonomorphicImpl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::IgnoreResultAction::Impl
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3, A4, A5, A6> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3, A4, A5> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3, A4> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2, A3> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1, A2> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<A1> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::FunctionMockerBase
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::OnCallSpec
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::TypedExpectation
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F1>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ActionAdaptor
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::Action
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::ActionInterface
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::FunctionMocker
ArgumentTuple	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::MockSpec
Arguments	third_party/gmock/gmock-gtest-all.cc	/^  Arguments() {$/;"	f	class:testing::internal::Arguments
Arguments	third_party/gmock/gmock-gtest-all.cc	/^class Arguments {$/;"	c	namespace:testing::internal	file:
Argv	third_party/gmock/gmock-gtest-all.cc	/^  char* const* Argv() {$/;"	f	class:testing::internal::Arguments
Argv0	src/sqlite/shell.c	/^static char *Argv0;$/;"	v	file:
ArrayAsVector	third_party/gmock/gmock-gtest-all.cc	/^std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {$/;"	f	namespace:testing
ArrayAwareFind	third_party/gmock/gtest/gtest.h	/^Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {$/;"	f	namespace:testing::internal
ArrayEq	third_party/gmock/gtest/gtest.h	/^bool ArrayEq(const T* lhs, size_t size, const U* rhs) {$/;"	f	namespace:testing::internal
ArrayEq	third_party/gmock/gtest/gtest.h	/^inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }$/;"	f	namespace:testing::internal
ArraySize	src/sqlite/shell.c	1583;"	d	file:
ArraySize	src/sqlite/sqlite3.c	12933;"	d	file:
ArraySize	src/sqlite/sqlite3.c	183173;"	d	file:
AsciiTokenizer	src/sqlite/sqlite3.c	/^struct AsciiTokenizer {$/;"	s	file:
AsciiTokenizer	src/sqlite/sqlite3.c	/^typedef struct AsciiTokenizer AsciiTokenizer;$/;"	t	typeref:struct:AsciiTokenizer	file:
AssertHeld	third_party/gmock/gtest/gtest.h	/^  void AssertHeld() const {$/;"	f	class:std::tr1::MutexBase
AssertHeld	third_party/gmock/gtest/gtest.h	/^  void AssertHeld() const {}$/;"	f	class:std::tr1::Mutex
AssertHelper	third_party/gmock/gmock-gtest-all.cc	/^AssertHelper::AssertHelper(TestPartResult::Type type,$/;"	f	class:testing::internal::AssertHelper
AssertHelper	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ AssertHelper {$/;"	c	namespace:testing::internal
AssertHelperData	third_party/gmock/gtest/gtest.h	/^    AssertHelperData(TestPartResult::Type t,$/;"	f	struct:testing::internal::AssertHelper::AssertHelperData
AssertHelperData	third_party/gmock/gtest/gtest.h	/^  struct AssertHelperData {$/;"	s	class:testing::internal::AssertHelper
AssertPred1Helper	third_party/gmock/gtest/gtest.h	/^AssertionResult AssertPred1Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred2Helper	third_party/gmock/gtest/gtest.h	/^AssertionResult AssertPred2Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred3Helper	third_party/gmock/gtest/gtest.h	/^AssertionResult AssertPred3Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred4Helper	third_party/gmock/gtest/gtest.h	/^AssertionResult AssertPred4Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred5Helper	third_party/gmock/gtest/gtest.h	/^AssertionResult AssertPred5Helper(const char* pred_text,$/;"	f	namespace:testing
AssertSpecProperty	third_party/gmock/gmock/gmock.h	/^  void AssertSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::ExpectationBase
AssertSpecProperty	third_party/gmock/gmock/gmock.h	/^  void AssertSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::UntypedOnCallSpecBase
AssertTypeEq	third_party/gmock/gtest/gtest.h	/^struct AssertTypeEq<T, T> {$/;"	s	namespace:testing::internal
AssertionFailure	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult AssertionFailure() {$/;"	f	namespace:testing
AssertionFailure	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult AssertionFailure(const Message& message) {$/;"	f	namespace:testing
AssertionResult	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult::AssertionResult(const AssertionResult& other)$/;"	f	class:testing::AssertionResult
AssertionResult	third_party/gmock/gtest/gtest.h	/^  explicit AssertionResult(bool success) : success_(success) {}$/;"	f	class:testing::AssertionResult
AssertionResult	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ AssertionResult {$/;"	c	namespace:testing
AssertionSuccess	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult AssertionSuccess() {$/;"	f	namespace:testing
Assign	third_party/gmock/gmock/gmock.h	/^PolymorphicAction<internal::AssignAction<T1, T2> > Assign(T1* ptr, T2 val) {$/;"	f	namespace:testing
AssignAction	third_party/gmock/gmock/gmock.h	/^  AssignAction(T1* ptr, T2 value) : ptr_(ptr), value_(value) {}$/;"	f	class:testing::internal::AssignAction
AssignAction	third_party/gmock/gmock/gmock.h	/^class AssignAction {$/;"	c	namespace:testing::internal
AssumeRole	third_party/gmock/gmock-gtest-all.cc	/^DeathTest::TestRole ExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::ExecDeathTest
AssumeRole	third_party/gmock/gmock-gtest-all.cc	/^DeathTest::TestRole NoExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::NoExecDeathTest
AssumeRole	third_party/gmock/gmock-gtest-all.cc	/^DeathTest::TestRole WindowsDeathTest::AssumeRole() {$/;"	f	class:testing::internal::WindowsDeathTest
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
AtEnd	third_party/gmock/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
AtLeast	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ Cardinality AtLeast(int n) { return Between(n, INT_MAX); }$/;"	f	namespace:testing
AtMost	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ Cardinality AtMost(int n) { return Between(0, n); }$/;"	f	namespace:testing
AtomMatchesChar	third_party/gmock/gmock-gtest-all.cc	/^bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {$/;"	f	namespace:testing::internal
AuthContext	src/sqlite/sqlite3.c	/^struct AuthContext {$/;"	s	file:
AuthContext	src/sqlite/sqlite3.c	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext	file:
AutoHandle	third_party/gmock/gmock-gtest-all.cc	/^  AutoHandle() : handle_(INVALID_HANDLE_VALUE) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	third_party/gmock/gmock-gtest-all.cc	/^  explicit AutoHandle(HANDLE handle) : handle_(handle) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	third_party/gmock/gmock-gtest-all.cc	/^class AutoHandle {$/;"	c	namespace:testing::internal	file:
AutoincInfo	src/sqlite/sqlite3.c	/^struct AutoincInfo {$/;"	s	file:
AutoincInfo	src/sqlite/sqlite3.c	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo	file:
AuxData	src/sqlite/sqlite3.c	/^struct AuxData {$/;"	s	file:
AuxData	src/sqlite/sqlite3.c	/^typedef struct AuxData AuxData;$/;"	t	typeref:struct:AuxData	file:
B0	src/sqlite/shell.c	830;"	d	file:
BEGIN_TIMER	src/sqlite/shell.c	250;"	d	file:
BEGIN_TIMER	src/sqlite/shell.c	327;"	d	file:
BEGIN_TIMER	src/sqlite/shell.c	332;"	d	file:
BIGINT	src/include/type/type_id.h	/^  BIGINT,$/;"	e	enum:cmudb::TypeId
BIGINT_COMPARE_FUNC	src/type/bigint_type.cpp	10;"	d	file:
BIGINT_MODIFY_FUNC	src/type/bigint_type.cpp	30;"	d	file:
BITVEC_HASH	src/sqlite/sqlite3.c	44198;"	d	file:
BITVEC_MXHASH	src/sqlite/sqlite3.c	44193;"	d	file:
BITVEC_NBIT	src/sqlite/sqlite3.c	44187;"	d	file:
BITVEC_NELEM	src/sqlite/sqlite3.c	44185;"	d	file:
BITVEC_NINT	src/sqlite/sqlite3.c	44190;"	d	file:
BITVEC_NPTR	src/sqlite/sqlite3.c	44200;"	d	file:
BITVEC_SZ	src/sqlite/sqlite3.c	44170;"	d	file:
BITVEC_SZELEM	src/sqlite/sqlite3.c	44183;"	d	file:
BITVEC_TELEM	src/sqlite/sqlite3.c	44181;"	d	file:
BITVEC_USIZE	src/sqlite/sqlite3.c	44174;"	d	file:
BMS	src/sqlite/sqlite3.c	16173;"	d	file:
BOOLEAN	src/include/type/type_id.h	/^  BOOLEAN,$/;"	e	enum:cmudb::TypeId
BOOLEAN_COMPARE_FUNC	src/type/boolean_type.cpp	9;"	d	file:
BPLUSTREE_INDEX_TYPE	src/include/index/b_plus_tree_index.h	16;"	d
BPLUSTREE_TYPE	src/include/index/b_plus_tree.h	23;"	d
BPlusTree	src/include/index/b_plus_tree.h	/^class BPlusTree {$/;"	c	namespace:cmudb
BPlusTree	src/index/b_plus_tree.cpp	/^BPLUSTREE_TYPE::BPlusTree(const std::string &name, $/;"	f	class:cmudb::BPLUSTREE_TYPE
BPlusTreeIndex	src/include/index/b_plus_tree_index.h	/^class BPlusTreeIndex : public Index {$/;"	c	namespace:cmudb
BPlusTreeIndex	src/index/b_plus_tree_index.cpp	/^BPLUSTREE_INDEX_TYPE::BPlusTreeIndex(IndexMetadata *metadata,$/;"	f	class:cmudb::BPLUSTREE_INDEX_TYPE
BPlusTreeInternalPage	src/include/page/b_plus_tree_internal_page.h	/^class BPlusTreeInternalPage : public BPlusTreePage {$/;"	c	namespace:cmudb
BPlusTreeLeafPage	src/include/page/b_plus_tree_leaf_page.h	/^class BPlusTreeLeafPage : public BPlusTreePage {$/;"	c	namespace:cmudb
BPlusTreePage	src/include/page/b_plus_tree_page.h	/^class BPlusTreePage {$/;"	c	namespace:cmudb
BPlusTreePage	test/type/type_test.cpp	/^template <typename KeyType, typename ValueType> class BPlusTreePage {$/;"	c	namespace:cmudb	file:
BTALLOC_ANY	src/sqlite/sqlite3.c	59497;"	d	file:
BTALLOC_EXACT	src/sqlite/sqlite3.c	59498;"	d	file:
BTALLOC_LE	src/sqlite/sqlite3.c	59499;"	d	file:
BTCF_AtLast	src/sqlite/sqlite3.c	58983;"	d	file:
BTCF_Incrblob	src/sqlite/sqlite3.c	58984;"	d	file:
BTCF_Multiple	src/sqlite/sqlite3.c	58985;"	d	file:
BTCF_ValidNKey	src/sqlite/sqlite3.c	58981;"	d	file:
BTCF_ValidOvfl	src/sqlite/sqlite3.c	58982;"	d	file:
BTCF_WriteFlag	src/sqlite/sqlite3.c	58980;"	d	file:
BTCURSOR_MAX_DEPTH	src/sqlite/sqlite3.c	58929;"	d	file:
BTREE_APPEND	src/sqlite/sqlite3.c	13315;"	d	file:
BTREE_APPLICATION_ID	src/sqlite/sqlite3.c	13212;"	d	file:
BTREE_AUTOVACUUM_FULL	src/sqlite/sqlite3.c	13093;"	d	file:
BTREE_AUTOVACUUM_INCR	src/sqlite/sqlite3.c	13094;"	d	file:
BTREE_AUTOVACUUM_NONE	src/sqlite/sqlite3.c	13092;"	d	file:
BTREE_AUXDELETE	src/sqlite/sqlite3.c	13314;"	d	file:
BTREE_BLOBKEY	src/sqlite/sqlite3.c	13175;"	d	file:
BTREE_BULKLOAD	src/sqlite/sqlite3.c	13257;"	d	file:
BTREE_DATA_VERSION	src/sqlite/sqlite3.c	13213;"	d	file:
BTREE_DEFAULT_CACHE_SIZE	src/sqlite/sqlite3.c	13207;"	d	file:
BTREE_FILE_FORMAT	src/sqlite/sqlite3.c	13206;"	d	file:
BTREE_FORDELETE	src/sqlite/sqlite3.c	13284;"	d	file:
BTREE_FREE_PAGE_COUNT	src/sqlite/sqlite3.c	13204;"	d	file:
BTREE_HINT_RANGE	src/sqlite/sqlite3.c	13242;"	d	file:
BTREE_INCR_VACUUM	src/sqlite/sqlite3.c	13211;"	d	file:
BTREE_INTKEY	src/sqlite/sqlite3.c	13174;"	d	file:
BTREE_LARGEST_ROOT_PAGE	src/sqlite/sqlite3.c	13208;"	d	file:
BTREE_MEMORY	src/sqlite/sqlite3.c	13121;"	d	file:
BTREE_OMIT_JOURNAL	src/sqlite/sqlite3.c	13120;"	d	file:
BTREE_SAVEPOSITION	src/sqlite/sqlite3.c	13313;"	d	file:
BTREE_SCHEMA_VERSION	src/sqlite/sqlite3.c	13205;"	d	file:
BTREE_SEEK_EQ	src/sqlite/sqlite3.c	13258;"	d	file:
BTREE_SINGLE	src/sqlite/sqlite3.c	13122;"	d	file:
BTREE_TEXT_ENCODING	src/sqlite/sqlite3.c	13209;"	d	file:
BTREE_UNORDERED	src/sqlite/sqlite3.c	13123;"	d	file:
BTREE_USER_VERSION	src/sqlite/sqlite3.c	13210;"	d	file:
BTREE_WRCSR	src/sqlite/sqlite3.c	13283;"	d	file:
BTS_EXCLUSIVE	src/sqlite/sqlite3.c	58904;"	d	file:
BTS_INITIALLY_EMPTY	src/sqlite/sqlite3.c	58902;"	d	file:
BTS_NO_WAL	src/sqlite/sqlite3.c	58903;"	d	file:
BTS_PAGESIZE_FIXED	src/sqlite/sqlite3.c	58900;"	d	file:
BTS_PENDING	src/sqlite/sqlite3.c	58905;"	d	file:
BTS_READ_ONLY	src/sqlite/sqlite3.c	58899;"	d	file:
BTS_SECURE_DELETE	src/sqlite/sqlite3.c	58901;"	d	file:
BUCKET_SIZE	src/include/common/config.h	16;"	d
BYTESWAP32	src/sqlite/sqlite3.c	55491;"	d	file:
B_PLUS_TREE_INTERNAL_PAGE_TYPE	src/include/page/b_plus_tree_internal_page.h	25;"	d
B_PLUS_TREE_INTERNAL_PG_PGID	src/include/page/b_plus_tree_internal_page.h	28;"	d
B_PLUS_TREE_LEAF_PAGE_TYPE	src/include/page/b_plus_tree_leaf_page.h	30;"	d
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
BaseGenerator	third_party/gmock/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
BasicNarrowIoManip	third_party/gmock/gtest/gtest.h	/^  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);$/;"	t	class:testing::Message::std
Begin	src/index/b_plus_tree.cpp	/^INDEXITERATOR_TYPE BPLUSTREE_TYPE::Begin() $/;"	f	class:cmudb::BPLUSTREE_TYPE
Begin	src/index/b_plus_tree.cpp	/^INDEXITERATOR_TYPE BPLUSTREE_TYPE::Begin(const KeyType &key) $/;"	f	class:cmudb::BPLUSTREE_TYPE
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::RangeGenerator
Begin	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
BenignMallocHooks	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	src/sqlite/sqlite3.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
Between	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ Cardinality Between(int min, int max) {$/;"	f	namespace:testing
BetweenCardinalityImpl	third_party/gmock/gmock-gtest-all.cc	/^  BetweenCardinalityImpl(int min, int max)$/;"	f	class:testing::__anon7::BetweenCardinalityImpl
BetweenCardinalityImpl	third_party/gmock/gmock-gtest-all.cc	/^class BetweenCardinalityImpl : public CardinalityInterface {$/;"	c	namespace:testing::__anon7	file:
BiggestInt	third_party/gmock/gtest/gtest.h	/^typedef __int64 BiggestInt;$/;"	t	namespace:std::tr1
BiggestInt	third_party/gmock/gtest/gtest.h	/^typedef long long BiggestInt;  \/\/ NOLINT$/;"	t	namespace:std::tr1
BigintType	src/include/type/bigint_type.h	/^class BigintType : public IntegerParentType {$/;"	c	namespace:cmudb
BigintType	src/type/bigint_type.cpp	/^BigintType::BigintType() : IntegerParentType(BIGINT) {}$/;"	f	class:cmudb::BigintType
Bind	third_party/gmock/gtest/gtest.h	/^  struct Bind {$/;"	s	struct:testing::internal::TemplateSel
BitFlagAllTest	src/sqlite/sqlite3.c	197387;"	d	file:
BitFlagTest	src/sqlite/sqlite3.c	197388;"	d	file:
Bitmask	src/sqlite/sqlite3.c	/^  typedef SQLITE_BITMASK_TYPE Bitmask;$/;"	t	file:
Bitmask	src/sqlite/sqlite3.c	/^  typedef u64 Bitmask;$/;"	t	file:
Bits	third_party/gmock/gtest/gtest.h	/^  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;$/;"	t	class:testing::internal::FloatingPoint
Bitvec	src/sqlite/sqlite3.c	/^struct Bitvec {$/;"	s	file:
Bitvec	src/sqlite/sqlite3.c	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec	file:
Blob	src/sqlite/sqlite3.c	/^struct Blob {$/;"	s	file:
Blob	src/sqlite/sqlite3.c	/^typedef struct Blob Blob;$/;"	t	typeref:struct:Blob	file:
Bool	src/sqlite/sqlite3.c	/^typedef unsigned Bool;$/;"	t	file:
Bool	third_party/gmock/gtest/gtest.h	/^inline internal::ParamGenerator<bool> Bool() {$/;"	f	namespace:testing
BoolFromGTestEnv	third_party/gmock/gmock-gtest-all.cc	/^bool BoolFromGTestEnv(const char* flag, bool default_value) {$/;"	f	namespace:testing::internal
BooleanConstant	third_party/gmock/gmock/gmock.h	/^struct BooleanConstant {};$/;"	s	namespace:testing::internal
BooleanType	src/include/type/boolean_type.h	/^class BooleanType : public Type {$/;"	c	namespace:cmudb
BooleanType	src/type/boolean_type.cpp	/^BooleanType::BooleanType() : Type(TypeId::BOOLEAN) {}$/;"	f	class:cmudb::BooleanType
BothOfMatcher	third_party/gmock/gmock/gmock.h	/^  BothOfMatcher(Matcher1 matcher1, Matcher2 matcher2)$/;"	f	class:testing::internal::BothOfMatcher
BothOfMatcher	third_party/gmock/gmock/gmock.h	/^class BothOfMatcher {$/;"	c	namespace:testing::internal
BothOfMatcherImpl	third_party/gmock/gmock/gmock.h	/^  BothOfMatcherImpl(const Matcher<T>& matcher1, const Matcher<T>& matcher2)$/;"	f	class:testing::internal::BothOfMatcherImpl
BothOfMatcherImpl	third_party/gmock/gmock/gmock.h	/^class BothOfMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
BtCursor	src/sqlite/sqlite3.c	/^struct BtCursor {$/;"	s	file:
BtCursor	src/sqlite/sqlite3.c	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor	file:
BtLock	src/sqlite/sqlite3.c	/^struct BtLock {$/;"	s	file:
BtLock	src/sqlite/sqlite3.c	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock	file:
BtShared	src/sqlite/sqlite3.c	/^struct BtShared {$/;"	s	file:
BtShared	src/sqlite/sqlite3.c	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared	file:
Btree	src/sqlite/sqlite3.c	/^struct Btree {$/;"	s	file:
Btree	src/sqlite/sqlite3.c	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree	file:
BtreePayload	src/sqlite/sqlite3.c	/^struct BtreePayload {$/;"	s	file:
BtreePayload	src/sqlite/sqlite3.c	/^typedef struct BtreePayload BtreePayload;$/;"	t	typeref:struct:BtreePayload	file:
BufferPoolManager	src/buffer/buffer_pool_manager.cpp	/^BufferPoolManager::BufferPoolManager(size_t pool_size,$/;"	f	class:cmudb::BufferPoolManager
BufferPoolManager	src/include/buffer/buffer_pool_manager.h	/^class BufferPoolManager {$/;"	c	namespace:cmudb
BuildList	third_party/gmock/gmock/gmock.h	/^  static ListType BuildList(const Head& matcher, const Tail&... tail) {$/;"	f	struct:testing::internal::MatcherList
BuildList	third_party/gmock/gmock/gmock.h	/^  static ListType BuildList(const Matcher1& matcher1,$/;"	f	struct:testing::internal::MatcherList
BuiltInDefaultValue	third_party/gmock/gmock/gmock.h	/^class BuiltInDefaultValue {$/;"	c	namespace:testing::internal
BuiltInDefaultValue	third_party/gmock/gmock/gmock.h	/^class BuiltInDefaultValue<T*> {$/;"	c	namespace:testing::internal
BuiltInDefaultValue	third_party/gmock/gmock/gmock.h	/^class BuiltInDefaultValue<const T> {$/;"	c	namespace:testing::internal
BusyHandler	src/sqlite/sqlite3.c	/^struct BusyHandler {$/;"	s	file:
BusyHandler	src/sqlite/sqlite3.c	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler	file:
ByRef	third_party/gmock/gmock/gmock.h	/^inline internal::ReferenceWrapper<T> ByRef(T& l_value) {  \/\/ NOLINT$/;"	f	namespace:testing
ByRef	third_party/gmock/gtest/gtest.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByRef	third_party/gmock/gtest/gtest.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByteRangeLockPB2	src/sqlite/sqlite3.c	/^struct ByteRangeLockPB2$/;"	s	file:
CACHE_STALE	src/sqlite/sqlite3.c	18491;"	d	file:
CC_AND	src/sqlite/sqlite3.c	139859;"	d	file:
CC_BANG	src/sqlite/sqlite3.c	139850;"	d	file:
CC_COMMA	src/sqlite/sqlite3.c	139858;"	d	file:
CC_DIGIT	src/sqlite/sqlite3.c	139838;"	d	file:
CC_DOLLAR	src/sqlite/sqlite3.c	139839;"	d	file:
CC_DOT	src/sqlite/sqlite3.c	139861;"	d	file:
CC_EQ	src/sqlite/sqlite3.c	139849;"	d	file:
CC_GT	src/sqlite/sqlite3.c	139848;"	d	file:
CC_ID	src/sqlite/sqlite3.c	139837;"	d	file:
CC_ILLEGAL	src/sqlite/sqlite3.c	139862;"	d	file:
CC_KYWD	src/sqlite/sqlite3.c	139836;"	d	file:
CC_LP	src/sqlite/sqlite3.c	139852;"	d	file:
CC_LT	src/sqlite/sqlite3.c	139847;"	d	file:
CC_MINUS	src/sqlite/sqlite3.c	139846;"	d	file:
CC_PERCENT	src/sqlite/sqlite3.c	139857;"	d	file:
CC_PIPE	src/sqlite/sqlite3.c	139845;"	d	file:
CC_PLUS	src/sqlite/sqlite3.c	139855;"	d	file:
CC_QUOTE	src/sqlite/sqlite3.c	139843;"	d	file:
CC_QUOTE2	src/sqlite/sqlite3.c	139844;"	d	file:
CC_RP	src/sqlite/sqlite3.c	139853;"	d	file:
CC_SEMI	src/sqlite/sqlite3.c	139854;"	d	file:
CC_SLASH	src/sqlite/sqlite3.c	139851;"	d	file:
CC_SPACE	src/sqlite/sqlite3.c	139842;"	d	file:
CC_STAR	src/sqlite/sqlite3.c	139856;"	d	file:
CC_TILDA	src/sqlite/sqlite3.c	139860;"	d	file:
CC_VARALPHA	src/sqlite/sqlite3.c	139840;"	d	file:
CC_VARNUM	src/sqlite/sqlite3.c	139841;"	d	file:
CC_X	src/sqlite/sqlite3.c	139835;"	d	file:
CCurHint	src/sqlite/sqlite3.c	/^struct CCurHint {$/;"	s	file:
CHECK_PAGE	src/sqlite/sqlite3.c	48580;"	d	file:
CHECK_PAGE	src/sqlite/sqlite3.c	48591;"	d	file:
CInstIter	src/sqlite/sqlite3.c	/^struct CInstIter {$/;"	s	file:
CInstIter	src/sqlite/sqlite3.c	/^typedef struct CInstIter CInstIter;$/;"	t	typeref:struct:CInstIter	file:
CKCNSTRNT_COLUMN	src/sqlite/sqlite3.c	110438;"	d	file:
CKCNSTRNT_ROWID	src/sqlite/sqlite3.c	110439;"	d	file:
CLEARBIT	src/sqlite/sqlite3.c	44434;"	d	file:
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/shankar\/Desktop\/cmudb\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Makefile	/^CMAKE_BINARY_DIR = \/home\/shankar\/Desktop\/cmudb\/build$/;"	m
CMAKE_BINARY_DIR	build/test/Makefile	/^CMAKE_BINARY_DIR = \/home\/shankar\/Desktop\/cmudb\/build$/;"	m
CMAKE_BINARY_DIR	test/Makefile	/^CMAKE_BINARY_DIR = \/home\/scanjee\/cmu_db\/proj1\/sqlite-fall2017\/test$/;"	m
CMAKE_BINARY_DIR	test/src/Makefile	/^CMAKE_BINARY_DIR = \/home\/scanjee\/cmu_db\/proj1\/sqlite-fall2017\/test$/;"	m
CMAKE_BINARY_DIR	test/test/Makefile	/^CMAKE_BINARY_DIR = \/home\/scanjee\/cmu_db\/proj1\/sqlite-fall2017\/test$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/test/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	test/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	test/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	test/test/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/shankar\/Desktop\/cmudb$/;"	m
CMAKE_SOURCE_DIR	build/src/Makefile	/^CMAKE_SOURCE_DIR = \/home\/shankar\/Desktop\/cmudb$/;"	m
CMAKE_SOURCE_DIR	build/test/Makefile	/^CMAKE_SOURCE_DIR = \/home\/shankar\/Desktop\/cmudb$/;"	m
CMAKE_SOURCE_DIR	test/Makefile	/^CMAKE_SOURCE_DIR = \/home\/scanjee\/cmu_db\/proj1\/sqlite-fall2017$/;"	m
CMAKE_SOURCE_DIR	test/src/Makefile	/^CMAKE_SOURCE_DIR = \/home\/scanjee\/cmu_db\/proj1\/sqlite-fall2017$/;"	m
CMAKE_SOURCE_DIR	test/test/Makefile	/^CMAKE_SOURCE_DIR = \/home\/scanjee\/cmu_db\/proj1\/sqlite-fall2017$/;"	m
CMP_FALSE	src/include/type/type.h	/^enum CmpBool { CMP_FALSE = 0, CMP_TRUE = 1, CMP_NULL = 2 };$/;"	e	enum:cmudb::CmpBool
CMP_NULL	src/include/type/type.h	/^enum CmpBool { CMP_FALSE = 0, CMP_TRUE = 1, CMP_NULL = 2 };$/;"	e	enum:cmudb::CmpBool
CMP_TRUE	src/include/type/type.h	/^enum CmpBool { CMP_FALSE = 0, CMP_TRUE = 1, CMP_NULL = 2 };$/;"	e	enum:cmudb::CmpBool
CODEC1	src/sqlite/sqlite3.c	47751;"	d	file:
CODEC1	src/sqlite/sqlite3.c	47757;"	d	file:
CODEC2	src/sqlite/sqlite3.c	47753;"	d	file:
CODEC2	src/sqlite/sqlite3.c	47758;"	d	file:
COLFLAG_HASTYPE	src/sqlite/sqlite3.c	15374;"	d	file:
COLFLAG_HIDDEN	src/sqlite/sqlite3.c	15373;"	d	file:
COLFLAG_PRIMKEY	src/sqlite/sqlite3.c	15372;"	d	file:
COLNAME_COLUMN	src/sqlite/sqlite3.c	13579;"	d	file:
COLNAME_DATABASE	src/sqlite/sqlite3.c	13577;"	d	file:
COLNAME_DECLTYPE	src/sqlite/sqlite3.c	13576;"	d	file:
COLNAME_N	src/sqlite/sqlite3.c	13581;"	d	file:
COLNAME_N	src/sqlite/sqlite3.c	13584;"	d	file:
COLNAME_N	src/sqlite/sqlite3.c	13586;"	d	file:
COLNAME_NAME	src/sqlite/sqlite3.c	13575;"	d	file:
COLNAME_TABLE	src/sqlite/sqlite3.c	13578;"	d	file:
COLOR_DEFAULT	third_party/gmock/gmock-gtest-all.cc	/^  COLOR_DEFAULT,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_GREEN	third_party/gmock/gmock-gtest-all.cc	/^  COLOR_GREEN,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_RED	third_party/gmock/gmock-gtest-all.cc	/^  COLOR_RED,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_YELLOW	third_party/gmock/gmock-gtest-all.cc	/^  COLOR_YELLOW$/;"	e	enum:testing::internal::GTestColor	file:
COLUMN_MASK	src/sqlite/sqlite3.c	108971;"	d	file:
COMMITTED	src/include/concurrency/transaction.h	/^enum class TransactionState { GROWING, SHRINKING, COMMITTED, ABORTED };$/;"	m	class:cmudb::TransactionState
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	135;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	136;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	188;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_TWEAK	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
CORRUPT_DB	src/sqlite/sqlite3.c	16964;"	d	file:
CStringEquals	third_party/gmock/gmock-gtest-all.cc	/^bool String::CStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CTIMEOPT_VAL	src/sqlite/sqlite3.c	59;"	d	file:
CTIMEOPT_VAL_	src/sqlite/sqlite3.c	58;"	d	file:
CTRL_FREE	src/sqlite/sqlite3.c	22668;"	d	file:
CTRL_LOGSIZE	src/sqlite/sqlite3.c	22667;"	d	file:
CURSOR_FAULT	src/sqlite/sqlite3.c	59021;"	d	file:
CURSOR_INVALID	src/sqlite/sqlite3.c	59017;"	d	file:
CURSOR_REQUIRESEEK	src/sqlite/sqlite3.c	59020;"	d	file:
CURSOR_SKIPNEXT	src/sqlite/sqlite3.c	59019;"	d	file:
CURSOR_VALID	src/sqlite/sqlite3.c	59018;"	d	file:
CURTYPE_BTREE	src/sqlite/sqlite3.c	18414;"	d	file:
CURTYPE_PSEUDO	src/sqlite/sqlite3.c	18417;"	d	file:
CURTYPE_SORTER	src/sqlite/sqlite3.c	18415;"	d	file:
CURTYPE_VTAB	src/sqlite/sqlite3.c	18416;"	d	file:
CalculateEndIndex	third_party/gmock/gtest/gtest.h	/^  static int CalculateEndIndex(const T& begin,$/;"	f	class:testing::internal::RangeGenerator
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function) { return function(); }$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1) { return function(a1); }$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1, A2 a2) {$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1, A2 a2, A3 a3) {$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1, A2 a2, A3 a3, A4 a4) {$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) {$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) {$/;"	f	class:testing::internal::CallableHelper
Call	third_party/gmock/gmock/gmock.h	/^  static R Call(Function function, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6,$/;"	f	class:testing::internal::CallableHelper
CallReaction	third_party/gmock/gmock/gmock.h	/^enum CallReaction {$/;"	g	namespace:testing::internal
CallableHelper	third_party/gmock/gmock/gmock.h	/^class CallableHelper {$/;"	c	namespace:testing::internal
CallableStorageType	third_party/gmock/gmock/gmock.h	/^  typedef typename CallableTraits<Callable>::StorageType CallableStorageType;$/;"	t	class:testing::internal::ResultOfMatcher
CallableTraits	third_party/gmock/gmock/gmock.h	/^struct CallableTraits {$/;"	s	namespace:testing::internal
CallableTraits	third_party/gmock/gmock/gmock.h	/^struct CallableTraits<ResType(*)(ArgType)> {$/;"	s	namespace:testing::internal
CaptureStderr	third_party/gmock/gmock-gtest-all.cc	/^void CaptureStderr() {$/;"	f	namespace:testing::internal
CaptureStdout	third_party/gmock/gmock-gtest-all.cc	/^void CaptureStdout() {$/;"	f	namespace:testing::internal
CaptureStream	third_party/gmock/gmock-gtest-all.cc	/^void CaptureStream(int fd, const char* stream_name, CapturedStream** stream) {$/;"	f	namespace:testing::internal
CapturedStream	third_party/gmock/gmock-gtest-all.cc	/^  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {$/;"	f	class:testing::internal::CapturedStream
CapturedStream	third_party/gmock/gmock-gtest-all.cc	/^class CapturedStream {$/;"	c	namespace:testing::internal	file:
Cardinality	third_party/gmock/gmock/gmock.h	/^  Cardinality() {}$/;"	f	class:testing::Cardinality
Cardinality	third_party/gmock/gmock/gmock.h	/^  explicit Cardinality(const CardinalityInterface* impl) : impl_(impl) {}$/;"	f	class:testing::Cardinality
Cardinality	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Cardinality {$/;"	c	namespace:testing
CardinalityInterface	third_party/gmock/gmock/gmock.h	/^class CardinalityInterface {$/;"	c	namespace:testing
CartesianProductGenerator10	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator10(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator10
CartesianProductGenerator10	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator10$/;"	c	namespace:testing::internal
CartesianProductGenerator2	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator2(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator2
CartesianProductGenerator2	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator2$/;"	c	namespace:testing::internal
CartesianProductGenerator3	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator3(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator3
CartesianProductGenerator3	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator3$/;"	c	namespace:testing::internal
CartesianProductGenerator4	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator4(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator4
CartesianProductGenerator4	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator4$/;"	c	namespace:testing::internal
CartesianProductGenerator5	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator5(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator5
CartesianProductGenerator5	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator5$/;"	c	namespace:testing::internal
CartesianProductGenerator6	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator6(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator6
CartesianProductGenerator6	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator6$/;"	c	namespace:testing::internal
CartesianProductGenerator7	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator7(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator7
CartesianProductGenerator7	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator7$/;"	c	namespace:testing::internal
CartesianProductGenerator8	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator8(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator8
CartesianProductGenerator8	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator8$/;"	c	namespace:testing::internal
CartesianProductGenerator9	third_party/gmock/gtest/gtest.h	/^  CartesianProductGenerator9(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator9
CartesianProductGenerator9	third_party/gmock/gtest/gtest.h	/^class CartesianProductGenerator9$/;"	c	namespace:testing::internal
CartesianProductHolder10	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder10(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder10
CartesianProductHolder10	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder10 {$/;"	c	namespace:testing::internal
CartesianProductHolder2	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder2(const Generator1& g1, const Generator2& g2)$/;"	f	class:testing::internal::CartesianProductHolder2
CartesianProductHolder2	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder2 {$/;"	c	namespace:testing::internal
CartesianProductHolder3	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder3(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder3
CartesianProductHolder3	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder3 {$/;"	c	namespace:testing::internal
CartesianProductHolder4	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder4(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder4
CartesianProductHolder4	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder4 {$/;"	c	namespace:testing::internal
CartesianProductHolder5	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder5(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder5
CartesianProductHolder5	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder5 {$/;"	c	namespace:testing::internal
CartesianProductHolder6	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder6(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder6
CartesianProductHolder6	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder6 {$/;"	c	namespace:testing::internal
CartesianProductHolder7	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder7(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder7
CartesianProductHolder7	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder7 {$/;"	c	namespace:testing::internal
CartesianProductHolder8	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder8(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder8
CartesianProductHolder8	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder8 {$/;"	c	namespace:testing::internal
CartesianProductHolder9	third_party/gmock/gtest/gtest.h	/^CartesianProductHolder9(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder9
CartesianProductHolder9	third_party/gmock/gtest/gtest.h	/^class CartesianProductHolder9 {$/;"	c	namespace:testing::internal
CaseInsensitiveCStringEquals	third_party/gmock/gmock-gtest-all.cc	/^bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CaseInsensitiveCStringEquals	third_party/gmock/gmock/gmock.h	/^inline bool CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {$/;"	f	namespace:testing::internal
CaseInsensitiveCStringEquals	third_party/gmock/gmock/gmock.h	/^inline bool CaseInsensitiveCStringEquals(const wchar_t* lhs,$/;"	f	namespace:testing::internal
CaseInsensitiveStringEquals	third_party/gmock/gmock/gmock.h	/^bool CaseInsensitiveStringEquals(const StringType& s1,$/;"	f	namespace:testing::internal
CaseInsensitiveWideCStringEquals	third_party/gmock/gmock-gtest-all.cc	/^bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,$/;"	f	class:testing::internal::String
Cast	third_party/gmock/gmock/gmock.h	/^  static Matcher<T> Cast(M polymorphic_matcher_or_value) {$/;"	f	class:testing::internal::MatcherCastImpl
Cast	third_party/gmock/gmock/gmock.h	/^  static Matcher<T> Cast(const Matcher<T>& matcher) { return matcher; }$/;"	f	class:testing::internal::MatcherCastImpl
Cast	third_party/gmock/gmock/gmock.h	/^  static Matcher<T> Cast(const Matcher<U>& source_matcher) {$/;"	f	class:testing::internal::MatcherCastImpl
Cast	third_party/gmock/gmock/gmock.h	/^  static inline Matcher<T> Cast(M polymorphic_matcher_or_value) {$/;"	f	class:testing::SafeMatcherCastImpl
Cast	third_party/gmock/gmock/gmock.h	/^  static inline Matcher<T> Cast(const Matcher<U>& matcher) {$/;"	f	class:testing::SafeMatcherCastImpl
CastAndAppendTransform	third_party/gmock/gmock/gmock.h	/^struct CastAndAppendTransform {$/;"	s	namespace:testing::internal
CastAs	src/include/type/value.h	/^  inline Value CastAs(const TypeId type_id) const {$/;"	f	class:cmudb::Value
CastAs	src/type/bigint_type.cpp	/^Value BigintType::CastAs(const Value &val, const TypeId type_id) const {$/;"	f	class:cmudb::BigintType
CastAs	src/type/boolean_type.cpp	/^Value BooleanType::CastAs(const Value &val, const TypeId type_id) const {$/;"	f	class:cmudb::BooleanType
CastAs	src/type/decimal_type.cpp	/^Value DecimalType::CastAs(const Value &val, const TypeId type_id) const {$/;"	f	class:cmudb::DecimalType
CastAs	src/type/integer_type.cpp	/^Value IntegerType::CastAs(const Value &val, const TypeId type_id) const {$/;"	f	class:cmudb::IntegerType
CastAs	src/type/smallint_type.cpp	/^Value SmallintType::CastAs(const Value &val, const TypeId type_id) const {$/;"	f	class:cmudb::SmallintType
CastAs	src/type/tinyint_type.cpp	/^Value TinyintType::CastAs(const Value &val, const TypeId type_id) const {$/;"	f	class:cmudb::TinyintType
CastAs	src/type/type.cpp	/^Value Type::CastAs(const Value &val __attribute__((unused)),$/;"	f	class:cmudb::Type
CastAs	src/type/varlen_type.cpp	/^Value VarlenType::CastAs(const Value &value, const TypeId type_id) const {$/;"	f	class:cmudb::VarlenType
CastException	src/include/common/exception.h	/^  CastException(const TypeId origType, const TypeId newType)$/;"	f	class:cmudb::CastException
CastException	src/include/common/exception.h	/^class CastException : public Exception {$/;"	c	namespace:cmudb
CastImpl	third_party/gmock/gmock/gmock.h	/^  static Matcher<T> CastImpl(M polymorphic_matcher_or_value,$/;"	f	class:testing::internal::MatcherCastImpl
CastImpl	third_party/gmock/gmock/gmock.h	/^  static Matcher<T> CastImpl(M value, BooleanConstant<false>) {$/;"	f	class:testing::internal::MatcherCastImpl
CatalogException	src/include/common/exception.h	/^  CatalogException(std::string msg) : Exception(EXCEPTION_TYPE_CATALOG, msg) {}$/;"	f	class:cmudb::CatalogException
CatalogException	src/include/common/exception.h	/^class CatalogException : public Exception {$/;"	c	namespace:cmudb
CellArray	src/sqlite/sqlite3.c	/^struct CellArray {$/;"	s	file:
CellArray	src/sqlite/sqlite3.c	/^typedef struct CellArray CellArray;$/;"	t	typeref:struct:CellArray	file:
CellInfo	src/sqlite/sqlite3.c	/^struct CellInfo {$/;"	s	file:
CellInfo	src/sqlite/sqlite3.c	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo	file:
ChDir	third_party/gmock/gtest/gtest.h	/^inline int ChDir(const char* dir) { return chdir(dir); }$/;"	f	namespace:std::tr1::posix
CharFormat	third_party/gmock/gmock-gtest-all.cc	/^enum CharFormat {$/;"	g	namespace:testing::internal	file:
CheckComparable	src/type/value.cpp	/^bool Value::CheckComparable(const Value &o) const {$/;"	f	class:cmudb::Value
CheckInteger	src/type/value.cpp	/^bool Value::CheckInteger() const {$/;"	f	class:cmudb::Value
CheckIsValid	third_party/gmock/gmock/gmock.h	/^  static void CheckIsValid(Functor \/* functor *\/) {}$/;"	f	struct:testing::internal::CallableTraits
CheckIsValid	third_party/gmock/gmock/gmock.h	/^  static void CheckIsValid(ResType(*f)(ArgType)) {$/;"	f	struct:testing::internal::CallableTraits
CheckMergeSibbling	src/index/b_plus_tree.cpp	/^int BPLUSTREE_TYPE::CheckMergeSibbling(int parent_idx, $/;"	f	class:cmudb::BPLUSTREE_TYPE
CheckedDowncastToActualType	third_party/gmock/gtest/gtest.h	/^Derived* CheckedDowncastToActualType(Base* base) {$/;"	f	namespace:std::tr1
ChooseLeaf	src/sqlite/sqlite3.c	/^static int ChooseLeaf($/;"	f	file:
ChopLowBits	third_party/gmock/gmock-gtest-all.cc	/^inline UInt32 ChopLowBits(UInt32* bits, int n) {$/;"	f	namespace:testing::internal
ClassUniqueToAlwaysTrue	third_party/gmock/gmock-gtest-all.cc	/^class ClassUniqueToAlwaysTrue {};$/;"	c	namespace:testing::internal::__anon5	file:
Clause	third_party/gmock/gmock/gmock.h	/^  enum Clause {$/;"	g	class:testing::internal::ExpectationBase
Clause	third_party/gmock/gmock/gmock.h	/^  enum Clause {$/;"	g	class:testing::internal::UntypedOnCallSpecBase
CleanPage	src/buffer/buffer_pool_manager.cpp	/^void BufferPoolManager::CleanPage(Page *tmp_page) {$/;"	f	class:cmudb::BufferPoolManager
Cleanup	src/sqlite/sqlite3.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
Clear	third_party/gmock/gmock-gtest-all.cc	/^void TestResult::Clear() {$/;"	f	class:testing::TestResult
Clear	third_party/gmock/gmock/gmock.h	/^  static void Clear() {$/;"	f	class:testing::DefaultValue
Clear	third_party/gmock/gmock/gmock.h	/^  void Clear() { ss_.str(""); }$/;"	f	class:testing::StringMatchResultListener
ClearAdHocTestResult	third_party/gmock/gmock-gtest-all.cc	/^  void ClearAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearNonAdHocTestResult	third_party/gmock/gmock-gtest-all.cc	/^  void ClearNonAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearResult	third_party/gmock/gmock-gtest-all.cc	/^void TestCase::ClearResult() {$/;"	f	class:testing::TestCase
ClearTestCaseResult	third_party/gmock/gtest/gtest.h	/^  static void ClearTestCaseResult(TestCase* test_case) {$/;"	f	class:testing::TestCase
ClearTestPartResults	third_party/gmock/gmock-gtest-all.cc	/^  static void ClearTestPartResults(TestResult* test_result) {$/;"	f	class:testing::internal::TestResultAccessor
ClearTestPartResults	third_party/gmock/gmock-gtest-all.cc	/^void TestResult::ClearTestPartResults() {$/;"	f	class:testing::TestResult
ClearTestResult	third_party/gmock/gtest/gtest.h	/^  static void ClearTestResult(TestInfo* test_info) {$/;"	f	class:testing::TestInfo
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Clone	third_party/gmock/gtest/gtest.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Close	third_party/gmock/gtest/gtest.h	/^inline int Close(int fd) { return close(fd); }$/;"	f	namespace:std::tr1::posix
CloseConnection	third_party/gmock/gmock-gtest-all.cc	/^    virtual void CloseConnection() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
CloseConnection	third_party/gmock/gmock-gtest-all.cc	/^    void CloseConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	file:
CmpBool	src/include/type/type.h	/^enum CmpBool { CMP_FALSE = 0, CMP_TRUE = 1, CMP_NULL = 2 };$/;"	g	namespace:cmudb
CmpHelperEQ	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult CmpHelperEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperEQ	third_party/gmock/gtest/gtest.h	/^AssertionResult CmpHelperEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperFloatingPointEQ	third_party/gmock/gtest/gtest.h	/^AssertionResult CmpHelperFloatingPointEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASEEQ	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult CmpHelperSTRCASEEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASENE	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult CmpHelperSTRCASENE(const char* s1_expression,$/;"	f	namespace:testing::internal
CmpHelperSTREQ	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult CmpHelperSTREQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRNE	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult CmpHelperSTRNE(const char* s1_expression,$/;"	f	namespace:testing::internal
Coalesce	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::Coalesce(N *&neighbor_node, N *&node, $/;"	f	class:cmudb::BPLUSTREE_TYPE
CoalesceOrRedistribute	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::CoalesceOrRedistribute(N *node, Transaction *transaction)$/;"	f	class:cmudb::BPLUSTREE_TYPE
CodePointToUtf8	third_party/gmock/gmock-gtest-all.cc	/^std::string CodePointToUtf8(UInt32 code_point) {$/;"	f	namespace:testing::internal
CollSeq	src/sqlite/sqlite3.c	/^struct CollSeq {$/;"	s	file:
CollSeq	src/sqlite/sqlite3.c	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq	file:
ColoredPrintf	third_party/gmock/gmock-gtest-all.cc	/^void ColoredPrintf(GTestColor color, const char* fmt, ...) {$/;"	f	namespace:testing::internal
Column	src/include/catalog/column.h	/^  Column() : column_type(TypeId::INVALID), fixed_length(-1) {$/;"	f	class:cmudb::Column
Column	src/include/catalog/column.h	/^  Column(TypeId value_type, int32_t column_length, std::string column_name)$/;"	f	class:cmudb::Column
Column	src/include/catalog/column.h	/^class Column {$/;"	c	namespace:cmudb
Column	src/sqlite/sqlite3.c	/^struct Column {$/;"	s	file:
Column	src/sqlite/sqlite3.c	/^typedef struct Column Column;$/;"	t	typeref:struct:Column	file:
Combine	third_party/gmock/gtest/gtest.h	/^    Generator10> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^    Generator4, Generator5, Generator6, Generator7, Generator8> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^    Generator4, Generator5, Generator6, Generator7> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^    Generator4, Generator5, Generator6> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^    Generator4, Generator5> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^    Generator4> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^    Generator9> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^internal::CartesianProductHolder2<Generator1, Generator2> Combine($/;"	f	namespace:testing
Combine	third_party/gmock/gtest/gtest.h	/^internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine($/;"	f	namespace:testing
Commit	src/concurrency/transaction_manager.cpp	/^void TransactionManager::Commit(Transaction *txn) {$/;"	f	class:cmudb::TransactionManager
Compare	third_party/gmock/gtest/gtest.h	/^  static AssertionResult Compare($/;"	f	class:testing::internal::EqHelper
Compare	third_party/gmock/gtest/gtest.h	/^  static AssertionResult Compare(const char* expected_expression,$/;"	f	class:testing::internal::EqHelper
CompareEquals	src/include/type/value.h	/^  inline CmpBool CompareEquals(const Value &o) const {$/;"	f	class:cmudb::Value
CompareEquals	src/type/bigint_type.cpp	/^CmpBool BigintType::CompareEquals(const Value &left, const Value &right) const {$/;"	f	class:cmudb::BigintType
CompareEquals	src/type/boolean_type.cpp	/^CmpBool BooleanType::CompareEquals(const Value &left,$/;"	f	class:cmudb::BooleanType
CompareEquals	src/type/decimal_type.cpp	/^CmpBool DecimalType::CompareEquals(const Value &left,$/;"	f	class:cmudb::DecimalType
CompareEquals	src/type/integer_type.cpp	/^CmpBool IntegerType::CompareEquals(const Value &left,$/;"	f	class:cmudb::IntegerType
CompareEquals	src/type/smallint_type.cpp	/^CmpBool SmallintType::CompareEquals(const Value &left,$/;"	f	class:cmudb::SmallintType
CompareEquals	src/type/tinyint_type.cpp	/^CmpBool TinyintType::CompareEquals(const Value &left,$/;"	f	class:cmudb::TinyintType
CompareEquals	src/type/type.cpp	/^CmpBool Type::CompareEquals(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
CompareEquals	src/type/varlen_type.cpp	/^CmpBool VarlenType::CompareEquals(const Value &left, const Value &right) const {$/;"	f	class:cmudb::VarlenType
CompareGreaterThan	src/include/type/value.h	/^  inline CmpBool CompareGreaterThan(const Value &o) const {$/;"	f	class:cmudb::Value
CompareGreaterThan	src/type/bigint_type.cpp	/^CmpBool BigintType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::BigintType
CompareGreaterThan	src/type/boolean_type.cpp	/^CmpBool BooleanType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::BooleanType
CompareGreaterThan	src/type/decimal_type.cpp	/^CmpBool DecimalType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::DecimalType
CompareGreaterThan	src/type/integer_type.cpp	/^CmpBool IntegerType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::IntegerType
CompareGreaterThan	src/type/smallint_type.cpp	/^CmpBool SmallintType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::SmallintType
CompareGreaterThan	src/type/tinyint_type.cpp	/^CmpBool TinyintType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::TinyintType
CompareGreaterThan	src/type/type.cpp	/^CmpBool Type::CompareGreaterThan(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
CompareGreaterThan	src/type/varlen_type.cpp	/^CmpBool VarlenType::CompareGreaterThan(const Value &left,$/;"	f	class:cmudb::VarlenType
CompareGreaterThanEquals	src/include/type/value.h	/^  inline CmpBool CompareGreaterThanEquals(const Value &o) const {$/;"	f	class:cmudb::Value
CompareGreaterThanEquals	src/type/bigint_type.cpp	/^CmpBool BigintType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::BigintType
CompareGreaterThanEquals	src/type/boolean_type.cpp	/^CmpBool BooleanType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::BooleanType
CompareGreaterThanEquals	src/type/decimal_type.cpp	/^CmpBool DecimalType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::DecimalType
CompareGreaterThanEquals	src/type/integer_type.cpp	/^CmpBool IntegerType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::IntegerType
CompareGreaterThanEquals	src/type/smallint_type.cpp	/^CmpBool SmallintType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::SmallintType
CompareGreaterThanEquals	src/type/tinyint_type.cpp	/^CmpBool TinyintType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::TinyintType
CompareGreaterThanEquals	src/type/type.cpp	/^CmpBool Type::CompareGreaterThanEquals(const Value &left$/;"	f	class:cmudb::Type
CompareGreaterThanEquals	src/type/varlen_type.cpp	/^CmpBool VarlenType::CompareGreaterThanEquals(const Value &left,$/;"	f	class:cmudb::VarlenType
CompareLessThan	src/include/type/value.h	/^  inline CmpBool CompareLessThan(const Value &o) const {$/;"	f	class:cmudb::Value
CompareLessThan	src/type/bigint_type.cpp	/^CmpBool BigintType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::BigintType
CompareLessThan	src/type/boolean_type.cpp	/^CmpBool BooleanType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::BooleanType
CompareLessThan	src/type/decimal_type.cpp	/^CmpBool DecimalType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::DecimalType
CompareLessThan	src/type/integer_type.cpp	/^CmpBool IntegerType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::IntegerType
CompareLessThan	src/type/smallint_type.cpp	/^CmpBool SmallintType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::SmallintType
CompareLessThan	src/type/tinyint_type.cpp	/^CmpBool TinyintType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::TinyintType
CompareLessThan	src/type/type.cpp	/^CmpBool Type::CompareLessThan(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
CompareLessThan	src/type/varlen_type.cpp	/^CmpBool VarlenType::CompareLessThan(const Value &left,$/;"	f	class:cmudb::VarlenType
CompareLessThanEquals	src/include/type/value.h	/^  inline CmpBool CompareLessThanEquals(const Value &o) const {$/;"	f	class:cmudb::Value
CompareLessThanEquals	src/type/bigint_type.cpp	/^CmpBool BigintType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::BigintType
CompareLessThanEquals	src/type/boolean_type.cpp	/^CmpBool BooleanType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::BooleanType
CompareLessThanEquals	src/type/decimal_type.cpp	/^CmpBool DecimalType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::DecimalType
CompareLessThanEquals	src/type/integer_type.cpp	/^CmpBool IntegerType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::IntegerType
CompareLessThanEquals	src/type/smallint_type.cpp	/^CmpBool SmallintType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::SmallintType
CompareLessThanEquals	src/type/tinyint_type.cpp	/^CmpBool TinyintType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::TinyintType
CompareLessThanEquals	src/type/type.cpp	/^CmpBool Type::CompareLessThanEquals(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
CompareLessThanEquals	src/type/varlen_type.cpp	/^CmpBool VarlenType::CompareLessThanEquals(const Value &left,$/;"	f	class:cmudb::VarlenType
CompareNotEquals	src/include/type/value.h	/^  inline CmpBool CompareNotEquals(const Value &o) const {$/;"	f	class:cmudb::Value
CompareNotEquals	src/type/bigint_type.cpp	/^CmpBool BigintType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::BigintType
CompareNotEquals	src/type/boolean_type.cpp	/^CmpBool BooleanType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::BooleanType
CompareNotEquals	src/type/decimal_type.cpp	/^CmpBool DecimalType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::DecimalType
CompareNotEquals	src/type/integer_type.cpp	/^CmpBool IntegerType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::IntegerType
CompareNotEquals	src/type/smallint_type.cpp	/^CmpBool SmallintType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::SmallintType
CompareNotEquals	src/type/tinyint_type.cpp	/^CmpBool TinyintType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::TinyintType
CompareNotEquals	src/type/type.cpp	/^CmpBool Type::CompareNotEquals(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
CompareNotEquals	src/type/varlen_type.cpp	/^CmpBool VarlenType::CompareNotEquals(const Value &left,$/;"	f	class:cmudb::VarlenType
CompareStrings	src/include/type/type_util.h	/^  static inline int CompareStrings(const char *str1, int len1, const char *str2,$/;"	f	class:cmudb::TypeUtil
CompileAssertTypesEqual	third_party/gmock/gtest/gtest.h	/^struct CompileAssertTypesEqual<T, T> {$/;"	s	namespace:testing::internal
Compute	third_party/gmock/gmock-gtest-all.cc	/^  ElementMatcherPairs Compute() {$/;"	f	class:testing::internal::MaxBipartiteMatchState
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
ComputeCurrentValue	third_party/gmock/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
ConcatPaths	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::ConcatPaths(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
ConfigureStreamingOutput	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::ConfigureStreamingOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConfigureXmlOutput	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::ConfigureXmlOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConnectionException	src/include/common/exception.h	/^  ConnectionException(std::string msg)$/;"	f	class:cmudb::ConnectionException
ConnectionException	src/include/common/exception.h	/^class ConnectionException : public Exception {$/;"	c	namespace:cmudb
ConservativeLowerBound	third_party/gmock/gmock-gtest-all.cc	/^  virtual int ConservativeLowerBound() const { return min_; }$/;"	f	class:testing::__anon7::BetweenCardinalityImpl
ConservativeLowerBound	third_party/gmock/gmock/gmock.h	/^  int ConservativeLowerBound() const { return impl_->ConservativeLowerBound(); }$/;"	f	class:testing::Cardinality
ConservativeLowerBound	third_party/gmock/gmock/gmock.h	/^  virtual int ConservativeLowerBound() const { return 0; }$/;"	f	class:testing::CardinalityInterface
ConservativeUpperBound	third_party/gmock/gmock-gtest-all.cc	/^  virtual int ConservativeUpperBound() const { return max_; }$/;"	f	class:testing::__anon7::BetweenCardinalityImpl
ConservativeUpperBound	third_party/gmock/gmock/gmock.h	/^  int ConservativeUpperBound() const { return impl_->ConservativeUpperBound(); }$/;"	f	class:testing::Cardinality
ConservativeUpperBound	third_party/gmock/gmock/gmock.h	/^  virtual int ConservativeUpperBound() const { return INT_MAX; }$/;"	f	class:testing::CardinalityInterface
Const	third_party/gmock/gmock/gmock.h	/^inline const T& Const(const T& x) { return x; }$/;"	f	namespace:testing
ConstCharPtr	third_party/gmock/gtest/gtest.h	/^  ConstCharPtr(const char* str) : value(str) {}$/;"	f	struct:testing::internal::ConstCharPtr
ConstCharPtr	third_party/gmock/gtest/gtest.h	/^struct GTEST_API_ ConstCharPtr {$/;"	s	namespace:testing::internal
ConstFactorOk	src/sqlite/sqlite3.c	15175;"	d	file:
ConstReference	third_party/gmock/gmock/gmock.h	/^  static const_reference ConstReference($/;"	f	class:testing::internal::StlContainerView
ConstReference	third_party/gmock/gmock/gmock.h	/^  static const_reference ConstReference(const RawContainer& container) {$/;"	f	class:testing::internal::StlContainerView
ConstraintException	src/include/common/exception.h	/^  ConstraintException(std::string msg)$/;"	f	class:cmudb::ConstraintException
ConstraintException	src/include/common/exception.h	/^class ConstraintException : public Exception {$/;"	c	namespace:cmudb
ConstructIndex	src/vtable/virtual_table.cpp	/^Index *ConstructIndex(IndexMetadata *metadata,$/;"	f	namespace:cmudb
ConstructTuple	src/vtable/virtual_table.cpp	/^Tuple ConstructTuple(Schema *schema, sqlite3_value **argv) {$/;"	f	namespace:cmudb
ContainerEq	third_party/gmock/gmock/gmock.h	/^    ContainerEq(const Container& rhs) {$/;"	f	namespace:testing
ContainerEqMatcher	third_party/gmock/gmock/gmock.h	/^  explicit ContainerEqMatcher(const Container& rhs) : rhs_(View::Copy(rhs)) {$/;"	f	class:testing::internal::ContainerEqMatcher
ContainerEqMatcher	third_party/gmock/gmock/gmock.h	/^class ContainerEqMatcher {$/;"	c	namespace:testing::internal
ContainerType	third_party/gmock/gtest/gtest.h	/^  typedef typename ::std::vector<T> ContainerType;$/;"	t	class:testing::internal::ValuesInIteratorRangeGenerator
ContainerView	third_party/gmock/gmock/gmock.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(Container)> ContainerView;$/;"	t	class:testing::internal::SizeIsMatcher::Impl
Contains	third_party/gmock/gmock/gmock.h	/^inline internal::ContainsMatcher<M> Contains(M matcher) {$/;"	f	namespace:testing
ContainsMatcher	third_party/gmock/gmock/gmock.h	/^  explicit ContainsMatcher(M m) : inner_matcher_(m) {}$/;"	f	class:testing::internal::ContainsMatcher
ContainsMatcher	third_party/gmock/gmock/gmock.h	/^class ContainsMatcher {$/;"	c	namespace:testing::internal
ContainsMatcherImpl	third_party/gmock/gmock/gmock.h	/^  explicit ContainsMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::ContainsMatcherImpl
ContainsMatcherImpl	third_party/gmock/gmock/gmock.h	/^class ContainsMatcherImpl : public QuantifierMatcherImpl<Container> {$/;"	c	namespace:testing::internal
ContainsRegex	third_party/gmock/gmock/gmock.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex($/;"	f	namespace:testing
ConversionException	src/include/common/exception.h	/^  ConversionException(std::string msg)$/;"	f	class:cmudb::ConversionException
ConversionException	src/include/common/exception.h	/^class ConversionException : public Exception {$/;"	c	namespace:cmudb
ConvertIdentifierNameToWords	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ string ConvertIdentifierNameToWords(const char* id_name) {$/;"	f	namespace:testing::internal
Copy	src/include/type/value.h	/^  inline Value Copy() const { return Type::GetInstance(type_id_)->Copy(*this); }$/;"	f	class:cmudb::Value
Copy	src/type/bigint_type.cpp	/^Value BigintType::Copy(const Value &val) const {$/;"	f	class:cmudb::BigintType
Copy	src/type/boolean_type.cpp	/^Value BooleanType::Copy(const Value &val) const {$/;"	f	class:cmudb::BooleanType
Copy	src/type/decimal_type.cpp	/^Value DecimalType::Copy(const Value &val) const {$/;"	f	class:cmudb::DecimalType
Copy	src/type/integer_type.cpp	/^Value IntegerType::Copy(const Value &val) const {$/;"	f	class:cmudb::IntegerType
Copy	src/type/smallint_type.cpp	/^Value SmallintType::Copy(const Value &val) const {$/;"	f	class:cmudb::SmallintType
Copy	src/type/tinyint_type.cpp	/^Value TinyintType::Copy(const Value &val) const {$/;"	f	class:cmudb::TinyintType
Copy	src/type/type.cpp	/^Value Type::Copy(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
Copy	src/type/varlen_type.cpp	/^Value VarlenType::Copy(const Value &val) const { return Value(val); }$/;"	f	class:cmudb::VarlenType
Copy	third_party/gmock/gmock/gmock.h	/^  static type Copy(const ::std::tr1::tuple<ElementPointer, Size>& array) {$/;"	f	class:testing::internal::StlContainerView
Copy	third_party/gmock/gmock/gmock.h	/^  static type Copy(const RawContainer& container) { return container; }$/;"	f	class:testing::internal::StlContainerView
CopyAllFrom	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::CopyAllFrom($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
CopyAllFrom	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::CopyAllFrom(MappingType *items, int size)$/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
CopyArray	third_party/gmock/gtest/gtest.h	/^inline void CopyArray(const T& from, U* to) { *to = from; }$/;"	f	namespace:testing::internal
CopyArray	third_party/gmock/gtest/gtest.h	/^void CopyArray(const T* from, size_t size, U* to) {$/;"	f	namespace:testing::internal
CopyFirstFrom	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::CopyFirstFrom($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
CopyFirstFrom	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::CopyFirstFrom($/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
CopyHalfFrom	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::CopyHalfFrom($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
CopyHalfFrom	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::CopyHalfFrom(MappingType *items, int size) $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
CopyLastFrom	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::CopyLastFrom($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
CopyLastFrom	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::CopyLastFrom(const MappingType &item) $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
CopySchema	src/catalog/schema.cpp	/^Schema *Schema::CopySchema(const Schema *schema, const std::vector<int> &ids) {$/;"	f	class:cmudb::Schema
CountCtx	src/sqlite/sqlite3.c	/^struct CountCtx {$/;"	s	file:
CountCtx	src/sqlite/sqlite3.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
CountIf	third_party/gmock/gmock-gtest-all.cc	/^inline int CountIf(const Container& c, Predicate predicate) {$/;"	f	namespace:testing::internal
Counter	test/common/rwmutex_test.cpp	/^  Counter() : count_(0), mutex{} {}$/;"	f	class:cmudb::Counter
Counter	test/common/rwmutex_test.cpp	/^class Counter {$/;"	c	namespace:cmudb	file:
Create	third_party/gmock/gmock-gtest-all.cc	/^bool DeathTest::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DeathTest
Create	third_party/gmock/gmock-gtest-all.cc	/^bool DefaultDeathTestFactory::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DefaultDeathTestFactory
CreateCodePointFromUtf16SurrogatePair	third_party/gmock/gmock-gtest-all.cc	/^inline UInt32 CreateCodePointFromUtf16SurrogatePair(wchar_t first,$/;"	f	namespace:testing::internal
CreateDirectoriesRecursively	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::CreateDirectoriesRecursively() const {$/;"	f	class:testing::internal::FilePath
CreateFolder	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::CreateFolder() const {$/;"	f	class:testing::internal::FilePath
CreateKey	third_party/gmock/gtest/gtest.h	/^  static pthread_key_t CreateKey() {$/;"	f	class:std::tr1::ThreadLocal
CreateMatcher	third_party/gmock/gmock/gmock.h	/^  static Matcher<T> CreateMatcher(const ListType& matchers) {$/;"	f	struct:testing::internal::MatcherList
CreateTest	third_party/gmock/gtest/gtest.h	/^  virtual Test* CreateTest() { return new TestClass; }$/;"	f	class:testing::internal::TestFactoryImpl
CreateTest	third_party/gmock/gtest/gtest.h	/^  virtual Test* CreateTest() {$/;"	f	class:testing::internal::ParameterizedTestFactory
CreateTestFactory	third_party/gmock/gtest/gtest.h	/^  virtual TestFactoryBase* CreateTestFactory(ParamType parameter) {$/;"	f	class:testing::internal::TestMetaFactory
CsrFlagClear	src/sqlite/sqlite3.c	197395;"	d	file:
CsrFlagSet	src/sqlite/sqlite3.c	197394;"	d	file:
CsrFlagTest	src/sqlite/sqlite3.c	197396;"	d	file:
Cte	src/sqlite/sqlite3.c	/^  struct Cte {                    \/* For each CTE in the WITH clause.... *\/$/;"	s	struct:With	file:
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const T* Current() const { return &value_; }$/;"	f	class:testing::internal::RangeGenerator::Iterator
Current	third_party/gmock/gtest/gtest.h	/^    virtual const T* Current() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
CurrentOsStackTraceExceptTop	third_party/gmock/gmock-gtest-all.cc	/^std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {$/;"	f	class:testing::internal::UnitTestImpl
Cursor	src/include/vtable/virtual_table.h	/^  Cursor(VirtualTable *virtual_table)$/;"	f	class:cmudb::Cursor
Cursor	src/include/vtable/virtual_table.h	/^class Cursor {$/;"	c	namespace:cmudb
D	src/sqlite/sqlite3.c	/^  int Y, M, D;        \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
DBL_LOWEST	src/include/type/limits.h	/^static const double DBL_LOWEST = std::numeric_limits<double>::lowest();$/;"	m	namespace:cmudb
DB_Empty	src/sqlite/sqlite3.c	14856;"	d	file:
DB_SchemaLoaded	src/sqlite/sqlite3.c	14854;"	d	file:
DB_UnresetViews	src/sqlite/sqlite3.c	14855;"	d	file:
DCOORD	src/sqlite/sqlite3.c	165011;"	d	file:
DCOORD	src/sqlite/sqlite3.c	165013;"	d	file:
DEC	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
DEC	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
DEC	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	324;"	d	file:
DEC	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DECIMAL	src/include/type/type_id.h	/^  DECIMAL,$/;"	e	enum:cmudb::TypeId
DECIMAL_COMPARE_FUNC	src/type/decimal_type.cpp	12;"	d	file:
DECIMAL_MODIFY_FUNC	src/type/decimal_type.cpp	32;"	d	file:
DELETE	src/include/concurrency/transaction.h	/^enum class WType { INSERT = 0, DELETE, UPDATE };$/;"	m	class:cmudb::WType
DFUNCTION	src/sqlite/sqlite3.c	15302;"	d	file:
DIED	third_party/gmock/gmock-gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
DIRECT_MODE	src/sqlite/sqlite3.c	53503;"	d	file:
DOCID_CMP	src/sqlite/sqlite3.c	148973;"	d	file:
DOTLOCK_SUFFIX	src/sqlite/sqlite3.c	32373;"	d	file:
DO_OS_MALLOC_TEST	src/sqlite/sqlite3.c	20565;"	d	file:
DO_OS_MALLOC_TEST	src/sqlite/sqlite3.c	20572;"	d	file:
DateTime	src/sqlite/sqlite3.c	/^struct DateTime {$/;"	s	file:
DateTime	src/sqlite/sqlite3.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
Db	src/sqlite/sqlite3.c	/^struct Db {$/;"	s	file:
Db	src/sqlite/sqlite3.c	/^typedef struct Db Db;$/;"	t	typeref:struct:Db	file:
DbClearProperty	src/sqlite/sqlite3.c	14842;"	d	file:
DbFixer	src/sqlite/sqlite3.c	/^struct DbFixer {$/;"	s	file:
DbFixer	src/sqlite/sqlite3.c	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer	file:
DbHasAnyProperty	src/sqlite/sqlite3.c	14840;"	d	file:
DbHasProperty	src/sqlite/sqlite3.c	14839;"	d	file:
DbMaskAllZero	src/sqlite/sqlite3.c	16556;"	d	file:
DbMaskAllZero	src/sqlite/sqlite3.c	16563;"	d	file:
DbMaskNonZero	src/sqlite/sqlite3.c	16557;"	d	file:
DbMaskNonZero	src/sqlite/sqlite3.c	16564;"	d	file:
DbMaskSet	src/sqlite/sqlite3.c	16555;"	d	file:
DbMaskSet	src/sqlite/sqlite3.c	16562;"	d	file:
DbMaskTest	src/sqlite/sqlite3.c	16553;"	d	file:
DbMaskTest	src/sqlite/sqlite3.c	16560;"	d	file:
DbMaskZero	src/sqlite/sqlite3.c	16554;"	d	file:
DbMaskZero	src/sqlite/sqlite3.c	16561;"	d	file:
DbPage	src/sqlite/sqlite3.c	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr	file:
DbSetProperty	src/sqlite/sqlite3.c	14841;"	d	file:
DeallocatePage	src/disk/disk_manager.cpp	/^void DiskManager::DeallocatePage(__attribute__((unused)) page_id_t page_id) {$/;"	f	class:cmudb::DiskManager
DeathTest	third_party/gmock/gmock-gtest-all.cc	/^DeathTest::DeathTest() {$/;"	f	class:testing::internal::DeathTest
DeathTest	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ DeathTest {$/;"	c	namespace:testing::internal
DeathTestAbort	third_party/gmock/gmock-gtest-all.cc	/^void DeathTestAbort(const std::string& message) {$/;"	f	namespace:testing::internal
DeathTestFactory	third_party/gmock/gtest/gtest.h	/^class DeathTestFactory {$/;"	c	namespace:testing::internal
DeathTestImpl	third_party/gmock/gmock-gtest-all.cc	/^  DeathTestImpl(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::DeathTestImpl
DeathTestImpl	third_party/gmock/gmock-gtest-all.cc	/^class DeathTestImpl : public DeathTest {$/;"	c	namespace:testing::internal	file:
DeathTestOutcome	third_party/gmock/gmock-gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	g	namespace:testing::internal	file:
DeathTestThreadWarning	third_party/gmock/gmock-gtest-all.cc	/^static std::string DeathTestThreadWarning(size_t thread_count) {$/;"	f	namespace:testing::internal
DebugString	third_party/gmock/gmock-gtest-all.cc	/^string MatchMatrix::DebugString() const {$/;"	f	class:testing::internal::MatchMatrix
DecayArray	third_party/gmock/gmock/gmock.h	/^template <typename T, size_t N> struct DecayArray<T[N]> {$/;"	s	namespace:testing::internal
DecayArray	third_party/gmock/gmock/gmock.h	/^template <typename T> struct DecayArray { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
DecayArray	third_party/gmock/gmock/gmock.h	/^template <typename T> struct DecayArray<T[]> {$/;"	s	namespace:testing::internal
DecimalException	src/include/common/exception.h	/^  DecimalException(std::string msg) : Exception(EXCEPTION_TYPE_DECIMAL, msg) {}$/;"	f	class:cmudb::DecimalException
DecimalException	src/include/common/exception.h	/^class DecimalException : public Exception {$/;"	c	namespace:cmudb
DecimalType	src/include/type/decimal_type.h	/^class DecimalType : public NumericType {$/;"	c	namespace:cmudb
DecimalType	src/type/decimal_type.cpp	/^DecimalType::DecimalType() : NumericType(TypeId::DECIMAL) {}$/;"	f	class:cmudb::DecimalType
DecreaseSize	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::DecreaseSize(int amount) $/;"	f	class:cmudb::BPlusTreePage
Deephemeralize	src/sqlite/sqlite3.c	78811;"	d	file:
DefaultDeathTestFactory	third_party/gmock/gtest/gtest.h	/^class DefaultDeathTestFactory : public DeathTestFactory {$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
DefaultGlobalTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^class DefaultGlobalTestPartResultReporter$/;"	c	namespace:testing::internal	file:
DefaultPerThreadTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
DefaultPerThreadTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^class DefaultPerThreadTestPartResultReporter$/;"	c	namespace:testing::internal	file:
DefaultPrintNonContainerTo	third_party/gmock/gtest/gtest.h	/^void DefaultPrintNonContainerTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing_internal
DefaultPrintTo	third_party/gmock/gtest/gtest.h	/^void DefaultPrintTo(IsContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultPrintTo	third_party/gmock/gtest/gtest.h	/^void DefaultPrintTo(IsNotContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultValue	third_party/gmock/gmock/gmock.h	/^class DefaultValue {$/;"	c	namespace:testing
DefaultValue	third_party/gmock/gmock/gmock.h	/^class DefaultValue<T&> {$/;"	c	namespace:testing
DefaultValue	third_party/gmock/gmock/gmock.h	/^class DefaultValue<void> {$/;"	c	namespace:testing
Delete	third_party/gmock/gmock-gtest-all.cc	/^static void Delete(T* x) {$/;"	f	namespace:testing::internal
DeleteEntry	src/include/vtable/virtual_table.h	/^  inline void DeleteEntry(const RID &rid) {$/;"	f	class:cmudb::VirtualTable
DeleteEntry	src/index/b_plus_tree_index.cpp	/^void BPLUSTREE_INDEX_TYPE::DeleteEntry(const Tuple &key,$/;"	f	class:cmudb::BPLUSTREE_INDEX_TYPE
DeleteHelper	test/index/b_plus_tree_concurrent_test.cpp	/^void DeleteHelper(BPlusTree<GenericKey<8>, RID, GenericComparator<8>> &tree,$/;"	f	namespace:cmudb
DeleteHelperSplit	test/index/b_plus_tree_concurrent_test.cpp	/^void DeleteHelperSplit($/;"	f	namespace:cmudb
DeletePage	src/buffer/buffer_pool_manager.cpp	/^bool BufferPoolManager::DeletePage(page_id_t page_id) { $/;"	f	class:cmudb::BufferPoolManager
DeleteRecord	src/page/header_page.cpp	/^bool HeaderPage::DeleteRecord(const std::string &name) {$/;"	f	class:cmudb::HeaderPage
DeleteSelf_	third_party/gmock/gtest/gtest.h	/^  void DeleteSelf_() { delete this; }$/;"	f	class:testing::Test
DeleteTableHeap	src/table/table_heap.cpp	/^bool TableHeap::DeleteTableHeap() {$/;"	f	class:cmudb::TableHeap
DeleteThreadLocalValue	third_party/gmock/gtest/gtest.h	/^extern "C" inline void DeleteThreadLocalValue(void* value_holder) {$/;"	f	namespace:std::tr1
DeleteTuple	src/include/vtable/virtual_table.h	/^  inline bool DeleteTuple(const RID &rid) {$/;"	f	class:cmudb::VirtualTable
DescribeActualCallCountTo	third_party/gmock/gmock-gtest-all.cc	/^void Cardinality::DescribeActualCallCountTo(int actual_call_count,$/;"	f	class:testing::Cardinality
DescribeDefaultActionTo	third_party/gmock/gmock/gmock.h	/^  void DescribeDefaultActionTo(const ArgumentTuple& args,$/;"	f	class:testing::internal::FunctionMockerBase
DescribeLocationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeLocationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ExpectationBase
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointeeMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointwiseMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::RefMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::SizeIsMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::MatcherDescriberInterface
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::AnyMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ArgsMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BothOfMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainsMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EachMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::KeyMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainerEqMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EndsWithMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FieldMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::HasSubstrMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::IsNullMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotNullMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PropertyMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StartsWithMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher
DescribeNegationTo	third_party/gmock/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::TrulyMatcher
DescribeNegationToImpl	third_party/gmock/gmock-gtest-all.cc	/^void UnorderedElementsAreMatcherImplBase::DescribeNegationToImpl($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
DescribeTo	third_party/gmock/gmock-gtest-all.cc	/^void BetweenCardinalityImpl::DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::__anon7::BetweenCardinalityImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointeeMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointwiseMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::RefMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::SizeIsMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const { *os << "is anything"; }$/;"	f	class:testing::internal::AnyMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ArgsMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BothOfMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainsMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EachMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::KeyMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { *os << "is NULL"; }$/;"	f	class:testing::internal::IsNullMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { *os << "isn't NULL"; }$/;"	f	class:testing::internal::NotNullMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }$/;"	f	class:testing::Cardinality
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }$/;"	f	class:testing::internal::MatcherBase
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainerEqMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EndsWithMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FieldMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::HasSubstrMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PropertyMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StartsWithMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher
DescribeTo	third_party/gmock/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::TrulyMatcher
DescribeToHelper	third_party/gmock/gmock/gmock.h	/^  void DescribeToHelper(bool expect_eq, ::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher
DescribeToImpl	third_party/gmock/gmock-gtest-all.cc	/^void UnorderedElementsAreMatcherImplBase::DescribeToImpl($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
DeserializeFrom	src/include/type/value.h	/^  inline static Value DeserializeFrom(const char *storage,$/;"	f	class:cmudb::Value
DeserializeFrom	src/type/bigint_type.cpp	/^Value BigintType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::BigintType
DeserializeFrom	src/type/boolean_type.cpp	/^Value BooleanType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::BooleanType
DeserializeFrom	src/type/decimal_type.cpp	/^Value DecimalType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::DecimalType
DeserializeFrom	src/type/integer_type.cpp	/^Value IntegerType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::IntegerType
DeserializeFrom	src/type/smallint_type.cpp	/^Value SmallintType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::SmallintType
DeserializeFrom	src/type/tinyint_type.cpp	/^Value TinyintType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::TinyintType
DeserializeFrom	src/type/type.cpp	/^Value Type::DeserializeFrom(const char *storage __attribute__((unused))) const {$/;"	f	class:cmudb::Type
DeserializeFrom	src/type/varlen_type.cpp	/^Value VarlenType::DeserializeFrom(const char *storage) const {$/;"	f	class:cmudb::VarlenType
DirectoryExists	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::DirectoryExists() const {$/;"	f	class:testing::internal::FilePath
DiskManager	src/disk/disk_manager.cpp	/^DiskManager::DiskManager(const std::string &db_file)$/;"	f	class:cmudb::DiskManager
DiskManager	src/include/disk/disk_manager.h	/^class DiskManager {$/;"	c	namespace:cmudb
DistanceBetweenSignAndMagnitudeNumbers	third_party/gmock/gtest/gtest.h	/^  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,$/;"	f	class:testing::internal::FloatingPoint
DistinctCtx	src/sqlite/sqlite3.c	/^struct DistinctCtx {$/;"	s	file:
DistinctCtx	src/sqlite/sqlite3.c	/^typedef struct DistinctCtx DistinctCtx;$/;"	t	typeref:struct:DistinctCtx	file:
Divide	src/include/type/value.h	/^  inline Value Divide(const Value &o) const {$/;"	f	class:cmudb::Value
Divide	src/type/bigint_type.cpp	/^Value BigintType::Divide(const Value &left, const Value &right) const {$/;"	f	class:cmudb::BigintType
Divide	src/type/decimal_type.cpp	/^Value DecimalType::Divide(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Divide	src/type/integer_type.cpp	/^Value IntegerType::Divide(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerType
Divide	src/type/smallint_type.cpp	/^Value SmallintType::Divide(const Value &left, const Value &right) const {$/;"	f	class:cmudb::SmallintType
Divide	src/type/tinyint_type.cpp	/^Value TinyintType::Divide(const Value &left, const Value &right) const {$/;"	f	class:cmudb::TinyintType
Divide	src/type/type.cpp	/^Value Type::Divide(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
DivideByZeroException	src/include/common/exception.h	/^  DivideByZeroException(std::string msg)$/;"	f	class:cmudb::DivideByZeroException
DivideByZeroException	src/include/common/exception.h	/^class DivideByZeroException : public Exception {$/;"	c	namespace:cmudb
DivideValue	src/include/type/integer_parent_type.h	/^Value IntegerParentType::DivideValue(const Value &left,$/;"	f	class:cmudb::IntegerParentType
DoAll	third_party/gmock/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2) {$/;"	f	namespace:testing
DoAll	third_party/gmock/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3) {$/;"	f	namespace:testing
DoAll	third_party/gmock/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4) {$/;"	f	namespace:testing
DoAll	third_party/gmock/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5) {$/;"	f	namespace:testing
DoAll	third_party/gmock/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5, Action6 a6) {$/;"	f	namespace:testing
DoAll	third_party/gmock/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5, Action6 a6,$/;"	f	namespace:testing
DoBothAction	third_party/gmock/gmock/gmock.h	/^  DoBothAction(Action1 action1, Action2 action2)$/;"	f	class:testing::internal::DoBothAction
DoBothAction	third_party/gmock/gmock/gmock.h	/^class DoBothAction {$/;"	c	namespace:testing::internal
DoDefault	third_party/gmock/gmock/gmock.h	/^inline internal::DoDefaultAction DoDefault() {$/;"	f	namespace:testing
DoDefaultAction	third_party/gmock/gmock/gmock.h	/^class DoDefaultAction {$/;"	c	namespace:testing::internal
Double	third_party/gmock/gtest/gtest.h	/^typedef FloatingPoint<double> Double;$/;"	t	namespace:testing::internal
DoubleEq	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> DoubleEq(double rhs) {$/;"	f	namespace:testing
DoubleLE	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult DoubleLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
DoubleNear	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> DoubleNear($/;"	f	namespace:testing
DoubleNearPredFormat	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult DoubleNearPredFormat(const char* expr1,$/;"	f	namespace:testing::internal
DownCast_	third_party/gmock/gtest/gtest.h	/^inline To DownCast_(From* f) {  \/\/ so we only accept pointers$/;"	f	namespace:std::tr1
DummyMatchResultListener	third_party/gmock/gmock/gmock.h	/^  DummyMatchResultListener() : MatchResultListener(NULL) {}$/;"	f	class:testing::internal::DummyMatchResultListener
DummyMatchResultListener	third_party/gmock/gmock/gmock.h	/^class DummyMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
DumpAll	src/hash/extendible_hash.cpp	/^void ExtendibleHash<K, V>::DumpAll(){$/;"	f	class:cmudb::ExtendibleHash
DumpDir	src/hash/extendible_hash.cpp	/^void ExtendibleHash<K, V>::DumpDir(){$/;"	f	class:cmudb::ExtendibleHash
EIGHT_BYTE_ALIGNMENT	src/sqlite/sqlite3.c	12826;"	d	file:
EIGHT_BYTE_ALIGNMENT	src/sqlite/sqlite3.c	12828;"	d	file:
ENC	src/sqlite/sqlite3.c	15093;"	d	file:
END_TIMER	src/sqlite/shell.c	251;"	d	file:
END_TIMER	src/sqlite/shell.c	328;"	d	file:
END_TIMER	src/sqlite/shell.c	333;"	d	file:
EP_Agg	src/sqlite/sqlite3.c	16023;"	d	file:
EP_Alias	src/sqlite/sqlite3.c	16044;"	d	file:
EP_CanBeNull	src/sqlite/sqlite3.c	16042;"	d	file:
EP_Collate	src/sqlite/sqlite3.c	16030;"	d	file:
EP_ConstFunc	src/sqlite/sqlite3.c	16041;"	d	file:
EP_DblQuoted	src/sqlite/sqlite3.c	16028;"	d	file:
EP_Distinct	src/sqlite/sqlite3.c	16026;"	d	file:
EP_FromJoin	src/sqlite/sqlite3.c	16022;"	d	file:
EP_Generic	src/sqlite/sqlite3.c	16031;"	d	file:
EP_InfixFunc	src/sqlite/sqlite3.c	16029;"	d	file:
EP_IntValue	src/sqlite/sqlite3.c	16032;"	d	file:
EP_Leaf	src/sqlite/sqlite3.c	16045;"	d	file:
EP_MemToken	src/sqlite/sqlite3.c	16038;"	d	file:
EP_NoReduce	src/sqlite/sqlite3.c	16039;"	d	file:
EP_Propagate	src/sqlite/sqlite3.c	16050;"	d	file:
EP_Reduced	src/sqlite/sqlite3.c	16035;"	d	file:
EP_Resolved	src/sqlite/sqlite3.c	16024;"	d	file:
EP_Skip	src/sqlite/sqlite3.c	16034;"	d	file:
EP_Static	src/sqlite/sqlite3.c	16037;"	d	file:
EP_Subquery	src/sqlite/sqlite3.c	16043;"	d	file:
EP_TokenOnly	src/sqlite/sqlite3.c	16036;"	d	file:
EP_Unlikely	src/sqlite/sqlite3.c	16040;"	d	file:
EP_VarSelect	src/sqlite/sqlite3.c	16027;"	d	file:
EP_xIsSelect	src/sqlite/sqlite3.c	16033;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/test/Makefile	/^EQUALS = =$/;"	m
EQUALS	test/Makefile	/^EQUALS = =$/;"	m
EQUALS	test/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	test/test/Makefile	/^EQUALS = =$/;"	m
EXCEPTION_TYPE_CATALOG	src/include/common/exception.h	/^  EXCEPTION_TYPE_CATALOG = 13,          \/\/ catalog related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_CONNECTION	src/include/common/exception.h	/^  EXCEPTION_TYPE_CONNECTION = 21,       \/\/ connection related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_CONSTRAINT	src/include/common/exception.h	/^  EXCEPTION_TYPE_CONSTRAINT = 18,       \/\/ constraint related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_CONVERSION	src/include/common/exception.h	/^  EXCEPTION_TYPE_CONVERSION = 2,        \/\/ conversion\/casting error$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_DECIMAL	src/include/common/exception.h	/^  EXCEPTION_TYPE_DECIMAL = 4,           \/\/ decimal related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_DIVIDE_BY_ZERO	src/include/common/exception.h	/^  EXCEPTION_TYPE_DIVIDE_BY_ZERO = 6,    \/\/ divide by 0$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_EXECUTOR	src/include/common/exception.h	/^  EXCEPTION_TYPE_EXECUTOR = 17,         \/\/ executor related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_EXPRESSION	src/include/common/exception.h	/^  EXCEPTION_TYPE_EXPRESSION = 12,       \/\/ expression parsing$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_INCOMPATIBLE_TYPE	src/include/common/exception.h	/^  EXCEPTION_TYPE_INCOMPATIBLE_TYPE = 8, \/\/ incompatible for operation$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_INDEX	src/include/common/exception.h	/^  EXCEPTION_TYPE_INDEX = 19,            \/\/ index related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_INVALID	src/include/common/exception.h	/^  EXCEPTION_TYPE_INVALID = 0,           \/\/ invalid type$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_MISMATCH_TYPE	src/include/common/exception.h	/^  EXCEPTION_TYPE_MISMATCH_TYPE = 5,     \/\/ type mismatch$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_NOT_IMPLEMENTED	src/include/common/exception.h	/^  EXCEPTION_TYPE_NOT_IMPLEMENTED = 11,  \/\/ method not implemented$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_OBJECT_SIZE	src/include/common/exception.h	/^  EXCEPTION_TYPE_OBJECT_SIZE = 7,       \/\/ object size exceeded$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_OUT_OF_RANGE	src/include/common/exception.h	/^  EXCEPTION_TYPE_OUT_OF_RANGE = 1,      \/\/ value out of range error$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_PARSER	src/include/common/exception.h	/^  EXCEPTION_TYPE_PARSER = 14,           \/\/ parser related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_PLANNER	src/include/common/exception.h	/^  EXCEPTION_TYPE_PLANNER = 15,          \/\/ planner related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_SCHEDULER	src/include/common/exception.h	/^  EXCEPTION_TYPE_SCHEDULER = 16,        \/\/ scheduler related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_SERIALIZATION	src/include/common/exception.h	/^  EXCEPTION_TYPE_SERIALIZATION = 9,     \/\/ serialization$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_STAT	src/include/common/exception.h	/^  EXCEPTION_TYPE_STAT = 20,             \/\/ stat related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_SYNTAX	src/include/common/exception.h	/^  EXCEPTION_TYPE_SYNTAX = 22,           \/\/ syntax related$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_TRANSACTION	src/include/common/exception.h	/^  EXCEPTION_TYPE_TRANSACTION = 10,      \/\/ transaction management$/;"	e	enum:cmudb::ExceptionType
EXCEPTION_TYPE_UNKNOWN_TYPE	src/include/common/exception.h	/^  EXCEPTION_TYPE_UNKNOWN_TYPE = 3,      \/\/ unknown type$/;"	e	enum:cmudb::ExceptionType
EXCLUSIVE_LOCK	src/sqlite/sqlite3.c	14557;"	d	file:
EXECUTE_TEST	third_party/gmock/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
EXPECT_ANY_THROW	third_party/gmock/gtest/gtest.h	19316;"	d
EXPECT_CALL	third_party/gmock/gmock/gmock.h	10349;"	d
EXPECT_DEATH	third_party/gmock/gtest/gtest.h	8620;"	d
EXPECT_DEATH_IF_SUPPORTED	third_party/gmock/gtest/gtest.h	8717;"	d
EXPECT_DEATH_IF_SUPPORTED	third_party/gmock/gtest/gtest.h	8722;"	d
EXPECT_DEBUG_DEATH	third_party/gmock/gtest/gtest.h	8694;"	d
EXPECT_DEBUG_DEATH	third_party/gmock/gtest/gtest.h	8702;"	d
EXPECT_DOUBLE_EQ	third_party/gmock/gtest/gtest.h	19857;"	d
EXPECT_EQ	third_party/gmock/gtest/gtest.h	19748;"	d
EXPECT_EXIT	third_party/gmock/gtest/gtest.h	8609;"	d
EXPECT_FALSE	third_party/gmock/gtest/gtest.h	19331;"	d
EXPECT_FATAL_FAILURE	third_party/gmock/gmock-gtest-all.cc	211;"	d	file:
EXPECT_FATAL_FAILURE_ON_ALL_THREADS	third_party/gmock/gmock-gtest-all.cc	228;"	d	file:
EXPECT_FLOAT_EQ	third_party/gmock/gtest/gtest.h	19853;"	d
EXPECT_GE	third_party/gmock/gtest/gtest.h	19758;"	d
EXPECT_GT	third_party/gmock/gtest/gtest.h	19760;"	d
EXPECT_HRESULT_FAILED	third_party/gmock/gtest/gtest.h	19907;"	d
EXPECT_HRESULT_SUCCEEDED	third_party/gmock/gtest/gtest.h	19901;"	d
EXPECT_LE	third_party/gmock/gtest/gtest.h	19754;"	d
EXPECT_LT	third_party/gmock/gtest/gtest.h	19756;"	d
EXPECT_NE	third_party/gmock/gtest/gtest.h	19752;"	d
EXPECT_NEAR	third_party/gmock/gtest/gtest.h	19869;"	d
EXPECT_NONFATAL_FAILURE	third_party/gmock/gmock-gtest-all.cc	277;"	d	file:
EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS	third_party/gmock/gmock-gtest-all.cc	291;"	d	file:
EXPECT_NO_FATAL_FAILURE	third_party/gmock/gtest/gtest.h	19927;"	d
EXPECT_NO_THROW	third_party/gmock/gtest/gtest.h	19314;"	d
EXPECT_PRED1	third_party/gmock/gtest/gtest.h	19457;"	d
EXPECT_PRED2	third_party/gmock/gtest/gtest.h	19505;"	d
EXPECT_PRED3	third_party/gmock/gtest/gtest.h	19560;"	d
EXPECT_PRED4	third_party/gmock/gtest/gtest.h	19622;"	d
EXPECT_PRED5	third_party/gmock/gtest/gtest.h	19691;"	d
EXPECT_PRED_FORMAT1	third_party/gmock/gtest/gtest.h	19455;"	d
EXPECT_PRED_FORMAT2	third_party/gmock/gtest/gtest.h	19503;"	d
EXPECT_PRED_FORMAT3	third_party/gmock/gtest/gtest.h	19558;"	d
EXPECT_PRED_FORMAT4	third_party/gmock/gtest/gtest.h	19620;"	d
EXPECT_PRED_FORMAT5	third_party/gmock/gtest/gtest.h	19689;"	d
EXPECT_STRCASEEQ	third_party/gmock/gtest/gtest.h	19825;"	d
EXPECT_STRCASENE	third_party/gmock/gtest/gtest.h	19827;"	d
EXPECT_STREQ	third_party/gmock/gtest/gtest.h	19821;"	d
EXPECT_STRNE	third_party/gmock/gtest/gtest.h	19823;"	d
EXPECT_THAT	third_party/gmock/gmock/gmock.h	8633;"	d
EXPECT_THROW	third_party/gmock/gtest/gtest.h	19312;"	d
EXPECT_TRUE	third_party/gmock/gtest/gtest.h	19328;"	d
EXPRDUP_REDUCE	src/sqlite/sqlite3.c	16084;"	d	file:
EXPR_FULLSIZE	src/sqlite/sqlite3.c	16076;"	d	file:
EXPR_REDUCEDSIZE	src/sqlite/sqlite3.c	16077;"	d	file:
EXPR_TOKENONLYSIZE	src/sqlite/sqlite3.c	16078;"	d	file:
Each	third_party/gmock/gmock/gmock.h	/^inline internal::EachMatcher<M> Each(M matcher) {$/;"	f	namespace:testing
EachMatcher	third_party/gmock/gmock/gmock.h	/^  explicit EachMatcher(M m) : inner_matcher_(m) {}$/;"	f	class:testing::internal::EachMatcher
EachMatcher	third_party/gmock/gmock/gmock.h	/^class EachMatcher {$/;"	c	namespace:testing::internal
EachMatcherImpl	third_party/gmock/gmock/gmock.h	/^  explicit EachMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::EachMatcherImpl
EachMatcherImpl	third_party/gmock/gmock/gmock.h	/^class EachMatcherImpl : public QuantifierMatcherImpl<Container> {$/;"	c	namespace:testing::internal
EitherOfMatcher	third_party/gmock/gmock/gmock.h	/^  EitherOfMatcher(Matcher1 matcher1, Matcher2 matcher2)$/;"	f	class:testing::internal::EitherOfMatcher
EitherOfMatcher	third_party/gmock/gmock/gmock.h	/^class EitherOfMatcher {$/;"	c	namespace:testing::internal
EitherOfMatcherImpl	third_party/gmock/gmock/gmock.h	/^  EitherOfMatcherImpl(const Matcher<T>& matcher1, const Matcher<T>& matcher2)$/;"	f	class:testing::internal::EitherOfMatcherImpl
EitherOfMatcherImpl	third_party/gmock/gmock/gmock.h	/^class EitherOfMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
Element	third_party/gmock/gmock/gmock.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
Element	third_party/gmock/gmock/gmock.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::QuantifierMatcherImpl
Element	third_party/gmock/gmock/gmock.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
ElementMatcherPair	third_party/gmock/gmock/gmock.h	/^typedef ::std::pair<size_t, size_t> ElementMatcherPair;$/;"	t	namespace:testing::internal
ElementMatcherPairs	third_party/gmock/gmock/gmock.h	/^typedef ::std::vector<ElementMatcherPair> ElementMatcherPairs;$/;"	t	namespace:testing::internal
Elements	third_party/gmock/gmock/gmock.h	/^  static Message Elements(size_t count) {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
Elements	third_party/gmock/gmock/gmock.h	/^  static Message Elements(size_t n) {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
ElementsAre	third_party/gmock/gmock/gmock.h	/^ElementsAre() {$/;"	f	namespace:testing
ElementsAre	third_party/gmock/gmock/gmock.h	/^ElementsAre(const T1& e1) {$/;"	f	namespace:testing
ElementsAre	third_party/gmock/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2) {$/;"	f	namespace:testing
ElementsAre	third_party/gmock/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3) {$/;"	f	namespace:testing
ElementsAre	third_party/gmock/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4) {$/;"	f	namespace:testing
ElementsAre	third_party/gmock/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4,$/;"	f	namespace:testing
ElementsAreArray	third_party/gmock/gmock/gmock.h	/^ElementsAreArray(::std::initializer_list<T> xs) {$/;"	f	namespace:testing
ElementsAreArray	third_party/gmock/gmock/gmock.h	/^ElementsAreArray(Iter first, Iter last) {$/;"	f	namespace:testing
ElementsAreArray	third_party/gmock/gmock/gmock.h	/^inline internal::ElementsAreArrayMatcher<T> ElementsAreArray($/;"	f	namespace:testing
ElementsAreArrayMatcher	third_party/gmock/gmock/gmock.h	/^  ElementsAreArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}$/;"	f	class:testing::internal::ElementsAreArrayMatcher
ElementsAreArrayMatcher	third_party/gmock/gmock/gmock.h	/^class ElementsAreArrayMatcher {$/;"	c	namespace:testing::internal
ElementsAreMatcher	third_party/gmock/gmock/gmock.h	/^  explicit ElementsAreMatcher(const MatcherTuple& args) : matchers_(args) {}$/;"	f	class:testing::internal::ElementsAreMatcher
ElementsAreMatcher	third_party/gmock/gmock/gmock.h	/^class ElementsAreMatcher {$/;"	c	namespace:testing::internal
ElementsAreMatcherImpl	third_party/gmock/gmock/gmock.h	/^  ElementsAreMatcherImpl(InputIter first, InputIter last) {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
ElementsAreMatcherImpl	third_party/gmock/gmock/gmock.h	/^class ElementsAreMatcherImpl : public MatcherInterface<Container> {$/;"	c	namespace:testing::internal
EmptyTestEventListener	third_party/gmock/gtest/gtest.h	/^class EmptyTestEventListener : public TestEventListener {$/;"	c	namespace:testing
EnableIf	third_party/gmock/gtest/gtest.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::RangeGenerator
End	third_party/gmock/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
EndsWith	third_party/gmock/gmock/gmock.h	/^    EndsWith(const internal::string& suffix) {$/;"	f	namespace:testing
EndsWith	third_party/gmock/gmock/gmock.h	/^    EndsWith(const internal::wstring& suffix) {$/;"	f	namespace:testing
EndsWithCaseInsensitive	third_party/gmock/gmock-gtest-all.cc	/^bool String::EndsWithCaseInsensitive($/;"	f	class:testing::internal::String
EndsWithMatcher	third_party/gmock/gmock/gmock.h	/^  explicit EndsWithMatcher(const StringType& suffix) : suffix_(suffix) {}$/;"	f	class:testing::internal::EndsWithMatcher
EndsWithMatcher	third_party/gmock/gmock/gmock.h	/^class EndsWithMatcher {$/;"	c	namespace:testing::internal
EntropyGatherer	src/sqlite/sqlite3.c	/^struct EntropyGatherer {$/;"	s	file:
EntropyGatherer	src/sqlite/sqlite3.c	/^typedef struct EntropyGatherer EntropyGatherer;$/;"	t	typeref:struct:EntropyGatherer	file:
Environment	third_party/gmock/gtest/gtest.h	/^class Environment {$/;"	c	namespace:testing
Eq	third_party/gmock/gmock/gmock.h	/^inline internal::Eq2Matcher Eq() { return internal::Eq2Matcher(); }$/;"	f	namespace:testing
Eq	third_party/gmock/gmock/gmock.h	/^inline internal::EqMatcher<T> Eq(T x) { return internal::EqMatcher<T>(x); }$/;"	f	namespace:testing
EqFailure	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult EqFailure(const char* expected_expression,$/;"	f	namespace:testing::internal
EqHelper	third_party/gmock/gtest/gtest.h	/^class EqHelper {$/;"	c	namespace:testing::internal
EqHelper	third_party/gmock/gtest/gtest.h	/^class EqHelper<true> {$/;"	c	namespace:testing::internal
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Equals	third_party/gmock/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Erase	src/buffer/lru_replacer.cpp	/^template <typename T> bool LRUReplacer<T>::Erase(const T &value) {$/;"	f	class:cmudb::LRUReplacer
EscapeXml	third_party/gmock/gmock-gtest-all.cc	/^std::string XmlUnitTestResultPrinter::EscapeXml($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
EscapeXmlAttribute	third_party/gmock/gmock-gtest-all.cc	/^  static std::string EscapeXmlAttribute(const std::string& str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EscapeXmlText	third_party/gmock/gmock-gtest-all.cc	/^  static std::string EscapeXmlText(const char* str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EventForwardingEnabled	third_party/gmock/gmock-gtest-all.cc	/^bool TestEventListeners::EventForwardingEnabled() const {$/;"	f	class:testing::TestEventListeners
Exactly	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ Cardinality Exactly(int n) { return Between(n, n); }$/;"	f	namespace:testing
Exception	src/include/common/exception.h	/^  Exception(ExceptionType exception_type, std::string message)$/;"	f	class:cmudb::Exception
Exception	src/include/common/exception.h	/^  Exception(std::string message)$/;"	f	class:cmudb::Exception
Exception	src/include/common/exception.h	/^class Exception : public std::runtime_error {$/;"	c	namespace:cmudb
ExceptionType	src/include/common/exception.h	/^enum ExceptionType {$/;"	g	namespace:cmudb
ExcessiveArg	third_party/gmock/gmock/gmock.h	/^struct ExcessiveArg {};$/;"	s	namespace:testing::internal
ExecCallback	test/include/vtable/testing_vtable_util.h	/^int ExecCallback(void *NotUsed, int argc, char **argv, char **azColName) {$/;"	f	namespace:cmudb
ExecDeathTest	third_party/gmock/gmock-gtest-all.cc	/^  ExecDeathTest(const char* a_statement, const RE* a_regex,$/;"	f	class:testing::internal::ExecDeathTest
ExecDeathTest	third_party/gmock/gmock-gtest-all.cc	/^class ExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
ExecDeathTestArgs	third_party/gmock/gmock-gtest-all.cc	/^struct ExecDeathTestArgs {$/;"	s	namespace:testing::internal	file:
ExecDeathTestChildMain	third_party/gmock/gmock-gtest-all.cc	/^static int ExecDeathTestChildMain(void* child_arg) {$/;"	f	namespace:testing::internal
ExecDeathTestSpawnChild	third_party/gmock/gmock-gtest-all.cc	/^static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {$/;"	f	namespace:testing::internal
ExecSQL	test/include/vtable/testing_vtable_util.h	/^bool ExecSQL(sqlite3 *db, std::string sql) {$/;"	f	namespace:cmudb
ExecutorException	src/include/common/exception.h	/^  ExecutorException(std::string msg)$/;"	f	class:cmudb::ExecutorException
ExecutorException	src/include/common/exception.h	/^class ExecutorException : public Exception {$/;"	c	namespace:cmudb
Exists	third_party/gmock/gmock/gmock.h	/^  static bool Exists() { return BuiltInDefaultValue<T>::Exists(); }$/;"	f	class:testing::internal::BuiltInDefaultValue
Exists	third_party/gmock/gmock/gmock.h	/^  static bool Exists() { return false; }$/;"	f	class:testing::internal::BuiltInDefaultValue
Exists	third_party/gmock/gmock/gmock.h	/^  static bool Exists() { return true; }$/;"	f	class:testing::DefaultValue
Exists	third_party/gmock/gmock/gmock.h	/^  static bool Exists() { return true; }$/;"	f	class:testing::internal::BuiltInDefaultValue
Exists	third_party/gmock/gmock/gmock.h	/^  static bool Exists() {$/;"	f	class:testing::DefaultValue
ExitSummary	third_party/gmock/gmock-gtest-all.cc	/^static std::string ExitSummary(int exit_code) {$/;"	f	namespace:testing::internal
ExitedUnsuccessfully	third_party/gmock/gmock-gtest-all.cc	/^bool ExitedUnsuccessfully(int exit_status) {$/;"	f	namespace:testing::internal
ExitedWithCode	third_party/gmock/gmock-gtest-all.cc	/^ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {$/;"	f	class:testing::ExitedWithCode
ExitedWithCode	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ ExitedWithCode {$/;"	c	namespace:testing
ExpandBlob	src/sqlite/sqlite3.c	18901;"	d	file:
ExpandBlob	src/sqlite/sqlite3.c	18904;"	d	file:
ExpectSpecProperty	third_party/gmock/gmock/gmock.h	/^  void ExpectSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::ExpectationBase
ExpectSpecProperty	third_party/gmock/gmock/gmock.h	/^  void ExpectSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::UntypedOnCallSpecBase
Expectation	third_party/gmock/gmock-gtest-all.cc	/^Expectation::Expectation($/;"	f	class:testing::Expectation
Expectation	third_party/gmock/gmock-gtest-all.cc	/^Expectation::Expectation() {}$/;"	f	class:testing::Expectation
Expectation	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Expectation {$/;"	c	namespace:testing
Expectation	third_party/gmock/gmock/gmock.h	/^inline Expectation::Expectation(internal::ExpectationBase& exp)  \/\/ NOLINT$/;"	f	class:testing::Expectation
ExpectationBase	third_party/gmock/gmock-gtest-all.cc	/^ExpectationBase::ExpectationBase(const char* a_file,$/;"	f	class:testing::internal::ExpectationBase
ExpectationBase	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ ExpectationBase {$/;"	c	namespace:testing::internal
ExpectationSet	third_party/gmock/gmock/gmock.h	/^  ExpectationSet() {}$/;"	f	class:testing::ExpectationSet
ExpectationSet	third_party/gmock/gmock/gmock.h	/^  ExpectationSet(const Expectation& e) {  \/\/ NOLINT$/;"	f	class:testing::ExpectationSet
ExpectationSet	third_party/gmock/gmock/gmock.h	/^  ExpectationSet(internal::ExpectationBase& exp) {  \/\/ NOLINT$/;"	f	class:testing::ExpectationSet
ExpectationSet	third_party/gmock/gmock/gmock.h	/^class ExpectationSet {$/;"	c	namespace:testing
ExpectionTypeToString	src/include/common/exception.h	/^  std::string ExpectionTypeToString(ExceptionType type) {$/;"	f	class:cmudb::Exception
ExplainMatchFailureTupleTo	third_party/gmock/gmock/gmock.h	/^void ExplainMatchFailureTupleTo(const MatcherTuple& matchers,$/;"	f	namespace:testing::internal
ExplainMatchFailuresTo	third_party/gmock/gmock/gmock.h	/^  static void ExplainMatchFailuresTo(const MatcherTuple& \/* matchers *\/,$/;"	f	class:testing::internal::TuplePrefix
ExplainMatchFailuresTo	third_party/gmock/gmock/gmock.h	/^  static void ExplainMatchFailuresTo(const MatcherTuple& matchers,$/;"	f	class:testing::internal::TuplePrefix
ExplainMatchResult	third_party/gmock/gmock/gmock.h	/^inline bool ExplainMatchResult($/;"	f	namespace:testing
ExplainMatchResultTo	third_party/gmock/gmock/gmock.h	/^  void ExplainMatchResultTo(T x, ::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase
ExplainSuccess	third_party/gmock/gmock/gmock.h	/^  void ExplainSuccess(const internal::string& first_explanation,$/;"	f	class:testing::internal::PairMatcherImpl
Expr	src/sqlite/sqlite3.c	/^struct Expr {$/;"	s	file:
Expr	src/sqlite/sqlite3.c	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr	file:
ExprClearProperty	src/sqlite/sqlite3.c	16059;"	d	file:
ExprHasAllProperty	src/sqlite/sqlite3.c	16057;"	d	file:
ExprHasProperty	src/sqlite/sqlite3.c	16056;"	d	file:
ExprList	src/sqlite/sqlite3.c	/^struct ExprList {$/;"	s	file:
ExprList	src/sqlite/sqlite3.c	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList	file:
ExprList_item	src/sqlite/sqlite3.c	/^  struct ExprList_item { \/* For each expression in the list *\/$/;"	s	struct:ExprList	file:
ExprSetProperty	src/sqlite/sqlite3.c	16058;"	d	file:
ExprSetVVAProperty	src/sqlite/sqlite3.c	16066;"	d	file:
ExprSetVVAProperty	src/sqlite/sqlite3.c	16068;"	d	file:
ExprSpan	src/sqlite/sqlite3.c	/^struct ExprSpan {$/;"	s	file:
ExprSpan	src/sqlite/sqlite3.c	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan	file:
ExpressionException	src/include/common/exception.h	/^  ExpressionException(std::string msg)$/;"	f	class:cmudb::ExpressionException
ExpressionException	src/include/common/exception.h	/^class ExpressionException : public Exception {$/;"	c	namespace:cmudb
ExtendibleHash	src/hash/extendible_hash.cpp	/^ExtendibleHash<K, V>::ExtendibleHash(size_t size) { $/;"	f	class:cmudb::ExtendibleHash
ExtendibleHash	src/include/hash/extendible_hash.h	/^class ExtendibleHash : public HashTable<K, V> {$/;"	c	namespace:cmudb
ExtractSummary	third_party/gmock/gmock-gtest-all.cc	/^std::string TestPartResult::ExtractSummary(const char* message) {$/;"	f	class:testing::TestPartResult
F	third_party/gmock/gmock/gmock.h	/^  typedef R F();$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8, A9);$/;"	t	class:testing::internal::FunctionMocker
F	third_party/gmock/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);$/;"	t	class:testing::internal::FunctionMocker
FAIL	third_party/gmock/gtest/gtest.h	19291;"	d
FClose	third_party/gmock/gtest/gtest.h	/^inline int FClose(FILE* fp) { return fclose(fp); }$/;"	f	namespace:std::tr1::posix
FDOpen	third_party/gmock/gtest/gtest.h	/^inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }$/;"	f	namespace:std::tr1::posix
FILEHANDLEID	src/sqlite/sqlite3.c	47470;"	d	file:
FILE_ATTRIBUTE_MASK	src/sqlite/sqlite3.c	38362;"	d	file:
FILE_FLAG_MASK	src/sqlite/sqlite3.c	38358;"	d	file:
FKey	src/sqlite/sqlite3.c	/^struct FKey {$/;"	s	file:
FKey	src/sqlite/sqlite3.c	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey	file:
FLAG_SIGNED	src/sqlite/sqlite3.c	25542;"	d	file:
FLAG_STRING	src/sqlite/sqlite3.c	25543;"	d	file:
FLT_LOWEST	src/include/type/limits.h	/^static const double FLT_LOWEST = std::numeric_limits<float>::lowest();$/;"	m	namespace:cmudb
FOREGUARD	src/sqlite/sqlite3.c	21431;"	d	file:
FOUR_BYTE_INT	src/sqlite/sqlite3.c	75204;"	d	file:
FOUR_BYTE_UINT	src/sqlite/sqlite3.c	75203;"	d	file:
FOpen	third_party/gmock/gtest/gtest.h	/^inline FILE* FOpen(const char* path, const char* mode) {$/;"	f	namespace:std::tr1::posix
FRIEND_TEST	third_party/gmock/gtest/gtest.h	17043;"	d
FReopen	third_party/gmock/gtest/gtest.h	/^inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {$/;"	f	namespace:std::tr1::posix
FTS3_AUX_SCHEMA	src/sqlite/sqlite3.c	152510;"	d	file:
FTS3_DOCID_SEARCH	src/sqlite/sqlite3.c	146521;"	d	file:
FTS3_EVAL_FILTER	src/sqlite/sqlite3.c	146501;"	d	file:
FTS3_EVAL_MATCHINFO	src/sqlite/sqlite3.c	146503;"	d	file:
FTS3_EVAL_NEXT	src/sqlite/sqlite3.c	146502;"	d	file:
FTS3_FULLSCAN_SEARCH	src/sqlite/sqlite3.c	146520;"	d	file:
FTS3_FULLTEXT_SEARCH	src/sqlite/sqlite3.c	146522;"	d	file:
FTS3_HASH_BINARY	src/sqlite/sqlite3.c	146178;"	d	file:
FTS3_HASH_STRING	src/sqlite/sqlite3.c	146177;"	d	file:
FTS3_HAVE_DOCID_GE	src/sqlite/sqlite3.c	146531;"	d	file:
FTS3_HAVE_DOCID_LE	src/sqlite/sqlite3.c	146532;"	d	file:
FTS3_HAVE_LANGID	src/sqlite/sqlite3.c	146530;"	d	file:
FTS3_MATCHINFO_AVGLENGTH	src/sqlite/sqlite3.c	162301;"	d	file:
FTS3_MATCHINFO_DEFAULT	src/sqlite/sqlite3.c	162311;"	d	file:
FTS3_MATCHINFO_HITS	src/sqlite/sqlite3.c	162304;"	d	file:
FTS3_MATCHINFO_LCS	src/sqlite/sqlite3.c	162303;"	d	file:
FTS3_MATCHINFO_LENGTH	src/sqlite/sqlite3.c	162302;"	d	file:
FTS3_MATCHINFO_LHITS	src/sqlite/sqlite3.c	162305;"	d	file:
FTS3_MATCHINFO_LHITS_BM	src/sqlite/sqlite3.c	162306;"	d	file:
FTS3_MATCHINFO_NCOL	src/sqlite/sqlite3.c	162299;"	d	file:
FTS3_MATCHINFO_NDOC	src/sqlite/sqlite3.c	162300;"	d	file:
FTS3_MATCHINFO_NPHRASE	src/sqlite/sqlite3.c	162298;"	d	file:
FTS3_MAX_PENDING_DATA	src/sqlite/sqlite3.c	146253;"	d	file:
FTS3_MERGE_COUNT	src/sqlite/sqlite3.c	146243;"	d	file:
FTS3_NODE_CHUNKSIZE	src/sqlite/sqlite3.c	156652;"	d	file:
FTS3_NODE_CHUNKSIZE	src/sqlite/sqlite3.c	156655;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	src/sqlite/sqlite3.c	156653;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	src/sqlite/sqlite3.c	156656;"	d	file:
FTS3_NODE_PADDING	src/sqlite/sqlite3.c	156630;"	d	file:
FTS3_SEGCURSOR_ALL	src/sqlite/sqlite3.c	146676;"	d	file:
FTS3_SEGCURSOR_PENDING	src/sqlite/sqlite3.c	146675;"	d	file:
FTS3_SEGDIR_MAXLEVEL	src/sqlite/sqlite3.c	146291;"	d	file:
FTS3_SEGDIR_MAXLEVEL_STR	src/sqlite/sqlite3.c	146292;"	d	file:
FTS3_SEGMENT_COLUMN_FILTER	src/sqlite/sqlite3.c	146688;"	d	file:
FTS3_SEGMENT_FIRST	src/sqlite/sqlite3.c	146691;"	d	file:
FTS3_SEGMENT_IGNORE_EMPTY	src/sqlite/sqlite3.c	146687;"	d	file:
FTS3_SEGMENT_PREFIX	src/sqlite/sqlite3.c	146689;"	d	file:
FTS3_SEGMENT_REQUIRE_POS	src/sqlite/sqlite3.c	146686;"	d	file:
FTS3_SEGMENT_SCAN	src/sqlite/sqlite3.c	146690;"	d	file:
FTS3_TOK_SCHEMA	src/sqlite/sqlite3.c	156279;"	d	file:
FTS3_VARINT_MAX	src/sqlite/sqlite3.c	146274;"	d	file:
FTS4AUX_EQ_CONSTRAINT	src/sqlite/sqlite3.c	152603;"	d	file:
FTS4AUX_GE_CONSTRAINT	src/sqlite/sqlite3.c	152604;"	d	file:
FTS4AUX_LE_CONSTRAINT	src/sqlite/sqlite3.c	152605;"	d	file:
FTS5CSR_EOF	src/sqlite/sqlite3.c	197379;"	d	file:
FTS5CSR_FREE_ZRANK	src/sqlite/sqlite3.c	197383;"	d	file:
FTS5CSR_REQUIRE_CONTENT	src/sqlite/sqlite3.c	197380;"	d	file:
FTS5CSR_REQUIRE_DOCSIZE	src/sqlite/sqlite3.c	197381;"	d	file:
FTS5CSR_REQUIRE_INST	src/sqlite/sqlite3.c	197382;"	d	file:
FTS5CSR_REQUIRE_POSLIST	src/sqlite/sqlite3.c	197385;"	d	file:
FTS5CSR_REQUIRE_RESEEK	src/sqlite/sqlite3.c	197384;"	d	file:
FTS5INDEX_QUERY_DESC	src/sqlite/sqlite3.c	183489;"	d	file:
FTS5INDEX_QUERY_NOOUTPUT	src/sqlite/sqlite3.c	183497;"	d	file:
FTS5INDEX_QUERY_PREFIX	src/sqlite/sqlite3.c	183488;"	d	file:
FTS5INDEX_QUERY_SCAN	src/sqlite/sqlite3.c	183491;"	d	file:
FTS5INDEX_QUERY_SKIPEMPTY	src/sqlite/sqlite3.c	183496;"	d	file:
FTS5INDEX_QUERY_TEST_NOIDX	src/sqlite/sqlite3.c	183490;"	d	file:
FTS5TOKEN	src/sqlite/sqlite3.c	185035;"	d	file:
FTS5_AND	src/sqlite/sqlite3.c	183934;"	d	file:
FTS5_AVERAGES_ROWID	src/sqlite/sqlite3.c	190874;"	d	file:
FTS5_BEGIN	src/sqlite/sqlite3.c	197406;"	d	file:
FTS5_BI_MATCH	src/sqlite/sqlite3.c	197366;"	d	file:
FTS5_BI_ORDER_DESC	src/sqlite/sqlite3.c	197374;"	d	file:
FTS5_BI_ORDER_RANK	src/sqlite/sqlite3.c	197372;"	d	file:
FTS5_BI_ORDER_ROWID	src/sqlite/sqlite3.c	197373;"	d	file:
FTS5_BI_RANK	src/sqlite/sqlite3.c	197367;"	d	file:
FTS5_BI_ROWID_EQ	src/sqlite/sqlite3.c	197368;"	d	file:
FTS5_BI_ROWID_GE	src/sqlite/sqlite3.c	197370;"	d	file:
FTS5_BI_ROWID_LE	src/sqlite/sqlite3.c	197369;"	d	file:
FTS5_COLON	src/sqlite/sqlite3.c	183937;"	d	file:
FTS5_COMMA	src/sqlite/sqlite3.c	183944;"	d	file:
FTS5_COMMIT	src/sqlite/sqlite3.c	197408;"	d	file:
FTS5_CONTENT_EXTERNAL	src/sqlite/sqlite3.c	183338;"	d	file:
FTS5_CONTENT_NONE	src/sqlite/sqlite3.c	183337;"	d	file:
FTS5_CONTENT_NORMAL	src/sqlite/sqlite3.c	183336;"	d	file:
FTS5_CORRUPT	src/sqlite/sqlite3.c	183211;"	d	file:
FTS5_CORRUPT	src/sqlite/sqlite3.c	183214;"	d	file:
FTS5_CURRENT_VERSION	src/sqlite/sqlite3.c	183334;"	d	file:
FTS5_DATA_DLI_B	src/sqlite/sqlite3.c	190889;"	d	file:
FTS5_DATA_HEIGHT_B	src/sqlite/sqlite3.c	190890;"	d	file:
FTS5_DATA_ID_B	src/sqlite/sqlite3.c	190888;"	d	file:
FTS5_DATA_PADDING	src/sqlite/sqlite3.c	190919;"	d	file:
FTS5_DATA_PAGE_B	src/sqlite/sqlite3.c	190891;"	d	file:
FTS5_DATA_ZERO_PADDING	src/sqlite/sqlite3.c	190918;"	d	file:
FTS5_DEFAULT_AUTOMERGE	src/sqlite/sqlite3.c	186364;"	d	file:
FTS5_DEFAULT_CRISISMERGE	src/sqlite/sqlite3.c	186366;"	d	file:
FTS5_DEFAULT_HASHSIZE	src/sqlite/sqlite3.c	186367;"	d	file:
FTS5_DEFAULT_NEARDIST	src/sqlite/sqlite3.c	183203;"	d	file:
FTS5_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	186363;"	d	file:
FTS5_DEFAULT_RANK	src/sqlite/sqlite3.c	183204;"	d	file:
FTS5_DEFAULT_USERMERGE	src/sqlite/sqlite3.c	186365;"	d	file:
FTS5_DETAIL_COLUMNS	src/sqlite/sqlite3.c	183342;"	d	file:
FTS5_DETAIL_FULL	src/sqlite/sqlite3.c	183340;"	d	file:
FTS5_DETAIL_NONE	src/sqlite/sqlite3.c	183341;"	d	file:
FTS5_DLIDX_ROWID	src/sqlite/sqlite3.c	190901;"	d	file:
FTS5_EOF	src/sqlite/sqlite3.c	187329;"	d	file:
FTS5_LARGEST_INT64	src/sqlite/sqlite3.c	187331;"	d	file:
FTS5_LCP	src/sqlite/sqlite3.c	183939;"	d	file:
FTS5_LOOKAHEAD_EOF	src/sqlite/sqlite3.c	187816;"	d	file:
FTS5_LP	src/sqlite/sqlite3.c	183942;"	d	file:
FTS5_MAIN_PREFIX	src/sqlite/sqlite3.c	190712;"	d	file:
FTS5_MAX_PAGE_SIZE	src/sqlite/sqlite3.c	186370;"	d	file:
FTS5_MAX_PREFIX_INDEXES	src/sqlite/sqlite3.c	183201;"	d	file:
FTS5_MAX_SEGMENT	src/sqlite/sqlite3.c	190906;"	d	file:
FTS5_MAX_TOKEN_SIZE	src/sqlite/sqlite3.c	183194;"	d	file:
FTS5_MINUS	src/sqlite/sqlite3.c	183938;"	d	file:
FTS5_MIN_DLIDX_SIZE	src/sqlite/sqlite3.c	190710;"	d	file:
FTS5_NOINLINE	src/sqlite/sqlite3.c	202920;"	d	file:
FTS5_NOINLINE	src/sqlite/sqlite3.c	202922;"	d	file:
FTS5_NOT	src/sqlite/sqlite3.c	183935;"	d	file:
FTS5_OPT_WORK_UNIT	src/sqlite/sqlite3.c	190707;"	d	file:
FTS5_OR	src/sqlite/sqlite3.c	183933;"	d	file:
FTS5_PLAN_MATCH	src/sqlite/sqlite3.c	197602;"	d	file:
FTS5_PLAN_ROWID	src/sqlite/sqlite3.c	197607;"	d	file:
FTS5_PLAN_SCAN	src/sqlite/sqlite3.c	197606;"	d	file:
FTS5_PLAN_SORTED_MATCH	src/sqlite/sqlite3.c	197605;"	d	file:
FTS5_PLAN_SOURCE	src/sqlite/sqlite3.c	197603;"	d	file:
FTS5_PLAN_SPECIAL	src/sqlite/sqlite3.c	197604;"	d	file:
FTS5_PLUS	src/sqlite/sqlite3.c	183945;"	d	file:
FTS5_PORTER_MAX_TOKEN	src/sqlite/sqlite3.c	201536;"	d	file:
FTS5_POS2COLUMN	src/sqlite/sqlite3.c	183415;"	d	file:
FTS5_POS2OFFSET	src/sqlite/sqlite3.c	183416;"	d	file:
FTS5_RANK_NAME	src/sqlite/sqlite3.c	183207;"	d	file:
FTS5_RCP	src/sqlite/sqlite3.c	183940;"	d	file:
FTS5_RELEASE	src/sqlite/sqlite3.c	197411;"	d	file:
FTS5_ROLLBACK	src/sqlite/sqlite3.c	197409;"	d	file:
FTS5_ROLLBACKTO	src/sqlite/sqlite3.c	197412;"	d	file:
FTS5_ROWID_NAME	src/sqlite/sqlite3.c	183208;"	d	file:
FTS5_RP	src/sqlite/sqlite3.c	183943;"	d	file:
FTS5_SAVEPOINT	src/sqlite/sqlite3.c	197410;"	d	file:
FTS5_SEGITER_ONETERM	src/sqlite/sqlite3.c	191135;"	d	file:
FTS5_SEGITER_REVERSE	src/sqlite/sqlite3.c	191136;"	d	file:
FTS5_SEGMENT_ROWID	src/sqlite/sqlite3.c	190900;"	d	file:
FTS5_STAR	src/sqlite/sqlite3.c	183946;"	d	file:
FTS5_STMT_DELETE_CONTENT	src/sqlite/sqlite3.c	199945;"	d	file:
FTS5_STMT_DELETE_DOCSIZE	src/sqlite/sqlite3.c	199947;"	d	file:
FTS5_STMT_INSERT_CONTENT	src/sqlite/sqlite3.c	199943;"	d	file:
FTS5_STMT_LOOKUP	src/sqlite/sqlite3.c	183736;"	d	file:
FTS5_STMT_LOOKUP_DOCSIZE	src/sqlite/sqlite3.c	199948;"	d	file:
FTS5_STMT_REPLACE_CONFIG	src/sqlite/sqlite3.c	199949;"	d	file:
FTS5_STMT_REPLACE_CONTENT	src/sqlite/sqlite3.c	199944;"	d	file:
FTS5_STMT_REPLACE_DOCSIZE	src/sqlite/sqlite3.c	199946;"	d	file:
FTS5_STMT_SCAN	src/sqlite/sqlite3.c	199950;"	d	file:
FTS5_STMT_SCAN_ASC	src/sqlite/sqlite3.c	183734;"	d	file:
FTS5_STMT_SCAN_DESC	src/sqlite/sqlite3.c	183735;"	d	file:
FTS5_STRING	src/sqlite/sqlite3.c	183941;"	d	file:
FTS5_STRUCTURE_ROWID	src/sqlite/sqlite3.c	190875;"	d	file:
FTS5_SYNC	src/sqlite/sqlite3.c	197407;"	d	file:
FTS5_TERM	src/sqlite/sqlite3.c	183936;"	d	file:
FTS5_TOKENIZE_AUX	src/include/sqlite/sqlite3.h	10554;"	d
FTS5_TOKENIZE_AUX	src/sqlite/sqlite3.c	11586;"	d	file:
FTS5_TOKENIZE_AUX	src/sqlite/sqlite3.c	183086;"	d	file:
FTS5_TOKENIZE_DOCUMENT	src/include/sqlite/sqlite3.h	10553;"	d
FTS5_TOKENIZE_DOCUMENT	src/sqlite/sqlite3.c	11585;"	d	file:
FTS5_TOKENIZE_DOCUMENT	src/sqlite/sqlite3.c	183085;"	d	file:
FTS5_TOKENIZE_PREFIX	src/include/sqlite/sqlite3.h	10552;"	d
FTS5_TOKENIZE_PREFIX	src/sqlite/sqlite3.c	11584;"	d	file:
FTS5_TOKENIZE_PREFIX	src/sqlite/sqlite3.c	183084;"	d	file:
FTS5_TOKENIZE_QUERY	src/include/sqlite/sqlite3.h	10551;"	d
FTS5_TOKENIZE_QUERY	src/sqlite/sqlite3.c	11583;"	d	file:
FTS5_TOKENIZE_QUERY	src/sqlite/sqlite3.c	183083;"	d	file:
FTS5_TOKEN_COLOCATED	src/include/sqlite/sqlite3.h	10558;"	d
FTS5_TOKEN_COLOCATED	src/sqlite/sqlite3.c	11590;"	d	file:
FTS5_TOKEN_COLOCATED	src/sqlite/sqlite3.c	183090;"	d	file:
FTS5_VOCAB_COL	src/sqlite/sqlite3.c	203057;"	d	file:
FTS5_VOCAB_COL_SCHEMA	src/sqlite/sqlite3.c	203060;"	d	file:
FTS5_VOCAB_ROW	src/sqlite/sqlite3.c	203058;"	d	file:
FTS5_VOCAB_ROW_SCHEMA	src/sqlite/sqlite3.c	203061;"	d	file:
FTS5_VOCAB_TERM_EQ	src/sqlite/sqlite3.c	203066;"	d	file:
FTS5_VOCAB_TERM_GE	src/sqlite/sqlite3.c	203067;"	d	file:
FTS5_VOCAB_TERM_LE	src/sqlite/sqlite3.c	203068;"	d	file:
FTS5_WORK_UNIT	src/sqlite/sqlite3.c	190708;"	d	file:
FTSQUERY_AND	src/sqlite/sqlite3.c	146636;"	d	file:
FTSQUERY_NEAR	src/sqlite/sqlite3.c	146634;"	d	file:
FTSQUERY_NOT	src/sqlite/sqlite3.c	146635;"	d	file:
FTSQUERY_OR	src/sqlite/sqlite3.c	146637;"	d	file:
FTSQUERY_PHRASE	src/sqlite/sqlite3.c	146638;"	d	file:
FTS_CORRUPT_VTAB	src/sqlite/sqlite3.c	146367;"	d	file:
FTS_CORRUPT_VTAB	src/sqlite/sqlite3.c	146369;"	d	file:
FTS_MAX_APPENDABLE_HEIGHT	src/sqlite/sqlite3.c	156618;"	d	file:
FTS_STAT_AUTOINCRMERGE	src/sqlite/sqlite3.c	156665;"	d	file:
FTS_STAT_DOCTOTAL	src/sqlite/sqlite3.c	156663;"	d	file:
FTS_STAT_INCRMERGEHINT	src/sqlite/sqlite3.c	156664;"	d	file:
FULLY_WITHIN	src/include/sqlite/sqlite3.h	8728;"	d
FULLY_WITHIN	src/sqlite/sqlite3.c	9760;"	d	file:
FUNCTION	src/sqlite/sqlite3.c	15296;"	d	file:
FUNCTION2	src/sqlite/sqlite3.c	15305;"	d	file:
FUNC_PERFECT_MATCH	src/sqlite/sqlite3.c	104904;"	d	file:
FailFromInternalError	third_party/gmock/gmock-gtest-all.cc	/^static void FailFromInternalError(int fd) {$/;"	f	namespace:testing::internal
Failed	third_party/gmock/gmock-gtest-all.cc	/^  bool Failed() const {$/;"	f	class:testing::internal::UnitTestImpl
Failed	third_party/gmock/gmock-gtest-all.cc	/^bool TestResult::Failed() const {$/;"	f	class:testing::TestResult
Failed	third_party/gmock/gmock-gtest-all.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;"	f	class:testing::UnitTest
Failed	third_party/gmock/gtest/gtest.h	/^  bool Failed() const { return failed_test_count() > 0; }$/;"	f	class:testing::TestCase
FetchPage	src/buffer/buffer_pool_manager.cpp	/^Page *BufferPoolManager::FetchPage(page_id_t page_id) { $/;"	f	class:cmudb::BufferPoolManager
Field	third_party/gmock/gmock/gmock.h	/^  internal::FieldMatcher<Class, FieldType> > Field($/;"	f	namespace:testing
FieldMatcher	third_party/gmock/gmock/gmock.h	/^  FieldMatcher(FieldType Class::*field,$/;"	f	class:testing::internal::FieldMatcher
FieldMatcher	third_party/gmock/gmock/gmock.h	/^class FieldMatcher {$/;"	c	namespace:testing::internal
FileChunk	src/sqlite/sqlite3.c	/^struct FileChunk {$/;"	s	file:
FileChunk	src/sqlite/sqlite3.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FileNo	third_party/gmock/gtest/gtest.h	/^inline int FileNo(FILE* file) { return _fileno(file); }$/;"	f	namespace:std::tr1::posix
FileNo	third_party/gmock/gtest/gtest.h	/^inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }$/;"	f	namespace:std::tr1::posix
FileOrDirectoryExists	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::FileOrDirectoryExists() const {$/;"	f	class:testing::internal::FilePath
FilePath	third_party/gmock/gtest/gtest.h	/^  FilePath() : pathname_("") { }$/;"	f	class:testing::internal::FilePath
FilePath	third_party/gmock/gtest/gtest.h	/^  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }$/;"	f	class:testing::internal::FilePath
FilePath	third_party/gmock/gtest/gtest.h	/^  explicit FilePath(const std::string& pathname) : pathname_(pathname) {$/;"	f	class:testing::internal::FilePath
FilePath	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ FilePath {$/;"	c	namespace:testing::internal
FilePoint	src/sqlite/sqlite3.c	/^struct FilePoint {$/;"	s	file:
FilePoint	src/sqlite/sqlite3.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FilterMatchesTest	third_party/gmock/gmock-gtest-all.cc	/^bool UnitTestOptions::FilterMatchesTest(const std::string &test_case_name,$/;"	f	class:testing::internal::UnitTestOptions
FilterTests	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {$/;"	f	class:testing::internal::UnitTestImpl
Find	src/hash/extendible_hash.cpp	/^bool ExtendibleHash<K, V>::Find(const K &key, V &value) {$/;"	f	class:cmudb::ExtendibleHash
FindLastPathSeparator	third_party/gmock/gmock-gtest-all.cc	/^const char* FilePath::FindLastPathSeparator() const {$/;"	f	class:testing::internal::FilePath
FindLeafPage	src/index/b_plus_tree.cpp	/^B_PLUS_TREE_LEAF_PAGE_TYPE *BPLUSTREE_TYPE::FindLeafPage(const KeyType &key,$/;"	f	class:cmudb::BPLUSTREE_TYPE
FindMaxBipartiteMatching	third_party/gmock/gmock-gtest-all.cc	/^FindMaxBipartiteMatching(const MatchMatrix& g) {$/;"	f	namespace:testing::internal
FindOnCallSpec	third_party/gmock/gmock/gmock.h	/^  const OnCallSpec<F>* FindOnCallSpec($/;"	f	class:testing::internal::FunctionMockerBase
FindPairing	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ bool FindPairing(const MatchMatrix& matrix,$/;"	f	namespace:testing::internal
FindRecord	src/page/header_page.cpp	/^int HeaderPage::FindRecord(const std::string &name) {$/;"	f	class:cmudb::HeaderPage
FirstType	third_party/gmock/gmock/gmock.h	/^  typedef typename RawPairType::first_type FirstType;$/;"	t	class:testing::internal::PairMatcherImpl
FlagToEnvVar	third_party/gmock/gmock-gtest-all.cc	/^static std::string FlagToEnvVar(const char* flag) {$/;"	f	namespace:testing::internal
Float	third_party/gmock/gtest/gtest.h	/^typedef FloatingPoint<float> Float;$/;"	t	namespace:testing::internal
FloatEq	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> FloatEq(float rhs) {$/;"	f	namespace:testing
FloatLE	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult FloatLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
FloatNear	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> FloatNear($/;"	f	namespace:testing
FloatingEqMatcher	third_party/gmock/gmock/gmock.h	/^  FloatingEqMatcher(FloatType rhs, bool nan_eq_nan) :$/;"	f	class:testing::internal::FloatingEqMatcher
FloatingEqMatcher	third_party/gmock/gmock/gmock.h	/^  FloatingEqMatcher(FloatType rhs, bool nan_eq_nan, FloatType max_abs_error) :$/;"	f	class:testing::internal::FloatingEqMatcher
FloatingEqMatcher	third_party/gmock/gmock/gmock.h	/^class FloatingEqMatcher {$/;"	c	namespace:testing::internal
FloatingPoint	third_party/gmock/gtest/gtest.h	/^  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }$/;"	f	class:testing::internal::FloatingPoint
FloatingPoint	third_party/gmock/gtest/gtest.h	/^class FloatingPoint {$/;"	c	namespace:testing::internal
FloatingPointLE	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult FloatingPointLE(const char* expr1,$/;"	f	namespace:testing::internal
FloatingPointUnion	third_party/gmock/gtest/gtest.h	/^  union FloatingPointUnion {$/;"	u	class:testing::internal::FloatingPoint
FlushAllPages	src/buffer/buffer_pool_manager.cpp	/^void BufferPoolManager::FlushAllPages() {$/;"	f	class:cmudb::BufferPoolManager
FlushInfoLog	third_party/gmock/gtest/gtest.h	/^inline void FlushInfoLog() { fflush(NULL); }$/;"	f	namespace:std::tr1
FlushPage	src/buffer/buffer_pool_manager.cpp	/^bool BufferPoolManager::FlushPage(page_id_t page_id) { $/;"	f	class:cmudb::BufferPoolManager
ForEach	third_party/gmock/gmock-gtest-all.cc	/^void ForEach(const Container& c, Functor functor) {$/;"	f	namespace:testing::internal
ForkingDeathTest	third_party/gmock/gmock-gtest-all.cc	/^ForkingDeathTest::ForkingDeathTest(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::ForkingDeathTest
ForkingDeathTest	third_party/gmock/gmock-gtest-all.cc	/^class ForkingDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
Format	third_party/gmock/gtest/gtest.h	/^  static ::std::string Format(const ToPrint& value) {$/;"	f	class:testing::internal::FormatForComparison
Format	third_party/gmock/gtest/gtest.h	/^  static ::std::string Format(const ToPrint* value) {$/;"	f	class:testing::internal::FormatForComparison
FormatBool	third_party/gmock/gmock-gtest-all.cc	/^  string FormatBool(bool value) { return value ? "1" : "0"; }$/;"	f	class:testing::internal::StreamingListener	file:
FormatByte	third_party/gmock/gmock-gtest-all.cc	/^std::string String::FormatByte(unsigned char value) {$/;"	f	class:testing::internal::String
FormatCompilerIndependentFileLocation	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ ::std::string FormatCompilerIndependentFileLocation($/;"	f	namespace:testing::internal
FormatCountableNoun	third_party/gmock/gmock-gtest-all.cc	/^static std::string FormatCountableNoun(int count,$/;"	f	namespace:testing
FormatCxxExceptionMessage	third_party/gmock/gmock-gtest-all.cc	/^static std::string FormatCxxExceptionMessage(const char* description,$/;"	f	namespace:testing::internal
FormatDeathTestOutput	third_party/gmock/gmock-gtest-all.cc	/^static ::std::string FormatDeathTestOutput(const ::std::string& output) {$/;"	f	namespace:testing::internal
FormatEpochTimeInMillisAsIso8601	third_party/gmock/gmock-gtest-all.cc	/^std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatFileLocation	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {$/;"	f	namespace:testing::internal
FormatForComparison	third_party/gmock/gtest/gtest.h	/^class FormatForComparison {$/;"	c	namespace:testing::internal
FormatForComparison	third_party/gmock/gtest/gtest.h	/^class FormatForComparison<ToPrint[N], OtherOperand> {$/;"	c	namespace:testing::internal
FormatForComparisonFailureMessage	third_party/gmock/gtest/gtest.h	/^std::string FormatForComparisonFailureMessage($/;"	f	namespace:testing::internal
FormatHexInt	third_party/gmock/gmock-gtest-all.cc	/^std::string String::FormatHexInt(int value) {$/;"	f	class:testing::internal::String
FormatIntWidth2	third_party/gmock/gmock-gtest-all.cc	/^std::string String::FormatIntWidth2(int value) {$/;"	f	class:testing::internal::String
FormatMatcherDescription	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ string FormatMatcherDescription(bool negation,$/;"	f	namespace:testing::internal
FormatRegexSyntaxError	third_party/gmock/gmock-gtest-all.cc	/^std::string FormatRegexSyntaxError(const char* regex, int index) {$/;"	f	namespace:testing::internal
FormatSehExceptionMessage	third_party/gmock/gmock-gtest-all.cc	/^static std::string* FormatSehExceptionMessage(DWORD exception_code,$/;"	f	namespace:testing
FormatTestCaseCount	third_party/gmock/gmock-gtest-all.cc	/^static std::string FormatTestCaseCount(int test_case_count) {$/;"	f	namespace:testing
FormatTestCount	third_party/gmock/gmock-gtest-all.cc	/^static std::string FormatTestCount(int test_count) {$/;"	f	namespace:testing
FormatTimeInMillisAsSeconds	third_party/gmock/gmock-gtest-all.cc	/^std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatTimes	third_party/gmock/gmock-gtest-all.cc	/^inline internal::string FormatTimes(int n) {$/;"	f	namespace:testing::__anon7
FormatWordList	third_party/gmock/gmock-gtest-all.cc	/^static std::string FormatWordList(const std::vector<std::string>& words) {$/;"	f	namespace:testing
Fts3Cursor	src/sqlite/sqlite3.c	/^struct Fts3Cursor {$/;"	s	file:
Fts3Cursor	src/sqlite/sqlite3.c	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor	file:
Fts3DeferredToken	src/sqlite/sqlite3.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3DeferredToken	src/sqlite/sqlite3.c	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken	file:
Fts3Doclist	src/sqlite/sqlite3.c	/^struct Fts3Doclist {$/;"	s	file:
Fts3Doclist	src/sqlite/sqlite3.c	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist	file:
Fts3Expr	src/sqlite/sqlite3.c	/^struct Fts3Expr {$/;"	s	file:
Fts3Expr	src/sqlite/sqlite3.c	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr	file:
Fts3Hash	src/sqlite/sqlite3.c	/^struct Fts3Hash {$/;"	s	file:
Fts3Hash	src/sqlite/sqlite3.c	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash	file:
Fts3HashElem	src/sqlite/sqlite3.c	/^struct Fts3HashElem {$/;"	s	file:
Fts3HashElem	src/sqlite/sqlite3.c	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem	file:
Fts3Index	src/sqlite/sqlite3.c	/^  struct Fts3Index {$/;"	s	struct:Fts3Table	file:
Fts3MultiSegReader	src/sqlite/sqlite3.c	/^struct Fts3MultiSegReader {$/;"	s	file:
Fts3MultiSegReader	src/sqlite/sqlite3.c	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader	file:
Fts3Phrase	src/sqlite/sqlite3.c	/^struct Fts3Phrase {$/;"	s	file:
Fts3Phrase	src/sqlite/sqlite3.c	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase	file:
Fts3PhraseToken	src/sqlite/sqlite3.c	/^struct Fts3PhraseToken {$/;"	s	file:
Fts3PhraseToken	src/sqlite/sqlite3.c	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken	file:
Fts3SegFilter	src/sqlite/sqlite3.c	/^struct Fts3SegFilter {$/;"	s	file:
Fts3SegFilter	src/sqlite/sqlite3.c	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter	file:
Fts3SegReader	src/sqlite/sqlite3.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3SegReader	src/sqlite/sqlite3.c	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader	file:
Fts3Table	src/sqlite/sqlite3.c	/^struct Fts3Table {$/;"	s	file:
Fts3Table	src/sqlite/sqlite3.c	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table	file:
Fts3TokenAndCost	src/sqlite/sqlite3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	src/sqlite/sqlite3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3auxColstats	src/sqlite/sqlite3.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxCursor	src/sqlite/sqlite3.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	src/sqlite/sqlite3.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxTable	src/sqlite/sqlite3.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	src/sqlite/sqlite3.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
Fts3tokCursor	src/sqlite/sqlite3.c	/^struct Fts3tokCursor {$/;"	s	file:
Fts3tokCursor	src/sqlite/sqlite3.c	/^typedef struct Fts3tokCursor Fts3tokCursor;$/;"	t	typeref:struct:Fts3tokCursor	file:
Fts3tokTable	src/sqlite/sqlite3.c	/^struct Fts3tokTable {$/;"	s	file:
Fts3tokTable	src/sqlite/sqlite3.c	/^typedef struct Fts3tokTable Fts3tokTable;$/;"	t	typeref:struct:Fts3tokTable	file:
Fts5Auxdata	src/sqlite/sqlite3.c	/^struct Fts5Auxdata {$/;"	s	file:
Fts5Auxdata	src/sqlite/sqlite3.c	/^typedef struct Fts5Auxdata Fts5Auxdata;$/;"	t	typeref:struct:Fts5Auxdata	file:
Fts5Auxiliary	src/sqlite/sqlite3.c	/^struct Fts5Auxiliary {$/;"	s	file:
Fts5Auxiliary	src/sqlite/sqlite3.c	/^typedef struct Fts5Auxiliary Fts5Auxiliary;$/;"	t	typeref:struct:Fts5Auxiliary	file:
Fts5Bm25Data	src/sqlite/sqlite3.c	/^struct Fts5Bm25Data {$/;"	s	file:
Fts5Bm25Data	src/sqlite/sqlite3.c	/^typedef struct Fts5Bm25Data Fts5Bm25Data;$/;"	t	typeref:struct:Fts5Bm25Data	file:
Fts5Buffer	src/sqlite/sqlite3.c	/^struct Fts5Buffer {$/;"	s	file:
Fts5Buffer	src/sqlite/sqlite3.c	/^typedef struct Fts5Buffer Fts5Buffer;$/;"	t	typeref:struct:Fts5Buffer	file:
Fts5CResult	src/sqlite/sqlite3.c	/^struct Fts5CResult {$/;"	s	file:
Fts5CResult	src/sqlite/sqlite3.c	/^typedef struct Fts5CResult Fts5CResult;$/;"	t	typeref:struct:Fts5CResult	file:
Fts5Colset	src/sqlite/sqlite3.c	/^struct Fts5Colset {$/;"	s	file:
Fts5Colset	src/sqlite/sqlite3.c	/^typedef struct Fts5Colset Fts5Colset;$/;"	t	typeref:struct:Fts5Colset	file:
Fts5Config	src/sqlite/sqlite3.c	/^struct Fts5Config {$/;"	s	file:
Fts5Config	src/sqlite/sqlite3.c	/^typedef struct Fts5Config Fts5Config;$/;"	t	typeref:struct:Fts5Config	file:
Fts5Context	src/include/sqlite/sqlite3.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Context	src/sqlite/sqlite3.c	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context	file:
Fts5Cursor	src/sqlite/sqlite3.c	/^struct Fts5Cursor {$/;"	s	file:
Fts5Cursor	src/sqlite/sqlite3.c	/^typedef struct Fts5Cursor Fts5Cursor;$/;"	t	typeref:struct:Fts5Cursor	file:
Fts5Data	src/sqlite/sqlite3.c	/^struct Fts5Data {$/;"	s	file:
Fts5Data	src/sqlite/sqlite3.c	/^typedef struct Fts5Data Fts5Data;$/;"	t	typeref:struct:Fts5Data	file:
Fts5DlidxIter	src/sqlite/sqlite3.c	/^struct Fts5DlidxIter {$/;"	s	file:
Fts5DlidxIter	src/sqlite/sqlite3.c	/^typedef struct Fts5DlidxIter Fts5DlidxIter;$/;"	t	typeref:struct:Fts5DlidxIter	file:
Fts5DlidxLvl	src/sqlite/sqlite3.c	/^struct Fts5DlidxLvl {$/;"	s	file:
Fts5DlidxLvl	src/sqlite/sqlite3.c	/^typedef struct Fts5DlidxLvl Fts5DlidxLvl;$/;"	t	typeref:struct:Fts5DlidxLvl	file:
Fts5DlidxWriter	src/sqlite/sqlite3.c	/^struct Fts5DlidxWriter {$/;"	s	file:
Fts5DlidxWriter	src/sqlite/sqlite3.c	/^typedef struct Fts5DlidxWriter Fts5DlidxWriter;$/;"	t	typeref:struct:Fts5DlidxWriter	file:
Fts5DoclistIter	src/sqlite/sqlite3.c	/^struct Fts5DoclistIter {$/;"	s	file:
Fts5DoclistIter	src/sqlite/sqlite3.c	/^typedef struct Fts5DoclistIter Fts5DoclistIter;$/;"	t	typeref:struct:Fts5DoclistIter	file:
Fts5Enum	src/sqlite/sqlite3.c	/^struct Fts5Enum {$/;"	s	file:
Fts5Enum	src/sqlite/sqlite3.c	/^typedef struct Fts5Enum Fts5Enum;$/;"	t	typeref:struct:Fts5Enum	file:
Fts5Expr	src/sqlite/sqlite3.c	/^struct Fts5Expr {$/;"	s	file:
Fts5Expr	src/sqlite/sqlite3.c	/^typedef struct Fts5Expr Fts5Expr;$/;"	t	typeref:struct:Fts5Expr	file:
Fts5ExprCtx	src/sqlite/sqlite3.c	/^struct Fts5ExprCtx {$/;"	s	file:
Fts5ExprCtx	src/sqlite/sqlite3.c	/^typedef struct Fts5ExprCtx Fts5ExprCtx;$/;"	t	typeref:struct:Fts5ExprCtx	file:
Fts5ExprNearset	src/sqlite/sqlite3.c	/^struct Fts5ExprNearset {$/;"	s	file:
Fts5ExprNearset	src/sqlite/sqlite3.c	/^typedef struct Fts5ExprNearset Fts5ExprNearset;$/;"	t	typeref:struct:Fts5ExprNearset	file:
Fts5ExprNode	src/sqlite/sqlite3.c	/^struct Fts5ExprNode {$/;"	s	file:
Fts5ExprNode	src/sqlite/sqlite3.c	/^typedef struct Fts5ExprNode Fts5ExprNode;$/;"	t	typeref:struct:Fts5ExprNode	file:
Fts5ExprPhrase	src/sqlite/sqlite3.c	/^struct Fts5ExprPhrase {$/;"	s	file:
Fts5ExprPhrase	src/sqlite/sqlite3.c	/^typedef struct Fts5ExprPhrase Fts5ExprPhrase;$/;"	t	typeref:struct:Fts5ExprPhrase	file:
Fts5ExprTerm	src/sqlite/sqlite3.c	/^struct Fts5ExprTerm {$/;"	s	file:
Fts5ExprTerm	src/sqlite/sqlite3.c	/^typedef struct Fts5ExprTerm Fts5ExprTerm;$/;"	t	typeref:struct:Fts5ExprTerm	file:
Fts5ExtensionApi	src/include/sqlite/sqlite3.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	src/include/sqlite/sqlite3.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5ExtensionApi	src/sqlite/sqlite3.c	/^struct Fts5ExtensionApi {$/;"	s	file:
Fts5ExtensionApi	src/sqlite/sqlite3.c	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi	file:
Fts5FlushCtx	src/sqlite/sqlite3.c	/^struct Fts5FlushCtx {$/;"	s	file:
Fts5FlushCtx	src/sqlite/sqlite3.c	/^typedef struct Fts5FlushCtx Fts5FlushCtx;$/;"	t	typeref:struct:Fts5FlushCtx	file:
Fts5Global	src/sqlite/sqlite3.c	/^struct Fts5Global {$/;"	s	file:
Fts5Global	src/sqlite/sqlite3.c	/^typedef struct Fts5Global Fts5Global;$/;"	t	typeref:struct:Fts5Global	file:
Fts5Hash	src/sqlite/sqlite3.c	/^struct Fts5Hash {$/;"	s	file:
Fts5Hash	src/sqlite/sqlite3.c	/^typedef struct Fts5Hash Fts5Hash;$/;"	t	typeref:struct:Fts5Hash	file:
Fts5HashEntry	src/sqlite/sqlite3.c	/^struct Fts5HashEntry {$/;"	s	file:
Fts5HashEntry	src/sqlite/sqlite3.c	/^typedef struct Fts5HashEntry Fts5HashEntry;$/;"	t	typeref:struct:Fts5HashEntry	file:
Fts5Index	src/sqlite/sqlite3.c	/^struct Fts5Index {$/;"	s	file:
Fts5Index	src/sqlite/sqlite3.c	/^typedef struct Fts5Index Fts5Index;$/;"	t	typeref:struct:Fts5Index	file:
Fts5IndexIter	src/sqlite/sqlite3.c	/^struct Fts5IndexIter {$/;"	s	file:
Fts5IndexIter	src/sqlite/sqlite3.c	/^typedef struct Fts5IndexIter Fts5IndexIter;$/;"	t	typeref:struct:Fts5IndexIter	file:
Fts5InsertCtx	src/sqlite/sqlite3.c	/^struct Fts5InsertCtx {$/;"	s	file:
Fts5InsertCtx	src/sqlite/sqlite3.c	/^typedef struct Fts5InsertCtx Fts5InsertCtx;$/;"	t	typeref:struct:Fts5InsertCtx	file:
Fts5IntegrityCtx	src/sqlite/sqlite3.c	/^struct Fts5IntegrityCtx {$/;"	s	file:
Fts5IntegrityCtx	src/sqlite/sqlite3.c	/^typedef struct Fts5IntegrityCtx Fts5IntegrityCtx;$/;"	t	typeref:struct:Fts5IntegrityCtx	file:
Fts5Iter	src/sqlite/sqlite3.c	/^struct Fts5Iter {$/;"	s	file:
Fts5Iter	src/sqlite/sqlite3.c	/^typedef struct Fts5Iter Fts5Iter;$/;"	t	typeref:struct:Fts5Iter	file:
Fts5LookaheadReader	src/sqlite/sqlite3.c	/^struct Fts5LookaheadReader {$/;"	s	file:
Fts5LookaheadReader	src/sqlite/sqlite3.c	/^typedef struct Fts5LookaheadReader Fts5LookaheadReader;$/;"	t	typeref:struct:Fts5LookaheadReader	file:
Fts5MatchPhrase	src/sqlite/sqlite3.c	/^struct Fts5MatchPhrase {$/;"	s	file:
Fts5NearTrimmer	src/sqlite/sqlite3.c	/^struct Fts5NearTrimmer {$/;"	s	file:
Fts5NearTrimmer	src/sqlite/sqlite3.c	/^typedef struct Fts5NearTrimmer Fts5NearTrimmer;$/;"	t	typeref:struct:Fts5NearTrimmer	file:
Fts5NodeIsString	src/sqlite/sqlite3.c	187383;"	d	file:
Fts5PageWriter	src/sqlite/sqlite3.c	/^struct Fts5PageWriter {$/;"	s	file:
Fts5PageWriter	src/sqlite/sqlite3.c	/^typedef struct Fts5PageWriter Fts5PageWriter;$/;"	t	typeref:struct:Fts5PageWriter	file:
Fts5Parse	src/sqlite/sqlite3.c	/^struct Fts5Parse {$/;"	s	file:
Fts5Parse	src/sqlite/sqlite3.c	/^typedef struct Fts5Parse Fts5Parse;$/;"	t	typeref:struct:Fts5Parse	file:
Fts5PhraseIter	src/include/sqlite/sqlite3.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	src/include/sqlite/sqlite3.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PhraseIter	src/sqlite/sqlite3.c	/^struct Fts5PhraseIter {$/;"	s	file:
Fts5PhraseIter	src/sqlite/sqlite3.c	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter	file:
Fts5PoslistPopulator	src/sqlite/sqlite3.c	/^struct Fts5PoslistPopulator {$/;"	s	file:
Fts5PoslistPopulator	src/sqlite/sqlite3.c	/^typedef struct Fts5PoslistPopulator Fts5PoslistPopulator;$/;"	t	typeref:struct:Fts5PoslistPopulator	file:
Fts5PoslistReader	src/sqlite/sqlite3.c	/^struct Fts5PoslistReader {$/;"	s	file:
Fts5PoslistReader	src/sqlite/sqlite3.c	/^typedef struct Fts5PoslistReader Fts5PoslistReader;$/;"	t	typeref:struct:Fts5PoslistReader	file:
Fts5PoslistWriter	src/sqlite/sqlite3.c	/^struct Fts5PoslistWriter {$/;"	s	file:
Fts5PoslistWriter	src/sqlite/sqlite3.c	/^typedef struct Fts5PoslistWriter Fts5PoslistWriter;$/;"	t	typeref:struct:Fts5PoslistWriter	file:
Fts5SFinder	src/sqlite/sqlite3.c	/^struct Fts5SFinder {$/;"	s	file:
Fts5SFinder	src/sqlite/sqlite3.c	/^typedef struct Fts5SFinder Fts5SFinder;$/;"	t	typeref:struct:Fts5SFinder	file:
Fts5SegIter	src/sqlite/sqlite3.c	/^struct Fts5SegIter {$/;"	s	file:
Fts5SegIter	src/sqlite/sqlite3.c	/^typedef struct Fts5SegIter Fts5SegIter;$/;"	t	typeref:struct:Fts5SegIter	file:
Fts5SegWriter	src/sqlite/sqlite3.c	/^struct Fts5SegWriter {$/;"	s	file:
Fts5SegWriter	src/sqlite/sqlite3.c	/^typedef struct Fts5SegWriter Fts5SegWriter;$/;"	t	typeref:struct:Fts5SegWriter	file:
Fts5Sorter	src/sqlite/sqlite3.c	/^struct Fts5Sorter {$/;"	s	file:
Fts5Sorter	src/sqlite/sqlite3.c	/^typedef struct Fts5Sorter Fts5Sorter;$/;"	t	typeref:struct:Fts5Sorter	file:
Fts5Storage	src/sqlite/sqlite3.c	/^struct Fts5Storage {$/;"	s	file:
Fts5Storage	src/sqlite/sqlite3.c	/^typedef struct Fts5Storage Fts5Storage;$/;"	t	typeref:struct:Fts5Storage	file:
Fts5Structure	src/sqlite/sqlite3.c	/^struct Fts5Structure {$/;"	s	file:
Fts5Structure	src/sqlite/sqlite3.c	/^typedef struct Fts5Structure Fts5Structure;$/;"	t	typeref:struct:Fts5Structure	file:
Fts5StructureLevel	src/sqlite/sqlite3.c	/^struct Fts5StructureLevel {$/;"	s	file:
Fts5StructureLevel	src/sqlite/sqlite3.c	/^typedef struct Fts5StructureLevel Fts5StructureLevel;$/;"	t	typeref:struct:Fts5StructureLevel	file:
Fts5StructureSegment	src/sqlite/sqlite3.c	/^struct Fts5StructureSegment {$/;"	s	file:
Fts5StructureSegment	src/sqlite/sqlite3.c	/^typedef struct Fts5StructureSegment Fts5StructureSegment;$/;"	t	typeref:struct:Fts5StructureSegment	file:
Fts5Table	src/sqlite/sqlite3.c	/^struct Fts5Table {$/;"	s	file:
Fts5Table	src/sqlite/sqlite3.c	/^typedef struct Fts5Table Fts5Table;$/;"	t	typeref:struct:Fts5Table	file:
Fts5Termset	src/sqlite/sqlite3.c	/^struct Fts5Termset {$/;"	s	file:
Fts5Termset	src/sqlite/sqlite3.c	/^typedef struct Fts5Termset Fts5Termset;$/;"	t	typeref:struct:Fts5Termset	file:
Fts5TermsetEntry	src/sqlite/sqlite3.c	/^struct Fts5TermsetEntry {$/;"	s	file:
Fts5TermsetEntry	src/sqlite/sqlite3.c	/^typedef struct Fts5TermsetEntry Fts5TermsetEntry;$/;"	t	typeref:struct:Fts5TermsetEntry	file:
Fts5Token	src/sqlite/sqlite3.c	/^struct Fts5Token {$/;"	s	file:
Fts5Token	src/sqlite/sqlite3.c	/^typedef struct Fts5Token Fts5Token;$/;"	t	typeref:struct:Fts5Token	file:
Fts5Tokenizer	src/include/sqlite/sqlite3.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5Tokenizer	src/sqlite/sqlite3.c	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer	file:
Fts5TokenizerModule	src/sqlite/sqlite3.c	/^struct Fts5TokenizerModule {$/;"	s	file:
Fts5TokenizerModule	src/sqlite/sqlite3.c	/^typedef struct Fts5TokenizerModule Fts5TokenizerModule;$/;"	t	typeref:struct:Fts5TokenizerModule	file:
Fts5TransactionState	src/sqlite/sqlite3.c	/^struct Fts5TransactionState {$/;"	s	file:
Fts5VocabCursor	src/sqlite/sqlite3.c	/^struct Fts5VocabCursor {$/;"	s	file:
Fts5VocabCursor	src/sqlite/sqlite3.c	/^typedef struct Fts5VocabCursor Fts5VocabCursor;$/;"	t	typeref:struct:Fts5VocabCursor	file:
Fts5VocabTable	src/sqlite/sqlite3.c	/^struct Fts5VocabTable {$/;"	s	file:
Fts5VocabTable	src/sqlite/sqlite3.c	/^typedef struct Fts5VocabTable Fts5VocabTable;$/;"	t	typeref:struct:Fts5VocabTable	file:
FullMatch	third_party/gmock/gmock-gtest-all.cc	/^bool RE::FullMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
FullMatch	third_party/gmock/gtest/gtest.h	/^  static bool FullMatch(const ::std::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
FullMatch	third_party/gmock/gtest/gtest.h	/^  static bool FullMatch(const ::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
FuncDef	src/sqlite/sqlite3.c	/^struct FuncDef {$/;"	s	file:
FuncDef	src/sqlite/sqlite3.c	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef	file:
FuncDefHash	src/sqlite/sqlite3.c	/^struct FuncDefHash {$/;"	s	file:
FuncDefHash	src/sqlite/sqlite3.c	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash	file:
FuncDestructor	src/sqlite/sqlite3.c	/^struct FuncDestructor {$/;"	s	file:
FuncDestructor	src/sqlite/sqlite3.c	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor	file:
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R()> {$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8, A9)>$/;"	s	namespace:testing::internal
Function	third_party/gmock/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)>$/;"	s	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R()> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8, A9)> : public$/;"	c	namespace:testing::internal
FunctionMocker	third_party/gmock/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)> : public$/;"	c	namespace:testing::internal
FunctionMockerBase	third_party/gmock/gmock/gmock.h	/^  FunctionMockerBase() : current_spec_(this) {}$/;"	f	class:testing::internal::FunctionMockerBase
FunctionMockerBase	third_party/gmock/gmock/gmock.h	/^class FunctionMockerBase : public UntypedFunctionMockerBase {$/;"	c	namespace:testing::internal
FunctionMockers	third_party/gmock/gmock-gtest-all.cc	/^typedef std::set<internal::UntypedFunctionMockerBase*> FunctionMockers;$/;"	t	namespace:testing::__anon8	file:
GCC_VERSION	src/sqlite/sqlite3.c	165125;"	d	file:
GCC_VERSION	src/sqlite/sqlite3.c	165127;"	d	file:
GCC_VERSION	src/sqlite/sqlite3.c	976;"	d	file:
GCC_VERSION	src/sqlite/sqlite3.c	978;"	d	file:
GETPROCTIMES	src/sqlite/shell.c	/^typedef BOOL (WINAPI *GETPROCTIMES)(HANDLE, LPFILETIME, LPFILETIME,$/;"	t	file:
GETVARINT_INIT	src/sqlite/sqlite3.c	146852;"	d	file:
GETVARINT_STEP	src/sqlite/sqlite3.c	146849;"	d	file:
GLOBAL	src/sqlite/sqlite3.c	12966;"	d	file:
GLOBAL	src/sqlite/sqlite3.c	12972;"	d	file:
GLOBAL_DEPTH	src/include/hash/extendible_hash.h	20;"	d
GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_	third_party/gmock/gmock/gmock.h	3145;"	d
GMOCK_ACTION_CLASS_	third_party/gmock/gmock/gmock.h	3505;"	d
GMOCK_ARG_	third_party/gmock/gmock/gmock.h	10646;"	d
GMOCK_DECLARE_KIND_	third_party/gmock/gmock/gmock.h	590;"	d
GMOCK_DECLARE_KIND_	third_party/gmock/gmock/gmock.h	619;"	d
GMOCK_DECLARE_bool_	third_party/gmock/gmock/gmock.h	252;"	d
GMOCK_DECLARE_int32_	third_party/gmock/gmock/gmock.h	253;"	d
GMOCK_DECLARE_string_	third_party/gmock/gmock/gmock.h	255;"	d
GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_	third_party/gmock/gmock/gmock.h	1009;"	d
GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_	third_party/gmock/gmock/gmock.h	1048;"	d
GMOCK_DEFINE_bool_	third_party/gmock/gmock/gmock.h	259;"	d
GMOCK_DEFINE_int32_	third_party/gmock/gmock/gmock.h	261;"	d
GMOCK_DEFINE_string_	third_party/gmock/gmock/gmock.h	263;"	d
GMOCK_EXPECT_CALL_IMPL_	third_party/gmock/gmock/gmock.h	10347;"	d
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k10));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k2));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k2), GMOCK_FIELD_(ArgumentTuple, k3));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k2), GMOCK_FIELD_(ArgumentTuple, k3),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k4));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k4), GMOCK_FIELD_(ArgumentTuple, k5));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k4), GMOCK_FIELD_(ArgumentTuple, k5),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k6));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k6), GMOCK_FIELD_(ArgumentTuple, k7));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k6), GMOCK_FIELD_(ArgumentTuple, k7),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k8));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k8), GMOCK_FIELD_(ArgumentTuple, k9));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k8), GMOCK_FIELD_(ArgumentTuple, k9),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	2514;"	d
GMOCK_FIELD_	third_party/gmock/gmock/gmock.h	2708;"	d
GMOCK_FIELD_TYPE_	third_party/gmock/gmock/gmock.h	11743;"	d
GMOCK_FIELD_TYPE_	third_party/gmock/gmock/gmock.h	11908;"	d
GMOCK_FLAG	third_party/gmock/gmock/gmock.h	249;"	d
GMOCK_GMOCK_MORE_MATCHERS_H_	third_party/gmock/gmock/gmock.h	14154;"	d
GMOCK_HAS_SIGNED_WCHAR_T_	third_party/gmock/gmock/gmock.h	572;"	d
GMOCK_IMPLEMENT_COMPARISON2_MATCHER_	third_party/gmock/gmock/gmock.h	5973;"	d
GMOCK_IMPLEMENT_COMPARISON2_MATCHER_	third_party/gmock/gmock/gmock.h	6014;"	d
GMOCK_IMPLEMENT_COMPARISON_MATCHER_	third_party/gmock/gmock/gmock.h	5528;"	d
GMOCK_IMPLEMENT_COMPARISON_MATCHER_	third_party/gmock/gmock/gmock.h	5571;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_	third_party/gmock/gmock/gmock.h	94;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_	third_party/gmock/gmock/gmock.h	2022;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_	third_party/gmock/gmock/gmock.h	2167;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_	third_party/gmock/gmock/gmock.h	4582;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_	third_party/gmock/gmock/gmock.h	11732;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_	third_party/gmock/gmock/gmock.h	11370;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_H_	third_party/gmock/gmock/gmock.h	37;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_	third_party/gmock/gmock/gmock.h	4694;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_	third_party/gmock/gmock/gmock.h	13919;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_	third_party/gmock/gmock/gmock.h	4644;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_	third_party/gmock/gmock/gmock.h	188;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_	third_party/gmock/gmock/gmock.h	141;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_	third_party/gmock/gmock/gmock.h	226;"	d
GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3489;"	d
GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3501;"	d
GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3490;"	d
GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3491;"	d
GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3492;"	d
GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3493;"	d
GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3494;"	d
GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3495;"	d
GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3496;"	d
GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3497;"	d
GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3499;"	d
GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3461;"	d
GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3483;"	d
GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3462;"	d
GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3463;"	d
GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3465;"	d
GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3467;"	d
GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3469;"	d
GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3471;"	d
GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3474;"	d
GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3477;"	d
GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3480;"	d
GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3267;"	d
GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3240;"	d
GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3241;"	d
GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3243;"	d
GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3245;"	d
GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3248;"	d
GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3251;"	d
GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3254;"	d
GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3258;"	d
GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3262;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3303;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3330;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3304;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3305;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3307;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3309;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3312;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3315;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3318;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3322;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3326;"	d
GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3388;"	d
GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3410;"	d
GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3389;"	d
GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3390;"	d
GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3392;"	d
GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3394;"	d
GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3396;"	d
GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3398;"	d
GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3401;"	d
GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3404;"	d
GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3407;"	d
GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3337;"	d
GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3378;"	d
GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3339;"	d
GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3341;"	d
GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3343;"	d
GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3346;"	d
GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3350;"	d
GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3354;"	d
GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3359;"	d
GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3364;"	d
GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3370;"	d
GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3416;"	d
GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3431;"	d
GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3417;"	d
GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3418;"	d
GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3419;"	d
GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3420;"	d
GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3421;"	d
GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3423;"	d
GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3425;"	d
GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3427;"	d
GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3429;"	d
GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3297;"	d
GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3274;"	d
GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3275;"	d
GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3277;"	d
GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3279;"	d
GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3281;"	d
GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3284;"	d
GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3287;"	d
GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3290;"	d
GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS	third_party/gmock/gmock/gmock.h	3293;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3435;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3456;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3436;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3437;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3439;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3441;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3443;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3445;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3447;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3450;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS	third_party/gmock/gmock/gmock.h	3453;"	d
GMOCK_IS_SIGNED_	third_party/gmock/gmock/gmock.h	627;"	d
GMOCK_IS_SIGNED_	third_party/gmock/gmock/gmock.h	674;"	d
GMOCK_KIND_OF_	third_party/gmock/gmock/gmock.h	622;"	d
GMOCK_MATCHER_	third_party/gmock/gmock/gmock.h	10651;"	d
GMOCK_METHOD0_	third_party/gmock/gmock/gmock.h	10660;"	d
GMOCK_METHOD10_	third_party/gmock/gmock/gmock.h	10938;"	d
GMOCK_METHOD1_	third_party/gmock/gmock/gmock.h	10679;"	d
GMOCK_METHOD2_	third_party/gmock/gmock/gmock.h	10698;"	d
GMOCK_METHOD3_	third_party/gmock/gmock/gmock.h	10719;"	d
GMOCK_METHOD4_	third_party/gmock/gmock/gmock.h	10744;"	d
GMOCK_METHOD5_	third_party/gmock/gmock/gmock.h	10771;"	d
GMOCK_METHOD6_	third_party/gmock/gmock/gmock.h	10800;"	d
GMOCK_METHOD7_	third_party/gmock/gmock/gmock.h	10831;"	d
GMOCK_METHOD8_	third_party/gmock/gmock/gmock.h	10864;"	d
GMOCK_METHOD9_	third_party/gmock/gmock/gmock.h	10899;"	d
GMOCK_MOCKER_	third_party/gmock/gmock/gmock.h	10656;"	d
GMOCK_ON_CALL_IMPL_	third_party/gmock/gmock/gmock.h	10342;"	d
GMOCK_RESULT_	third_party/gmock/gmock/gmock.h	10641;"	d
GMOCK_WCHAR_T_IS_NATIVE_	third_party/gmock/gmock/gmock.h	558;"	d
GROWING	src/include/concurrency/transaction.h	/^enum class TransactionState { GROWING, SHRINKING, COMMITTED, ABORTED };$/;"	m	class:cmudb::TransactionState
GTEST_0_TUPLE_	third_party/gmock/gtest/gtest.h	1625;"	d
GTEST_0_TUPLE_	third_party/gmock/gtest/gtest.h	699;"	d
GTEST_0_TYPENAMES_	third_party/gmock/gtest/gtest.h	1637;"	d
GTEST_0_TYPENAMES_	third_party/gmock/gtest/gtest.h	722;"	d
GTEST_10_TUPLE_	third_party/gmock/gtest/gtest.h	1635;"	d
GTEST_10_TUPLE_	third_party/gmock/gtest/gtest.h	718;"	d
GTEST_10_TYPENAMES_	third_party/gmock/gtest/gtest.h	1647;"	d
GTEST_10_TYPENAMES_	third_party/gmock/gtest/gtest.h	739;"	d
GTEST_1_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_1_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_1_TUPLE_	third_party/gmock/gtest/gtest.h	1626;"	d
GTEST_1_TUPLE_	third_party/gmock/gtest/gtest.h	700;"	d
GTEST_1_TYPENAMES_	third_party/gmock/gtest/gtest.h	1638;"	d
GTEST_1_TYPENAMES_	third_party/gmock/gtest/gtest.h	723;"	d
GTEST_2_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_2_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_2_TUPLE_	third_party/gmock/gtest/gtest.h	1627;"	d
GTEST_2_TUPLE_	third_party/gmock/gtest/gtest.h	702;"	d
GTEST_2_TYPENAMES_	third_party/gmock/gtest/gtest.h	1639;"	d
GTEST_2_TYPENAMES_	third_party/gmock/gtest/gtest.h	724;"	d
GTEST_3_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_3_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_3_TUPLE_	third_party/gmock/gtest/gtest.h	1628;"	d
GTEST_3_TUPLE_	third_party/gmock/gtest/gtest.h	704;"	d
GTEST_3_TYPENAMES_	third_party/gmock/gtest/gtest.h	1640;"	d
GTEST_3_TYPENAMES_	third_party/gmock/gtest/gtest.h	725;"	d
GTEST_4_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_4_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_4_TUPLE_	third_party/gmock/gtest/gtest.h	1629;"	d
GTEST_4_TUPLE_	third_party/gmock/gtest/gtest.h	706;"	d
GTEST_4_TYPENAMES_	third_party/gmock/gtest/gtest.h	1641;"	d
GTEST_4_TYPENAMES_	third_party/gmock/gtest/gtest.h	726;"	d
GTEST_5_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_5_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_5_TUPLE_	third_party/gmock/gtest/gtest.h	1630;"	d
GTEST_5_TUPLE_	third_party/gmock/gtest/gtest.h	708;"	d
GTEST_5_TYPENAMES_	third_party/gmock/gtest/gtest.h	1642;"	d
GTEST_5_TYPENAMES_	third_party/gmock/gtest/gtest.h	728;"	d
GTEST_6_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_6_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_6_TUPLE_	third_party/gmock/gtest/gtest.h	1631;"	d
GTEST_6_TUPLE_	third_party/gmock/gtest/gtest.h	710;"	d
GTEST_6_TYPENAMES_	third_party/gmock/gtest/gtest.h	1643;"	d
GTEST_6_TYPENAMES_	third_party/gmock/gtest/gtest.h	730;"	d
GTEST_7_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_7_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_7_TUPLE_	third_party/gmock/gtest/gtest.h	1632;"	d
GTEST_7_TUPLE_	third_party/gmock/gtest/gtest.h	712;"	d
GTEST_7_TYPENAMES_	third_party/gmock/gtest/gtest.h	1644;"	d
GTEST_7_TYPENAMES_	third_party/gmock/gtest/gtest.h	732;"	d
GTEST_8_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_8_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_8_TUPLE_	third_party/gmock/gtest/gtest.h	1633;"	d
GTEST_8_TUPLE_	third_party/gmock/gtest/gtest.h	714;"	d
GTEST_8_TYPENAMES_	third_party/gmock/gtest/gtest.h	1645;"	d
GTEST_8_TYPENAMES_	third_party/gmock/gtest/gtest.h	734;"	d
GTEST_9_TUPLE_	third_party/gmock/gtest/gtest.h	/^class GTEST_9_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_9_TUPLE_	third_party/gmock/gtest/gtest.h	1634;"	d
GTEST_9_TUPLE_	third_party/gmock/gtest/gtest.h	716;"	d
GTEST_9_TYPENAMES_	third_party/gmock/gtest/gtest.h	1646;"	d
GTEST_9_TYPENAMES_	third_party/gmock/gtest/gtest.h	736;"	d
GTEST_ADD_REFERENCE_	third_party/gmock/gtest/gtest.h	7721;"	d
GTEST_ADD_REF_	third_party/gmock/gtest/gtest.h	1651;"	d
GTEST_ADD_REF_	third_party/gmock/gtest/gtest.h	776;"	d
GTEST_AMBIGUOUS_ELSE_BLOCKER_	third_party/gmock/gtest/gtest.h	1805;"	d
GTEST_API_	third_party/gmock/gtest/gtest.h	1868;"	d
GTEST_API_	third_party/gmock/gtest/gtest.h	1876;"	d
GTEST_ASSERT_	third_party/gmock/gtest/gtest.h	19417;"	d
GTEST_ASSERT_EQ	third_party/gmock/gtest/gtest.h	19763;"	d
GTEST_ASSERT_GE	third_party/gmock/gtest/gtest.h	19773;"	d
GTEST_ASSERT_GT	third_party/gmock/gtest/gtest.h	19775;"	d
GTEST_ASSERT_LE	third_party/gmock/gtest/gtest.h	19769;"	d
GTEST_ASSERT_LT	third_party/gmock/gtest/gtest.h	19771;"	d
GTEST_ASSERT_NE	third_party/gmock/gtest/gtest.h	19767;"	d
GTEST_ATTRIBUTE_UNUSED_	third_party/gmock/gmock-gtest-all.cc	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	m	namespace:testing::internal	typeref:class:testing::internal::GTestFlagSaver	file:
GTEST_ATTRIBUTE_UNUSED_	third_party/gmock/gmock/gmock.h	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	m	namespace:testing	typeref:class:testing::InSequence
GTEST_ATTRIBUTE_UNUSED_	third_party/gmock/gtest/gtest.h	/^  } GTEST_ATTRIBUTE_UNUSED_;$/;"	m	class:testing::internal::DeathTest	typeref:class:testing::internal::DeathTest::ReturnSentinel
GTEST_ATTRIBUTE_UNUSED_	third_party/gmock/gtest/gtest.h	/^} GTEST_ATTRIBUTE_UNUSED_;  \/\/ A ScopedTrace object does its job in its$/;"	m	namespace:testing::internal	typeref:class:testing::internal::ScopedTrace
GTEST_ATTRIBUTE_UNUSED_	third_party/gmock/gtest/gtest.h	1822;"	d
GTEST_BIND_	third_party/gmock/gtest/gtest.h	5333;"	d
GTEST_BY_REF_	third_party/gmock/gtest/gtest.h	1650;"	d
GTEST_BY_REF_	third_party/gmock/gtest/gtest.h	766;"	d
GTEST_CAN_COMPARE_NULL	third_party/gmock/gtest/gtest.h	2707;"	d
GTEST_CAN_STREAM_RESULTS_	third_party/gmock/gtest/gtest.h	1791;"	d
GTEST_CASE_NAMESPACE_	third_party/gmock/gtest/gtest.h	17420;"	d
GTEST_CHECK_	third_party/gmock/gtest/gtest.h	2168;"	d
GTEST_CHECK_POSIX_SUCCESS_	third_party/gmock/gtest/gtest.h	2180;"	d
GTEST_COMPILE_ASSERT_	third_party/gmock/gtest/gtest.h	1923;"	d
GTEST_CONCAT_TOKEN_	third_party/gmock/gtest/gtest.h	7034;"	d
GTEST_CONCAT_TOKEN_IMPL_	third_party/gmock/gtest/gtest.h	7035;"	d
GTEST_DEATH_TEST_	third_party/gmock/gtest/gtest.h	8343;"	d
GTEST_DEATH_TEST_CHECK_	third_party/gmock/gmock-gtest-all.cc	6766;"	d	file:
GTEST_DEATH_TEST_CHECK_SYSCALL_	third_party/gmock/gmock-gtest-all.cc	6783;"	d	file:
GTEST_DECLARE_STATIC_MUTEX_	third_party/gmock/gtest/gtest.h	2488;"	d
GTEST_DECLARE_STATIC_MUTEX_	third_party/gmock/gtest/gtest.h	2661;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	third_party/gmock/gtest/gtest.h	1649;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	third_party/gmock/gtest/gtest.h	691;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	third_party/gmock/gtest/gtest.h	693;"	d
GTEST_DECLARE_bool_	third_party/gmock/gtest/gtest.h	3020;"	d
GTEST_DECLARE_int32_	third_party/gmock/gtest/gtest.h	3021;"	d
GTEST_DECLARE_string_	third_party/gmock/gtest/gtest.h	3023;"	d
GTEST_DEFINE_STATIC_MUTEX_	third_party/gmock/gtest/gtest.h	2497;"	d
GTEST_DEFINE_STATIC_MUTEX_	third_party/gmock/gtest/gtest.h	2664;"	d
GTEST_DEFINE_bool_	third_party/gmock/gtest/gtest.h	3027;"	d
GTEST_DEFINE_int32_	third_party/gmock/gtest/gtest.h	3029;"	d
GTEST_DEFINE_string_	third_party/gmock/gtest/gtest.h	3031;"	d
GTEST_DEV_EMAIL_	third_party/gmock/gtest/gtest.h	312;"	d
GTEST_DISALLOW_ASSIGN_	third_party/gmock/gtest/gtest.h	1829;"	d
GTEST_DISALLOW_COPY_AND_ASSIGN_	third_party/gmock/gtest/gtest.h	1834;"	d
GTEST_ELLIPSIS_NEEDS_POD_	third_party/gmock/gtest/gtest.h	2705;"	d
GTEST_ENV_HAS_STD_TUPLE_	third_party/gmock/gtest/gtest.h	626;"	d
GTEST_ENV_HAS_TR1_TUPLE_	third_party/gmock/gtest/gtest.h	619;"	d
GTEST_ERROR	third_party/gmock/gtest/gtest.h	/^  GTEST_ERROR,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	namespace:testing::internal
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_EXCLUSIVE_LOCK_REQUIRED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock/gmock.h	/^          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock/gmock.h	/^          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::TypedExpectation
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::ExpectationBase
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::TypedExpectation
GTEST_EXCLUSIVE_LOCK_REQUIRED_	third_party/gmock/gtest/gtest.h	3035;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	third_party/gmock/gtest/gtest.h	8319;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	third_party/gmock/gtest/gtest.h	8336;"	d
GTEST_EXECUTE_STATEMENT_	third_party/gmock/gtest/gtest.h	8382;"	d
GTEST_FAIL	third_party/gmock/gtest/gtest.h	19286;"	d
GTEST_FATAL	third_party/gmock/gtest/gtest.h	/^  GTEST_FATAL$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_FATAL_FAILURE_	third_party/gmock/gtest/gtest.h	7992;"	d
GTEST_FLAG	third_party/gmock/gtest/gtest.h	3017;"	d
GTEST_FLAG_PREFIX_	third_party/gmock/gtest/gtest.h	313;"	d
GTEST_FLAG_PREFIX_DASH_	third_party/gmock/gtest/gtest.h	314;"	d
GTEST_FLAG_PREFIX_UPPER_	third_party/gmock/gtest/gtest.h	315;"	d
GTEST_GCC_VER_	third_party/gmock/gtest/gtest.h	322;"	d
GTEST_HAS_ALT_PATH_SEP_	third_party/gmock/gtest/gtest.h	2751;"	d
GTEST_HAS_ALT_PATH_SEP_	third_party/gmock/gtest/gtest.h	2756;"	d
GTEST_HAS_CLONE	third_party/gmock/gtest/gtest.h	1724;"	d
GTEST_HAS_COMBINE	third_party/gmock/gtest/gtest.h	1782;"	d
GTEST_HAS_CXXABI_H_	third_party/gmock/gtest/gtest.h	1888;"	d
GTEST_HAS_DEATH_TEST	third_party/gmock/gtest/gtest.h	1758;"	d
GTEST_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	445;"	d
GTEST_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	448;"	d
GTEST_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	453;"	d
GTEST_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	456;"	d
GTEST_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	460;"	d
GTEST_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	464;"	d
GTEST_HAS_GETTIMEOFDAY_	third_party/gmock/gmock-gtest-all.cc	327;"	d	file:
GTEST_HAS_GLOBAL_STRING	third_party/gmock/gtest/gtest.h	481;"	d
GTEST_HAS_GLOBAL_WSTRING	third_party/gmock/gtest/gtest.h	502;"	d
GTEST_HAS_PARAM_TEST	third_party/gmock/gtest/gtest.h	1765;"	d
GTEST_HAS_POSIX_RE	third_party/gmock/gtest/gtest.h	405;"	d
GTEST_HAS_POSIX_RE	third_party/gmock/gtest/gtest.h	407;"	d
GTEST_HAS_PTHREAD	third_party/gmock/gtest/gtest.h	576;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	514;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	516;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	529;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	531;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	534;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	542;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	549;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	551;"	d
GTEST_HAS_RTTI	third_party/gmock/gtest/gtest.h	557;"	d
GTEST_HAS_SEH	third_party/gmock/gtest/gtest.h	1857;"	d
GTEST_HAS_STD_STRING	third_party/gmock/gtest/gtest.h	471;"	d
GTEST_HAS_STD_WSTRING	third_party/gmock/gtest/gtest.h	494;"	d
GTEST_HAS_STREAM_REDIRECTION	third_party/gmock/gtest/gtest.h	1743;"	d
GTEST_HAS_TR1_TUPLE	third_party/gmock/gtest/gtest.h	595;"	d
GTEST_HAS_TR1_TUPLE	third_party/gmock/gtest/gtest.h	598;"	d
GTEST_HAS_TYPED_TEST	third_party/gmock/gtest/gtest.h	1773;"	d
GTEST_HAS_TYPED_TEST_P	third_party/gmock/gtest/gtest.h	1774;"	d
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	1620;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	404;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	6569;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	6570;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	8280;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	8281;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	9416;"	d	file:
GTEST_IMPLEMENTATION_	third_party/gmock/gmock-gtest-all.cc	9417;"	d	file:
GTEST_IMPL_CMP_HELPER_	third_party/gmock/gmock-gtest-all.cc	2616;"	d	file:
GTEST_IMPL_CMP_HELPER_	third_party/gmock/gmock-gtest-all.cc	2645;"	d	file:
GTEST_IMPL_CMP_HELPER_	third_party/gmock/gtest/gtest.h	18972;"	d
GTEST_IMPL_CMP_HELPER_	third_party/gmock/gtest/gtest.h	19001;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	third_party/gmock/gtest/gtest.h	18788;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	third_party/gmock/gtest/gtest.h	18802;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	third_party/gmock/gtest/gtest.h	18807;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	third_party/gmock/gtest/gtest.h	18834;"	d
GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_	third_party/gmock/gtest/gtest.h	8158;"	d
GTEST_INCLUDE_GTEST_GTEST_H_	third_party/gmock/gtest/gtest.h	52;"	d
GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_	third_party/gmock/gtest/gtest.h	3121;"	d
GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_	third_party/gmock/gtest/gtest.h	8772;"	d
GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_	third_party/gmock/gtest/gtest.h	19378;"	d
GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_	third_party/gmock/gtest/gtest.h	9290;"	d
GTEST_INCLUDE_GTEST_GTEST_PROD_H_	third_party/gmock/gtest/gtest.h	17023;"	d
GTEST_INCLUDE_GTEST_GTEST_SPI_H_	third_party/gmock/gmock-gtest-all.cc	110;"	d	file:
GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_	third_party/gmock/gtest/gtest.h	17080;"	d
GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_	third_party/gmock/gtest/gtest.h	17256;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_	third_party/gmock/gtest/gtest.h	8197;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_	third_party/gmock/gtest/gtest.h	3530;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_	third_party/gmock/gtest/gtest.h	96;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_	third_party/gmock/gtest/gtest.h	9031;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_	third_party/gmock/gtest/gtest.h	10666;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_	third_party/gmock/gtest/gtest.h	8954;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_	third_party/gmock/gtest/gtest.h	138;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_	third_party/gmock/gtest/gtest.h	3365;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_	third_party/gmock/gtest/gtest.h	681;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_	third_party/gmock/gtest/gtest.h	3739;"	d
GTEST_INFO	third_party/gmock/gtest/gtest.h	/^  GTEST_INFO,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_IS_NULL_LITERAL_	third_party/gmock/gtest/gtest.h	7091;"	d
GTEST_IS_NULL_LITERAL_	third_party/gmock/gtest/gtest.h	7093;"	d
GTEST_IS_THREADSAFE	third_party/gmock/gtest/gtest.h	2644;"	d
GTEST_IS_THREADSAFE	third_party/gmock/gtest/gtest.h	2688;"	d
GTEST_LANG_CXX11	third_party/gmock/gtest/gtest.h	376;"	d
GTEST_LANG_CXX11	third_party/gmock/gtest/gtest.h	378;"	d
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^        GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^        GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	namespace:testing::internal
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing::__anon8
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing::internal
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock-gtest-all.cc	/^    const std::string& os_stack_trace) GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock/gmock.h	/^          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_LOCK_EXCLUDED_	third_party/gmock/gmock/gmock.h	/^        GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_LOCK_EXCLUDED_	third_party/gmock/gtest/gtest.h	/^      GTEST_LOCK_EXCLUDED_(g_linked_ptr_mutex) {$/;"	f	class:testing::internal::linked_ptr_internal
GTEST_LOCK_EXCLUDED_	third_party/gmock/gtest/gtest.h	3036;"	d
GTEST_LOG_	third_party/gmock/gtest/gtest.h	2147;"	d
GTEST_MESSAGE_	third_party/gmock/gtest/gtest.h	7989;"	d
GTEST_MESSAGE_AT_	third_party/gmock/gtest/gtest.h	7985;"	d
GTEST_MUST_USE_RESULT_	third_party/gmock/gtest/gtest.h	/^  int Run() GTEST_MUST_USE_RESULT_;$/;"	m	class:testing::UnitTest
GTEST_MUST_USE_RESULT_	third_party/gmock/gtest/gtest.h	1844;"	d
GTEST_NAME_	third_party/gmock/gtest/gtest.h	316;"	d
GTEST_NEEDS_IS_POINTER_	third_party/gmock/gtest/gtest.h	2715;"	d
GTEST_NONFATAL_FAILURE_	third_party/gmock/gtest/gtest.h	7995;"	d
GTEST_NO_INLINE_	third_party/gmock/gmock-gtest-all.cc	/^  std::string CurrentOsStackTraceExceptTop(int skip_count) GTEST_NO_INLINE_;$/;"	m	class:testing::internal::UnitTestImpl	file:
GTEST_NO_INLINE_	third_party/gmock/gmock-gtest-all.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) GTEST_NO_INLINE_;$/;"	m	namespace:testing::internal	file:
GTEST_NO_INLINE_	third_party/gmock/gtest/gtest.h	1881;"	d
GTEST_OS_AIX	third_party/gmock/gtest/gtest.h	358;"	d
GTEST_OS_CYGWIN	third_party/gmock/gtest/gtest.h	328;"	d
GTEST_OS_HPUX	third_party/gmock/gtest/gtest.h	360;"	d
GTEST_OS_IOS	third_party/gmock/gtest/gtest.h	343;"	d
GTEST_OS_IOS_SIMULATOR	third_party/gmock/gtest/gtest.h	345;"	d
GTEST_OS_LINUX	third_party/gmock/gtest/gtest.h	349;"	d
GTEST_OS_LINUX_ANDROID	third_party/gmock/gtest/gtest.h	351;"	d
GTEST_OS_MAC	third_party/gmock/gtest/gtest.h	341;"	d
GTEST_OS_NACL	third_party/gmock/gtest/gtest.h	362;"	d
GTEST_OS_OPENBSD	third_party/gmock/gtest/gtest.h	364;"	d
GTEST_OS_QNX	third_party/gmock/gtest/gtest.h	366;"	d
GTEST_OS_SOLARIS	third_party/gmock/gtest/gtest.h	356;"	d
GTEST_OS_SYMBIAN	third_party/gmock/gtest/gtest.h	330;"	d
GTEST_OS_WINDOWS	third_party/gmock/gtest/gtest.h	332;"	d
GTEST_OS_WINDOWS_DESKTOP	third_party/gmock/gtest/gtest.h	338;"	d
GTEST_OS_WINDOWS_MINGW	third_party/gmock/gtest/gtest.h	336;"	d
GTEST_OS_WINDOWS_MOBILE	third_party/gmock/gtest/gtest.h	334;"	d
GTEST_OS_ZOS	third_party/gmock/gtest/gtest.h	354;"	d
GTEST_PATH_MAX_	third_party/gmock/gmock-gtest-all.cc	7887;"	d	file:
GTEST_PATH_SEP_	third_party/gmock/gtest/gtest.h	2750;"	d
GTEST_PATH_SEP_	third_party/gmock/gtest/gtest.h	2755;"	d
GTEST_PRED1_	third_party/gmock/gtest/gtest.h	19448;"	d
GTEST_PRED2_	third_party/gmock/gtest/gtest.h	19494;"	d
GTEST_PRED3_	third_party/gmock/gtest/gtest.h	19547;"	d
GTEST_PRED4_	third_party/gmock/gtest/gtest.h	19607;"	d
GTEST_PRED5_	third_party/gmock/gtest/gtest.h	19674;"	d
GTEST_PRED_FORMAT1_	third_party/gmock/gtest/gtest.h	19442;"	d
GTEST_PRED_FORMAT2_	third_party/gmock/gtest/gtest.h	19488;"	d
GTEST_PRED_FORMAT3_	third_party/gmock/gtest/gtest.h	19541;"	d
GTEST_PRED_FORMAT4_	third_party/gmock/gtest/gtest.h	19601;"	d
GTEST_PRED_FORMAT5_	third_party/gmock/gtest/gtest.h	19668;"	d
GTEST_PROJECT_URL_	third_party/gmock/gtest/gtest.h	317;"	d
GTEST_REFERENCE_TO_CONST_	third_party/gmock/gtest/gtest.h	7733;"	d
GTEST_REGISTERED_TEST_NAMES_	third_party/gmock/gtest/gtest.h	17434;"	d
GTEST_REMOVE_CONST_	third_party/gmock/gtest/gtest.h	7704;"	d
GTEST_REMOVE_REFERENCE_	third_party/gmock/gtest/gtest.h	7673;"	d
GTEST_REMOVE_REFERENCE_AND_CONST_	third_party/gmock/gtest/gtest.h	7708;"	d
GTEST_REPEATER_METHOD_	third_party/gmock/gmock-gtest-all.cc	4441;"	d	file:
GTEST_REPEATER_METHOD_	third_party/gmock/gmock-gtest-all.cc	4472;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	third_party/gmock/gmock-gtest-all.cc	4451;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	third_party/gmock/gmock-gtest-all.cc	4473;"	d	file:
GTEST_SNPRINTF_	third_party/gmock/gtest/gtest.h	2936;"	d
GTEST_SRC_GTEST_INTERNAL_INL_H_	third_party/gmock/gmock-gtest-all.cc	442;"	d	file:
GTEST_SUCCEED	third_party/gmock/gtest/gtest.h	19295;"	d
GTEST_SUCCESS_	third_party/gmock/gtest/gtest.h	7998;"	d
GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_	third_party/gmock/gtest/gtest.h	8004;"	d
GTEST_TEMPLATE_	third_party/gmock/gtest/gtest.h	5315;"	d
GTEST_TEST	third_party/gmock/gtest/gtest.h	20006;"	d
GTEST_TEST_	third_party/gmock/gtest/gtest.h	8097;"	d
GTEST_TEST_ANY_THROW_	third_party/gmock/gtest/gtest.h	8047;"	d
GTEST_TEST_BOOLEAN_	third_party/gmock/gtest/gtest.h	8069;"	d
GTEST_TEST_CLASS_NAME_	third_party/gmock/gtest/gtest.h	8093;"	d
GTEST_TEST_NO_FATAL_FAILURE_	third_party/gmock/gtest/gtest.h	8078;"	d
GTEST_TEST_NO_THROW_	third_party/gmock/gtest/gtest.h	8033;"	d
GTEST_TEST_THROW_	third_party/gmock/gtest/gtest.h	8007;"	d
GTEST_TUPLE_ELEMENT_	third_party/gmock/gtest/gtest.h	1435;"	d
GTEST_TUPLE_ELEMENT_	third_party/gmock/gtest/gtest.h	1652;"	d
GTEST_TYPED_TEST_CASE_P_STATE_	third_party/gmock/gtest/gtest.h	17427;"	d
GTEST_TYPE_PARAMS_	third_party/gmock/gtest/gtest.h	17381;"	d
GTEST_UNSUPPORTED_DEATH_TEST_	third_party/gmock/gtest/gtest.h	8459;"	d
GTEST_USES_POSIX_RE	third_party/gmock/gtest/gtest.h	419;"	d
GTEST_USES_SIMPLE_RE	third_party/gmock/gtest/gtest.h	425;"	d
GTEST_USES_SIMPLE_RE	third_party/gmock/gtest/gtest.h	431;"	d
GTEST_USE_OWN_TR1_TUPLE	third_party/gmock/gtest/gtest.h	630;"	d
GTEST_USE_OWN_TR1_TUPLE	third_party/gmock/gtest/gtest.h	632;"	d
GTEST_WARNING	third_party/gmock/gtest/gtest.h	/^  GTEST_WARNING,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_WIDE_STRING_USES_UTF16_	third_party/gmock/gtest/gtest.h	1786;"	d
GTestColor	third_party/gmock/gmock-gtest-all.cc	/^enum GTestColor {$/;"	g	namespace:testing::internal	file:
GTestFlagSaver	third_party/gmock/gmock-gtest-all.cc	/^  GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
GTestFlagSaver	third_party/gmock/gmock-gtest-all.cc	/^class GTestFlagSaver {$/;"	c	namespace:testing::internal	file:
GTestIsInitialized	third_party/gmock/gmock-gtest-all.cc	/^static bool GTestIsInitialized() { return g_init_gtest_count != 0; }$/;"	f	namespace:testing::internal
GTestLog	third_party/gmock/gmock-gtest-all.cc	/^GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)$/;"	f	class:testing::internal::GTestLog
GTestLog	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ GTestLog {$/;"	c	namespace:std::tr1
GTestLogSeverity	third_party/gmock/gtest/gtest.h	/^enum GTestLogSeverity {$/;"	g	namespace:std::tr1
GTestMutexLock	third_party/gmock/gtest/gtest.h	/^  explicit GTestMutexLock(Mutex*) {}  \/\/ NOLINT$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	third_party/gmock/gtest/gtest.h	/^  explicit GTestMutexLock(MutexBase* mutex)$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	third_party/gmock/gtest/gtest.h	/^class GTestMutexLock {$/;"	c	namespace:std::tr1
GTestShouldProcessSEH	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;"	f	class:testing::internal::UnitTestOptions
Ge	third_party/gmock/gmock/gmock.h	/^inline internal::Ge2Matcher Ge() { return internal::Ge2Matcher(); }$/;"	f	namespace:testing
Ge	third_party/gmock/gmock/gmock.h	/^inline internal::GeMatcher<Rhs> Ge(Rhs x) {$/;"	f	namespace:testing
Generate	third_party/gmock/gmock-gtest-all.cc	/^UInt32 Random::Generate(UInt32 range) {$/;"	f	class:testing::internal::Random
GenerateUniqueFileName	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
GeneratorCreationFunc	third_party/gmock/gtest/gtest.h	/^  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
GenericComparator	src/include/index/generic_key.h	/^  GenericComparator(Schema *key_schema) : key_schema_(key_schema) {}$/;"	f	class:cmudb::GenericComparator
GenericComparator	src/include/index/generic_key.h	/^  GenericComparator(const GenericComparator &other) {$/;"	f	class:cmudb::GenericComparator
GenericComparator	src/include/index/generic_key.h	/^template <size_t KeySize> class GenericComparator {$/;"	c	namespace:cmudb
GenericKey	src/include/index/generic_key.h	/^template <size_t KeySize> class GenericKey {$/;"	c	namespace:cmudb
Get	src/include/common/rid.h	/^  inline int64_t Get() const { return ((int64_t)page_id_) << 32 | slot_num_; }$/;"	f	class:cmudb::RID
Get	third_party/gmock/gmock-gtest-all.cc	/^  HANDLE Get() const { return handle_; }$/;"	f	class:testing::internal::AutoHandle
Get	third_party/gmock/gmock/gmock.h	/^  static T Get() { return BuiltInDefaultValue<T>::Get(); }$/;"	f	class:testing::internal::BuiltInDefaultValue
Get	third_party/gmock/gmock/gmock.h	/^  static T Get() {$/;"	f	class:testing::DefaultValue
Get	third_party/gmock/gmock/gmock.h	/^  static T Get() {$/;"	f	class:testing::internal::BuiltInDefaultValue
Get	third_party/gmock/gmock/gmock.h	/^  static T& Get() {$/;"	f	class:testing::DefaultValue
Get	third_party/gmock/gmock/gmock.h	/^  static T* Get() { return NULL; }$/;"	f	class:testing::internal::BuiltInDefaultValue
Get	third_party/gmock/gmock/gmock.h	/^  static void Get() {}$/;"	f	class:testing::DefaultValue
GetAbsolutePathToOutputFile	third_party/gmock/gmock-gtest-all.cc	/^std::string UnitTestOptions::GetAbsolutePathToOutputFile() {$/;"	f	class:testing::internal::UnitTestOptions
GetAction	third_party/gmock/gmock/gmock.h	/^  const Action<F>& GetAction() const {$/;"	f	class:testing::internal::OnCallSpec
GetAnsiColorCode	third_party/gmock/gmock-gtest-all.cc	/^const char* GetAnsiColorCode(GTestColor color) {$/;"	f	namespace:testing::internal
GetAppropriateLength	src/include/catalog/schema.h	/^  inline int32_t GetAppropriateLength(const int column_id) const {$/;"	f	class:cmudb::Schema
GetArgvsForDeathTestChildProcess	third_party/gmock/gmock-gtest-all.cc	/^  GetArgvsForDeathTestChildProcess() {$/;"	f	class:testing::internal::ExecDeathTest	file:
GetAs	src/include/type/value.h	/^  template <class T> inline T GetAs() const {$/;"	f	class:cmudb::Value
GetBoolAssertionFailureMessage	third_party/gmock/gmock-gtest-all.cc	/^std::string GetBoolAssertionFailureMessage($/;"	f	namespace:testing::internal
GetBucketID	src/hash/extendible_hash.cpp	/^size_t ExtendibleHash<K,V>::GetBucketID(const K &key){$/;"	f	class:cmudb::ExtendibleHash
GetCapturedStderr	third_party/gmock/gmock-gtest-all.cc	/^std::string GetCapturedStderr() {$/;"	f	namespace:testing::internal
GetCapturedStdout	third_party/gmock/gmock-gtest-all.cc	/^std::string GetCapturedStdout() {$/;"	f	namespace:testing::internal
GetCapturedStream	third_party/gmock/gmock-gtest-all.cc	/^std::string GetCapturedStream(CapturedStream** captured_stream) {$/;"	f	namespace:testing::internal
GetCapturedString	third_party/gmock/gmock-gtest-all.cc	/^  std::string GetCapturedString() {$/;"	f	class:testing::internal::CapturedStream
GetCmpBool	src/include/type/value.h	/^inline CmpBool GetCmpBool(bool boolean) {$/;"	f	namespace:cmudb
GetColorAttribute	third_party/gmock/gmock-gtest-all.cc	/^WORD GetColorAttribute(GTestColor color) {$/;"	f	namespace:testing::internal
GetColumn	src/include/catalog/schema.h	/^  inline const Column GetColumn(const int column_id) const {$/;"	f	class:cmudb::Schema
GetColumnCount	src/include/catalog/schema.h	/^  inline int GetColumnCount() const { return static_cast<int>(columns.size()); }$/;"	f	class:cmudb::Schema
GetColumnID	src/include/catalog/schema.h	/^  inline int GetColumnID(std::string col_name) const {$/;"	f	class:cmudb::Schema
GetColumns	src/include/catalog/schema.h	/^  inline const std::vector<Column> &GetColumns() const { return columns; }$/;"	f	class:cmudb::Schema
GetCurrentDir	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::GetCurrentDir() {$/;"	f	class:testing::internal::FilePath
GetCurrentExecutableName	third_party/gmock/gmock-gtest-all.cc	/^FilePath GetCurrentExecutableName() {$/;"	f	namespace:testing::internal
GetCurrentOsStackTraceExceptTop	third_party/gmock/gmock-gtest-all.cc	/^std::string GetCurrentOsStackTraceExceptTop(UnitTest* \/*unit_test*\/,$/;"	f	namespace:testing::internal
GetCurrentRid	src/include/vtable/virtual_table.h	/^  inline int64_t GetCurrentRid() {$/;"	f	class:cmudb::Cursor
GetCurrentValue	src/include/vtable/virtual_table.h	/^  inline Value GetCurrentValue(Schema *schema, int column) {$/;"	f	class:cmudb::Cursor
GetData	src/include/page/page.h	/^  inline char *GetData() { return data_; }$/;"	f	class:cmudb::Page
GetData	src/include/table/tuple.h	/^  inline char *GetData() const { return data_; }$/;"	f	class:cmudb::Tuple
GetData	src/include/type/value.h	/^  inline const char *GetData() const {$/;"	f	class:cmudb::Value
GetData	src/type/type.cpp	/^char *Type::GetData(char *storage __attribute__((unused))) {$/;"	f	class:cmudb::Type
GetData	src/type/type.cpp	/^const char *Type::GetData(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
GetData	src/type/varlen_type.cpp	/^const char *VarlenType::GetData(const Value &val) const {$/;"	f	class:cmudb::VarlenType
GetDataPtr	src/table/tuple.cpp	/^const char *Tuple::GetDataPtr(Schema *schema, const int column_id) const {$/;"	f	class:cmudb::Tuple
GetDefaultFilter	third_party/gmock/gmock-gtest-all.cc	/^static const char* GetDefaultFilter() {$/;"	f	namespace:testing
GetDeletedPageSet	src/include/concurrency/transaction.h	/^  inline std::shared_ptr<std::unordered_set<page_id_t>> GetDeletedPageSet() {$/;"	f	class:cmudb::Transaction
GetDescriber	third_party/gmock/gmock/gmock.h	/^  const MatcherDescriberInterface* GetDescriber() const {$/;"	f	class:testing::internal::MatcherBase
GetElementOr	third_party/gmock/gmock-gtest-all.cc	/^inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {$/;"	f	namespace:testing::internal
GetEnv	third_party/gmock/gtest/gtest.h	/^inline const char* GetEnv(const char* name) {$/;"	f	namespace:std::tr1::posix
GetEnviron	third_party/gmock/gmock-gtest-all.cc	/^inline char** GetEnviron() { return environ; }$/;"	f	namespace:testing::internal
GetEnviron	third_party/gmock/gmock-gtest-all.cc	/^inline char** GetEnviron() {$/;"	f	namespace:testing::internal
GetExclusiveLockSet	src/include/concurrency/transaction.h	/^  inline std::shared_ptr<std::unordered_set<RID>> GetExclusiveLockSet() {$/;"	f	class:cmudb::Transaction
GetFailureReporter	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ FailureReporterInterface* GetFailureReporter() {$/;"	f	namespace:testing::internal
GetFileSize	src/disk/disk_manager.cpp	/^int DiskManager::GetFileSize() {$/;"	f	class:cmudb::DiskManager
GetFileSize	third_party/gmock/gmock-gtest-all.cc	/^size_t CapturedStream::GetFileSize(FILE* file) {$/;"	f	class:testing::internal::CapturedStream
GetFirstPageId	src/include/table/table_heap.h	/^  inline page_id_t GetFirstPageId() const { return first_page_id_; }$/;"	f	class:cmudb::TableHeap
GetFirstPageId	src/include/vtable/virtual_table.h	/^  inline page_id_t GetFirstPageId() { return table_heap_->GetFirstPageId(); }$/;"	f	class:cmudb::VirtualTable
GetFirstTupleRid	src/page/table_page.cpp	/^bool TablePage::GetFirstTupleRid(RID &first_rid) {$/;"	f	class:cmudb::TablePage
GetFixedLength	src/include/catalog/column.h	/^  int32_t GetFixedLength() const { return fixed_length; }$/;"	f	class:cmudb::Column
GetFreeSpacePointer	src/page/table_page.cpp	/^int32_t TablePage::GetFreeSpacePointer() {$/;"	f	class:cmudb::TablePage
GetFreeSpaceSize	src/page/table_page.cpp	/^int32_t TablePage::GetFreeSpaceSize() {$/;"	f	class:cmudb::TablePage
GetGlobalDepth	src/hash/extendible_hash.cpp	/^int ExtendibleHash<K, V>::GetGlobalDepth() const {$/;"	f	class:cmudb::ExtendibleHash
GetGlobalTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^UnitTestImpl::GetGlobalTestPartResultReporter() {$/;"	f	class:testing::internal::UnitTestImpl
GetHandle	third_party/gmock/gmock/gmock.h	/^  virtual Expectation GetHandle() {$/;"	f	class:testing::internal::TypedExpectation
GetHandleOf	third_party/gmock/gmock-gtest-all.cc	/^Expectation UntypedFunctionMockerBase::GetHandleOf(ExpectationBase* exp) {$/;"	f	class:testing::internal::UntypedFunctionMockerBase
GetHeaderSize	src/page/b_plus_tree_page.cpp	/^int BPlusTreePage::GetHeaderSize() const$/;"	f	class:cmudb::BPlusTreePage
GetIndex	src/include/vtable/virtual_table.h	/^  inline Index *GetIndex() { return index_; }$/;"	f	class:cmudb::VirtualTable
GetIndexColumnCount	src/include/index/index.h	/^  int GetIndexColumnCount() const { return (int)key_attrs_.size(); }$/;"	f	class:cmudb::IndexMetadata
GetIndexColumnCount	src/include/index/index.h	/^  int GetIndexColumnCount() const { return metadata_->GetIndexColumnCount(); }$/;"	f	class:cmudb::Index
GetInfo	test/type/type_test.cpp	/^  void GetInfo(KeyType key, ValueType val) {$/;"	f	class:cmudb::BPlusTreePage
GetInjectableArgvs	third_party/gmock/gmock-gtest-all.cc	/^const ::std::vector<testing::internal::string>& GetInjectableArgvs() {$/;"	f	namespace:testing::internal
GetInstance	src/include/type/type.h	/^  inline static Type *GetInstance(TypeId type_id) { return kTypes[type_id]; }$/;"	f	class:cmudb::Type
GetInstance	third_party/gmock/gmock-gtest-all.cc	/^UnitTest* UnitTest::GetInstance() {$/;"	f	class:testing::UnitTest
GetItem	src/page/b_plus_tree_leaf_page.cpp	/^const MappingType &B_PLUS_TREE_LEAF_PAGE_TYPE::GetItem(int index) $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
GetKeyAttrs	src/include/index/index.h	/^  const std::vector<int> &GetKeyAttrs() const {$/;"	f	class:cmudb::Index
GetKeyAttrs	src/include/index/index.h	/^  inline const std::vector<int> &GetKeyAttrs() const { return key_attrs_; }$/;"	f	class:cmudb::IndexMetadata
GetKeySchema	src/include/index/index.h	/^  Schema *GetKeySchema() const { return metadata_->GetKeySchema(); }$/;"	f	class:cmudb::Index
GetKeySchema	src/include/index/index.h	/^  inline Schema *GetKeySchema() const { return key_schema_; }$/;"	f	class:cmudb::IndexMetadata
GetKeySchema	src/include/vtable/virtual_table.h	/^  inline Schema *GetKeySchema() {$/;"	f	class:cmudb::Cursor
GetKeyValue	src/hash/extendible_hash.cpp	/^bool ExtendibleHash<K, V>::GetKeyValue(const uint64_t bkt_id, $/;"	f	class:cmudb::ExtendibleHash
GetLastErrnoDescription	third_party/gmock/gmock-gtest-all.cc	/^std::string GetLastErrnoDescription() {$/;"	f	namespace:testing::internal
GetLength	src/include/catalog/column.h	/^  int32_t GetLength() const {$/;"	f	class:cmudb::Column
GetLength	src/include/catalog/schema.h	/^  inline int32_t GetLength() const { return length; }$/;"	f	class:cmudb::Schema
GetLength	src/include/catalog/schema.h	/^  inline int32_t GetLength(const int column_id) const {$/;"	f	class:cmudb::Schema
GetLength	src/include/table/tuple.h	/^  inline int32_t GetLength() const { return size_; }$/;"	f	class:cmudb::Tuple
GetLength	src/include/type/value.h	/^  inline uint32_t GetLength() const {$/;"	f	class:cmudb::Value
GetLength	src/type/type.cpp	/^uint32_t Type::GetLength(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
GetLength	src/type/varlen_type.cpp	/^uint32_t VarlenType::GetLength(const Value &val) const { return val.size_.len; }$/;"	f	class:cmudb::VarlenType
GetLocalDepth	src/hash/extendible_hash.cpp	/^int ExtendibleHash<K, V>::GetLocalDepth(int bucket_id) const {$/;"	f	class:cmudb::ExtendibleHash
GetMaxSize	src/page/b_plus_tree_page.cpp	/^int BPlusTreePage::GetMaxSize() const $/;"	f	class:cmudb::BPlusTreePage
GetMaxValue	src/type/type.cpp	/^Value Type::GetMaxValue(TypeId type_id) {$/;"	f	class:cmudb::Type
GetMetadata	src/include/index/index.h	/^  IndexMetadata *GetMetadata() const { return metadata_; }$/;"	f	class:cmudb::Index
GetMinSize	src/page/b_plus_tree_page.cpp	/^int BPlusTreePage::GetMinSize() const $/;"	f	class:cmudb::BPlusTreePage
GetMinValue	src/type/type.cpp	/^Value Type::GetMinValue(TypeId type_id) {$/;"	f	class:cmudb::Type
GetMutableTestCase	third_party/gmock/gmock-gtest-all.cc	/^  TestCase* GetMutableTestCase(int i) {$/;"	f	class:testing::internal::UnitTestImpl
GetMutableTestCase	third_party/gmock/gmock-gtest-all.cc	/^TestCase* UnitTest::GetMutableTestCase(int i) {$/;"	f	class:testing::UnitTest
GetMutableTestInfo	third_party/gmock/gmock-gtest-all.cc	/^TestInfo* TestCase::GetMutableTestInfo(int i) {$/;"	f	class:testing::TestCase
GetName	src/include/catalog/column.h	/^  std::string GetName() const { return column_name; }$/;"	f	class:cmudb::Column
GetName	src/include/index/index.h	/^  const std::string &GetName() const { return metadata_->GetName(); }$/;"	f	class:cmudb::Index
GetName	src/include/index/index.h	/^  inline const std::string &GetName() const { return name_; }$/;"	f	class:cmudb::IndexMetadata
GetNextPageId	src/page/b_plus_tree_leaf_page.cpp	/^page_id_t B_PLUS_TREE_LEAF_PAGE_TYPE::GetNextPageId() const $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
GetNextPageId	src/page/table_page.cpp	/^page_id_t TablePage::GetNextPageId() {$/;"	f	class:cmudb::TablePage
GetNextRandomSeed	third_party/gmock/gmock-gtest-all.cc	/^inline int GetNextRandomSeed(int seed) {$/;"	f	namespace:testing::internal
GetNextTupleRid	src/page/table_page.cpp	/^bool TablePage::GetNextTupleRid(const RID &cur_rid, RID &next_rid) {$/;"	f	class:cmudb::TablePage
GetNumBuckets	src/hash/extendible_hash.cpp	/^int ExtendibleHash<K, V>::GetNumBuckets() const {$/;"	f	class:cmudb::ExtendibleHash
GetNumEntriesInBkt	src/hash/extendible_hash.cpp	/^uint64_t ExtendibleHash<K, V>::GetNumEntriesInBkt($/;"	f	class:cmudb::ExtendibleHash
GetOffset	src/include/catalog/column.h	/^  int32_t GetOffset() const { return column_offset; }$/;"	f	class:cmudb::Column
GetOffset	src/include/catalog/schema.h	/^  inline int32_t GetOffset(const int column_id) const {$/;"	f	class:cmudb::Schema
GetOrCreateValue	third_party/gmock/gtest/gtest.h	/^  T* GetOrCreateValue() const {$/;"	f	class:std::tr1::ThreadLocal
GetOutputFormat	third_party/gmock/gmock-gtest-all.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;"	f	class:testing::internal::UnitTestOptions
GetPageId	src/include/common/rid.h	/^  inline page_id_t GetPageId() const { return page_id_; }$/;"	f	class:cmudb::RID
GetPageId	src/include/page/page.h	/^  inline page_id_t GetPageId() { return page_id_; }$/;"	f	class:cmudb::Page
GetPageId	src/page/b_plus_tree_page.cpp	/^page_id_t BPlusTreePage::GetPageId() const $/;"	f	class:cmudb::BPlusTreePage
GetPageId	src/page/table_page.cpp	/^page_id_t TablePage::GetPageId() {$/;"	f	class:cmudb::TablePage
GetPageSet	src/include/concurrency/transaction.h	/^  inline std::shared_ptr<std::deque<Page *>> GetPageSet() { return page_set_; }$/;"	f	class:cmudb::Transaction
GetPageType	src/page/b_plus_tree_page.cpp	/^IndexPageType BPlusTreePage::GetPageType() const$/;"	f	class:cmudb::BPlusTreePage
GetParam	third_party/gmock/gtest/gtest.h	/^  const ParamType& GetParam() const {$/;"	f	class:testing::WithParamInterface
GetParentPageId	src/page/b_plus_tree_page.cpp	/^page_id_t BPlusTreePage::GetParentPageId() const $/;"	f	class:cmudb::BPlusTreePage
GetPinCount	src/include/page/page.h	/^  inline int GetPinCount() { return pin_count_; }$/;"	f	class:cmudb::Page
GetPrefixUntilComma	third_party/gmock/gtest/gtest.h	/^inline std::string GetPrefixUntilComma(const char* str) {$/;"	f	namespace:testing::internal
GetPrevPageId	src/page/table_page.cpp	/^page_id_t TablePage::GetPrevPageId() {$/;"	f	class:cmudb::TablePage
GetRandomSeedFromFlag	third_party/gmock/gmock-gtest-all.cc	/^inline int GetRandomSeedFromFlag(Int32 random_seed_flag) {$/;"	f	namespace:testing::internal
GetRawPointer	third_party/gmock/gmock/gmock.h	/^inline Element* GetRawPointer(Element* p) { return p; }$/;"	f	namespace:testing::internal
GetRawPointer	third_party/gmock/gmock/gmock.h	/^inline const typename Pointer::element_type* GetRawPointer(const Pointer& p) {$/;"	f	namespace:testing::internal
GetRecordCount	src/page/header_page.cpp	/^int HeaderPage::GetRecordCount() { return *reinterpret_cast<int *>(GetData()); }$/;"	f	class:cmudb::HeaderPage
GetReservedAttributesForElement	third_party/gmock/gmock-gtest-all.cc	/^static std::vector<std::string> GetReservedAttributesForElement($/;"	f	namespace:testing
GetRid	src/include/table/tuple.h	/^  inline RID GetRid() const { return rid_; }$/;"	f	class:cmudb::Tuple
GetRootId	src/page/header_page.cpp	/^bool HeaderPage::GetRootId(const std::string &name, page_id_t &root_id) {$/;"	f	class:cmudb::HeaderPage
GetSchema	src/include/vtable/virtual_table.h	/^  inline Schema *GetSchema() { return schema_; }$/;"	f	class:cmudb::VirtualTable
GetSelectedArgs	third_party/gmock/gmock/gmock.h	/^  static SelectedArgs GetSelectedArgs(ArgsTuple args) {$/;"	f	class:testing::internal::ArgsMatcherImpl
GetSelectedFields	third_party/gmock/gmock/gmock.h	/^  static type GetSelectedFields(const Tuple& \/* t *\/) {$/;"	f	class:testing::internal::TupleFields
GetSelectedFields	third_party/gmock/gmock/gmock.h	/^  static type GetSelectedFields(const Tuple& t) {$/;"	f	class:testing::internal::TupleFields
GetSharedLockSet	src/include/concurrency/transaction.h	/^  inline std::shared_ptr<std::unordered_set<RID>> GetSharedLockSet() {$/;"	f	class:cmudb::Transaction
GetSize	src/page/b_plus_tree_page.cpp	/^int BPlusTreePage::GetSize() const $/;"	f	class:cmudb::BPlusTreePage
GetSlotNum	src/include/common/rid.h	/^  inline int GetSlotNum() const { return slot_num_; }$/;"	f	class:cmudb::RID
GetState	src/include/concurrency/transaction.h	/^  inline TransactionState GetState() { return state_; }$/;"	f	class:cmudb::Transaction
GetStatusFileDescriptor	third_party/gmock/gmock-gtest-all.cc	/^int GetStatusFileDescriptor(unsigned int parent_process_id,$/;"	f	namespace:testing::internal
GetStream	third_party/gmock/gtest/gtest.h	/^  ::std::ostream& GetStream() { return ::std::cerr; }$/;"	f	class:std::tr1::GTestLog
GetString	third_party/gmock/gmock-gtest-all.cc	/^std::string Message::GetString() const {$/;"	f	class:testing::Message
GetTableHeap	src/include/vtable/virtual_table.h	/^  inline TableHeap *GetTableHeap() { return table_heap_; }$/;"	f	class:cmudb::VirtualTable
GetTableName	src/include/index/index.h	/^  inline const std::string &GetTableName() { return table_name_; }$/;"	f	class:cmudb::IndexMetadata
GetTestCase	third_party/gmock/gmock-gtest-all.cc	/^  const TestCase* GetTestCase(int i) const {$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	third_party/gmock/gmock-gtest-all.cc	/^TestCase* UnitTestImpl::GetTestCase(const char* test_case_name,$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	third_party/gmock/gmock-gtest-all.cc	/^const TestCase* UnitTest::GetTestCase(int i) const {$/;"	f	class:testing::UnitTest
GetTestCaseName	third_party/gmock/gtest/gtest.h	/^  virtual const string& GetTestCaseName() const { return test_case_name_; }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestCasePatternHolder	third_party/gmock/gtest/gtest.h	/^  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder($/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
GetTestCaseTypeId	third_party/gmock/gtest/gtest.h	/^  virtual TypeId GetTestCaseTypeId() const { return GetTypeId<TestCase>(); }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestInfo	third_party/gmock/gmock-gtest-all.cc	/^const TestInfo* TestCase::GetTestInfo(int i) const {$/;"	f	class:testing::TestCase
GetTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {$/;"	f	class:testing::TestPartResultArray
GetTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^const TestPartResult& TestResult::GetTestPartResult(int i) const {$/;"	f	class:testing::TestResult
GetTestPartResultReporterForCurrentThread	third_party/gmock/gmock-gtest-all.cc	/^UnitTestImpl::GetTestPartResultReporterForCurrentThread() {$/;"	f	class:testing::internal::UnitTestImpl
GetTestProperty	third_party/gmock/gmock-gtest-all.cc	/^const TestProperty& TestResult::GetTestProperty(int i) const {$/;"	f	class:testing::TestResult
GetTestTypeId	third_party/gmock/gmock-gtest-all.cc	/^TypeId GetTestTypeId() {$/;"	f	namespace:testing::internal
GetThreadCount	third_party/gmock/gmock-gtest-all.cc	/^size_t GetThreadCount() {$/;"	f	namespace:testing::internal
GetThreadId	src/include/concurrency/transaction.h	/^  inline std::thread::id GetThreadId() const { return thread_id_; }$/;"	f	class:cmudb::Transaction
GetTimeInMillis	third_party/gmock/gmock-gtest-all.cc	/^TimeInMillis GetTimeInMillis() {$/;"	f	namespace:testing::internal
GetTransaction	src/vtable/virtual_table.cpp	/^Transaction *GetTransaction() { return global_parameters->transaction_; }$/;"	f	namespace:cmudb
GetTransactionId	src/include/concurrency/transaction.h	/^  inline txn_id_t GetTransactionId() const { return txn_id_; }$/;"	f	class:cmudb::Transaction
GetTuple	src/page/table_page.cpp	/^bool TablePage::GetTuple(const RID &rid, Tuple &tuple, Transaction *txn,$/;"	f	class:cmudb::TablePage
GetTuple	src/table/table_heap.cpp	/^bool TableHeap::GetTuple(const RID &rid, Tuple &tuple, Transaction *txn) {$/;"	f	class:cmudb::TableHeap
GetTupleCount	src/page/table_page.cpp	/^int32_t TablePage::GetTupleCount() {$/;"	f	class:cmudb::TablePage
GetTupleOffset	src/page/table_page.cpp	/^int32_t TablePage::GetTupleOffset(int slot_num) {$/;"	f	class:cmudb::TablePage
GetTupleSize	src/page/table_page.cpp	/^int32_t TablePage::GetTupleSize(int slot_num) {$/;"	f	class:cmudb::TablePage
GetType	src/include/catalog/column.h	/^  inline TypeId GetType() const { return column_type; }$/;"	f	class:cmudb::Column
GetType	src/include/catalog/schema.h	/^  inline TypeId GetType(const int column_id) const {$/;"	f	class:cmudb::Schema
GetTypeId	src/include/type/type.h	/^  inline TypeId GetTypeId() const { return type_id_; }$/;"	f	class:cmudb::Type
GetTypeId	src/include/type/value.h	/^  inline TypeId GetTypeId() const { return type_id_; }$/;"	f	class:cmudb::Value
GetTypeId	third_party/gmock/gtest/gtest.h	/^TypeId GetTypeId() {$/;"	f	namespace:testing::internal
GetTypeName	third_party/gmock/gtest/gtest.h	/^std::string GetTypeName() {$/;"	f	namespace:testing::internal
GetTypeSize	src/type/type.cpp	/^uint64_t Type::GetTypeSize(const TypeId type_id) {$/;"	f	class:cmudb::Type
GetUnitTestImpl	third_party/gmock/gmock-gtest-all.cc	/^inline UnitTestImpl* GetUnitTestImpl() {$/;"	f	namespace:testing::internal
GetUnlinedColumnCount	src/include/catalog/schema.h	/^  inline int GetUnlinedColumnCount() const {$/;"	f	class:cmudb::Schema
GetUnlinedColumns	src/include/catalog/schema.h	/^  inline const std::vector<int> &GetUnlinedColumns() const {$/;"	f	class:cmudb::Schema
GetValue	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::GetValue(const KeyType &key,$/;"	f	class:cmudb::BPLUSTREE_TYPE
GetValue	src/table/tuple.cpp	/^Value Tuple::GetValue(Schema *schema, const int column_id) const {$/;"	f	class:cmudb::Tuple
GetValueAndDelete	third_party/gmock/gmock/gmock.h	/^  T GetValueAndDelete() const {$/;"	f	class:testing::internal::ActionResultHolder
GetValueAndDelete	third_party/gmock/gmock/gmock.h	/^  void GetValueAndDelete() const { delete this; }$/;"	f	class:testing::internal::ActionResultHolder
GetVariableLength	src/include/catalog/column.h	/^  int32_t GetVariableLength() const { return variable_length; }$/;"	f	class:cmudb::Column
GetVariableLength	src/include/catalog/schema.h	/^  inline int32_t GetVariableLength(const int column_id) const {$/;"	f	class:cmudb::Schema
GetVirtualTable	src/include/vtable/virtual_table.h	/^  inline VirtualTable *GetVirtualTable() { return virtual_table_; }$/;"	f	class:cmudb::Cursor
GetWriteSet	src/include/concurrency/transaction.h	/^  inline std::shared_ptr<std::deque<WriteRecord>> GetWriteSet() {$/;"	f	class:cmudb::Transaction
GlobalParameters	src/include/vtable/virtual_table.h	/^struct GlobalParameters {$/;"	s	namespace:cmudb
GoogleTestFailureException	third_party/gmock/gmock-gtest-all.cc	/^GoogleTestFailureException::GoogleTestFailureException($/;"	f	class:testing::internal::GoogleTestFailureException
GoogleTestFailureException	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {$/;"	c	namespace:testing::internal
GoogleTestFailureReporter	third_party/gmock/gmock-gtest-all.cc	/^class GoogleTestFailureReporter : public FailureReporterInterface {$/;"	c	namespace:testing::internal	file:
Gt	third_party/gmock/gmock/gmock.h	/^inline internal::Gt2Matcher Gt() { return internal::Gt2Matcher(); }$/;"	f	namespace:testing
Gt	third_party/gmock/gmock/gmock.h	/^inline internal::GtMatcher<Rhs> Gt(Rhs x) {$/;"	f	namespace:testing
HANDLE_TO_WINFILE	src/sqlite/sqlite3.c	40334;"	d	file:
HASHSIZE	src/sqlite/sqlite3.c	164847;"	d	file:
HASHTABLE_HASH_1	src/sqlite/sqlite3.c	55405;"	d	file:
HASHTABLE_NPAGE	src/sqlite/sqlite3.c	55404;"	d	file:
HASHTABLE_NPAGE_ONE	src/sqlite/sqlite3.c	55413;"	d	file:
HASHTABLE_NSLOT	src/sqlite/sqlite3.c	55406;"	d	file:
HASH_APPEND	src/sqlite/sqlite3.c	175869;"	d	file:
HAS_TIMER	src/sqlite/shell.c	252;"	d	file:
HAS_TIMER	src/sqlite/shell.c	329;"	d	file:
HAS_TIMER	src/sqlite/shell.c	334;"	d	file:
HAS_UPDATE_HOOK	src/sqlite/sqlite3.c	78732;"	d	file:
HAS_UPDATE_HOOK	src/sqlite/sqlite3.c	78734;"	d	file:
HAVE_FCHOWN	src/sqlite/sqlite3.c	922;"	d	file:
HAVE_FULLFSYNC	src/sqlite/sqlite3.c	33695;"	d	file:
HAVE_FULLFSYNC	src/sqlite/sqlite3.c	33697;"	d	file:
HAVE_GETHOSTUUID	src/sqlite/sqlite3.c	30217;"	d	file:
HAVE_LOCALTIME_S	src/sqlite/sqlite3.c	19743;"	d	file:
HAVE_LOCALTIME_S	src/sqlite/sqlite3.c	19744;"	d	file:
HAVE_LSTAT	src/sqlite/sqlite3.c	924;"	d	file:
HAVE_MREMAP	src/sqlite/sqlite3.c	30621;"	d	file:
HAVE_MREMAP	src/sqlite/sqlite3.c	30623;"	d	file:
HAVE_PREAD	src/sqlite/sqlite3.c	30182;"	d	file:
HAVE_PWRITE	src/sqlite/sqlite3.c	30183;"	d	file:
HAVE_READLINK	src/sqlite/sqlite3.c	923;"	d	file:
HAVE_UTIME	src/sqlite/sqlite3.c	918;"	d	file:
HEADER_PAGE_ID	src/include/common/config.h	13;"	d
HEX	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
HEX	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
HEX	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
HEX	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HONOR_SHARDING_PROTOCOL	third_party/gmock/gmock-gtest-all.cc	/^    HONOR_SHARDING_PROTOCOL,$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding	file:
HRESULTFailureHelper	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult HRESULTFailureHelper(const char* expr,$/;"	f	namespace:testing::internal::__anon3
HSTOREDEBUGLOG_H	src/include/common/logger.h	13;"	d
HandleExceptionsInMethodIfSupported	third_party/gmock/gmock-gtest-all.cc	/^Result HandleExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HandleSehExceptionsInMethodIfSupported	third_party/gmock/gmock-gtest-all.cc	/^Result HandleSehExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HasEdge	third_party/gmock/gmock/gmock.h	/^  bool HasEdge(size_t ilhs, size_t irhs) const {$/;"	f	class:testing::internal::MatchMatrix
HasFailure	third_party/gmock/gtest/gtest.h	/^  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }$/;"	f	class:testing::Test
HasFatalFailure	third_party/gmock/gmock-gtest-all.cc	/^bool Test::HasFatalFailure() {$/;"	f	class:testing::Test
HasFatalFailure	third_party/gmock/gmock-gtest-all.cc	/^bool TestResult::HasFatalFailure() const {$/;"	f	class:testing::TestResult
HasGoogleTestFlagPrefix	third_party/gmock/gmock-gtest-all.cc	/^static bool HasGoogleTestFlagPrefix(const char* str) {$/;"	f	namespace:testing::internal
HasMaxAbsError	third_party/gmock/gmock/gmock.h	/^    bool HasMaxAbsError() const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
HasNewFatalFailureHelper	third_party/gmock/gmock-gtest-all.cc	/^HasNewFatalFailureHelper::HasNewFatalFailureHelper()$/;"	f	class:testing::internal::HasNewFatalFailureHelper
HasNewFatalFailureHelper	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ HasNewFatalFailureHelper$/;"	c	namespace:testing::internal
HasNonfatalFailure	third_party/gmock/gmock-gtest-all.cc	/^bool Test::HasNonfatalFailure() {$/;"	f	class:testing::Test
HasNonfatalFailure	third_party/gmock/gmock-gtest-all.cc	/^bool TestResult::HasNonfatalFailure() const {$/;"	f	class:testing::TestResult
HasOneFailure	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult HasOneFailure(const char* \/* results_expr *\/,$/;"	f	namespace:testing::internal
HasRowid	src/sqlite/sqlite3.c	15583;"	d	file:
HasSameFixtureClass	third_party/gmock/gmock-gtest-all.cc	/^bool Test::HasSameFixtureClass() {$/;"	f	class:testing::Test
HasSubstr	third_party/gmock/gmock/gmock.h	/^    HasSubstr(const internal::string& substring) {$/;"	f	namespace:testing
HasSubstr	third_party/gmock/gmock/gmock.h	/^    HasSubstr(const internal::wstring& substring) {$/;"	f	namespace:testing
HasSubstrMatcher	third_party/gmock/gmock/gmock.h	/^  explicit HasSubstrMatcher(const StringType& substring)$/;"	f	class:testing::internal::HasSubstrMatcher
HasSubstrMatcher	third_party/gmock/gmock/gmock.h	/^class HasSubstrMatcher {$/;"	c	namespace:testing::internal
Hash	src/sqlite/sqlite3.c	/^struct Hash {$/;"	s	file:
Hash	src/sqlite/sqlite3.c	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash	file:
HashElem	src/sqlite/sqlite3.c	/^struct HashElem {$/;"	s	file:
HashElem	src/sqlite/sqlite3.c	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem	file:
HashKey	src/hash/extendible_hash.cpp	/^size_t ExtendibleHash<K, V>::HashKey(const K &key) {$/;"	f	class:cmudb::ExtendibleHash
HashTable	src/include/hash/hash_table.h	/^  HashTable() {}$/;"	f	class:cmudb::HashTable
HashTable	src/include/hash/hash_table.h	/^template <typename K, typename V> class HashTable {$/;"	c	namespace:cmudb
HavingToWhereCtx	src/sqlite/sqlite3.c	/^struct HavingToWhereCtx {$/;"	s	file:
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types1
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types10
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types11
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types12
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types13
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types14
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types15
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types16
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types17
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types18
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types19
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types2
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types20
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types21
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types22
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types23
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types24
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types25
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types26
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types27
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types28
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types29
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types3
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types30
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types31
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types32
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types33
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types34
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types35
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types36
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types37
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types38
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types39
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types4
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types40
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types41
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types42
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types43
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types44
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types45
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types46
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types47
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types48
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types49
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types5
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types50
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types6
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types7
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types8
Head	third_party/gmock/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types9
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates1
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates10
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates11
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates12
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates13
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates14
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates15
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates16
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates17
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates18
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates19
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates2
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates20
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates21
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates22
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates23
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates24
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates25
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates26
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates27
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates28
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates29
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates3
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates30
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates31
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates32
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates33
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates34
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates35
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates36
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates37
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates38
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates39
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates4
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates40
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates41
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates42
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates43
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates44
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates45
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates46
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates47
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates48
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates49
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates5
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates50
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates6
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates7
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates8
Head	third_party/gmock/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates9
HeaderPage	src/include/page/header_page.h	/^class HeaderPage : public Page {$/;"	c	namespace:cmudb
HighlightContext	src/sqlite/sqlite3.c	/^struct HighlightContext {$/;"	s	file:
HighlightContext	src/sqlite/sqlite3.c	/^typedef struct HighlightContext HighlightContext;$/;"	t	typeref:struct:HighlightContext	file:
ID_VOID_MAIN	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
IGNORE_SHARDING_PROTOCOL	third_party/gmock/gmock-gtest-all.cc	/^    IGNORE_SHARDING_PROTOCOL$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding	file:
INCRINIT_NORMAL	src/sqlite/sqlite3.c	88542;"	d	file:
INCRINIT_ROOT	src/sqlite/sqlite3.c	88544;"	d	file:
INCRINIT_TASK	src/sqlite/sqlite3.c	88543;"	d	file:
INDEXITERATOR_TYPE	src/include/index/index_iterator.h	10;"	d
INDEXITERATOR_TYPE_LEAF	src/include/index/index_iterator.h	13;"	d
INDEX_TEMPLATE_ARGUMENTS	src/include/page/b_plus_tree_page.h	29;"	d
INSERT	src/include/concurrency/transaction.h	/^enum class WType { INSERT = 0, DELETE, UPDATE };$/;"	m	class:cmudb::WType
INSTANTIATE_TEST_CASE_P	third_party/gmock/gtest/gtest.h	16973;"	d
INSTANTIATE_TYPED_TEST_CASE_P	third_party/gmock/gtest/gtest.h	17471;"	d
INT16_TYPE	src/sqlite/sqlite3.c	12647;"	d	file:
INT16_TYPE	src/sqlite/sqlite3.c	12649;"	d	file:
INT8_TYPE	src/sqlite/sqlite3.c	12661;"	d	file:
INT8_TYPE	src/sqlite/sqlite3.c	12663;"	d	file:
INTEGER	src/include/type/type_id.h	/^  INTEGER,$/;"	e	enum:cmudb::TypeId
INTERCEPT_ALL_THREADS	third_party/gmock/gmock-gtest-all.cc	/^    INTERCEPT_ALL_THREADS           \/\/ Intercepts all failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode	file:
INTERCEPT_ONLY_CURRENT_THREAD	third_party/gmock/gmock-gtest-all.cc	/^    INTERCEPT_ONLY_CURRENT_THREAD,  \/\/ Intercepts only thread local failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode	file:
INTERFACE	src/sqlite/sqlite3.c	136335;"	d	file:
INTERFACE	src/sqlite/sqlite3.c	184056;"	d	file:
INT_464269060799999	src/sqlite/sqlite3.c	19652;"	d	file:
INT_COMPARE_FUNC	src/type/integer_type.cpp	11;"	d	file:
INT_MODIFY_FUNC	src/type/integer_type.cpp	31;"	d	file:
INVALID	src/include/type/type_id.h	/^  INVALID = 0,$/;"	e	enum:cmudb::TypeId
INVALID_FILE_ATTRIBUTES	src/sqlite/sqlite3.c	38354;"	d	file:
INVALID_INDEX	src/include/common/config.h	19;"	d
INVALID_INDEX_PAGE	src/include/page/b_plus_tree_page.h	/^enum class IndexPageType { INVALID_INDEX_PAGE = 0, LEAF_PAGE, $/;"	m	class:cmudb::IndexPageType
INVALID_PAGE_ID	src/include/common/config.h	11;"	d
INVALID_SET_FILE_POINTER	src/sqlite/sqlite3.c	40686;"	d	file:
INVALID_TXN_ID	src/include/common/config.h	12;"	d
IN_DECLARE_VTAB	src/sqlite/sqlite3.c	16703;"	d	file:
IN_DECLARE_VTAB	src/sqlite/sqlite3.c	16705;"	d	file:
IN_INDEX_EPH	src/sqlite/sqlite3.c	17910;"	d	file:
IN_INDEX_INDEX_ASC	src/sqlite/sqlite3.c	17911;"	d	file:
IN_INDEX_INDEX_DESC	src/sqlite/sqlite3.c	17912;"	d	file:
IN_INDEX_LOOP	src/sqlite/sqlite3.c	17919;"	d	file:
IN_INDEX_MEMBERSHIP	src/sqlite/sqlite3.c	17918;"	d	file:
IN_INDEX_NOOP	src/sqlite/sqlite3.c	17913;"	d	file:
IN_INDEX_NOOP_OK	src/sqlite/sqlite3.c	17917;"	d	file:
IN_INDEX_ROWID	src/sqlite/sqlite3.c	17909;"	d	file:
IN_PROGRESS	third_party/gmock/gmock-gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
IOMETHODS	src/sqlite/sqlite3.c	35269;"	d	file:
IOTRACE	src/sqlite/sqlite3.c	17963;"	d	file:
IOTRACE	src/sqlite/sqlite3.c	17967;"	d	file:
ISAUTOVACUUM	src/sqlite/sqlite3.c	59100;"	d	file:
ISAUTOVACUUM	src/sqlite/sqlite3.c	59102;"	d	file:
IS_BIG_INT	src/sqlite/sqlite3.c	12193;"	d	file:
IS_LOCK_ERROR	src/sqlite/sqlite3.c	30284;"	d	file:
IcuCursor	src/sqlite/sqlite3.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	src/sqlite/sqlite3.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuTokenizer	src/sqlite/sqlite3.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	src/sqlite/sqlite3.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IdChar	src/sqlite/sqlite3.c	140260;"	d	file:
IdChar	src/sqlite/sqlite3.c	140278;"	d	file:
IdChar	src/sqlite/sqlite3.c	140741;"	d	file:
IdChar	src/sqlite/sqlite3.c	140745;"	d	file:
IdList	src/sqlite/sqlite3.c	/^struct IdList {$/;"	s	file:
IdList	src/sqlite/sqlite3.c	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList	file:
IdList_item	src/sqlite/sqlite3.c	/^  struct IdList_item {$/;"	s	struct:IdList	file:
IdxCover	src/sqlite/sqlite3.c	/^struct IdxCover {$/;"	s	file:
IdxExprTrans	src/sqlite/sqlite3.c	/^typedef struct IdxExprTrans {$/;"	s	file:
IdxExprTrans	src/sqlite/sqlite3.c	/^} IdxExprTrans;$/;"	t	typeref:struct:IdxExprTrans	file:
IfNotOmitAV	src/sqlite/sqlite3.c	59508;"	d	file:
IfNotOmitAV	src/sqlite/sqlite3.c	59510;"	d	file:
IgnorableOrderby	src/sqlite/sqlite3.c	16477;"	d	file:
IgnoreResult	third_party/gmock/gmock/gmock.h	/^inline internal::IgnoreResultAction<A> IgnoreResult(const A& an_action) {$/;"	f	namespace:testing
IgnoreResultAction	third_party/gmock/gmock/gmock.h	/^  explicit IgnoreResultAction(const A& action) : action_(action) {}$/;"	f	class:testing::internal::IgnoreResultAction
IgnoreResultAction	third_party/gmock/gmock/gmock.h	/^class IgnoreResultAction {$/;"	c	namespace:testing::internal
IgnoredValue	third_party/gmock/gmock/gmock.h	/^  IgnoredValue(const T& \/* ignored *\/) {}  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:testing::internal::IgnoredValue
IgnoredValue	third_party/gmock/gmock/gmock.h	/^class IgnoredValue {$/;"	c	namespace:testing::internal
Impl	third_party/gmock/gmock/gmock.h	/^    Impl(CallableStorageType callable, const Matcher<ResultType>& matcher)$/;"	f	class:testing::internal::ResultOfMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    Impl(FloatType rhs, bool nan_eq_nan, FloatType max_abs_error) :$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    Impl(const Action<VoidResult>& action1, const Action<F>& action2)$/;"	f	class:testing::internal::DoBothAction::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    Impl(const Comparator& comparator, const ContainerMatcher& matcher)$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    Impl(const TupleMatcher& tuple_matcher, const RhsStlContainer& rhs)$/;"	f	class:testing::internal::PointwiseMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(R value)$/;"	f	class:testing::internal::ReturnAction::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(Super& x) : object_(x) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RefMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(T& ref) : ref_(ref) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefAction::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(const A& action) : action_(action) {}$/;"	f	class:testing::internal::IgnoreResultAction::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(const InnerAction& action) : action_(action) {}$/;"	f	class:testing::internal::WithArgsAction::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(const InnerMatcher& matcher)$/;"	f	class:testing::internal::PointeeMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(const Matcher<U>& source_matcher)$/;"	f	class:testing::internal::MatcherCastImpl::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(const SizeMatcher& size_matcher)$/;"	f	class:testing::internal::SizeIsMatcher::Impl
Impl	third_party/gmock/gmock/gmock.h	/^    explicit Impl(const T& value) : value_(value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefOfCopyAction::Impl
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::DoBothAction
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::IgnoreResultAction
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnAction
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnRefAction
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnRefOfCopyAction
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::WithArgsAction
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<Container> {$/;"	c	class:testing::internal::SizeIsMatcher
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<LhsContainer> {$/;"	c	class:testing::internal::PointwiseMatcher
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<LhsContainer> {$/;"	c	class:testing::internal::WhenSortedByMatcher
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<Pointer> {$/;"	c	class:testing::internal::PointeeMatcher
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<Super&> {$/;"	c	class:testing::internal::RefMatcher
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::FloatingEqMatcher
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::MatcherCastImpl
Impl	third_party/gmock/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::ResultOfMatcher
ImplicitCast_	third_party/gmock/gtest/gtest.h	/^inline To ImplicitCast_(To x) { return x; }$/;"	f	namespace:std::tr1
ImplicitlyConvertible	third_party/gmock/gtest/gtest.h	/^class ImplicitlyConvertible {$/;"	c	namespace:testing::internal
ImportCtx	src/sqlite/shell.c	/^struct ImportCtx {$/;"	s	file:
ImportCtx	src/sqlite/shell.c	/^typedef struct ImportCtx ImportCtx;$/;"	t	typeref:struct:ImportCtx	file:
InDeathTestChild	third_party/gmock/gmock-gtest-all.cc	/^bool InDeathTestChild() {$/;"	f	namespace:testing::internal
InLoop	src/sqlite/sqlite3.c	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon30::__anon31	file:
InSequence	third_party/gmock/gmock-gtest-all.cc	/^InSequence::InSequence() {$/;"	f	class:testing::InSequence
InSequence	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& InSequence(const Sequence& s) {$/;"	f	class:testing::internal::TypedExpectation
InSequence	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2) {$/;"	f	class:testing::internal::TypedExpectation
InSequence	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,$/;"	f	class:testing::internal::TypedExpectation
InSequence	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ InSequence {$/;"	c	namespace:testing
IncompatibleTypeException	src/include/common/exception.h	/^  IncompatibleTypeException(int type, std::string msg)$/;"	f	class:cmudb::IncompatibleTypeException
IncompatibleTypeException	src/include/common/exception.h	/^class IncompatibleTypeException : public Exception {$/;"	c	namespace:cmudb
IncrMerger	src/sqlite/sqlite3.c	/^struct IncrMerger {$/;"	s	file:
IncrMerger	src/sqlite/sqlite3.c	/^typedef struct IncrMerger IncrMerger;       \/* Read & merge multiple PMAs *\/$/;"	t	typeref:struct:IncrMerger	file:
Incrblob	src/sqlite/sqlite3.c	/^struct Incrblob {$/;"	s	file:
Incrblob	src/sqlite/sqlite3.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
IncreaseSize	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::IncreaseSize(int amount) $/;"	f	class:cmudb::BPlusTreePage
IncrmergeWriter	src/sqlite/sqlite3.c	/^struct IncrmergeWriter {$/;"	s	file:
IncrmergeWriter	src/sqlite/sqlite3.c	/^typedef struct IncrmergeWriter IncrmergeWriter;$/;"	t	typeref:struct:IncrmergeWriter	file:
Index	src/include/index/index.h	/^  Index(IndexMetadata *metadata) : metadata_(metadata) {}$/;"	f	class:cmudb::Index
Index	src/include/index/index.h	/^class Index {$/;"	c	namespace:cmudb
Index	src/sqlite/sqlite3.c	/^struct Index {$/;"	s	file:
Index	src/sqlite/sqlite3.c	/^typedef struct Index Index;$/;"	t	typeref:struct:Index	file:
IndexException	src/include/common/exception.h	/^  IndexException(std::string msg) : Exception(EXCEPTION_TYPE_INDEX, msg) {}$/;"	f	class:cmudb::IndexException
IndexException	src/include/common/exception.h	/^class IndexException : public Exception {$/;"	c	namespace:cmudb
IndexIterator	src/include/index/index_iterator.h	/^class IndexIterator {$/;"	c	namespace:cmudb
IndexIterator	src/index/index_iterator.cpp	/^INDEXITERATOR_TYPE::IndexIterator() {}$/;"	f	class:cmudb::INDEXITERATOR_TYPE
IndexMetadata	src/include/index/index.h	/^  IndexMetadata(std::string index_name, std::string table_name,$/;"	f	class:cmudb::IndexMetadata
IndexMetadata	src/include/index/index.h	/^class IndexMetadata {$/;"	c	namespace:cmudb
IndexPageType	src/include/page/b_plus_tree_page.h	/^enum class IndexPageType { INVALID_INDEX_PAGE = 0, LEAF_PAGE, $/;"	c	namespace:cmudb
IndexSample	src/sqlite/sqlite3.c	/^struct IndexSample {$/;"	s	file:
IndexSample	src/sqlite/sqlite3.c	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample	file:
Infinity	third_party/gmock/gtest/gtest.h	/^  static RawType Infinity() {$/;"	f	class:testing::internal::FloatingPoint
Init	src/include/page/header_page.h	/^  void Init() { SetRecordCount(0); }$/;"	f	class:cmudb::HeaderPage
Init	src/index/index_iterator.cpp	/^void INDEXITERATOR_TYPE::Init(BufferPoolManager *buffer_pool_manager,$/;"	f	class:cmudb::INDEXITERATOR_TYPE
Init	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::Init(page_id_t page_id,$/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
Init	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::Init(page_id_t page_id, page_id_t parent_id) $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
Init	src/page/table_page.cpp	/^void TablePage::Init(page_id_t page_id, size_t page_size,$/;"	f	class:cmudb::TablePage
Init	third_party/gmock/gmock-gtest-all.cc	/^void RE::Init(const char* regex) {$/;"	f	class:testing::internal::RE
Init	third_party/gmock/gmock-gtest-all.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
Init	third_party/gmock/gtest/gtest.h	/^  void Init(const Element* array, size_t a_size, RelationToSource relation) {$/;"	f	class:testing::internal::NativeArray
InitData	src/sqlite/sqlite3.c	/^} InitData;$/;"	t	typeref:struct:__anon19	file:
InitDeathTestSubprocessControlInfo	third_party/gmock/gmock-gtest-all.cc	/^  void InitDeathTestSubprocessControlInfo() {$/;"	f	class:testing::internal::UnitTestImpl
InitGoogleMock	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ void InitGoogleMock(int* argc, char** argv) {$/;"	f	namespace:testing
InitGoogleMock	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ void InitGoogleMock(int* argc, wchar_t** argv) {$/;"	f	namespace:testing
InitGoogleMockImpl	third_party/gmock/gmock-gtest-all.cc	/^void InitGoogleMockImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
InitGoogleTest	third_party/gmock/gmock-gtest-all.cc	/^void InitGoogleTest(int* argc, char** argv) {$/;"	f	namespace:testing
InitGoogleTest	third_party/gmock/gmock-gtest-all.cc	/^void InitGoogleTest(int* argc, wchar_t** argv) {$/;"	f	namespace:testing
InitGoogleTestImpl	third_party/gmock/gmock-gtest-all.cc	/^void InitGoogleTestImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
InnerFunctionType	third_party/gmock/gmock/gmock.h	/^        k1, k2, k3, k4, k5, k6, k7, k8, k9, k10>::type InnerFunctionType;$/;"	t	class:testing::internal::WithArgsAction::Impl
InnerMatcherArg	third_party/gmock/gmock/gmock.h	/^    typedef ::std::tr1::tuple<const LhsValue&, const RhsValue&> InnerMatcherArg;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
Insert	src/buffer/lru_replacer.cpp	/^template <typename T> void LRUReplacer<T>::Insert(const T &value) {$/;"	f	class:cmudb::LRUReplacer
Insert	src/hash/extendible_hash.cpp	/^void ExtendibleHash<K, V>::Insert(const K &key, const V &value) {$/;"	f	class:cmudb::ExtendibleHash
Insert	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::Insert(const KeyType &key, const ValueType &value,$/;"	f	class:cmudb::BPLUSTREE_TYPE
Insert	src/page/b_plus_tree_leaf_page.cpp	/^int B_PLUS_TREE_LEAF_PAGE_TYPE::Insert(const KeyType &key,$/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
InsertEntry	src/include/vtable/virtual_table.h	/^  inline void InsertEntry(const Tuple &tuple, const RID &rid) {$/;"	f	class:cmudb::VirtualTable
InsertEntry	src/index/b_plus_tree_index.cpp	/^void BPLUSTREE_INDEX_TYPE::InsertEntry(const Tuple &key, RID rid,$/;"	f	class:cmudb::BPLUSTREE_INDEX_TYPE
InsertFromFile	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::InsertFromFile(const std::string &file_name,$/;"	f	class:cmudb::BPLUSTREE_TYPE
InsertHelper	test/index/b_plus_tree_concurrent_test.cpp	/^void InsertHelper(BPlusTree<GenericKey<8>, RID, GenericComparator<8>> &tree,$/;"	f	namespace:cmudb
InsertHelperSplit	test/index/b_plus_tree_concurrent_test.cpp	/^void InsertHelperSplit($/;"	f	namespace:cmudb
InsertIntoLeaf	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::InsertIntoLeaf(const KeyType &key, const ValueType &value,$/;"	f	class:cmudb::BPLUSTREE_TYPE
InsertIntoParent	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::InsertIntoParent(BPlusTreePage *old_node,$/;"	f	class:cmudb::BPLUSTREE_TYPE
InsertNodeAfter	src/page/b_plus_tree_internal_page.cpp	/^int B_PLUS_TREE_INTERNAL_PAGE_TYPE::InsertNodeAfter($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
InsertRecord	src/page/header_page.cpp	/^bool HeaderPage::InsertRecord(const std::string &name,$/;"	f	class:cmudb::HeaderPage
InsertTuple	src/include/vtable/virtual_table.h	/^  inline bool InsertTuple(const Tuple &tuple, RID &rid) {$/;"	f	class:cmudb::VirtualTable
InsertTuple	src/page/table_page.cpp	/^bool TablePage::InsertTuple(const Tuple &tuple, RID &rid, Transaction *txn,$/;"	f	class:cmudb::TablePage
InsertTuple	src/table/table_heap.cpp	/^bool TableHeap::InsertTuple(const Tuple &tuple, RID &rid, Transaction *txn) {$/;"	f	class:cmudb::TableHeap
InstantiationContainer	third_party/gmock/gtest/gtest.h	/^      InstantiationContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
Int	third_party/gmock/gtest/gtest.h	/^  typedef __int64 Int;$/;"	t	class:std::tr1::TypeWithSize
Int	third_party/gmock/gtest/gtest.h	/^  typedef int Int;$/;"	t	class:std::tr1::TypeWithSize
Int32	third_party/gmock/gtest/gtest.h	/^typedef TypeWithSize<4>::Int Int32;$/;"	t	namespace:std::tr1
Int32FromEnvOrDie	third_party/gmock/gmock-gtest-all.cc	/^Int32 Int32FromEnvOrDie(const char* var, Int32 default_val) {$/;"	f	namespace:testing::internal
Int32FromGTestEnv	third_party/gmock/gmock-gtest-all.cc	/^Int32 Int32FromGTestEnv(const char* flag, Int32 default_value) {$/;"	f	namespace:testing::internal
Int64	third_party/gmock/gtest/gtest.h	/^typedef TypeWithSize<8>::Int Int64;$/;"	t	namespace:std::tr1
IntegerParentType	src/include/type/integer_parent_type.h	/^class IntegerParentType : public NumericType {$/;"	c	namespace:cmudb
IntegerParentType	src/type/integer_parent_type.cpp	/^IntegerParentType::IntegerParentType(TypeId type) : NumericType(type) {}$/;"	f	class:cmudb::IntegerParentType
IntegerType	src/include/type/integer_type.h	/^class IntegerType : public IntegerParentType {$/;"	c	namespace:cmudb
IntegerType	src/type/integer_type.cpp	/^IntegerType::IntegerType(TypeId type) : IntegerParentType(type) {}$/;"	f	class:cmudb::IntegerType
IntegrityCk	src/sqlite/sqlite3.c	/^struct IntegrityCk {$/;"	s	file:
IntegrityCk	src/sqlite/sqlite3.c	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk	file:
InterceptMode	third_party/gmock/gmock-gtest-all.cc	/^  enum InterceptMode {$/;"	g	class:testing::ScopedFakeTestPartResultReporter	file:
InternalDefaultActionSetAt	third_party/gmock/gmock/gmock.h	/^  internal::OnCallSpec<F>& InternalDefaultActionSetAt($/;"	f	class:testing::internal::MockSpec
InternalExpectedAt	third_party/gmock/gmock/gmock.h	/^  internal::TypedExpectation<F>& InternalExpectedAt($/;"	f	class:testing::internal::MockSpec
InternalRunDeathTestFlag	third_party/gmock/gtest/gtest.h	/^  InternalRunDeathTestFlag(const std::string& a_file,$/;"	f	class:testing::internal::InternalRunDeathTestFlag
InternalRunDeathTestFlag	third_party/gmock/gtest/gtest.h	/^class InternalRunDeathTestFlag {$/;"	c	namespace:testing::internal
Invalid	third_party/gmock/gmock/gmock.h	/^inline T Invalid() {$/;"	f	namespace:testing::internal
Invalid	third_party/gmock/gmock/gmock.h	/^inline void Invalid<void>() {}$/;"	f	namespace:testing::internal
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke() {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9,$/;"	f	class:testing::internal::FunctionMocker
Invoke	third_party/gmock/gmock/gmock.h	/^  static R Invoke(Function function, const ::std::tr1::tuple<>&) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	third_party/gmock/gmock/gmock.h	/^  static R Invoke(Function function, const ::std::tr1::tuple<A1, A2, A3, A4,$/;"	f	class:testing::internal::InvokeHelper
Invoke	third_party/gmock/gmock/gmock.h	/^  static R Invoke(Function function, const ::std::tr1::tuple<A1, A2, A3,$/;"	f	class:testing::internal::InvokeHelper
Invoke	third_party/gmock/gmock/gmock.h	/^  static R Invoke(Function function, const ::std::tr1::tuple<A1, A2,$/;"	f	class:testing::internal::InvokeHelper
Invoke	third_party/gmock/gmock/gmock.h	/^  static R Invoke(Function function, const ::std::tr1::tuple<A1, A2>& args) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	third_party/gmock/gmock/gmock.h	/^  static R Invoke(Function function, const ::std::tr1::tuple<A1>& args) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	third_party/gmock/gmock/gmock.h	/^  static ResType Invoke(ResType(*f)(ArgType), T arg) {$/;"	f	struct:testing::internal::CallableTraits
Invoke	third_party/gmock/gmock/gmock.h	/^  static ResultType Invoke(Functor f, T arg) { return f(arg); }$/;"	f	struct:testing::internal::CallableTraits
Invoke	third_party/gmock/gmock/gmock.h	/^PolymorphicAction<internal::InvokeAction<FunctionImpl> > Invoke($/;"	f	namespace:testing
Invoke	third_party/gmock/gmock/gmock.h	/^PolymorphicAction<internal::InvokeMethodAction<Class, MethodPtr> > Invoke($/;"	f	namespace:testing
InvokeAction	third_party/gmock/gmock/gmock.h	/^  explicit InvokeAction(FunctionImpl function_impl)$/;"	f	class:testing::internal::InvokeAction
InvokeAction	third_party/gmock/gmock/gmock.h	/^class InvokeAction {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9,$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4, A5, A6> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4, A5> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3, A4> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2, A3> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1, A2> > {$/;"	c	namespace:testing::internal
InvokeHelper	third_party/gmock/gmock/gmock.h	/^class InvokeHelper<R, ::std::tr1::tuple<A1> > {$/;"	c	namespace:testing::internal
InvokeMethod	third_party/gmock/gmock/gmock.h	/^  static R InvokeMethod(Class* obj_ptr,$/;"	f	class:testing::internal::InvokeHelper
InvokeMethodAction	third_party/gmock/gmock/gmock.h	/^  InvokeMethodAction(Class* obj_ptr, MethodPtr method_ptr)$/;"	f	class:testing::internal::InvokeMethodAction
InvokeMethodAction	third_party/gmock/gmock/gmock.h	/^class InvokeMethodAction {$/;"	c	namespace:testing::internal
InvokeMethodWithoutArgsAction	third_party/gmock/gmock/gmock.h	/^  InvokeMethodWithoutArgsAction(Class* obj_ptr, MethodPtr method_ptr)$/;"	f	class:testing::internal::InvokeMethodWithoutArgsAction
InvokeMethodWithoutArgsAction	third_party/gmock/gmock/gmock.h	/^class InvokeMethodWithoutArgsAction {$/;"	c	namespace:testing::internal
InvokeWithoutArgs	third_party/gmock/gmock/gmock.h	/^InvokeWithoutArgs(Class* obj_ptr, MethodPtr method_ptr) {$/;"	f	namespace:testing
InvokeWithoutArgs	third_party/gmock/gmock/gmock.h	/^InvokeWithoutArgs(FunctionImpl function_impl) {$/;"	f	namespace:testing
InvokeWithoutArgsAction	third_party/gmock/gmock/gmock.h	/^  explicit InvokeWithoutArgsAction(FunctionImpl function_impl)$/;"	f	class:testing::internal::InvokeWithoutArgsAction
InvokeWithoutArgsAction	third_party/gmock/gmock/gmock.h	/^class InvokeWithoutArgsAction {$/;"	c	namespace:testing::internal
IsAProtocolMessage	third_party/gmock/gtest/gtest.h	/^struct IsAProtocolMessage$/;"	s	namespace:testing::internal
IsATTY	third_party/gmock/gtest/gtest.h	/^inline int IsATTY(int \/* fd *\/) { return 0; }$/;"	f	namespace:std::tr1::posix
IsATTY	third_party/gmock/gtest/gtest.h	/^inline int IsATTY(int fd) { return _isatty(fd); }$/;"	f	namespace:std::tr1::posix
IsATTY	third_party/gmock/gtest/gtest.h	/^inline int IsATTY(int fd) { return isatty(fd); }$/;"	f	namespace:std::tr1::posix
IsAbsolutePath	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::IsAbsolutePath() const {$/;"	f	class:testing::internal::FilePath
IsAlNum	third_party/gmock/gtest/gtest.h	/^inline bool IsAlNum(char ch) {$/;"	f	namespace:std::tr1
IsAllocated	src/include/table/tuple.h	/^  inline bool IsAllocated() { return allocated_; }$/;"	f	class:cmudb::Tuple
IsAlpha	third_party/gmock/gtest/gtest.h	/^inline bool IsAlpha(char ch) {$/;"	f	namespace:std::tr1
IsAsciiDigit	third_party/gmock/gmock-gtest-all.cc	/^bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }$/;"	f	namespace:testing::internal
IsAsciiPunct	third_party/gmock/gmock-gtest-all.cc	/^bool IsAsciiPunct(char ch) {$/;"	f	namespace:testing::internal
IsAsciiWhiteSpace	third_party/gmock/gmock-gtest-all.cc	/^bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \\f\\n\\r\\t\\v"); }$/;"	f	namespace:testing::internal
IsAsciiWordChar	third_party/gmock/gmock-gtest-all.cc	/^bool IsAsciiWordChar(char ch) {$/;"	f	namespace:testing::internal
IsCoercableFrom	src/type/type.cpp	/^bool Type::IsCoercableFrom(const TypeId type_id) const {$/;"	f	class:cmudb::Type
IsContainer	third_party/gmock/gtest/gtest.h	/^typedef int IsContainer;$/;"	t	namespace:testing::internal
IsContainerTest	third_party/gmock/gtest/gtest.h	/^IsContainer IsContainerTest(int \/* dummy *\/,$/;"	f	namespace:testing::internal
IsContainerTest	third_party/gmock/gtest/gtest.h	/^IsNotContainer IsContainerTest(long \/* dummy *\/) { return '\\0'; }$/;"	f	namespace:testing::internal
IsDigit	src/sqlite/shell.c	150;"	d	file:
IsDigit	third_party/gmock/gtest/gtest.h	/^inline bool IsDigit(char ch) {$/;"	f	namespace:std::tr1
IsDir	third_party/gmock/gtest/gtest.h	/^inline bool IsDir(const StatStruct& st) {$/;"	f	namespace:std::tr1::posix
IsDirectory	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::IsDirectory() const {$/;"	f	class:testing::internal::FilePath
IsDoDefault	third_party/gmock/gmock/gmock.h	/^  bool IsDoDefault() const { return impl_.get() == NULL; }$/;"	f	class:testing::Action
IsEmpty	src/index/b_plus_tree.cpp	/^bool BPLUSTREE_TYPE::IsEmpty() const $/;"	f	class:cmudb::BPLUSTREE_TYPE
IsEmpty	third_party/gmock/gtest/gtest.h	/^  bool IsEmpty() const { return pathname_.empty(); }$/;"	f	class:testing::internal::FilePath
IsHRESULTFailure	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult IsHRESULTFailure(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHRESULTSuccess	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHiddenColumn	src/sqlite/sqlite3.c	15571;"	d	file:
IsHiddenColumn	src/sqlite/sqlite3.c	15574;"	d	file:
IsHiddenColumn	src/sqlite/sqlite3.c	15577;"	d	file:
IsInSet	third_party/gmock/gmock-gtest-all.cc	/^bool IsInSet(char ch, const char* str) {$/;"	f	namespace:testing::internal
IsIndexScan	src/include/vtable/virtual_table.h	/^  inline bool IsIndexScan() { return is_index_scan_; }$/;"	f	class:cmudb::Cursor
IsInlined	src/include/catalog/column.h	/^  inline bool IsInlined() const { return is_inlined; }$/;"	f	class:cmudb::Column
IsInlined	src/include/catalog/schema.h	/^  inline bool IsInlined() const { return tuple_is_inlined; }$/;"	f	class:cmudb::Schema
IsInlined	src/include/catalog/schema.h	/^  inline bool IsInlined(const int column_id) const {$/;"	f	class:cmudb::Schema
IsInlined	src/type/type.cpp	/^bool Type::IsInlined(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
IsInterested	third_party/gmock/gmock/gmock.h	/^  bool IsInterested() const { return stream_ != NULL; }$/;"	f	class:testing::MatchResultListener
IsLeafPage	src/page/b_plus_tree_page.cpp	/^bool BPlusTreePage::IsLeafPage() const $/;"	f	class:cmudb::BPlusTreePage
IsLower	third_party/gmock/gtest/gtest.h	/^inline bool IsLower(char ch) {$/;"	f	namespace:std::tr1
IsNormalizableWhitespace	third_party/gmock/gmock-gtest-all.cc	/^  static bool IsNormalizableWhitespace(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsNotContainer	third_party/gmock/gtest/gtest.h	/^typedef char IsNotContainer;$/;"	t	namespace:testing::internal
IsNotSubstring	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult IsNotSubstring($/;"	f	namespace:testing
IsNull	src/include/table/tuple.h	/^  inline bool IsNull(Schema *schema, const int column_id) const {$/;"	f	class:cmudb::Tuple
IsNull	src/include/type/value.h	/^  inline bool IsNull() const { return size_.len == PELOTON_VALUE_NULL; }$/;"	f	class:cmudb::Value
IsNull	third_party/gmock/gmock/gmock.h	/^inline PolymorphicMatcher<internal::IsNullMatcher > IsNull() {$/;"	f	namespace:testing
IsNullMatcher	third_party/gmock/gmock/gmock.h	/^class IsNullMatcher {$/;"	c	namespace:testing::internal
IsOrdinaryHiddenColumn	src/sqlite/sqlite3.c	15572;"	d	file:
IsOrdinaryHiddenColumn	src/sqlite/sqlite3.c	15575;"	d	file:
IsOrdinaryHiddenColumn	src/sqlite/sqlite3.c	15578;"	d	file:
IsOverSaturatedByCallCount	third_party/gmock/gmock/gmock.h	/^  bool IsOverSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality
IsPathSeparator	third_party/gmock/gmock-gtest-all.cc	/^static bool IsPathSeparator(char c) {$/;"	f	namespace:testing::internal
IsPowerOfTwo	src/sqlite/sqlite3.c	12938;"	d	file:
IsPrimaryKeyIndex	src/sqlite/sqlite3.c	15813;"	d	file:
IsPrintableAscii	third_party/gmock/gmock-gtest-all.cc	/^inline bool IsPrintableAscii(wchar_t c) {$/;"	f	namespace:testing::internal
IsReadableTypeName	third_party/gmock/gmock/gmock.h	/^inline bool IsReadableTypeName(const string& type_name) {$/;"	f	namespace:testing::internal
IsRepeat	third_party/gmock/gmock-gtest-all.cc	/^bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }$/;"	f	namespace:testing::internal
IsRootDirectory	third_party/gmock/gmock-gtest-all.cc	/^bool FilePath::IsRootDirectory() const {$/;"	f	class:testing::internal::FilePath
IsRootPage	src/page/b_plus_tree_page.cpp	/^bool BPlusTreePage::IsRootPage() const $/;"	f	class:cmudb::BPlusTreePage
IsSatisfiedByCallCount	third_party/gmock/gmock-gtest-all.cc	/^  virtual bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:testing::__anon7::BetweenCardinalityImpl
IsSatisfiedByCallCount	third_party/gmock/gmock/gmock.h	/^  bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality
IsSaturatedByCallCount	third_party/gmock/gmock-gtest-all.cc	/^  virtual bool IsSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::__anon7::BetweenCardinalityImpl
IsSaturatedByCallCount	third_party/gmock/gmock/gmock.h	/^  bool IsSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality
IsSet	third_party/gmock/gmock/gmock.h	/^  static bool IsSet() { return address_ != NULL; }$/;"	f	class:testing::DefaultValue
IsSet	third_party/gmock/gmock/gmock.h	/^  static bool IsSet() { return value_ != NULL; }$/;"	f	class:testing::DefaultValue
IsSpace	src/sqlite/shell.c	149;"	d	file:
IsSpace	third_party/gmock/gtest/gtest.h	/^inline bool IsSpace(char ch) {$/;"	f	namespace:std::tr1
IsStat3	src/sqlite/sqlite3.c	97569;"	d	file:
IsStat3	src/sqlite/sqlite3.c	97572;"	d	file:
IsStat3	src/sqlite/sqlite3.c	97575;"	d	file:
IsStat34	src/sqlite/sqlite3.c	97579;"	d	file:
IsStat4	src/sqlite/sqlite3.c	97568;"	d	file:
IsStat4	src/sqlite/sqlite3.c	97571;"	d	file:
IsStat4	src/sqlite/sqlite3.c	97574;"	d	file:
IsSubstring	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult IsSubstring($/;"	f	namespace:testing
IsSubstringImpl	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult IsSubstringImpl($/;"	f	namespace:testing::__anon2
IsSubstringPred	third_party/gmock/gmock-gtest-all.cc	/^bool IsSubstringPred(const StringType& needle,$/;"	f	namespace:testing::__anon2
IsSubstringPred	third_party/gmock/gmock-gtest-all.cc	/^bool IsSubstringPred(const char* needle, const char* haystack) {$/;"	f	namespace:testing::__anon2
IsSubstringPred	third_party/gmock/gmock-gtest-all.cc	/^bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {$/;"	f	namespace:testing::__anon2
IsTrue	third_party/gmock/gmock-gtest-all.cc	/^bool IsTrue(bool condition) { return condition; }$/;"	f	namespace:testing::internal
IsUniqueIndex	src/sqlite/sqlite3.c	15816;"	d	file:
IsUpper	third_party/gmock/gtest/gtest.h	/^inline bool IsUpper(char ch) {$/;"	f	namespace:std::tr1
IsUtf16SurrogatePair	third_party/gmock/gmock-gtest-all.cc	/^inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {$/;"	f	namespace:testing::internal
IsValidEscape	third_party/gmock/gmock-gtest-all.cc	/^bool IsValidEscape(char c) {$/;"	f	namespace:testing::internal
IsValidXmlCharacter	third_party/gmock/gmock-gtest-all.cc	/^  static bool IsValidXmlCharacter(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsVirtual	src/sqlite/sqlite3.c	15559;"	d	file:
IsVirtual	src/sqlite/sqlite3.c	15561;"	d	file:
IsXDigit	third_party/gmock/gtest/gtest.h	/^inline bool IsXDigit(char ch) {$/;"	f	namespace:std::tr1
IsXDigit	third_party/gmock/gtest/gtest.h	/^inline bool IsXDigit(wchar_t ch) {$/;"	f	namespace:std::tr1
IsZero	src/include/type/value.h	/^  inline bool IsZero() const {$/;"	f	class:cmudb::Value
IsZero	src/type/bigint_type.cpp	/^bool BigintType::IsZero(const Value &val) const {$/;"	f	class:cmudb::BigintType
IsZero	src/type/decimal_type.cpp	/^bool DecimalType::IsZero(const Value &val) const {$/;"	f	class:cmudb::DecimalType
IsZero	src/type/integer_type.cpp	/^bool IntegerType::IsZero(const Value &val) const {$/;"	f	class:cmudb::IntegerType
IsZero	src/type/smallint_type.cpp	/^bool SmallintType::IsZero(const Value &val) const {$/;"	f	class:cmudb::SmallintType
IsZero	src/type/tinyint_type.cpp	/^bool TinyintType::IsZero(const Value &val) const {$/;"	f	class:cmudb::TinyintType
IsZero	src/type/type.cpp	/^bool Type::IsZero(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
IterateOverTuple	third_party/gmock/gmock/gmock.h	/^  struct IterateOverTuple {$/;"	s	class:testing::internal::TransformTupleValuesHelper
IterateOverTuple	third_party/gmock/gmock/gmock.h	/^  struct IterateOverTuple<Tup, 0> {$/;"	s	class:testing::internal::TransformTupleValuesHelper
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<T>* base,$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator10
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator2
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator3
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator4
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator5
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator6
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator7
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator8
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator9
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::RangeGenerator
Iterator	third_party/gmock/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::ValuesInIteratorRangeGenerator
IteratorTraits	third_party/gmock/gtest/gtest.h	/^struct IteratorTraits {$/;"	s	namespace:std::tr1
IteratorTraits	third_party/gmock/gtest/gtest.h	/^struct IteratorTraits<T*> {$/;"	s	namespace:std::tr1
IteratorTraits	third_party/gmock/gtest/gtest.h	/^struct IteratorTraits<const T*> {$/;"	s	namespace:std::tr1
JEACH_ATOM	src/sqlite/sqlite3.c	182026;"	d	file:
JEACH_FULLKEY	src/sqlite/sqlite3.c	182029;"	d	file:
JEACH_ID	src/sqlite/sqlite3.c	182027;"	d	file:
JEACH_JSON	src/sqlite/sqlite3.c	182031;"	d	file:
JEACH_KEY	src/sqlite/sqlite3.c	182023;"	d	file:
JEACH_PARENT	src/sqlite/sqlite3.c	182028;"	d	file:
JEACH_PATH	src/sqlite/sqlite3.c	182030;"	d	file:
JEACH_ROOT	src/sqlite/sqlite3.c	182032;"	d	file:
JEACH_TYPE	src/sqlite/sqlite3.c	182025;"	d	file:
JEACH_VALUE	src/sqlite/sqlite3.c	182024;"	d	file:
JNODE_APPEND	src/sqlite/sqlite3.c	180262;"	d	file:
JNODE_ESCAPE	src/sqlite/sqlite3.c	180258;"	d	file:
JNODE_LABEL	src/sqlite/sqlite3.c	180263;"	d	file:
JNODE_PATCH	src/sqlite/sqlite3.c	180261;"	d	file:
JNODE_RAW	src/sqlite/sqlite3.c	180257;"	d	file:
JNODE_REMOVE	src/sqlite/sqlite3.c	180259;"	d	file:
JNODE_REPLACE	src/sqlite/sqlite3.c	180260;"	d	file:
JOURNAL_HDR_SZ	src/sqlite/sqlite3.c	48111;"	d	file:
JOURNAL_PG_SZ	src/sqlite/sqlite3.c	48105;"	d	file:
JSON_ARRAY	src/sqlite/sqlite3.c	180242;"	d	file:
JSON_CACHE_ID	src/sqlite/sqlite3.c	181097;"	d	file:
JSON_FALSE	src/sqlite/sqlite3.c	180238;"	d	file:
JSON_INT	src/sqlite/sqlite3.c	180239;"	d	file:
JSON_MAX_DEPTH	src/sqlite/sqlite3.c	180302;"	d	file:
JSON_NOINLINE	src/sqlite/sqlite3.c	180792;"	d	file:
JSON_NOINLINE	src/sqlite/sqlite3.c	180794;"	d	file:
JSON_NOINLINE	src/sqlite/sqlite3.c	180796;"	d	file:
JSON_NULL	src/sqlite/sqlite3.c	180236;"	d	file:
JSON_OBJECT	src/sqlite/sqlite3.c	180243;"	d	file:
JSON_REAL	src/sqlite/sqlite3.c	180240;"	d	file:
JSON_STRING	src/sqlite/sqlite3.c	180241;"	d	file:
JSON_SUBTYPE	src/sqlite/sqlite3.c	180246;"	d	file:
JSON_TRUE	src/sqlite/sqlite3.c	180237;"	d	file:
JT_CROSS	src/sqlite/sqlite3.c	16242;"	d	file:
JT_ERROR	src/sqlite/sqlite3.c	16247;"	d	file:
JT_INNER	src/sqlite/sqlite3.c	16241;"	d	file:
JT_LEFT	src/sqlite/sqlite3.c	16244;"	d	file:
JT_NATURAL	src/sqlite/sqlite3.c	16243;"	d	file:
JT_OUTER	src/sqlite/sqlite3.c	16246;"	d	file:
JT_RIGHT	src/sqlite/sqlite3.c	16245;"	d	file:
Join	third_party/gmock/gtest/gtest.h	/^  void Join() {$/;"	f	class:std::tr1::ThreadWithParam
JoinAsTuple	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ string JoinAsTuple(const Strings& fields) {$/;"	f	namespace:testing::internal
JsonEachCursor	src/sqlite/sqlite3.c	/^struct JsonEachCursor {$/;"	s	file:
JsonEachCursor	src/sqlite/sqlite3.c	/^typedef struct JsonEachCursor JsonEachCursor;$/;"	t	typeref:struct:JsonEachCursor	file:
JsonNode	src/sqlite/sqlite3.c	/^struct JsonNode {$/;"	s	file:
JsonNode	src/sqlite/sqlite3.c	/^typedef struct JsonNode JsonNode;$/;"	t	typeref:struct:JsonNode	file:
JsonParse	src/sqlite/sqlite3.c	/^struct JsonParse {$/;"	s	file:
JsonParse	src/sqlite/sqlite3.c	/^typedef struct JsonParse JsonParse;$/;"	t	typeref:struct:JsonParse	file:
JsonString	src/sqlite/sqlite3.c	/^struct JsonString {$/;"	s	file:
JsonString	src/sqlite/sqlite3.c	/^typedef struct JsonString JsonString;$/;"	t	typeref:struct:JsonString	file:
KeccakF1600Step	src/sqlite/shell.c	/^static void KeccakF1600Step(SHA3Context *p){$/;"	f	file:
Key	third_party/gmock/gmock/gmock.h	/^inline internal::KeyMatcher<M> Key(M inner_matcher) {$/;"	f	namespace:testing
KeyAt	src/page/b_plus_tree_internal_page.cpp	/^KeyType B_PLUS_TREE_INTERNAL_PAGE_TYPE::KeyAt(int index) const {$/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
KeyAt	src/page/b_plus_tree_leaf_page.cpp	/^KeyType B_PLUS_TREE_LEAF_PAGE_TYPE::KeyAt(int index) const $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
KeyClass	src/sqlite/sqlite3.c	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass	file:
KeyIndex	src/page/b_plus_tree_leaf_page.cpp	/^int B_PLUS_TREE_LEAF_PAGE_TYPE::KeyIndex($/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
KeyInfo	src/sqlite/sqlite3.c	/^struct KeyInfo {$/;"	s	file:
KeyInfo	src/sqlite/sqlite3.c	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo	file:
KeyMatcher	third_party/gmock/gmock/gmock.h	/^  explicit KeyMatcher(M m) : matcher_for_key_(m) {}$/;"	f	class:testing::internal::KeyMatcher
KeyMatcher	third_party/gmock/gmock/gmock.h	/^class KeyMatcher {$/;"	c	namespace:testing::internal
KeyMatcherImpl	third_party/gmock/gmock/gmock.h	/^  explicit KeyMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::KeyMatcherImpl
KeyMatcherImpl	third_party/gmock/gmock/gmock.h	/^class KeyMatcherImpl : public MatcherInterface<PairType> {$/;"	c	namespace:testing::internal
KeyType	third_party/gmock/gmock/gmock.h	/^  typedef typename RawPairType::first_type KeyType;$/;"	t	class:testing::internal::KeyMatcherImpl
KilledBySignal	third_party/gmock/gmock-gtest-all.cc	/^KilledBySignal::KilledBySignal(int signum) : signum_(signum) {$/;"	f	class:testing::KilledBySignal
KilledBySignal	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ KilledBySignal {$/;"	c	namespace:testing
KindOf	third_party/gmock/gmock/gmock.h	/^template <typename T> struct KindOf {$/;"	s	namespace:testing::internal
LARGEST_INT64	src/sqlite/sqlite3.c	12802;"	d	file:
LARGEST_INT64	src/sqlite/sqlite3.c	149661;"	d	file:
LARGEST_INT64	src/sqlite/sqlite3.c	180159;"	d	file:
LARGEST_INT64	src/sqlite/sqlite3.c	183186;"	d	file:
LCS_ITERATOR_FINISHED	src/sqlite/sqlite3.c	163345;"	d	file:
LEAF_PAGE	src/include/page/b_plus_tree_page.h	/^enum class IndexPageType { INVALID_INDEX_PAGE = 0, LEAF_PAGE, $/;"	m	class:cmudb::IndexPageType
LIKEFUNC	src/sqlite/sqlite3.c	15311;"	d	file:
LIVED	third_party/gmock/gmock-gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
LOCAL_DEPTH	src/include/hash/extendible_hash.h	21;"	d
LOCATE_NOERR	src/sqlite/sqlite3.c	17430;"	d	file:
LOCATE_VIEW	src/sqlite/sqlite3.c	17429;"	d	file:
LOCKFILE_EXCLUSIVE_LOCK	src/sqlite/sqlite3.c	41204;"	d	file:
LOCKFILE_FAIL_IMMEDIATELY	src/sqlite/sqlite3.c	41200;"	d	file:
LOGMAX	src/sqlite/sqlite3.c	22662;"	d	file:
LOG_DEBUG	src/include/common/logger.h	122;"	d
LOG_DEBUG	src/include/common/logger.h	128;"	d
LOG_DEBUG_ENABLED	src/include/common/logger.h	117;"	d
LOG_DEBUG_ENABLED	src/include/common/logger.h	120;"	d
LOG_ERROR	src/include/common/logger.h	77;"	d
LOG_ERROR	src/include/common/logger.h	83;"	d
LOG_ERROR_ENABLED	src/include/common/logger.h	72;"	d
LOG_ERROR_ENABLED	src/include/common/logger.h	75;"	d
LOG_INFO	src/include/common/logger.h	107;"	d
LOG_INFO	src/include/common/logger.h	113;"	d
LOG_INFO_ENABLED	src/include/common/logger.h	102;"	d
LOG_INFO_ENABLED	src/include/common/logger.h	105;"	d
LOG_LEVEL	src/include/common/logger.h	51;"	d
LOG_LEVEL_ALL	src/include/common/logger.h	39;"	d
LOG_LEVEL_DEBUG	src/include/common/logger.h	37;"	d
LOG_LEVEL_ERROR	src/include/common/logger.h	34;"	d
LOG_LEVEL_INFO	src/include/common/logger.h	36;"	d
LOG_LEVEL_OFF	src/include/common/logger.h	33;"	d
LOG_LEVEL_TRACE	src/include/common/logger.h	38;"	d
LOG_LEVEL_WARN	src/include/common/logger.h	35;"	d
LOG_LOG_TIME_FORMAT	src/include/common/logger.h	41;"	d
LOG_OUTPUT_STREAM	src/include/common/logger.h	42;"	d
LOG_TRACE	src/include/common/logger.h	137;"	d
LOG_TRACE	src/include/common/logger.h	143;"	d
LOG_TRACE_ENABLED	src/include/common/logger.h	132;"	d
LOG_TRACE_ENABLED	src/include/common/logger.h	135;"	d
LOG_WARN	src/include/common/logger.h	92;"	d
LOG_WARN	src/include/common/logger.h	98;"	d
LOG_WARN_ENABLED	src/include/common/logger.h	87;"	d
LOG_WARN_ENABLED	src/include/common/logger.h	90;"	d
LONGDOUBLE_TYPE	src/sqlite/sqlite3.c	12507;"	d	file:
LONGDOUBLE_TYPE	src/sqlite/sqlite3.c	12667;"	d	file:
LRUReplacer	src/buffer/lru_replacer.cpp	/^template <typename T> LRUReplacer<T>::LRUReplacer() {$/;"	f	class:cmudb::LRUReplacer
LRUReplacer	src/include/buffer/lru_replacer.h	/^template <typename T> class LRUReplacer : public Replacer<T> {$/;"	c	namespace:cmudb
LTrim	src/include/common/string_utility.h	/^  static inline void LTrim(std::string &s) {$/;"	f	class:cmudb::StringUtility
LastMessage	third_party/gmock/gmock-gtest-all.cc	/^const char* DeathTest::LastMessage() {$/;"	f	class:testing::internal::DeathTest
LaunchParallelTest	test/index/b_plus_tree_concurrent_test.cpp	/^void LaunchParallelTest(uint64_t num_threads, Args &&... args) {$/;"	f	namespace:cmudb
LcsIterator	src/sqlite/sqlite3.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	src/sqlite/sqlite3.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
Le	third_party/gmock/gmock/gmock.h	/^inline internal::Le2Matcher Le() { return internal::Le2Matcher(); }$/;"	f	namespace:testing
Le	third_party/gmock/gmock/gmock.h	/^inline internal::LeMatcher<Rhs> Le(Rhs x) {$/;"	f	namespace:testing
Less	third_party/gmock/gmock/gmock.h	/^  class Less {$/;"	c	class:testing::Expectation
LessComparator	third_party/gmock/gmock/gmock.h	/^struct LessComparator {$/;"	s	namespace:testing::internal
LhsSize	third_party/gmock/gmock/gmock.h	/^  size_t LhsSize() const { return num_elements_; }$/;"	f	class:testing::internal::MatchMatrix
LhsStlContainer	third_party/gmock/gmock/gmock.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsStlContainer	third_party/gmock/gmock/gmock.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsStlContainerReference	third_party/gmock/gmock/gmock.h	/^    typedef typename LhsView::const_reference LhsStlContainerReference;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsStlContainerReference	third_party/gmock/gmock/gmock.h	/^    typedef typename LhsView::const_reference LhsStlContainerReference;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsValue	third_party/gmock/gmock/gmock.h	/^        typename LhsStlContainer::value_type>::type LhsValue;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsValue	third_party/gmock/gmock/gmock.h	/^    typedef typename LhsStlContainer::value_type LhsValue;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsView	third_party/gmock/gmock/gmock.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsView	third_party/gmock/gmock/gmock.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LimitVal	src/sqlite/sqlite3.c	/^struct LimitVal {$/;"	s	file:
LinkedPtrLessThan	third_party/gmock/gmock/gmock.h	/^struct LinkedPtrLessThan {$/;"	s	namespace:testing::internal
ListTestsMatchingFilter	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::ListTestsMatchingFilter() {$/;"	f	class:testing::internal::UnitTestImpl
ListType	third_party/gmock/gmock/gmock.h	/^  typedef ::std::pair<Head, typename MatcherListTail::ListType> ListType;$/;"	t	struct:testing::internal::MatcherList
ListType	third_party/gmock/gmock/gmock.h	/^  typedef ::std::pair<Matcher1, Matcher2> ListType;$/;"	t	struct:testing::internal::MatcherList
LoadDoclistCtx	src/sqlite/sqlite3.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	src/sqlite/sqlite3.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
Lock	third_party/gmock/gtest/gtest.h	/^  void Lock() {$/;"	f	class:std::tr1::MutexBase
Lock	third_party/gmock/gtest/gtest.h	/^  void Lock() {}$/;"	f	class:std::tr1::Mutex
LockExclusive	src/concurrency/lock_manager.cpp	/^bool LockManager::LockExclusive(Transaction *txn, const RID &rid) {$/;"	f	class:cmudb::LockManager
LockManager	src/include/concurrency/lock_manager.h	/^  LockManager(bool strict_2PL) : strict_2PL_(strict_2PL){};$/;"	f	class:cmudb::LockManager
LockManager	src/include/concurrency/lock_manager.h	/^class LockManager {$/;"	c	namespace:cmudb
LockShared	src/concurrency/lock_manager.cpp	/^bool LockManager::LockShared(Transaction *txn, const RID &rid) {$/;"	f	class:cmudb::LockManager
LockUpgrade	src/concurrency/lock_manager.cpp	/^bool LockManager::LockUpgrade(Transaction *txn, const RID &rid) {$/;"	f	class:cmudb::LockManager
Log	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ void Log(LogSeverity severity,$/;"	f	namespace:testing::internal
LogElementMatcherPairVec	third_party/gmock/gmock-gtest-all.cc	/^static void LogElementMatcherPairVec(const ElementMatcherPairs& pairs,$/;"	f	namespace:testing::internal
LogEst	src/sqlite/sqlite3.c	/^typedef INT16_TYPE LogEst;$/;"	t	file:
LogIsVisible	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ bool LogIsVisible(LogSeverity severity) {$/;"	f	namespace:testing::internal
LogSeverity	third_party/gmock/gmock/gmock.h	/^enum LogSeverity {$/;"	g	namespace:testing::internal
LogToStderr	third_party/gmock/gtest/gtest.h	/^inline void LogToStderr() {}$/;"	f	namespace:std::tr1
LogWithLocation	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ void LogWithLocation(testing::internal::LogSeverity severity,$/;"	f	namespace:testing::internal
Lookaside	src/sqlite/sqlite3.c	/^struct Lookaside {$/;"	s	file:
Lookaside	src/sqlite/sqlite3.c	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside	file:
LookasideSlot	src/sqlite/sqlite3.c	/^struct LookasideSlot {$/;"	s	file:
LookasideSlot	src/sqlite/sqlite3.c	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot	file:
Lookup	src/page/b_plus_tree_internal_page.cpp	/^B_PLUS_TREE_INTERNAL_PAGE_TYPE::Lookup(const KeyType &key,$/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
Lookup	src/page/b_plus_tree_leaf_page.cpp	/^bool B_PLUS_TREE_LEAF_PAGE_TYPE::Lookup(const KeyType &key, ValueType &value,$/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
LosslessArithmeticConvertibleImpl	third_party/gmock/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl : public false_type {};$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	third_party/gmock/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	third_party/gmock/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kFloatingPoint, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	third_party/gmock/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kInteger, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	third_party/gmock/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	third_party/gmock/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kInteger, To>$/;"	s	namespace:testing::internal
Lt	third_party/gmock/gmock/gmock.h	/^inline internal::Lt2Matcher Lt() { return internal::Lt2Matcher(); }$/;"	f	namespace:testing
Lt	third_party/gmock/gmock/gmock.h	/^inline internal::LtMatcher<Rhs> Lt(Rhs x) {$/;"	f	namespace:testing
M	src/sqlite/sqlite3.c	/^  int Y, M, D;        \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
MASKBIT	src/sqlite/sqlite3.c	16178;"	d	file:
MASKBIT32	src/sqlite/sqlite3.c	16179;"	d	file:
MASTER_NAME	src/sqlite/sqlite3.c	12916;"	d	file:
MASTER_ROOT	src/sqlite/sqlite3.c	12922;"	d	file:
MATCHER	third_party/gmock/gmock/gmock.h	/^MATCHER(IsEmpty, negation ? "isn't empty" : "is empty") {$/;"	f	namespace:testing
MATCHER	third_party/gmock/gmock/gmock.h	13084;"	d
MATCHER_P	third_party/gmock/gmock/gmock.h	13131;"	d
MATCHER_P10	third_party/gmock/gmock/gmock.h	13783;"	d
MATCHER_P2	third_party/gmock/gmock/gmock.h	13183;"	d
MATCHER_P3	third_party/gmock/gmock/gmock.h	13240;"	d
MATCHER_P4	third_party/gmock/gmock/gmock.h	13300;"	d
MATCHER_P5	third_party/gmock/gmock/gmock.h	13369;"	d
MATCHER_P6	third_party/gmock/gmock/gmock.h	13442;"	d
MATCHER_P7	third_party/gmock/gmock/gmock.h	13517;"	d
MATCHER_P8	third_party/gmock/gmock/gmock.h	13601;"	d
MATCHER_P9	third_party/gmock/gmock/gmock.h	13690;"	d
MAX	src/sqlite/sqlite3.c	12606;"	d	file:
MAX	src/sqlite/sqlite3.c	146267;"	d	file:
MAX	src/sqlite/sqlite3.c	165112;"	d	file:
MAX	src/sqlite/sqlite3.c	183181;"	d	file:
MAX_6BYTE	src/sqlite/sqlite3.c	75020;"	d	file:
MAX_INCR_PHRASE_TOKENS	src/sqlite/sqlite3.c	150760;"	d	file:
MAX_PATH	src/sqlite/sqlite3.c	38238;"	d	file:
MAX_PATHNAME	src/sqlite/sqlite3.c	30269;"	d	file:
MAX_ROWID	src/sqlite/sqlite3.c	83056;"	d	file:
MAX_SECTOR_SIZE	src/sqlite/sqlite3.c	47767;"	d	file:
MEM5LINK	src/sqlite/sqlite3.c	22727;"	d	file:
MEMCELLSIZE	src/sqlite/sqlite3.c	18573;"	d	file:
MEMDB	src/sqlite/sqlite3.c	48120;"	d	file:
MEMDB	src/sqlite/sqlite3.c	48122;"	d	file:
MEMJOURNAL_DFLT_FILECHUNKSIZE	src/sqlite/sqlite3.c	89268;"	d	file:
MEMTYPE_HEAP	src/sqlite/sqlite3.c	18008;"	d	file:
MEMTYPE_LOOKASIDE	src/sqlite/sqlite3.c	18009;"	d	file:
MEMTYPE_PCACHE	src/sqlite/sqlite3.c	18011;"	d	file:
MEMTYPE_SCRATCH	src/sqlite/sqlite3.c	18010;"	d	file:
MEM_AffMask	src/sqlite/sqlite3.c	18592;"	d	file:
MEM_Agg	src/sqlite/sqlite3.c	18609;"	d	file:
MEM_Blob	src/sqlite/sqlite3.c	18591;"	d	file:
MEM_Cleared	src/sqlite/sqlite3.c	18596;"	d	file:
MEM_Dyn	src/sqlite/sqlite3.c	18606;"	d	file:
MEM_Ephem	src/sqlite/sqlite3.c	18608;"	d	file:
MEM_Frame	src/sqlite/sqlite3.c	18594;"	d	file:
MEM_Int	src/sqlite/sqlite3.c	18589;"	d	file:
MEM_Null	src/sqlite/sqlite3.c	18587;"	d	file:
MEM_Real	src/sqlite/sqlite3.c	18590;"	d	file:
MEM_RowSet	src/sqlite/sqlite3.c	18593;"	d	file:
MEM_Static	src/sqlite/sqlite3.c	18607;"	d	file:
MEM_Str	src/sqlite/sqlite3.c	18588;"	d	file:
MEM_Subtype	src/sqlite/sqlite3.c	18611;"	d	file:
MEM_Term	src/sqlite/sqlite3.c	18605;"	d	file:
MEM_TypeMask	src/sqlite/sqlite3.c	18597;"	d	file:
MEM_Undefined	src/sqlite/sqlite3.c	18595;"	d	file:
MEM_Zero	src/sqlite/sqlite3.c	18610;"	d	file:
MEM_Zero	src/sqlite/sqlite3.c	18613;"	d	file:
MEM_Zero	src/sqlite/sqlite3.c	18614;"	d	file:
MIN	src/sqlite/sqlite3.c	12603;"	d	file:
MIN	src/sqlite/sqlite3.c	146264;"	d	file:
MIN	src/sqlite/sqlite3.c	165115;"	d	file:
MIN	src/sqlite/sqlite3.c	183180;"	d	file:
MOCK_CONST_METHOD0	third_party/gmock/gmock/gmock.h	10991;"	d
MOCK_CONST_METHOD0_T	third_party/gmock/gmock/gmock.h	11015;"	d
MOCK_CONST_METHOD0_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11107;"	d
MOCK_CONST_METHOD0_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11061;"	d
MOCK_CONST_METHOD1	third_party/gmock/gmock/gmock.h	10992;"	d
MOCK_CONST_METHOD10	third_party/gmock/gmock/gmock.h	11001;"	d
MOCK_CONST_METHOD10_T	third_party/gmock/gmock/gmock.h	11035;"	d
MOCK_CONST_METHOD10_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11127;"	d
MOCK_CONST_METHOD10_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11081;"	d
MOCK_CONST_METHOD1_T	third_party/gmock/gmock/gmock.h	11017;"	d
MOCK_CONST_METHOD1_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11109;"	d
MOCK_CONST_METHOD1_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11063;"	d
MOCK_CONST_METHOD2	third_party/gmock/gmock/gmock.h	10993;"	d
MOCK_CONST_METHOD2_T	third_party/gmock/gmock/gmock.h	11019;"	d
MOCK_CONST_METHOD2_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11111;"	d
MOCK_CONST_METHOD2_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11065;"	d
MOCK_CONST_METHOD3	third_party/gmock/gmock/gmock.h	10994;"	d
MOCK_CONST_METHOD3_T	third_party/gmock/gmock/gmock.h	11021;"	d
MOCK_CONST_METHOD3_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11113;"	d
MOCK_CONST_METHOD3_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11067;"	d
MOCK_CONST_METHOD4	third_party/gmock/gmock/gmock.h	10995;"	d
MOCK_CONST_METHOD4_T	third_party/gmock/gmock/gmock.h	11023;"	d
MOCK_CONST_METHOD4_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11115;"	d
MOCK_CONST_METHOD4_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11069;"	d
MOCK_CONST_METHOD5	third_party/gmock/gmock/gmock.h	10996;"	d
MOCK_CONST_METHOD5_T	third_party/gmock/gmock/gmock.h	11025;"	d
MOCK_CONST_METHOD5_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11117;"	d
MOCK_CONST_METHOD5_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11071;"	d
MOCK_CONST_METHOD6	third_party/gmock/gmock/gmock.h	10997;"	d
MOCK_CONST_METHOD6_T	third_party/gmock/gmock/gmock.h	11027;"	d
MOCK_CONST_METHOD6_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11119;"	d
MOCK_CONST_METHOD6_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11073;"	d
MOCK_CONST_METHOD7	third_party/gmock/gmock/gmock.h	10998;"	d
MOCK_CONST_METHOD7_T	third_party/gmock/gmock/gmock.h	11029;"	d
MOCK_CONST_METHOD7_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11121;"	d
MOCK_CONST_METHOD7_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11075;"	d
MOCK_CONST_METHOD8	third_party/gmock/gmock/gmock.h	10999;"	d
MOCK_CONST_METHOD8_T	third_party/gmock/gmock/gmock.h	11031;"	d
MOCK_CONST_METHOD8_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11123;"	d
MOCK_CONST_METHOD8_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11077;"	d
MOCK_CONST_METHOD9	third_party/gmock/gmock/gmock.h	11000;"	d
MOCK_CONST_METHOD9_T	third_party/gmock/gmock/gmock.h	11033;"	d
MOCK_CONST_METHOD9_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11125;"	d
MOCK_CONST_METHOD9_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11079;"	d
MOCK_METHOD0	third_party/gmock/gmock/gmock.h	10979;"	d
MOCK_METHOD0_T	third_party/gmock/gmock/gmock.h	11003;"	d
MOCK_METHOD0_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11084;"	d
MOCK_METHOD0_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11038;"	d
MOCK_METHOD1	third_party/gmock/gmock/gmock.h	10980;"	d
MOCK_METHOD10	third_party/gmock/gmock/gmock.h	10989;"	d
MOCK_METHOD10_T	third_party/gmock/gmock/gmock.h	11013;"	d
MOCK_METHOD10_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11104;"	d
MOCK_METHOD10_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11058;"	d
MOCK_METHOD1_T	third_party/gmock/gmock/gmock.h	11004;"	d
MOCK_METHOD1_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11086;"	d
MOCK_METHOD1_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11040;"	d
MOCK_METHOD2	third_party/gmock/gmock/gmock.h	10981;"	d
MOCK_METHOD2_T	third_party/gmock/gmock/gmock.h	11005;"	d
MOCK_METHOD2_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11088;"	d
MOCK_METHOD2_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11042;"	d
MOCK_METHOD3	third_party/gmock/gmock/gmock.h	10982;"	d
MOCK_METHOD3_T	third_party/gmock/gmock/gmock.h	11006;"	d
MOCK_METHOD3_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11090;"	d
MOCK_METHOD3_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11044;"	d
MOCK_METHOD4	third_party/gmock/gmock/gmock.h	10983;"	d
MOCK_METHOD4_T	third_party/gmock/gmock/gmock.h	11007;"	d
MOCK_METHOD4_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11092;"	d
MOCK_METHOD4_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11046;"	d
MOCK_METHOD5	third_party/gmock/gmock/gmock.h	10984;"	d
MOCK_METHOD5_T	third_party/gmock/gmock/gmock.h	11008;"	d
MOCK_METHOD5_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11094;"	d
MOCK_METHOD5_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11048;"	d
MOCK_METHOD6	third_party/gmock/gmock/gmock.h	10985;"	d
MOCK_METHOD6_T	third_party/gmock/gmock/gmock.h	11009;"	d
MOCK_METHOD6_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11096;"	d
MOCK_METHOD6_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11050;"	d
MOCK_METHOD7	third_party/gmock/gmock/gmock.h	10986;"	d
MOCK_METHOD7_T	third_party/gmock/gmock/gmock.h	11010;"	d
MOCK_METHOD7_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11098;"	d
MOCK_METHOD7_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11052;"	d
MOCK_METHOD8	third_party/gmock/gmock/gmock.h	10987;"	d
MOCK_METHOD8_T	third_party/gmock/gmock/gmock.h	11011;"	d
MOCK_METHOD8_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11100;"	d
MOCK_METHOD8_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11054;"	d
MOCK_METHOD9	third_party/gmock/gmock/gmock.h	10988;"	d
MOCK_METHOD9_T	third_party/gmock/gmock/gmock.h	11012;"	d
MOCK_METHOD9_T_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11102;"	d
MOCK_METHOD9_WITH_CALLTYPE	third_party/gmock/gmock/gmock.h	11056;"	d
MODE_Ascii	src/sqlite/shell.c	1549;"	d	file:
MODE_Column	src/sqlite/shell.c	1540;"	d	file:
MODE_Csv	src/sqlite/shell.c	1547;"	d	file:
MODE_Explain	src/sqlite/shell.c	1548;"	d	file:
MODE_Html	src/sqlite/shell.c	1543;"	d	file:
MODE_Insert	src/sqlite/shell.c	1544;"	d	file:
MODE_Line	src/sqlite/shell.c	1539;"	d	file:
MODE_List	src/sqlite/shell.c	1541;"	d	file:
MODE_Pretty	src/sqlite/shell.c	1550;"	d	file:
MODE_Quote	src/sqlite/shell.c	1545;"	d	file:
MODE_Semi	src/sqlite/shell.c	1542;"	d	file:
MODE_Tcl	src/sqlite/shell.c	1546;"	d	file:
MSVC_VERSION	src/sqlite/sqlite3.c	165164;"	d	file:
MSVC_VERSION	src/sqlite/sqlite3.c	165166;"	d	file:
MSVC_VERSION	src/sqlite/sqlite3.c	981;"	d	file:
MSVC_VERSION	src/sqlite/sqlite3.c	983;"	d	file:
MUTEX_LOGIC	src/sqlite/sqlite3.c	14750;"	d	file:
MUTEX_LOGIC	src/sqlite/sqlite3.c	14752;"	d	file:
MX_CELL	src/sqlite/sqlite3.c	58680;"	d	file:
MX_CELL_SIZE	src/sqlite/sqlite3.c	58673;"	d	file:
MX_CLOSE_ATTEMPT	src/sqlite/sqlite3.c	40766;"	d	file:
MX_SMALL	src/sqlite/sqlite3.c	21934;"	d	file:
MakeAction	third_party/gmock/gmock/gmock.h	/^Action<F> MakeAction(ActionInterface<F>* impl) {$/;"	f	namespace:testing
MakeAndRegisterTestInfo	third_party/gmock/gmock-gtest-all.cc	/^TestInfo* MakeAndRegisterTestInfo($/;"	f	namespace:testing::internal
MakeCardinality	third_party/gmock/gmock/gmock.h	/^inline Cardinality MakeCardinality(const CardinalityInterface* c) {$/;"	f	namespace:testing
MakeConnection	third_party/gmock/gmock-gtest-all.cc	/^void StreamingListener::SocketWriter::MakeConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
MakeFileName	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::MakeFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
MakeMatcher	third_party/gmock/gmock/gmock.h	/^inline Matcher<T> MakeMatcher(const MatcherInterface<T>* impl) {$/;"	f	namespace:testing
MakePolymorphicAction	third_party/gmock/gmock/gmock.h	/^inline PolymorphicAction<Impl> MakePolymorphicAction(const Impl& impl) {$/;"	f	namespace:testing
MakePolymorphicMatcher	third_party/gmock/gmock/gmock.h	/^inline PolymorphicMatcher<Impl> MakePolymorphicMatcher(const Impl& impl) {$/;"	f	namespace:testing
MakePredicateFormatterFromMatcher	third_party/gmock/gmock/gmock.h	/^MakePredicateFormatterFromMatcher(const M& matcher) {$/;"	f	namespace:testing::internal
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue();$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	third_party/gmock/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8,$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid();$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8, A9);$/;"	t	struct:testing::internal::Function
MakeResultVoid	third_party/gmock/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);$/;"	t	struct:testing::internal::Function
MappingType	src/include/page/b_plus_tree_page.h	27;"	d
MarkDelete	src/page/table_page.cpp	/^bool TablePage::MarkDelete(const RID &rid, Transaction *txn,$/;"	f	class:cmudb::TablePage
MarkDelete	src/table/table_heap.cpp	/^bool TableHeap::MarkDelete(const RID &rid, Transaction *txn) {$/;"	f	class:cmudb::TableHeap
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::RefMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::SizeIsMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(LhsContainer lhs,$/;"	f	class:testing::internal::PointwiseMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(LhsContainer lhs,$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(Pointer pointer,$/;"	f	class:testing::internal::PointeeMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(T obj, MatchResultListener* listener) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(T value,$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::EndsWithMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::HasSubstrMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::StartsWithMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::StrEqualityMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherBase
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(T& x,  \/\/ NOLINT$/;"	f	class:testing::internal::TrulyMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const LhsContainer& lhs,$/;"	f	class:testing::internal::ContainerEqMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::EndsWithMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::HasSubstrMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::StartsWithMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::StrEqualityMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const Pointer& p,$/;"	f	class:testing::internal::IsNullMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const Pointer& p,$/;"	f	class:testing::internal::NotNullMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const T& value, MatchResultListener* listener) const {$/;"	f	class:testing::internal::FieldMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplain(const T&value, MatchResultListener* listener) const {$/;"	f	class:testing::internal::PropertyMatcher
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain($/;"	f	class:testing::internal::AnyMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(ArgsTuple args,$/;"	f	class:testing::internal::ArgsMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::ContainsMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::EachMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::ElementsAreMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(PairType a_pair,$/;"	f	class:testing::internal::PairMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(PairType key_value,$/;"	f	class:testing::internal::KeyMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::BothOfMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl
MatchAndExplain	third_party/gmock/gmock/gmock.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::NotMatcherImpl
MatchAndExplainImpl	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplainImpl(bool all_elements_should_match,$/;"	f	class:testing::internal::QuantifierMatcherImpl
MatchAndExplainImpl	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplainImpl(false_type \/* is_not_pointer *\/, const Class& obj,$/;"	f	class:testing::internal::FieldMatcher
MatchAndExplainImpl	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplainImpl(false_type \/* is_not_pointer *\/, const Class& obj,$/;"	f	class:testing::internal::PropertyMatcher
MatchAndExplainImpl	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplainImpl(true_type \/* is_pointer *\/, const Class* p,$/;"	f	class:testing::internal::FieldMatcher
MatchAndExplainImpl	third_party/gmock/gmock/gmock.h	/^  bool MatchAndExplainImpl(true_type \/* is_pointer *\/, const Class* p,$/;"	f	class:testing::internal::PropertyMatcher
MatchInfo	src/sqlite/sqlite3.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	src/sqlite/sqlite3.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
MatchMatrix	third_party/gmock/gmock/gmock.h	/^  MatchMatrix(size_t num_elements, size_t num_matchers)$/;"	f	class:testing::internal::MatchMatrix
MatchMatrix	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ MatchMatrix {$/;"	c	namespace:testing::internal
MatchPrintAndExplain	third_party/gmock/gmock/gmock.h	/^bool MatchPrintAndExplain(Value& value, const Matcher<T>& matcher,$/;"	f	namespace:testing::internal
MatchRegexAnywhere	third_party/gmock/gmock-gtest-all.cc	/^bool MatchRegexAnywhere(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRegexAtHead	third_party/gmock/gmock-gtest-all.cc	/^bool MatchRegexAtHead(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRepetitionAndRegexAtHead	third_party/gmock/gmock-gtest-all.cc	/^bool MatchRepetitionAndRegexAtHead($/;"	f	namespace:testing::internal
MatchResultListener	third_party/gmock/gmock/gmock.h	/^  explicit MatchResultListener(::std::ostream* os) : stream_(os) {}$/;"	f	class:testing::MatchResultListener
MatchResultListener	third_party/gmock/gmock/gmock.h	/^class MatchResultListener {$/;"	c	namespace:testing
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<StringPiece>::Matcher(StringPiece s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<StringPiece>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<StringPiece>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<const StringPiece&>::Matcher(StringPiece s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<const StringPiece&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<const StringPiece&>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<const internal::string&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<const internal::string&>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<internal::string>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock-gtest-all.cc	/^Matcher<internal::string>::Matcher(const internal::string& s) { *this = Eq(s); }$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^  Matcher() {}$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<StringPiece>* impl)$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<T>* impl)$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<const StringPiece&>* impl)$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<const internal::string&>* impl)$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<internal::string>* impl)$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^Matcher<T>::Matcher(T value) { *this = Eq(value); }$/;"	f	class:testing::Matcher
Matcher	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Matcher<StringPiece>$/;"	c	namespace:testing
Matcher	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Matcher<const StringPiece&>$/;"	c	namespace:testing
Matcher	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Matcher<const internal::string&>$/;"	c	namespace:testing
Matcher	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Matcher<internal::string>$/;"	c	namespace:testing
Matcher	third_party/gmock/gmock/gmock.h	/^class Matcher : public internal::MatcherBase<T> {$/;"	c	namespace:testing
MatcherAsPredicate	third_party/gmock/gmock/gmock.h	/^  explicit MatcherAsPredicate(M matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::MatcherAsPredicate
MatcherAsPredicate	third_party/gmock/gmock/gmock.h	/^class MatcherAsPredicate {$/;"	c	namespace:testing::internal
MatcherBase	third_party/gmock/gmock/gmock.h	/^  MatcherBase() {}$/;"	f	class:testing::internal::MatcherBase
MatcherBase	third_party/gmock/gmock/gmock.h	/^  explicit MatcherBase(const MatcherInterface<T>* impl)$/;"	f	class:testing::internal::MatcherBase
MatcherBase	third_party/gmock/gmock/gmock.h	/^class MatcherBase {$/;"	c	namespace:testing::internal
MatcherCast	third_party/gmock/gmock/gmock.h	/^inline Matcher<T> MatcherCast(M matcher) {$/;"	f	namespace:testing
MatcherCastImpl	third_party/gmock/gmock/gmock.h	/^class MatcherCastImpl {$/;"	c	namespace:testing::internal
MatcherCastImpl	third_party/gmock/gmock/gmock.h	/^class MatcherCastImpl<T, Matcher<T> > {$/;"	c	namespace:testing::internal
MatcherCastImpl	third_party/gmock/gmock/gmock.h	/^class MatcherCastImpl<T, Matcher<U> > {$/;"	c	namespace:testing::internal
MatcherDescriberInterface	third_party/gmock/gmock/gmock.h	/^class MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherDescriberVec	third_party/gmock/gmock/gmock.h	/^  typedef ::std::vector<const MatcherDescriberInterface*> MatcherDescriberVec;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImplBase
MatcherInterface	third_party/gmock/gmock/gmock.h	/^class MatcherInterface : public MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherList	third_party/gmock/gmock/gmock.h	/^struct MatcherList {$/;"	s	namespace:testing::internal
MatcherList	third_party/gmock/gmock/gmock.h	/^struct MatcherList<2, Matcher1, Matcher2> {$/;"	s	namespace:testing::internal
MatcherListTail	third_party/gmock/gmock/gmock.h	/^  typedef MatcherList<kSize - 1, Tail...> MatcherListTail;$/;"	t	struct:testing::internal::MatcherList
MatcherListType	third_party/gmock/gmock/gmock.h	/^  typedef MatcherList<sizeof...(Args), Args...> MatcherListType;$/;"	t	class:testing::internal::VariadicMatcher
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9,$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7, A8> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4, A5, A6, A7> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4, A5, A6> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4, A5> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3, A4> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2, A3> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1, A2> > {$/;"	s	namespace:testing::internal
MatcherTuple	third_party/gmock/gmock/gmock.h	/^struct MatcherTuple< ::std::tr1::tuple<A1> > {$/;"	s	namespace:testing::internal
MatcherVec	third_party/gmock/gmock/gmock.h	/^  typedef ::std::vector<Matcher<const Element&> > MatcherVec;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
Matches	third_party/gmock/gmock/gmock.h	/^  bool Matches(T x) const {$/;"	f	class:testing::internal::MatcherBase
Matches	third_party/gmock/gmock/gmock.h	/^  bool Matches(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::OnCallSpec
Matches	third_party/gmock/gmock/gmock.h	/^  static bool Matches(const MatcherTuple& \/* matcher_tuple *\/,$/;"	f	class:testing::internal::TuplePrefix
Matches	third_party/gmock/gmock/gmock.h	/^  static bool Matches(const MatcherTuple& matcher_tuple,$/;"	f	class:testing::internal::TuplePrefix
Matches	third_party/gmock/gmock/gmock.h	/^inline internal::MatcherAsPredicate<M> Matches(M matcher) {$/;"	f	namespace:testing
MatchesFilter	third_party/gmock/gmock-gtest-all.cc	/^bool UnitTestOptions::MatchesFilter($/;"	f	class:testing::internal::UnitTestOptions
MatchesRegex	third_party/gmock/gmock/gmock.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex($/;"	f	namespace:testing
MatchesRegexMatcher	third_party/gmock/gmock/gmock.h	/^  MatchesRegexMatcher(const RE* regex, bool full_match)$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchesRegexMatcher	third_party/gmock/gmock/gmock.h	/^class MatchesRegexMatcher {$/;"	c	namespace:testing::internal
MatchinfoBuffer	src/sqlite/sqlite3.c	/^struct MatchinfoBuffer {$/;"	s	file:
MatchinfoBuffer	src/sqlite/sqlite3.c	/^typedef struct MatchinfoBuffer MatchinfoBuffer;$/;"	t	typeref:struct:MatchinfoBuffer	file:
Max	src/include/type/value.h	/^  inline Value Max(const Value &o) const {$/;"	f	class:cmudb::Value
Max	src/type/decimal_type.cpp	/^Value DecimalType::Max(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Max	src/type/integer_parent_type.cpp	/^Value IntegerParentType::Max(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerParentType
Max	src/type/type.cpp	/^Value Type::Max(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
Max	src/type/varlen_type.cpp	/^Value VarlenType::Max(const Value &left, const Value &right) const {$/;"	f	class:cmudb::VarlenType
Max	third_party/gmock/gtest/gtest.h	/^inline double FloatingPoint<double>::Max() { return DBL_MAX; }$/;"	f	class:testing::internal::FloatingPoint
Max	third_party/gmock/gtest/gtest.h	/^inline float FloatingPoint<float>::Max() { return FLT_MAX; }$/;"	f	class:testing::internal::FloatingPoint
MaxBipartiteMatchState	third_party/gmock/gmock-gtest-all.cc	/^  explicit MaxBipartiteMatchState(const MatchMatrix& graph)$/;"	f	class:testing::internal::MaxBipartiteMatchState
MaxBipartiteMatchState	third_party/gmock/gmock-gtest-all.cc	/^class MaxBipartiteMatchState {$/;"	c	namespace:testing::internal	file:
MaybeDescribeExtraMatcherTo	third_party/gmock/gmock/gmock.h	/^  virtual void MaybeDescribeExtraMatcherTo(::std::ostream* os) {$/;"	f	class:testing::internal::TypedExpectation
Mem	src/sqlite/sqlite3.c	/^typedef struct sqlite3_value Mem;$/;"	t	typeref:struct:sqlite3_value	file:
Mem0Global	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem3Block	src/sqlite/sqlite3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	src/sqlite/sqlite3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Global	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem5Global	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Link	src/sqlite/sqlite3.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	src/sqlite/sqlite3.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
MemBlockHdr	src/sqlite/sqlite3.c	/^struct MemBlockHdr {$/;"	s	file:
MemJournal	src/sqlite/sqlite3.c	/^struct MemJournal {$/;"	s	file:
MemJournal	src/sqlite/sqlite3.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournalMethods	src/sqlite/sqlite3.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemPage	src/sqlite/sqlite3.c	/^struct MemPage {$/;"	s	file:
MemPage	src/sqlite/sqlite3.c	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage	file:
MemSetTypeFlag	src/sqlite/sqlite3.c	18626;"	d	file:
MemValue	src/sqlite/sqlite3.c	/^  union MemValue {$/;"	u	struct:sqlite3_value	file:
MergeEngine	src/sqlite/sqlite3.c	/^struct MergeEngine {$/;"	s	file:
MergeEngine	src/sqlite/sqlite3.c	/^typedef struct MergeEngine MergeEngine;     \/* Merge PMAs together *\/$/;"	t	typeref:struct:MergeEngine	file:
Message	third_party/gmock/gmock-gtest-all.cc	/^Message::Message() : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	third_party/gmock/gtest/gtest.h	/^  Message(const Message& msg) : ss_(new ::std::stringstream) {  \/\/ NOLINT$/;"	f	class:testing::Message
Message	third_party/gmock/gtest/gtest.h	/^  explicit Message(const char* str) : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ Message {$/;"	c	namespace:testing
Min	src/include/type/value.h	/^  inline Value Min(const Value &o) const {$/;"	f	class:cmudb::Value
Min	src/type/decimal_type.cpp	/^Value DecimalType::Min(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Min	src/type/integer_parent_type.cpp	/^Value IntegerParentType::Min(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerParentType
Min	src/type/type.cpp	/^Value Type::Min(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
Min	src/type/varlen_type.cpp	/^Value VarlenType::Min(const Value &left, const Value &right) const {$/;"	f	class:cmudb::VarlenType
Mock	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Mock {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^  MockFunction() {}$/;"	f	class:testing::MockFunction
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R()> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7, A8)> {$/;"	c	namespace:testing
MockFunction	third_party/gmock/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)> {$/;"	c	namespace:testing
MockObjectRegistry	third_party/gmock/gmock-gtest-all.cc	/^class MockObjectRegistry {$/;"	c	namespace:testing::__anon8	file:
MockObjectState	third_party/gmock/gmock-gtest-all.cc	/^  MockObjectState()$/;"	f	struct:testing::__anon8::MockObjectState
MockObjectState	third_party/gmock/gmock-gtest-all.cc	/^struct MockObjectState {$/;"	s	namespace:testing::__anon8	file:
MockSpec	third_party/gmock/gmock/gmock.h	/^  explicit MockSpec(internal::FunctionMockerBase<F>* function_mocker)$/;"	f	class:testing::internal::MockSpec
MockSpec	third_party/gmock/gmock/gmock.h	/^class MockSpec {$/;"	c	namespace:testing::internal
Module	src/sqlite/sqlite3.c	/^struct Module {$/;"	s	file:
Module	src/sqlite/sqlite3.c	/^typedef struct Module Module;$/;"	t	typeref:struct:Module	file:
Modulo	src/include/type/value.h	/^  inline Value Modulo(const Value &o) const {$/;"	f	class:cmudb::Value
Modulo	src/type/bigint_type.cpp	/^Value BigintType::Modulo(const Value &left, const Value &right) const {$/;"	f	class:cmudb::BigintType
Modulo	src/type/decimal_type.cpp	/^Value DecimalType::Modulo(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Modulo	src/type/integer_type.cpp	/^Value IntegerType::Modulo(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerType
Modulo	src/type/smallint_type.cpp	/^Value SmallintType::Modulo(const Value &left, const Value &right) const {$/;"	f	class:cmudb::SmallintType
Modulo	src/type/tinyint_type.cpp	/^Value TinyintType::Modulo(const Value &left, const Value &right) const {$/;"	f	class:cmudb::TinyintType
Modulo	src/type/type.cpp	/^Value Type::Modulo(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
ModuloValue	src/include/type/integer_parent_type.h	/^Value IntegerParentType::ModuloValue(const Value &left,$/;"	f	class:cmudb::IntegerParentType
MonomorphicImpl	third_party/gmock/gmock/gmock.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicAction::MonomorphicImpl
MonomorphicImpl	third_party/gmock/gmock/gmock.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
MonomorphicImpl	third_party/gmock/gmock/gmock.h	/^  class MonomorphicImpl : public ActionInterface<F> {$/;"	c	class:testing::PolymorphicAction
MonomorphicImpl	third_party/gmock/gmock/gmock.h	/^  class MonomorphicImpl : public MatcherInterface<T> {$/;"	c	class:testing::PolymorphicMatcher
MonomorphicInnerMatcher	third_party/gmock/gmock/gmock.h	/^  typedef Matcher<const SelectedArgs&> MonomorphicInnerMatcher;$/;"	t	class:testing::internal::ArgsMatcherImpl
MoveAllTo	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::MoveAllTo($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
MoveAllTo	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::MoveAllTo(BPlusTreeLeafPage *recipient,$/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
MoveFirstToEndOf	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::MoveFirstToEndOf($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
MoveFirstToEndOf	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::MoveFirstToEndOf(BPlusTreeLeafPage *recipient,$/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
MoveHalfTo	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::MoveHalfTo($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
MoveHalfTo	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::MoveHalfTo($/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
MoveLastToFrontOf	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::MoveLastToFrontOf($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
MoveLastToFrontOf	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::MoveLastToFrontOf($/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
Multiply	src/include/type/value.h	/^  inline Value Multiply(const Value &o) const {$/;"	f	class:cmudb::Value
Multiply	src/type/bigint_type.cpp	/^Value BigintType::Multiply(const Value &left, const Value &right) const {$/;"	f	class:cmudb::BigintType
Multiply	src/type/decimal_type.cpp	/^Value DecimalType::Multiply(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Multiply	src/type/integer_type.cpp	/^Value IntegerType::Multiply(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerType
Multiply	src/type/smallint_type.cpp	/^Value SmallintType::Multiply(const Value &left, const Value &right) const {$/;"	f	class:cmudb::SmallintType
Multiply	src/type/tinyint_type.cpp	/^Value TinyintType::Multiply(const Value &left, const Value &right) const {$/;"	f	class:cmudb::TinyintType
Multiply	src/type/type.cpp	/^Value Type::Multiply(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
MultiplyValue	src/include/type/integer_parent_type.h	/^Value IntegerParentType::MultiplyValue(const Value &left,$/;"	f	class:cmudb::IntegerParentType
Mutex	third_party/gmock/gtest/gtest.h	/^  Mutex() {$/;"	f	class:std::tr1::Mutex
Mutex	third_party/gmock/gtest/gtest.h	/^  Mutex() {}$/;"	f	class:std::tr1::Mutex
Mutex	third_party/gmock/gtest/gtest.h	/^class Mutex : public MutexBase {$/;"	c	namespace:std::tr1
Mutex	third_party/gmock/gtest/gtest.h	/^class Mutex {$/;"	c	namespace:std::tr1
MutexBase	third_party/gmock/gtest/gtest.h	/^class MutexBase {$/;"	c	namespace:std::tr1
MutexLock	third_party/gmock/gtest/gtest.h	/^typedef GTestMutexLock MutexLock;$/;"	t	namespace:std::tr1
NB	src/sqlite/sqlite3.c	66287;"	d	file:
NCELL	src/sqlite/sqlite3.c	165057;"	d	file:
NCSIZE	src/sqlite/sqlite3.c	21437;"	d	file:
NC_AllowAgg	src/sqlite/sqlite3.c	16323;"	d	file:
NC_HasAgg	src/sqlite/sqlite3.c	16327;"	d	file:
NC_IdxExpr	src/sqlite/sqlite3.c	16328;"	d	file:
NC_InAggFunc	src/sqlite/sqlite3.c	16326;"	d	file:
NC_IsCheck	src/sqlite/sqlite3.c	16325;"	d	file:
NC_MinMaxAgg	src/sqlite/sqlite3.c	16330;"	d	file:
NC_PartIdx	src/sqlite/sqlite3.c	16324;"	d	file:
NC_VarSelect	src/sqlite/sqlite3.c	16329;"	d	file:
NDEBUG	src/sqlite/sqlite3.c	12055;"	d	file:
NDEBUG	src/sqlite/sqlite3.c	12058;"	d	file:
NDEBUG	src/sqlite/sqlite3.c	145915;"	d	file:
NDEBUG	src/sqlite/sqlite3.c	146349;"	d	file:
NDEBUG	src/sqlite/sqlite3.c	182554;"	d	file:
NDEBUG	src/sqlite/sqlite3.c	182557;"	d	file:
NDELAY	src/sqlite/sqlite3.c	142564;"	d	file:
NEVER	src/sqlite/sqlite3.c	12131;"	d	file:
NEVER	src/sqlite/sqlite3.c	12134;"	d	file:
NEVER	src/sqlite/sqlite3.c	12137;"	d	file:
NEVER	src/sqlite/sqlite3.c	146320;"	d	file:
NEVER	src/sqlite/sqlite3.c	146323;"	d	file:
NEVER	src/sqlite/sqlite3.c	146328;"	d	file:
NEVER	src/sqlite/sqlite3.c	183178;"	d	file:
NN	src/sqlite/sqlite3.c	66286;"	d	file:
NOT_WITHIN	src/include/sqlite/sqlite3.h	8726;"	d
NOT_WITHIN	src/sqlite/sqlite3.c	9758;"	d	file:
NO_LOCK	src/sqlite/sqlite3.c	14553;"	d	file:
NO_PARENT	src/include/common/config.h	20;"	d
NTDDI_WIN8	src/sqlite/sqlite3.c	38198;"	d	file:
NTDDI_WINBLUE	src/sqlite/sqlite3.c	38202;"	d	file:
NTDDI_WINTHRESHOLD	src/sqlite/sqlite3.c	38206;"	d	file:
N_HASH	src/sqlite/sqlite3.c	21940;"	d	file:
N_OR_COST	src/sqlite/sqlite3.c	126990;"	d	file:
N_SORT_BUCKET	src/sqlite/sqlite3.c	45278;"	d	file:
N_STATEMENT	src/sqlite/sqlite3.c	168058;"	d	file:
NaggyMock	third_party/gmock/gmock/gmock.h	/^  NaggyMock() {$/;"	f	class:testing::NaggyMock
NaggyMock	third_party/gmock/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::NaggyMock
NaggyMock	third_party/gmock/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::NaggyMock
NaggyMock	third_party/gmock/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::NaggyMock
NaggyMock	third_party/gmock/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::NaggyMock
NaggyMock	third_party/gmock/gmock/gmock.h	/^  explicit NaggyMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::NaggyMock
NaggyMock	third_party/gmock/gmock/gmock.h	/^class NaggyMock : public MockClass {$/;"	c	namespace:testing
NameContext	src/sqlite/sqlite3.c	/^struct NameContext {$/;"	s	file:
NameContext	src/sqlite/sqlite3.c	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext	file:
NanSensitiveDoubleEq	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> NanSensitiveDoubleEq(double rhs) {$/;"	f	namespace:testing
NanSensitiveDoubleNear	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> NanSensitiveDoubleNear($/;"	f	namespace:testing
NanSensitiveFloatEq	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> NanSensitiveFloatEq(float rhs) {$/;"	f	namespace:testing
NanSensitiveFloatNear	third_party/gmock/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> NanSensitiveFloatNear($/;"	f	namespace:testing
NativeArray	third_party/gmock/gtest/gtest.h	/^  NativeArray(const Element* array, size_t count, RelationToSource relation) {$/;"	f	class:testing::internal::NativeArray
NativeArray	third_party/gmock/gtest/gtest.h	/^  NativeArray(const NativeArray& rhs) {$/;"	f	class:testing::internal::NativeArray
NativeArray	third_party/gmock/gtest/gtest.h	/^class NativeArray {$/;"	c	namespace:testing::internal
Ne	third_party/gmock/gmock/gmock.h	/^inline internal::Ne2Matcher Ne() { return internal::Ne2Matcher(); }$/;"	f	namespace:testing
Ne	third_party/gmock/gmock/gmock.h	/^inline internal::NeMatcher<Rhs> Ne(Rhs x) {$/;"	f	namespace:testing
NewPage	src/buffer/buffer_pool_manager.cpp	/^Page *BufferPoolManager::NewPage(page_id_t &page_id) { $/;"	f	class:cmudb::BufferPoolManager
NextGraph	third_party/gmock/gmock-gtest-all.cc	/^bool MatchMatrix::NextGraph() {$/;"	f	class:testing::internal::MatchMatrix
NiceMock	third_party/gmock/gmock/gmock.h	/^  NiceMock() {$/;"	f	class:testing::NiceMock
NiceMock	third_party/gmock/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::NiceMock
NiceMock	third_party/gmock/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::NiceMock
NiceMock	third_party/gmock/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::NiceMock
NiceMock	third_party/gmock/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::NiceMock
NiceMock	third_party/gmock/gmock/gmock.h	/^  explicit NiceMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::NiceMock
NiceMock	third_party/gmock/gmock/gmock.h	/^class NiceMock : public MockClass {$/;"	c	namespace:testing
NoExecDeathTest	third_party/gmock/gmock-gtest-all.cc	/^  NoExecDeathTest(const char* a_statement, const RE* a_regex) :$/;"	f	class:testing::internal::NoExecDeathTest
NoExecDeathTest	third_party/gmock/gmock-gtest-all.cc	/^class NoExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
NodeReader	src/sqlite/sqlite3.c	/^struct NodeReader {$/;"	s	file:
NodeReader	src/sqlite/sqlite3.c	/^typedef struct NodeReader NodeReader;$/;"	t	typeref:struct:NodeReader	file:
NodeWriter	src/sqlite/sqlite3.c	/^struct NodeWriter {$/;"	s	file:
NodeWriter	src/sqlite/sqlite3.c	/^typedef struct NodeWriter NodeWriter;$/;"	t	typeref:struct:NodeWriter	file:
None	third_party/gmock/gtest/gtest.h	/^struct None {};$/;"	s	namespace:testing::internal
NoneT	third_party/gmock/gtest/gtest.h	/^struct NoneT {};$/;"	s	namespace:testing::internal
Normalize	third_party/gmock/gmock-gtest-all.cc	/^void FilePath::Normalize() {$/;"	f	class:testing::internal::FilePath
Not	third_party/gmock/gmock/gmock.h	/^inline internal::NotMatcher<InnerMatcher> Not(InnerMatcher m) {$/;"	f	namespace:testing
NotImplementedException	src/include/common/exception.h	/^  NotImplementedException(std::string msg)$/;"	f	class:cmudb::NotImplementedException
NotImplementedException	src/include/common/exception.h	/^class NotImplementedException : public Exception {$/;"	c	namespace:cmudb
NotMatcher	third_party/gmock/gmock/gmock.h	/^  explicit NotMatcher(InnerMatcher matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::NotMatcher
NotMatcher	third_party/gmock/gmock/gmock.h	/^class NotMatcher {$/;"	c	namespace:testing::internal
NotMatcherImpl	third_party/gmock/gmock/gmock.h	/^  explicit NotMatcherImpl(const Matcher<T>& matcher)$/;"	f	class:testing::internal::NotMatcherImpl
NotMatcherImpl	third_party/gmock/gmock/gmock.h	/^class NotMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
NotNull	third_party/gmock/gmock/gmock.h	/^inline PolymorphicMatcher<internal::NotNullMatcher > NotNull() {$/;"	f	namespace:testing
NotNullMatcher	third_party/gmock/gmock/gmock.h	/^class NotNullMatcher {$/;"	c	namespace:testing::internal
Notification	third_party/gmock/gtest/gtest.h	/^  Notification() : notified_(false) {$/;"	f	class:std::tr1::Notification
Notification	third_party/gmock/gtest/gtest.h	/^class Notification {$/;"	c	namespace:std::tr1
Notify	third_party/gmock/gtest/gtest.h	/^  void Notify() {$/;"	f	class:std::tr1::Notification
NumericType	src/include/type/numeric_type.h	/^  NumericType(TypeId type) : Type(type) {}$/;"	f	class:cmudb::NumericType
NumericType	src/include/type/numeric_type.h	/^class NumericType : public Type {$/;"	c	namespace:cmudb
NumericValueOutOfRangeException	src/include/common/exception.h	/^  NumericValueOutOfRangeException(std::string msg, int type)$/;"	f	class:cmudb::NumericValueOutOfRangeException
NumericValueOutOfRangeException	src/include/common/exception.h	/^class NumericValueOutOfRangeException : public Exception {$/;"	c	namespace:cmudb
OBJECTLENGTH_NULL	src/include/type/limits.h	50;"	d
OE_Abort	src/sqlite/sqlite3.c	15658;"	d	file:
OE_Cascade	src/sqlite/sqlite3.c	15666;"	d	file:
OE_Default	src/sqlite/sqlite3.c	15668;"	d	file:
OE_Fail	src/sqlite/sqlite3.c	15659;"	d	file:
OE_Ignore	src/sqlite/sqlite3.c	15660;"	d	file:
OE_None	src/sqlite/sqlite3.c	15656;"	d	file:
OE_Replace	src/sqlite/sqlite3.c	15661;"	d	file:
OE_Restrict	src/sqlite/sqlite3.c	15663;"	d	file:
OE_Rollback	src/sqlite/sqlite3.c	15657;"	d	file:
OE_SetDflt	src/sqlite/sqlite3.c	15665;"	d	file:
OE_SetNull	src/sqlite/sqlite3.c	15664;"	d	file:
OMIT_TEMPDB	src/sqlite/sqlite3.c	12526;"	d	file:
OMIT_TEMPDB	src/sqlite/sqlite3.c	12528;"	d	file:
ONEPASS_MULTI	src/sqlite/sqlite3.c	17401;"	d	file:
ONEPASS_OFF	src/sqlite/sqlite3.c	17399;"	d	file:
ONEPASS_SINGLE	src/sqlite/sqlite3.c	17400;"	d	file:
ONE_BYTE_INT	src/sqlite/sqlite3.c	75200;"	d	file:
ONLY_IF_REALLOC_STRESS	src/sqlite/sqlite3.c	12148;"	d	file:
ONLY_IF_REALLOC_STRESS	src/sqlite/sqlite3.c	12150;"	d	file:
ONLY_IF_REALLOC_STRESS	src/sqlite/sqlite3.c	12152;"	d	file:
ON_CALL	third_party/gmock/gmock/gmock.h	10345;"	d
OPFLAG_APPEND	src/sqlite/sqlite3.c	16734;"	d	file:
OPFLAG_AUXDELETE	src/sqlite/sqlite3.c	16745;"	d	file:
OPFLAG_BULKCSR	src/sqlite/sqlite3.c	16739;"	d	file:
OPFLAG_EPHEM	src/sqlite/sqlite3.c	16731;"	d	file:
OPFLAG_FORDELETE	src/sqlite/sqlite3.c	16741;"	d	file:
OPFLAG_ISNOOP	src/sqlite/sqlite3.c	16736;"	d	file:
OPFLAG_ISUPDATE	src/sqlite/sqlite3.c	16733;"	d	file:
OPFLAG_LASTROWID	src/sqlite/sqlite3.c	16732;"	d	file:
OPFLAG_LENGTHARG	src/sqlite/sqlite3.c	16737;"	d	file:
OPFLAG_NCHANGE	src/sqlite/sqlite3.c	16729;"	d	file:
OPFLAG_P2ISREG	src/sqlite/sqlite3.c	16742;"	d	file:
OPFLAG_PERMUTE	src/sqlite/sqlite3.c	16743;"	d	file:
OPFLAG_SAVEPOSITION	src/sqlite/sqlite3.c	16744;"	d	file:
OPFLAG_SEEKEQ	src/sqlite/sqlite3.c	16740;"	d	file:
OPFLAG_TYPEOFARG	src/sqlite/sqlite3.c	16738;"	d	file:
OPFLAG_USESEEKRESULT	src/sqlite/sqlite3.c	16735;"	d	file:
OPFLG_IN1	src/sqlite/sqlite3.c	13778;"	d	file:
OPFLG_IN2	src/sqlite/sqlite3.c	13779;"	d	file:
OPFLG_IN3	src/sqlite/sqlite3.c	13780;"	d	file:
OPFLG_INITIALIZER	src/sqlite/sqlite3.c	13783;"	d	file:
OPFLG_JUMP	src/sqlite/sqlite3.c	13777;"	d	file:
OPFLG_OUT2	src/sqlite/sqlite3.c	13781;"	d	file:
OPFLG_OUT3	src/sqlite/sqlite3.c	13782;"	d	file:
OP_Add	src/sqlite/sqlite3.c	13694;"	d	file:
OP_AddImm	src/sqlite/sqlite3.c	13679;"	d	file:
OP_Affinity	src/sqlite/sqlite3.c	13706;"	d	file:
OP_AggFinal	src/sqlite/sqlite3.c	13758;"	d	file:
OP_AggStep	src/sqlite/sqlite3.c	13757;"	d	file:
OP_AggStep0	src/sqlite/sqlite3.c	13756;"	d	file:
OP_And	src/sqlite/sqlite3.c	13677;"	d	file:
OP_AutoCommit	src/sqlite/sqlite3.c	13607;"	d	file:
OP_BitAnd	src/sqlite/sqlite3.c	13690;"	d	file:
OP_BitNot	src/sqlite/sqlite3.c	13701;"	d	file:
OP_BitOr	src/sqlite/sqlite3.c	13691;"	d	file:
OP_Blob	src/sqlite/sqlite3.c	13667;"	d	file:
OP_Cast	src/sqlite/sqlite3.c	13700;"	d	file:
OP_Checkpoint	src/sqlite/sqlite3.c	13614;"	d	file:
OP_Clear	src/sqlite/sqlite3.c	13740;"	d	file:
OP_Close	src/sqlite/sqlite3.c	13720;"	d	file:
OP_CollSeq	src/sqlite/sqlite3.c	13674;"	d	file:
OP_Column	src/sqlite/sqlite3.c	13705;"	d	file:
OP_ColumnsUsed	src/sqlite/sqlite3.c	13721;"	d	file:
OP_Compare	src/sqlite/sqlite3.c	13704;"	d	file:
OP_Concat	src/sqlite/sqlite3.c	13699;"	d	file:
OP_Copy	src/sqlite/sqlite3.c	13670;"	d	file:
OP_Count	src/sqlite/sqlite3.c	13708;"	d	file:
OP_CreateIndex	src/sqlite/sqlite3.c	13742;"	d	file:
OP_CreateTable	src/sqlite/sqlite3.c	13743;"	d	file:
OP_CursorHint	src/sqlite/sqlite3.c	13769;"	d	file:
OP_DecrJumpZero	src/sqlite/sqlite3.c	13654;"	d	file:
OP_DeferredSeek	src/sqlite/sqlite3.c	13736;"	d	file:
OP_Delete	src/sqlite/sqlite3.c	13726;"	d	file:
OP_Destroy	src/sqlite/sqlite3.c	13739;"	d	file:
OP_Divide	src/sqlite/sqlite3.c	13697;"	d	file:
OP_DropIndex	src/sqlite/sqlite3.c	13748;"	d	file:
OP_DropTable	src/sqlite/sqlite3.c	13747;"	d	file:
OP_DropTrigger	src/sqlite/sqlite3.c	13749;"	d	file:
OP_ElseNotEq	src/sqlite/sqlite3.c	13689;"	d	file:
OP_EndCoroutine	src/sqlite/sqlite3.c	13659;"	d	file:
OP_Eq	src/sqlite/sqlite3.c	13684;"	d	file:
OP_Expire	src/sqlite/sqlite3.c	13759;"	d	file:
OP_Explain	src/sqlite/sqlite3.c	13771;"	d	file:
OP_FkCounter	src/sqlite/sqlite3.c	13753;"	d	file:
OP_FkIfZero	src/sqlite/sqlite3.c	13651;"	d	file:
OP_Found	src/sqlite/sqlite3.c	13636;"	d	file:
OP_Function	src/sqlite/sqlite3.c	13678;"	d	file:
OP_Function0	src/sqlite/sqlite3.c	13675;"	d	file:
OP_Ge	src/sqlite/sqlite3.c	13688;"	d	file:
OP_Gosub	src/sqlite/sqlite3.c	13620;"	d	file:
OP_Goto	src/sqlite/sqlite3.c	13619;"	d	file:
OP_Gt	src/sqlite/sqlite3.c	13685;"	d	file:
OP_Halt	src/sqlite/sqlite3.c	13661;"	d	file:
OP_HaltIfNull	src/sqlite/sqlite3.c	13660;"	d	file:
OP_IdxDelete	src/sqlite/sqlite3.c	13735;"	d	file:
OP_IdxGE	src/sqlite/sqlite3.c	13647;"	d	file:
OP_IdxGT	src/sqlite/sqlite3.c	13645;"	d	file:
OP_IdxInsert	src/sqlite/sqlite3.c	13734;"	d	file:
OP_IdxLE	src/sqlite/sqlite3.c	13644;"	d	file:
OP_IdxLT	src/sqlite/sqlite3.c	13646;"	d	file:
OP_IdxRowid	src/sqlite/sqlite3.c	13737;"	d	file:
OP_If	src/sqlite/sqlite3.c	13627;"	d	file:
OP_IfNot	src/sqlite/sqlite3.c	13628;"	d	file:
OP_IfNotZero	src/sqlite/sqlite3.c	13653;"	d	file:
OP_IfNullRow	src/sqlite/sqlite3.c	13629;"	d	file:
OP_IfPos	src/sqlite/sqlite3.c	13652;"	d	file:
OP_IfSmaller	src/sqlite/sqlite3.c	13640;"	d	file:
OP_IncrVacuum	src/sqlite/sqlite3.c	13655;"	d	file:
OP_Init	src/sqlite/sqlite3.c	13657;"	d	file:
OP_InitCoroutine	src/sqlite/sqlite3.c	13621;"	d	file:
OP_Insert	src/sqlite/sqlite3.c	13724;"	d	file:
OP_InsertInt	src/sqlite/sqlite3.c	13725;"	d	file:
OP_Int64	src/sqlite/sqlite3.c	13663;"	d	file:
OP_IntCopy	src/sqlite/sqlite3.c	13672;"	d	file:
OP_Integer	src/sqlite/sqlite3.c	13662;"	d	file:
OP_IntegrityCk	src/sqlite/sqlite3.c	13750;"	d	file:
OP_IsNull	src/sqlite/sqlite3.c	13681;"	d	file:
OP_JournalMode	src/sqlite/sqlite3.c	13615;"	d	file:
OP_Jump	src/sqlite/sqlite3.c	13624;"	d	file:
OP_Last	src/sqlite/sqlite3.c	13639;"	d	file:
OP_Le	src/sqlite/sqlite3.c	13686;"	d	file:
OP_LoadAnalysis	src/sqlite/sqlite3.c	13746;"	d	file:
OP_Lt	src/sqlite/sqlite3.c	13687;"	d	file:
OP_MakeRecord	src/sqlite/sqlite3.c	13707;"	d	file:
OP_MaxPgcnt	src/sqlite/sqlite3.c	13768;"	d	file:
OP_MemMax	src/sqlite/sqlite3.c	13754;"	d	file:
OP_Move	src/sqlite/sqlite3.c	13669;"	d	file:
OP_Multiply	src/sqlite/sqlite3.c	13696;"	d	file:
OP_MustBeInt	src/sqlite/sqlite3.c	13623;"	d	file:
OP_Ne	src/sqlite/sqlite3.c	13683;"	d	file:
OP_NewRowid	src/sqlite/sqlite3.c	13723;"	d	file:
OP_Next	src/sqlite/sqlite3.c	13613;"	d	file:
OP_NextIfOpen	src/sqlite/sqlite3.c	13611;"	d	file:
OP_NoConflict	src/sqlite/sqlite3.c	13634;"	d	file:
OP_Noop	src/sqlite/sqlite3.c	13770;"	d	file:
OP_Not	src/sqlite/sqlite3.c	13625;"	d	file:
OP_NotExists	src/sqlite/sqlite3.c	13638;"	d	file:
OP_NotFound	src/sqlite/sqlite3.c	13635;"	d	file:
OP_NotNull	src/sqlite/sqlite3.c	13682;"	d	file:
OP_Null	src/sqlite/sqlite3.c	13665;"	d	file:
OP_NullRow	src/sqlite/sqlite3.c	13732;"	d	file:
OP_OffsetLimit	src/sqlite/sqlite3.c	13755;"	d	file:
OP_Once	src/sqlite/sqlite3.c	13626;"	d	file:
OP_OpenAutoindex	src/sqlite/sqlite3.c	13715;"	d	file:
OP_OpenDup	src/sqlite/sqlite3.c	13714;"	d	file:
OP_OpenEphemeral	src/sqlite/sqlite3.c	13716;"	d	file:
OP_OpenPseudo	src/sqlite/sqlite3.c	13719;"	d	file:
OP_OpenRead	src/sqlite/sqlite3.c	13712;"	d	file:
OP_OpenWrite	src/sqlite/sqlite3.c	13713;"	d	file:
OP_Or	src/sqlite/sqlite3.c	13676;"	d	file:
OP_Pagecount	src/sqlite/sqlite3.c	13767;"	d	file:
OP_Param	src/sqlite/sqlite3.c	13752;"	d	file:
OP_ParseSchema	src/sqlite/sqlite3.c	13745;"	d	file:
OP_Permutation	src/sqlite/sqlite3.c	13702;"	d	file:
OP_Prev	src/sqlite/sqlite3.c	13612;"	d	file:
OP_PrevIfOpen	src/sqlite/sqlite3.c	13610;"	d	file:
OP_Program	src/sqlite/sqlite3.c	13650;"	d	file:
OP_ReadCookie	src/sqlite/sqlite3.c	13709;"	d	file:
OP_Real	src/sqlite/sqlite3.c	13738;"	d	file:
OP_RealAffinity	src/sqlite/sqlite3.c	13680;"	d	file:
OP_Remainder	src/sqlite/sqlite3.c	13698;"	d	file:
OP_ReopenIdx	src/sqlite/sqlite3.c	13711;"	d	file:
OP_ResetCount	src/sqlite/sqlite3.c	13727;"	d	file:
OP_ResetSorter	src/sqlite/sqlite3.c	13741;"	d	file:
OP_ResultRow	src/sqlite/sqlite3.c	13673;"	d	file:
OP_Return	src/sqlite/sqlite3.c	13658;"	d	file:
OP_Rewind	src/sqlite/sqlite3.c	13643;"	d	file:
OP_RowData	src/sqlite/sqlite3.c	13730;"	d	file:
OP_RowSetAdd	src/sqlite/sqlite3.c	13751;"	d	file:
OP_RowSetRead	src/sqlite/sqlite3.c	13648;"	d	file:
OP_RowSetTest	src/sqlite/sqlite3.c	13649;"	d	file:
OP_Rowid	src/sqlite/sqlite3.c	13731;"	d	file:
OP_SCopy	src/sqlite/sqlite3.c	13671;"	d	file:
OP_Savepoint	src/sqlite/sqlite3.c	13606;"	d	file:
OP_SeekGE	src/sqlite/sqlite3.c	13632;"	d	file:
OP_SeekGT	src/sqlite/sqlite3.c	13633;"	d	file:
OP_SeekLE	src/sqlite/sqlite3.c	13631;"	d	file:
OP_SeekLT	src/sqlite/sqlite3.c	13630;"	d	file:
OP_SeekRowid	src/sqlite/sqlite3.c	13637;"	d	file:
OP_Sequence	src/sqlite/sqlite3.c	13722;"	d	file:
OP_SequenceTest	src/sqlite/sqlite3.c	13718;"	d	file:
OP_SetCookie	src/sqlite/sqlite3.c	13710;"	d	file:
OP_ShiftLeft	src/sqlite/sqlite3.c	13692;"	d	file:
OP_ShiftRight	src/sqlite/sqlite3.c	13693;"	d	file:
OP_SoftNull	src/sqlite/sqlite3.c	13666;"	d	file:
OP_Sort	src/sqlite/sqlite3.c	13642;"	d	file:
OP_SorterCompare	src/sqlite/sqlite3.c	13728;"	d	file:
OP_SorterData	src/sqlite/sqlite3.c	13729;"	d	file:
OP_SorterInsert	src/sqlite/sqlite3.c	13733;"	d	file:
OP_SorterNext	src/sqlite/sqlite3.c	13609;"	d	file:
OP_SorterOpen	src/sqlite/sqlite3.c	13717;"	d	file:
OP_SorterSort	src/sqlite/sqlite3.c	13641;"	d	file:
OP_SqlExec	src/sqlite/sqlite3.c	13744;"	d	file:
OP_String	src/sqlite/sqlite3.c	13664;"	d	file:
OP_String8	src/sqlite/sqlite3.c	13703;"	d	file:
OP_Subtract	src/sqlite/sqlite3.c	13695;"	d	file:
OP_TableLock	src/sqlite/sqlite3.c	13760;"	d	file:
OP_Transaction	src/sqlite/sqlite3.c	13608;"	d	file:
OP_VBegin	src/sqlite/sqlite3.c	13761;"	d	file:
OP_VColumn	src/sqlite/sqlite3.c	13765;"	d	file:
OP_VCreate	src/sqlite/sqlite3.c	13762;"	d	file:
OP_VDestroy	src/sqlite/sqlite3.c	13763;"	d	file:
OP_VFilter	src/sqlite/sqlite3.c	13617;"	d	file:
OP_VNext	src/sqlite/sqlite3.c	13656;"	d	file:
OP_VOpen	src/sqlite/sqlite3.c	13764;"	d	file:
OP_VRename	src/sqlite/sqlite3.c	13766;"	d	file:
OP_VUpdate	src/sqlite/sqlite3.c	13618;"	d	file:
OP_Vacuum	src/sqlite/sqlite3.c	13616;"	d	file:
OP_Variable	src/sqlite/sqlite3.c	13668;"	d	file:
OP_Yield	src/sqlite/sqlite3.c	13622;"	d	file:
OSTRACE	src/sqlite/sqlite3.c	12161;"	d	file:
OSTRACE	src/sqlite/sqlite3.c	12164;"	d	file:
OS_VXWORKS	src/sqlite/sqlite3.c	913;"	d	file:
OS_VXWORKS	src/sqlite/sqlite3.c	921;"	d	file:
OVERSEE_TEST	third_party/gmock/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
O_BINARY	src/sqlite/sqlite3.c	30603;"	d	file:
O_LARGEFILE	src/sqlite/sqlite3.c	30593;"	d	file:
O_LARGEFILE	src/sqlite/sqlite3.c	30596;"	d	file:
O_LARGEFILE	src/sqlite/sqlite3.c	30597;"	d	file:
O_NOFOLLOW	src/sqlite/sqlite3.c	30600;"	d	file:
ObjectSizeException	src/include/common/exception.h	/^  ObjectSizeException(std::string msg)$/;"	f	class:cmudb::ObjectSizeException
ObjectSizeException	src/include/common/exception.h	/^class ObjectSizeException : public Exception {$/;"	c	namespace:cmudb
OnCallSpec	third_party/gmock/gmock/gmock.h	/^  OnCallSpec(const char* a_file, int a_line,$/;"	f	class:testing::internal::OnCallSpec
OnCallSpec	third_party/gmock/gmock/gmock.h	/^class OnCallSpec : public UntypedOnCallSpecBase {$/;"	c	namespace:testing::internal
OnEnvironmentsSetUpEnd	third_party/gmock/gmock-gtest-all.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpEnd	third_party/gmock/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsSetUpStart	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpStart	third_party/gmock/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownEnd	third_party/gmock/gmock-gtest-all.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownEnd	third_party/gmock/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownStart	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownStart	third_party/gmock/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseEnd	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseEnd	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseEnd	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseStart	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseStart	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseStart	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestEnd	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestEnd	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestEnd	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationEnd	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestIterationEnd(const UnitTest& unit_test, int \/* iteration *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationEnd	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationEnd	third_party/gmock/gmock-gtest-all.cc	/^void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationEnd	third_party/gmock/gmock-gtest-all.cc	/^void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OnTestIterationEnd	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationStart	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestIterationStart(const UnitTest& \/* unit_test *\/, int iteration) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationStart	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationStart	third_party/gmock/gmock-gtest-all.cc	/^void TestEventRepeater::OnTestIterationStart(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationStart	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::internal::StreamingListener
OnTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestPartResult	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramEnd	third_party/gmock/gmock-gtest-all.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramEnd	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramEnd	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramStart	third_party/gmock/gmock-gtest-all.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramStart	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramStart	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestStart	third_party/gmock/gmock-gtest-all.cc	/^  void OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestStart	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestStart	third_party/gmock/gtest/gtest.h	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
Op	src/sqlite/sqlite3.c	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp	file:
OpHelp	src/sqlite/sqlite3.c	29928;"	d	file:
OpHelp	src/sqlite/sqlite3.c	29930;"	d	file:
OpenCounter	src/sqlite/sqlite3.c	24153;"	d	file:
OpenCounter	src/sqlite/sqlite3.c	24155;"	d	file:
OpenCounter	src/sqlite/sqlite3.c	30579;"	d	file:
OpenCounter	src/sqlite/sqlite3.c	30581;"	d	file:
OpenCounter	src/sqlite/sqlite3.c	38139;"	d	file:
OpenCounter	src/sqlite/sqlite3.c	38141;"	d	file:
OpenSession	src/sqlite/shell.c	/^struct OpenSession {$/;"	s	file:
OpenSession	src/sqlite/shell.c	/^typedef struct OpenSession OpenSession;$/;"	t	typeref:struct:OpenSession	file:
OperateNull	src/include/type/value.h	/^  inline Value OperateNull(const Value &o) const {$/;"	f	class:cmudb::Value
OperateNull	src/type/bigint_type.cpp	/^Value BigintType::OperateNull(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::BigintType
OperateNull	src/type/decimal_type.cpp	/^Value DecimalType::OperateNull(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::DecimalType
OperateNull	src/type/integer_type.cpp	/^Value IntegerType::OperateNull(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::IntegerType
OperateNull	src/type/smallint_type.cpp	/^Value SmallintType::OperateNull(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::SmallintType
OperateNull	src/type/tinyint_type.cpp	/^Value TinyintType::OperateNull(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::TinyintType
OperateNull	src/type/type.cpp	/^Value Type::OperateNull(const Value &val __attribute__((unused)),$/;"	f	class:cmudb::Type
OptimizationDisabled	src/sqlite/sqlite3.c	15168;"	d	file:
OptimizationEnabled	src/sqlite/sqlite3.c	15169;"	d	file:
OriginalFunction	third_party/gmock/gmock/gmock.h	/^        OriginalFunction;$/;"	t	class:testing::internal::IgnoreResultAction::Impl
OsStackTraceGetter	third_party/gmock/gmock-gtest-all.cc	/^  OsStackTraceGetter() : caller_frame_(NULL) {}$/;"	f	class:testing::internal::OsStackTraceGetter
OsStackTraceGetter	third_party/gmock/gmock-gtest-all.cc	/^class OsStackTraceGetter : public OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal	file:
OsStackTraceGetterInterface	third_party/gmock/gmock-gtest-all.cc	/^  OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
OsStackTraceGetterInterface	third_party/gmock/gmock-gtest-all.cc	/^class OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal	file:
OutputXmlAttribute	third_party/gmock/gmock-gtest-all.cc	/^void XmlUnitTestResultPrinter::OutputXmlAttribute($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlCDataSection	third_party/gmock/gmock-gtest-all.cc	/^void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlTestInfo	third_party/gmock/gmock-gtest-all.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
P4_ADVANCE	src/sqlite/sqlite3.c	13561;"	d	file:
P4_COLLSEQ	src/sqlite/sqlite3.c	13549;"	d	file:
P4_DYNAMIC	src/sqlite/sqlite3.c	13547;"	d	file:
P4_EXPR	src/sqlite/sqlite3.c	13552;"	d	file:
P4_FUNCCTX	src/sqlite/sqlite3.c	13563;"	d	file:
P4_FUNCDEF	src/sqlite/sqlite3.c	13550;"	d	file:
P4_INT32	src/sqlite/sqlite3.c	13558;"	d	file:
P4_INT64	src/sqlite/sqlite3.c	13557;"	d	file:
P4_INTARRAY	src/sqlite/sqlite3.c	13559;"	d	file:
P4_KEYINFO	src/sqlite/sqlite3.c	13551;"	d	file:
P4_MEM	src/sqlite/sqlite3.c	13553;"	d	file:
P4_NOTUSED	src/sqlite/sqlite3.c	13546;"	d	file:
P4_REAL	src/sqlite/sqlite3.c	13556;"	d	file:
P4_STATIC	src/sqlite/sqlite3.c	13548;"	d	file:
P4_SUBPROGRAM	src/sqlite/sqlite3.c	13560;"	d	file:
P4_TABLE	src/sqlite/sqlite3.c	13562;"	d	file:
P4_TRANSIENT	src/sqlite/sqlite3.c	13554;"	d	file:
P4_VTAB	src/sqlite/sqlite3.c	13555;"	d	file:
P5_ConstraintCheck	src/sqlite/sqlite3.c	13568;"	d	file:
P5_ConstraintFK	src/sqlite/sqlite3.c	13569;"	d	file:
P5_ConstraintNotNull	src/sqlite/sqlite3.c	13566;"	d	file:
P5_ConstraintUnique	src/sqlite/sqlite3.c	13567;"	d	file:
PAGERID	src/sqlite/sqlite3.c	47469;"	d	file:
PAGERTRACE	src/sqlite/sqlite3.c	47458;"	d	file:
PAGER_CACHESPILL	src/sqlite/sqlite3.c	14080;"	d	file:
PAGER_CKPT_FULLFSYNC	src/sqlite/sqlite3.c	14079;"	d	file:
PAGER_ERROR	src/sqlite/sqlite3.c	47695;"	d	file:
PAGER_FLAGS_MASK	src/sqlite/sqlite3.c	14081;"	d	file:
PAGER_FULLFSYNC	src/sqlite/sqlite3.c	14078;"	d	file:
PAGER_GET_NOCONTENT	src/sqlite/sqlite3.c	14062;"	d	file:
PAGER_GET_READONLY	src/sqlite/sqlite3.c	14063;"	d	file:
PAGER_INCR	src/sqlite/sqlite3.c	48067;"	d	file:
PAGER_INCR	src/sqlite/sqlite3.c	48069;"	d	file:
PAGER_JOURNALMODE_DELETE	src/sqlite/sqlite3.c	14052;"	d	file:
PAGER_JOURNALMODE_MEMORY	src/sqlite/sqlite3.c	14056;"	d	file:
PAGER_JOURNALMODE_OFF	src/sqlite/sqlite3.c	14054;"	d	file:
PAGER_JOURNALMODE_PERSIST	src/sqlite/sqlite3.c	14053;"	d	file:
PAGER_JOURNALMODE_QUERY	src/sqlite/sqlite3.c	14051;"	d	file:
PAGER_JOURNALMODE_TRUNCATE	src/sqlite/sqlite3.c	14055;"	d	file:
PAGER_JOURNALMODE_WAL	src/sqlite/sqlite3.c	14057;"	d	file:
PAGER_LOCKINGMODE_EXCLUSIVE	src/sqlite/sqlite3.c	14042;"	d	file:
PAGER_LOCKINGMODE_NORMAL	src/sqlite/sqlite3.c	14041;"	d	file:
PAGER_LOCKINGMODE_QUERY	src/sqlite/sqlite3.c	14040;"	d	file:
PAGER_MAX_PGNO	src/sqlite/sqlite3.c	48138;"	d	file:
PAGER_MEMORY	src/sqlite/sqlite3.c	14035;"	d	file:
PAGER_MJ_PGNO	src/sqlite/sqlite3.c	14027;"	d	file:
PAGER_OMIT_JOURNAL	src/sqlite/sqlite3.c	14034;"	d	file:
PAGER_OPEN	src/sqlite/sqlite3.c	47689;"	d	file:
PAGER_READER	src/sqlite/sqlite3.c	47690;"	d	file:
PAGER_STAT_HIT	src/sqlite/sqlite3.c	48054;"	d	file:
PAGER_STAT_MISS	src/sqlite/sqlite3.c	48055;"	d	file:
PAGER_STAT_WRITE	src/sqlite/sqlite3.c	48056;"	d	file:
PAGER_SYNCHRONOUS_EXTRA	src/sqlite/sqlite3.c	14076;"	d	file:
PAGER_SYNCHRONOUS_FULL	src/sqlite/sqlite3.c	14075;"	d	file:
PAGER_SYNCHRONOUS_MASK	src/sqlite/sqlite3.c	14077;"	d	file:
PAGER_SYNCHRONOUS_NORMAL	src/sqlite/sqlite3.c	14074;"	d	file:
PAGER_SYNCHRONOUS_OFF	src/sqlite/sqlite3.c	14073;"	d	file:
PAGER_WRITER_CACHEMOD	src/sqlite/sqlite3.c	47692;"	d	file:
PAGER_WRITER_DBMOD	src/sqlite/sqlite3.c	47693;"	d	file:
PAGER_WRITER_FINISHED	src/sqlite/sqlite3.c	47694;"	d	file:
PAGER_WRITER_LOCKED	src/sqlite/sqlite3.c	47691;"	d	file:
PAGE_SIZE	src/include/common/config.h	15;"	d
PARSE_HDR_SZ	src/sqlite/sqlite3.c	16694;"	d	file:
PARSE_RECURSE_SZ	src/sqlite/sqlite3.c	16695;"	d	file:
PARSE_TAIL	src/sqlite/sqlite3.c	16697;"	d	file:
PARSE_TAIL_SZ	src/sqlite/sqlite3.c	16696;"	d	file:
PARTLY_WITHIN	src/include/sqlite/sqlite3.h	8727;"	d
PARTLY_WITHIN	src/sqlite/sqlite3.c	9759;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	src/sqlite/sqlite3.c	45650;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	src/sqlite/sqlite3.c	45654;"	d	file:
PCACHE_DIRTYLIST_ADD	src/sqlite/sqlite3.c	44693;"	d	file:
PCACHE_DIRTYLIST_FRONT	src/sqlite/sqlite3.c	44694;"	d	file:
PCACHE_DIRTYLIST_REMOVE	src/sqlite/sqlite3.c	44692;"	d	file:
PCache	src/sqlite/sqlite3.c	/^struct PCache {$/;"	s	file:
PCache	src/sqlite/sqlite3.c	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache	file:
PCache1	src/sqlite/sqlite3.c	/^struct PCache1 {$/;"	s	file:
PCache1	src/sqlite/sqlite3.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCacheGlobal	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PELOTON_BOOLEAN_MAX	src/include/type/limits.h	/^static const int8_t PELOTON_BOOLEAN_MAX = 1;$/;"	m	namespace:cmudb
PELOTON_BOOLEAN_MIN	src/include/type/limits.h	/^static const int8_t PELOTON_BOOLEAN_MIN = 0;$/;"	m	namespace:cmudb
PELOTON_BOOLEAN_NULL	src/include/type/limits.h	/^static const int8_t PELOTON_BOOLEAN_NULL = SCHAR_MIN;$/;"	m	namespace:cmudb
PELOTON_DATE_MAX	src/include/type/limits.h	/^static const uint64_t PELOTON_DATE_MAX = INT_MAX;$/;"	m	namespace:cmudb
PELOTON_DATE_MIN	src/include/type/limits.h	/^static const uint32_t PELOTON_DATE_MIN = 0;$/;"	m	namespace:cmudb
PELOTON_DATE_NULL	src/include/type/limits.h	/^static const uint64_t PELOTON_DATE_NULL = 0;$/;"	m	namespace:cmudb
PELOTON_DECIMAL_MAX	src/include/type/limits.h	/^static const double PELOTON_DECIMAL_MAX = DBL_MAX;$/;"	m	namespace:cmudb
PELOTON_DECIMAL_MIN	src/include/type/limits.h	/^static const double PELOTON_DECIMAL_MIN = FLT_LOWEST;$/;"	m	namespace:cmudb
PELOTON_DECIMAL_NULL	src/include/type/limits.h	/^static const double PELOTON_DECIMAL_NULL = DBL_LOWEST;$/;"	m	namespace:cmudb
PELOTON_INT16_MAX	src/include/type/limits.h	/^static const int16_t PELOTON_INT16_MAX = SHRT_MAX;$/;"	m	namespace:cmudb
PELOTON_INT16_MIN	src/include/type/limits.h	/^static const int16_t PELOTON_INT16_MIN = (SHRT_MIN + 1);$/;"	m	namespace:cmudb
PELOTON_INT16_NULL	src/include/type/limits.h	/^static const int16_t PELOTON_INT16_NULL = SHRT_MIN;$/;"	m	namespace:cmudb
PELOTON_INT32_MAX	src/include/type/limits.h	/^static const int32_t PELOTON_INT32_MAX = INT_MAX;$/;"	m	namespace:cmudb
PELOTON_INT32_MIN	src/include/type/limits.h	/^static const int32_t PELOTON_INT32_MIN = (INT_MIN + 1);$/;"	m	namespace:cmudb
PELOTON_INT32_NULL	src/include/type/limits.h	/^static const int32_t PELOTON_INT32_NULL = INT_MIN;$/;"	m	namespace:cmudb
PELOTON_INT64_MAX	src/include/type/limits.h	/^static const int64_t PELOTON_INT64_MAX = LLONG_MAX;$/;"	m	namespace:cmudb
PELOTON_INT64_MIN	src/include/type/limits.h	/^static const int64_t PELOTON_INT64_MIN = (LLONG_MIN + 1);$/;"	m	namespace:cmudb
PELOTON_INT64_NULL	src/include/type/limits.h	/^static const int64_t PELOTON_INT64_NULL = LLONG_MIN;$/;"	m	namespace:cmudb
PELOTON_INT8_MAX	src/include/type/limits.h	/^static const int8_t PELOTON_INT8_MAX = SCHAR_MAX;$/;"	m	namespace:cmudb
PELOTON_INT8_MIN	src/include/type/limits.h	/^static const int8_t PELOTON_INT8_MIN = (SCHAR_MIN + 1);$/;"	m	namespace:cmudb
PELOTON_INT8_NULL	src/include/type/limits.h	/^static const int8_t PELOTON_INT8_NULL = SCHAR_MIN;$/;"	m	namespace:cmudb
PELOTON_TEXT_MAX_LEN	src/include/type/limits.h	/^static const uint32_t PELOTON_TEXT_MAX_LEN = 1000000000;$/;"	m	namespace:cmudb
PELOTON_TIMESTAMP_MAX	src/include/type/limits.h	/^static const uint64_t PELOTON_TIMESTAMP_MAX = 11231999986399999999U;$/;"	m	namespace:cmudb
PELOTON_TIMESTAMP_MIN	src/include/type/limits.h	/^static const uint64_t PELOTON_TIMESTAMP_MIN = 0;$/;"	m	namespace:cmudb
PELOTON_TIMESTAMP_NULL	src/include/type/limits.h	/^static const uint64_t PELOTON_TIMESTAMP_NULL = ULLONG_MAX;$/;"	m	namespace:cmudb
PELOTON_UINT64_MAX	src/include/type/limits.h	/^static const uint64_t PELOTON_UINT64_MAX = ULLONG_MAX - 1;$/;"	m	namespace:cmudb
PELOTON_VALUE_NULL	src/include/type/limits.h	/^static const uint32_t PELOTON_VALUE_NULL = UINT_MAX;$/;"	m	namespace:cmudb
PELOTON_VARCHAR_MAX_LEN	src/include/type/limits.h	/^static const uint32_t PELOTON_VARCHAR_MAX_LEN = UINT_MAX;$/;"	m	namespace:cmudb
PENDING_BYTE	src/sqlite/sqlite3.c	14615;"	d	file:
PENDING_BYTE	src/sqlite/sqlite3.c	14617;"	d	file:
PENDING_BYTE_PAGE	src/sqlite/sqlite3.c	59026;"	d	file:
PENDING_LOCK	src/sqlite/sqlite3.c	14556;"	d	file:
PGHDR_CLEAN	src/sqlite/sqlite3.c	14267;"	d	file:
PGHDR_DIRTY	src/sqlite/sqlite3.c	14268;"	d	file:
PGHDR_DONT_WRITE	src/sqlite/sqlite3.c	14272;"	d	file:
PGHDR_MMAP	src/sqlite/sqlite3.c	14273;"	d	file:
PGHDR_NEED_SYNC	src/sqlite/sqlite3.c	14270;"	d	file:
PGHDR_WAL_APPEND	src/sqlite/sqlite3.c	14275;"	d	file:
PGHDR_WRITEABLE	src/sqlite/sqlite3.c	14269;"	d	file:
PGroup	src/sqlite/sqlite3.c	/^struct PGroup {$/;"	s	file:
PGroup	src/sqlite/sqlite3.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	344;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	347;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	350;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	359;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	257;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
POSITION_LIST_END	src/sqlite/sqlite3.c	148578;"	d	file:
POS_COLUMN	src/sqlite/sqlite3.c	146305;"	d	file:
POS_END	src/sqlite/sqlite3.c	146306;"	d	file:
PROXY_CONCHVERSION	src/sqlite/sqlite3.c	37013;"	d	file:
PROXY_HEADERLEN	src/sqlite/sqlite3.c	37014;"	d	file:
PROXY_HOSTIDLEN	src/sqlite/sqlite3.c	36974;"	d	file:
PROXY_MAXCONCHLEN	src/sqlite/sqlite3.c	37016;"	d	file:
PROXY_PATHINDEX	src/sqlite/sqlite3.c	37015;"	d	file:
PTF_INTKEY	src/sqlite/sqlite3.c	58707;"	d	file:
PTF_LEAF	src/sqlite/sqlite3.c	58710;"	d	file:
PTF_LEAFDATA	src/sqlite/sqlite3.c	58709;"	d	file:
PTF_ZERODATA	src/sqlite/sqlite3.c	58708;"	d	file:
PTRMAP_BTREE	src/sqlite/sqlite3.c	59082;"	d	file:
PTRMAP_FREEPAGE	src/sqlite/sqlite3.c	59079;"	d	file:
PTRMAP_ISPAGE	src/sqlite/sqlite3.c	59045;"	d	file:
PTRMAP_OVERFLOW1	src/sqlite/sqlite3.c	59080;"	d	file:
PTRMAP_OVERFLOW2	src/sqlite/sqlite3.c	59081;"	d	file:
PTRMAP_PAGENO	src/sqlite/sqlite3.c	59043;"	d	file:
PTRMAP_PTROFFSET	src/sqlite/sqlite3.c	59044;"	d	file:
PTRMAP_ROOTPAGE	src/sqlite/sqlite3.c	59078;"	d	file:
Page	src/include/page/page.h	/^  Page() { ResetMemory(); }$/;"	f	class:cmudb::Page
Page	src/include/page/page.h	/^class Page {$/;"	c	namespace:cmudb
Pager	src/sqlite/sqlite3.c	/^struct Pager {$/;"	s	file:
Pager	src/sqlite/sqlite3.c	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager	file:
PagerSavepoint	src/sqlite/sqlite3.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	src/sqlite/sqlite3.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
Pair	third_party/gmock/gmock/gmock.h	/^Pair(FirstMatcher first_matcher, SecondMatcher second_matcher) {$/;"	f	namespace:testing
PairMatcher	third_party/gmock/gmock/gmock.h	/^  PairMatcher(FirstMatcher first_matcher, SecondMatcher second_matcher)$/;"	f	class:testing::internal::PairMatcher
PairMatcher	third_party/gmock/gmock/gmock.h	/^class PairMatcher {$/;"	c	namespace:testing::internal
PairMatcherImpl	third_party/gmock/gmock/gmock.h	/^  PairMatcherImpl(FirstMatcher first_matcher, SecondMatcher second_matcher)$/;"	f	class:testing::internal::PairMatcherImpl
PairMatcherImpl	third_party/gmock/gmock/gmock.h	/^class PairMatcherImpl : public MatcherInterface<PairType> {$/;"	c	namespace:testing::internal
ParamGenerator	third_party/gmock/gtest/gtest.h	/^  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	third_party/gmock/gtest/gtest.h	/^  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	third_party/gmock/gtest/gtest.h	/^class ParamGenerator {$/;"	c	namespace:testing::internal
ParamGeneratorInterface	third_party/gmock/gtest/gtest.h	/^class ParamGeneratorInterface {$/;"	c	namespace:testing::internal
ParamIterator	third_party/gmock/gtest/gtest.h	/^  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	third_party/gmock/gtest/gtest.h	/^  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	third_party/gmock/gtest/gtest.h	/^class ParamIterator {$/;"	c	namespace:testing::internal
ParamIteratorInterface	third_party/gmock/gtest/gtest.h	/^class ParamIteratorInterface {$/;"	c	namespace:testing::internal
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator10
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator9
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator8
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator7
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator6
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator5
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator4
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator3
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator2
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::WithParamInterface
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::internal::ParamGeneratorInterface
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::TestMetaFactory
ParamType	third_party/gmock/gtest/gtest.h	/^  typedef typename TestClass::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestFactory
ParameterizedTestCaseInfo	third_party/gmock/gtest/gtest.h	/^  explicit ParameterizedTestCaseInfo(const char* name)$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfo	third_party/gmock/gtest/gtest.h	/^class ParameterizedTestCaseInfo : public ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseInfoBase	third_party/gmock/gtest/gtest.h	/^  ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfoBase	third_party/gmock/gtest/gtest.h	/^class ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseRegistry	third_party/gmock/gtest/gtest.h	/^  ParameterizedTestCaseRegistry() {}$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
ParameterizedTestCaseRegistry	third_party/gmock/gtest/gtest.h	/^class ParameterizedTestCaseRegistry {$/;"	c	namespace:testing::internal
ParameterizedTestFactory	third_party/gmock/gtest/gtest.h	/^  explicit ParameterizedTestFactory(ParamType parameter) :$/;"	f	class:testing::internal::ParameterizedTestFactory
ParameterizedTestFactory	third_party/gmock/gtest/gtest.h	/^class ParameterizedTestFactory : public TestFactoryBase {$/;"	c	namespace:testing::internal
Parse	src/sqlite/sqlite3.c	/^struct Parse {$/;"	s	file:
Parse	src/sqlite/sqlite3.c	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse	file:
ParseBoolFlag	third_party/gmock/gmock-gtest-all.cc	/^bool ParseBoolFlag(const char* str, const char* flag, bool* value) {$/;"	f	namespace:testing::internal
ParseContext	src/sqlite/sqlite3.c	/^struct ParseContext {$/;"	s	file:
ParseContext	src/sqlite/sqlite3.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
ParseCreateStatement	src/vtable/virtual_table.cpp	/^Schema *ParseCreateStatement(const std::string &sql_base) {$/;"	f	namespace:cmudb
ParseFlagValue	third_party/gmock/gmock-gtest-all.cc	/^const char* ParseFlagValue(const char* str,$/;"	f	namespace:testing::internal
ParseGoogleMockBoolFlag	third_party/gmock/gmock-gtest-all.cc	/^static bool ParseGoogleMockBoolFlag(const char* str, const char* flag,$/;"	f	namespace:testing::internal
ParseGoogleMockFlagValue	third_party/gmock/gmock-gtest-all.cc	/^static const char* ParseGoogleMockFlagValue(const char* str,$/;"	f	namespace:testing::internal
ParseGoogleMockStringFlag	third_party/gmock/gmock-gtest-all.cc	/^static bool ParseGoogleMockStringFlag(const char* str, const char* flag,$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	third_party/gmock/gmock-gtest-all.cc	/^void ParseGoogleTestFlagsOnly(int* argc, char** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	third_party/gmock/gmock-gtest-all.cc	/^void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnlyImpl	third_party/gmock/gmock-gtest-all.cc	/^void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
ParseIndexStatement	src/vtable/virtual_table.cpp	/^IndexMetadata *ParseIndexStatement(std::string &sql,$/;"	f	namespace:cmudb
ParseInt32	third_party/gmock/gmock-gtest-all.cc	/^bool ParseInt32(const Message& src_text, const char* str, Int32* value) {$/;"	f	namespace:testing::internal
ParseInt32Flag	third_party/gmock/gmock-gtest-all.cc	/^bool ParseInt32Flag(const char* str, const char* flag, Int32* value) {$/;"	f	namespace:testing::internal
ParseInternalRunDeathTestFlag	third_party/gmock/gmock-gtest-all.cc	/^InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {$/;"	f	namespace:testing::internal
ParseNaturalNumber	third_party/gmock/gmock-gtest-all.cc	/^bool ParseNaturalNumber(const ::std::string& str, Integer* number) {$/;"	f	namespace:testing::internal
ParseStringFlag	third_party/gmock/gmock-gtest-all.cc	/^bool ParseStringFlag(const char* str, const char* flag, std::string* value) {$/;"	f	namespace:testing::internal
ParserException	src/include/common/exception.h	/^  ParserException(std::string msg) : Exception(EXCEPTION_TYPE_PARSER, msg) {}$/;"	f	class:cmudb::ParserException
ParserException	src/include/common/exception.h	/^class ParserException : public Exception {$/;"	c	namespace:cmudb
PartialMatch	third_party/gmock/gmock-gtest-all.cc	/^bool RE::PartialMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
PartialMatch	third_party/gmock/gtest/gtest.h	/^  static bool PartialMatch(const ::std::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
PartialMatch	third_party/gmock/gtest/gtest.h	/^  static bool PartialMatch(const ::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
Passed	third_party/gmock/gmock-gtest-all.cc	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::internal::UnitTestImpl
Passed	third_party/gmock/gmock-gtest-all.cc	/^bool DeathTestImpl::Passed(bool status_ok) {$/;"	f	class:testing::internal::DeathTestImpl
Passed	third_party/gmock/gmock-gtest-all.cc	/^bool UnitTest::Passed() const { return impl()->Passed(); }$/;"	f	class:testing::UnitTest
Passed	third_party/gmock/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestCase
Passed	third_party/gmock/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestResult
PatternMatchesString	third_party/gmock/gmock-gtest-all.cc	/^bool UnitTestOptions::PatternMatchesString(const char *pattern,$/;"	f	class:testing::internal::UnitTestOptions
PendingList	src/sqlite/sqlite3.c	/^struct PendingList {$/;"	s	file:
PendingList	src/sqlite/sqlite3.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
Perform	third_party/gmock/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::PolymorphicAction::MonomorphicImpl
Perform	third_party/gmock/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::DoBothAction::Impl
Perform	third_party/gmock/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::WithArgsAction::Impl
Perform	third_party/gmock/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) { return value_; }$/;"	f	class:testing::internal::ReturnAction::Impl
Perform	third_party/gmock/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnRefAction::Impl
Perform	third_party/gmock/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnRefOfCopyAction::Impl
Perform	third_party/gmock/gmock/gmock.h	/^    virtual void Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::IgnoreResultAction::Impl
Perform	third_party/gmock/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& \/* args *\/) const {$/;"	f	class:testing::internal::SetErrnoAndReturnAction
Perform	third_party/gmock/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::Action
Perform	third_party/gmock/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::InvokeMethodAction
Perform	third_party/gmock/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::InvokeAction
Perform	third_party/gmock/gmock/gmock.h	/^  Result Perform(const ArgumentTuple&) const {$/;"	f	class:testing::internal::InvokeMethodWithoutArgsAction
Perform	third_party/gmock/gmock/gmock.h	/^  Result Perform(const ArgumentTuple&) { return function_impl_(); }$/;"	f	class:testing::internal::InvokeWithoutArgsAction
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<A0, A1, A2, A3, A4,$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<A0, A1, A2, A3,$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<A0, A1, A2,$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<A0, A1, A2>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<A0, A1>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::std::tr1::tuple<A0>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	third_party/gmock/gmock/gmock.h	/^  static Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnNullAction
Perform	third_party/gmock/gmock/gmock.h	/^  static void Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnVoidAction
Perform	third_party/gmock/gmock/gmock.h	/^  virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::ActionAdaptor
Perform	third_party/gmock/gmock/gmock.h	/^  void Perform(const ArgumentTuple& \/* args *\/) const {$/;"	f	class:testing::internal::AssignAction
Perform	third_party/gmock/gmock/gmock.h	/^  void Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::SetArgumentPointeeAction
PerformAction	third_party/gmock/gmock/gmock.h	/^  PerformAction(const Action<F>& action,$/;"	f	class:testing::internal::ActionResultHolder
PerformAction	third_party/gmock/gmock/gmock.h	/^  static ActionResultHolder* PerformAction($/;"	f	class:testing::internal::ActionResultHolder
PerformDefaultAction	third_party/gmock/gmock/gmock.h	/^  Result PerformDefaultAction(const ArgumentTuple& args,$/;"	f	class:testing::internal::FunctionMockerBase
PerformDefaultAction	third_party/gmock/gmock/gmock.h	/^  static ActionResultHolder* PerformDefaultAction($/;"	f	class:testing::internal::ActionResultHolder
PgFreeslot	src/sqlite/sqlite3.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	src/sqlite/sqlite3.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgHdr	src/sqlite/sqlite3.c	/^struct PgHdr {$/;"	s	file:
PgHdr	src/sqlite/sqlite3.c	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr	file:
PgHdr1	src/sqlite/sqlite3.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	src/sqlite/sqlite3.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
Pgno	src/sqlite/sqlite3.c	/^typedef u32 Pgno;$/;"	t	file:
PlannerException	src/include/common/exception.h	/^  PlannerException(std::string msg) : Exception(EXCEPTION_TYPE_PLANNER, msg) {}$/;"	f	class:cmudb::PlannerException
PlannerException	src/include/common/exception.h	/^class PlannerException : public Exception {$/;"	c	namespace:cmudb
PmaReader	src/sqlite/sqlite3.c	/^struct PmaReader {$/;"	s	file:
PmaReader	src/sqlite/sqlite3.c	/^typedef struct PmaReader PmaReader;         \/* Incrementally read one PMA *\/$/;"	t	typeref:struct:PmaReader	file:
PmaWriter	src/sqlite/sqlite3.c	/^struct PmaWriter {$/;"	s	file:
PmaWriter	src/sqlite/sqlite3.c	/^typedef struct PmaWriter PmaWriter;         \/* Incrementally write one PMA *\/$/;"	t	typeref:struct:PmaWriter	file:
Pointee	third_party/gmock/gmock/gmock.h	/^        GTEST_REMOVE_REFERENCE_(Pointer))>::type Pointee;$/;"	t	class:testing::internal::PointeeMatcher::Impl
Pointee	third_party/gmock/gmock/gmock.h	/^inline internal::PointeeMatcher<InnerMatcher> Pointee($/;"	f	namespace:testing
PointeeMatcher	third_party/gmock/gmock/gmock.h	/^  explicit PointeeMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::PointeeMatcher
PointeeMatcher	third_party/gmock/gmock/gmock.h	/^class PointeeMatcher {$/;"	c	namespace:testing::internal
PointeeOf	third_party/gmock/gmock/gmock.h	/^struct PointeeOf {$/;"	s	namespace:testing::internal
PointeeOf	third_party/gmock/gmock/gmock.h	/^struct PointeeOf<T*> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
Pointwise	third_party/gmock/gmock/gmock.h	/^Pointwise(const TupleMatcher& tuple_matcher, const Container& rhs) {$/;"	f	namespace:testing
PointwiseMatcher	third_party/gmock/gmock/gmock.h	/^  PointwiseMatcher(const TupleMatcher& tuple_matcher, const RhsContainer& rhs)$/;"	f	class:testing::internal::PointwiseMatcher
PointwiseMatcher	third_party/gmock/gmock/gmock.h	/^class PointwiseMatcher {$/;"	c	namespace:testing::internal
PolymorphicAction	third_party/gmock/gmock/gmock.h	/^  explicit PolymorphicAction(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicAction
PolymorphicAction	third_party/gmock/gmock/gmock.h	/^class PolymorphicAction {$/;"	c	namespace:testing
PolymorphicMatcher	third_party/gmock/gmock/gmock.h	/^  explicit PolymorphicMatcher(const Impl& an_impl) : impl_(an_impl) {}$/;"	f	class:testing::PolymorphicMatcher
PolymorphicMatcher	third_party/gmock/gmock/gmock.h	/^class PolymorphicMatcher {$/;"	c	namespace:testing
PopulateNewRoot	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::PopulateNewRoot($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
PorterContext	src/sqlite/sqlite3.c	/^struct PorterContext {$/;"	s	file:
PorterContext	src/sqlite/sqlite3.c	/^typedef struct PorterContext PorterContext;$/;"	t	typeref:struct:PorterContext	file:
PorterRule	src/sqlite/sqlite3.c	/^struct PorterRule {$/;"	s	file:
PorterRule	src/sqlite/sqlite3.c	/^typedef struct PorterRule PorterRule;$/;"	t	typeref:struct:PorterRule	file:
PorterTokenizer	src/sqlite/sqlite3.c	/^struct PorterTokenizer {$/;"	s	file:
PorterTokenizer	src/sqlite/sqlite3.c	/^typedef struct PorterTokenizer PorterTokenizer;$/;"	t	typeref:struct:PorterTokenizer	file:
PoslistCallbackCtx	src/sqlite/sqlite3.c	/^struct PoslistCallbackCtx {$/;"	s	file:
PoslistCallbackCtx	src/sqlite/sqlite3.c	/^typedef struct PoslistCallbackCtx PoslistCallbackCtx;$/;"	t	typeref:struct:PoslistCallbackCtx	file:
PoslistOffsetsCtx	src/sqlite/sqlite3.c	/^struct PoslistOffsetsCtx {$/;"	s	file:
PoslistOffsetsCtx	src/sqlite/sqlite3.c	/^typedef struct PoslistOffsetsCtx PoslistOffsetsCtx;$/;"	t	typeref:struct:PoslistOffsetsCtx	file:
PostFlagParsingInit	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::PostFlagParsingInit() {$/;"	f	class:testing::internal::UnitTestImpl
PragFlg_NeedSchema	src/sqlite/sqlite3.c	113201;"	d	file:
PragFlg_NoColumns	src/sqlite/sqlite3.c	113202;"	d	file:
PragFlg_NoColumns1	src/sqlite/sqlite3.c	113203;"	d	file:
PragFlg_ReadOnly	src/sqlite/sqlite3.c	113204;"	d	file:
PragFlg_Result0	src/sqlite/sqlite3.c	113205;"	d	file:
PragFlg_Result1	src/sqlite/sqlite3.c	113206;"	d	file:
PragFlg_SchemaOpt	src/sqlite/sqlite3.c	113207;"	d	file:
PragFlg_SchemaReq	src/sqlite/sqlite3.c	113208;"	d	file:
PragTyp_ACTIVATE_EXTENSIONS	src/sqlite/sqlite3.c	113192;"	d	file:
PragTyp_AUTO_VACUUM	src/sqlite/sqlite3.c	113156;"	d	file:
PragTyp_BUSY_TIMEOUT	src/sqlite/sqlite3.c	113158;"	d	file:
PragTyp_CACHE_SIZE	src/sqlite/sqlite3.c	113159;"	d	file:
PragTyp_CACHE_SPILL	src/sqlite/sqlite3.c	113160;"	d	file:
PragTyp_CASE_SENSITIVE_LIKE	src/sqlite/sqlite3.c	113161;"	d	file:
PragTyp_COLLATION_LIST	src/sqlite/sqlite3.c	113162;"	d	file:
PragTyp_COMPILE_OPTIONS	src/sqlite/sqlite3.c	113163;"	d	file:
PragTyp_DATABASE_LIST	src/sqlite/sqlite3.c	113165;"	d	file:
PragTyp_DATA_STORE_DIRECTORY	src/sqlite/sqlite3.c	113164;"	d	file:
PragTyp_DEFAULT_CACHE_SIZE	src/sqlite/sqlite3.c	113166;"	d	file:
PragTyp_ENCODING	src/sqlite/sqlite3.c	113167;"	d	file:
PragTyp_FLAG	src/sqlite/sqlite3.c	113157;"	d	file:
PragTyp_FOREIGN_KEY_CHECK	src/sqlite/sqlite3.c	113168;"	d	file:
PragTyp_FOREIGN_KEY_LIST	src/sqlite/sqlite3.c	113169;"	d	file:
PragTyp_HEADER_VALUE	src/sqlite/sqlite3.c	113155;"	d	file:
PragTyp_HEXKEY	src/sqlite/sqlite3.c	113193;"	d	file:
PragTyp_INCREMENTAL_VACUUM	src/sqlite/sqlite3.c	113170;"	d	file:
PragTyp_INDEX_INFO	src/sqlite/sqlite3.c	113171;"	d	file:
PragTyp_INDEX_LIST	src/sqlite/sqlite3.c	113172;"	d	file:
PragTyp_INTEGRITY_CHECK	src/sqlite/sqlite3.c	113173;"	d	file:
PragTyp_JOURNAL_MODE	src/sqlite/sqlite3.c	113174;"	d	file:
PragTyp_JOURNAL_SIZE_LIMIT	src/sqlite/sqlite3.c	113175;"	d	file:
PragTyp_KEY	src/sqlite/sqlite3.c	113194;"	d	file:
PragTyp_LOCKING_MODE	src/sqlite/sqlite3.c	113177;"	d	file:
PragTyp_LOCK_PROXY_FILE	src/sqlite/sqlite3.c	113176;"	d	file:
PragTyp_LOCK_STATUS	src/sqlite/sqlite3.c	113196;"	d	file:
PragTyp_MMAP_SIZE	src/sqlite/sqlite3.c	113179;"	d	file:
PragTyp_OPTIMIZE	src/sqlite/sqlite3.c	113180;"	d	file:
PragTyp_PAGE_COUNT	src/sqlite/sqlite3.c	113178;"	d	file:
PragTyp_PAGE_SIZE	src/sqlite/sqlite3.c	113181;"	d	file:
PragTyp_PARSER_TRACE	src/sqlite/sqlite3.c	113197;"	d	file:
PragTyp_REKEY	src/sqlite/sqlite3.c	113195;"	d	file:
PragTyp_SECURE_DELETE	src/sqlite/sqlite3.c	113182;"	d	file:
PragTyp_SHRINK_MEMORY	src/sqlite/sqlite3.c	113183;"	d	file:
PragTyp_SOFT_HEAP_LIMIT	src/sqlite/sqlite3.c	113184;"	d	file:
PragTyp_STATS	src/sqlite/sqlite3.c	113198;"	d	file:
PragTyp_SYNCHRONOUS	src/sqlite/sqlite3.c	113185;"	d	file:
PragTyp_TABLE_INFO	src/sqlite/sqlite3.c	113186;"	d	file:
PragTyp_TEMP_STORE	src/sqlite/sqlite3.c	113187;"	d	file:
PragTyp_TEMP_STORE_DIRECTORY	src/sqlite/sqlite3.c	113188;"	d	file:
PragTyp_THREADS	src/sqlite/sqlite3.c	113189;"	d	file:
PragTyp_WAL_AUTOCHECKPOINT	src/sqlite/sqlite3.c	113190;"	d	file:
PragTyp_WAL_CHECKPOINT	src/sqlite/sqlite3.c	113191;"	d	file:
PragmaName	src/sqlite/sqlite3.c	/^typedef struct PragmaName {$/;"	s	file:
PragmaName	src/sqlite/sqlite3.c	/^} PragmaName;$/;"	t	typeref:struct:PragmaName	file:
PragmaVtab	src/sqlite/sqlite3.c	/^struct PragmaVtab {$/;"	s	file:
PragmaVtab	src/sqlite/sqlite3.c	/^typedef struct PragmaVtab PragmaVtab;$/;"	t	typeref:struct:PragmaVtab	file:
PragmaVtabCursor	src/sqlite/sqlite3.c	/^struct PragmaVtabCursor {$/;"	s	file:
PragmaVtabCursor	src/sqlite/sqlite3.c	/^typedef struct PragmaVtabCursor PragmaVtabCursor;$/;"	t	typeref:struct:PragmaVtabCursor	file:
PreUpdate	src/sqlite/sqlite3.c	/^struct PreUpdate {$/;"	s	file:
PreUpdate	src/sqlite/sqlite3.c	/^typedef struct PreUpdate PreUpdate;$/;"	t	typeref:struct:PreUpdate	file:
PredicateFormatterFromMatcher	third_party/gmock/gmock/gmock.h	/^  explicit PredicateFormatterFromMatcher(const M& m) : matcher_(m) {}$/;"	f	class:testing::internal::PredicateFormatterFromMatcher
PredicateFormatterFromMatcher	third_party/gmock/gmock/gmock.h	/^class PredicateFormatterFromMatcher {$/;"	c	namespace:testing::internal
PrettyUnitTestResultPrinter	third_party/gmock/gmock-gtest-all.cc	/^  PrettyUnitTestResultPrinter() {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrettyUnitTestResultPrinter	third_party/gmock/gmock-gtest-all.cc	/^class PrettyUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
Print	third_party/gmock/gtest/gtest.h	/^  static void Print(char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	third_party/gmock/gtest/gtest.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter
Print	third_party/gmock/gtest/gtest.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	third_party/gmock/gtest/gtest.h	/^  static void Print(const char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	third_party/gmock/gtest/gtest.h	/^  static void Print(const wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	third_party/gmock/gtest/gtest.h	/^  static void Print(wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
PrintAsActionResult	third_party/gmock/gmock/gmock.h	/^  virtual void PrintAsActionResult(::std::ostream* \/* os *\/) const {}$/;"	f	class:testing::internal::ActionResultHolder
PrintAsActionResult	third_party/gmock/gmock/gmock.h	/^  virtual void PrintAsActionResult(::std::ostream* os) const {$/;"	f	class:testing::internal::ActionResultHolder
PrintAsCharLiteralTo	third_party/gmock/gmock-gtest-all.cc	/^static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	third_party/gmock/gmock-gtest-all.cc	/^static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	third_party/gmock/gmock-gtest-all.cc	/^static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {$/;"	f	namespace:testing::internal
PrintByteSegmentInObjectTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,$/;"	f	namespace:testing::__anon6
PrintBytesInObjectTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::internal2
PrintBytesInObjectToImpl	third_party/gmock/gmock-gtest-all.cc	/^void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::__anon6
PrintCharAndCodeTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintCharAndCodeTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintCharsAsStringTo	third_party/gmock/gmock-gtest-all.cc	/^static void PrintCharsAsStringTo($/;"	f	namespace:testing::internal
PrintColorEncoded	third_party/gmock/gmock-gtest-all.cc	/^static void PrintColorEncoded(const char* str) {$/;"	f	namespace:testing::internal
PrintFailedTests	third_party/gmock/gmock-gtest-all.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintFullTestCommentIfPresent	third_party/gmock/gmock-gtest-all.cc	/^void PrintFullTestCommentIfPresent(const TestInfo& test_info) {$/;"	f	namespace:testing::internal
PrintIfNotEmpty	third_party/gmock/gmock/gmock.h	/^inline void PrintIfNotEmpty(const internal::string& explanation,$/;"	f	namespace:testing::internal
PrintIndices	third_party/gmock/gmock/gmock.h	/^  static void PrintIndices(::std::ostream* os) {$/;"	f	class:testing::internal::ArgsMatcherImpl
PrintOnOneLine	third_party/gmock/gmock-gtest-all.cc	/^static void PrintOnOneLine(const char* str, int max_length) {$/;"	f	namespace:testing::internal
PrintPrefixTo	third_party/gmock/gtest/gtest.h	/^  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintPrefixTo	third_party/gmock/gtest/gtest.h	/^  static void PrintPrefixTo(const Tuple&, ::std::ostream*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintRawArrayTo	third_party/gmock/gtest/gtest.h	/^void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintStringTo(const ::std::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintStringTo(const ::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTestName	third_party/gmock/gmock-gtest-all.cc	/^  static void PrintTestName(const char * test_case, const char * test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^static void PrintTestPartResult(const TestPartResult& test_part_result) {$/;"	f	namespace:testing::internal
PrintTestPartResultToString	third_party/gmock/gmock-gtest-all.cc	/^static std::string PrintTestPartResultToString($/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintTo(const char* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintTo(const wchar_t* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintTo(signed char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintTo(unsigned char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintTo(wchar_t wc, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gmock/gmock.h	/^void PrintTo(const ReferenceWrapper<T>& ref, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(bool x, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const ::std::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const ::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const ::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(const unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^inline void PrintTo(wchar_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo($/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	third_party/gmock/gtest/gtest.h	/^void PrintTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintToString	third_party/gmock/gtest/gtest.h	/^::std::string PrintToString(const T& value) {$/;"	f	namespace:testing
PrintTupleTo	third_party/gmock/gtest/gtest.h	/^void PrintTupleTo(const T& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintValue	third_party/gmock/gtest/gtest.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal2::TypeWithoutFormatter
PrintWideStringTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintWideStringTo(const ::std::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintWideStringTo	third_party/gmock/gmock-gtest-all.cc	/^void PrintWideStringTo(const ::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintXmlTestCase	third_party/gmock/gmock-gtest-all.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintXmlUnitTest	third_party/gmock/gmock-gtest-all.cc	/^void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintfArguments	src/sqlite/sqlite3.c	/^struct PrintfArguments {$/;"	s	file:
PrintfArguments	src/sqlite/sqlite3.c	/^typedef struct PrintfArguments PrintfArguments;$/;"	t	typeref:struct:PrintfArguments	file:
PropertyMatcher	third_party/gmock/gmock/gmock.h	/^class PropertyMatcher {$/;"	c	namespace:testing::internal
QuantifierMatcherImpl	third_party/gmock/gmock/gmock.h	/^  explicit QuantifierMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::QuantifierMatcherImpl
QuantifierMatcherImpl	third_party/gmock/gmock/gmock.h	/^class QuantifierMatcherImpl : public MatcherInterface<Container> {$/;"	c	namespace:testing::internal
QueueUpChildren	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::QueueUpChildren($/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
RBU_CREATE_STATE	src/sqlite/sqlite3.c	170114;"	d	file:
RBU_DELETE	src/sqlite/sqlite3.c	170235;"	d	file:
RBU_IDX_DELETE	src/sqlite/sqlite3.c	170237;"	d	file:
RBU_IDX_INSERT	src/sqlite/sqlite3.c	170238;"	d	file:
RBU_INSERT	src/sqlite/sqlite3.c	170234;"	d	file:
RBU_PK_EXTERNAL	src/sqlite/sqlite3.c	170225;"	d	file:
RBU_PK_IPK	src/sqlite/sqlite3.c	170224;"	d	file:
RBU_PK_NONE	src/sqlite/sqlite3.c	170223;"	d	file:
RBU_PK_NOTABLE	src/sqlite/sqlite3.c	170222;"	d	file:
RBU_PK_VTAB	src/sqlite/sqlite3.c	170227;"	d	file:
RBU_PK_WITHOUT_ROWID	src/sqlite/sqlite3.c	170226;"	d	file:
RBU_REPLACE	src/sqlite/sqlite3.c	170236;"	d	file:
RBU_STAGE_CAPTURE	src/sqlite/sqlite3.c	170109;"	d	file:
RBU_STAGE_CKPT	src/sqlite/sqlite3.c	170110;"	d	file:
RBU_STAGE_DONE	src/sqlite/sqlite3.c	170111;"	d	file:
RBU_STAGE_MOVE	src/sqlite/sqlite3.c	170108;"	d	file:
RBU_STAGE_OAL	src/sqlite/sqlite3.c	170107;"	d	file:
RBU_STATE_CKPT	src/sqlite/sqlite3.c	170102;"	d	file:
RBU_STATE_COOKIE	src/sqlite/sqlite3.c	170103;"	d	file:
RBU_STATE_IDX	src/sqlite/sqlite3.c	170099;"	d	file:
RBU_STATE_OALSZ	src/sqlite/sqlite3.c	170104;"	d	file:
RBU_STATE_PHASEONESTEP	src/sqlite/sqlite3.c	170105;"	d	file:
RBU_STATE_PROGRESS	src/sqlite/sqlite3.c	170101;"	d	file:
RBU_STATE_ROW	src/sqlite/sqlite3.c	170100;"	d	file:
RBU_STATE_STAGE	src/sqlite/sqlite3.c	170097;"	d	file:
RBU_STATE_TBL	src/sqlite/sqlite3.c	170098;"	d	file:
RBU_UPDATE	src/sqlite/sqlite3.c	170240;"	d	file:
RE	third_party/gmock/gtest/gtest.h	/^  RE(const ::std::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	third_party/gmock/gtest/gtest.h	/^  RE(const ::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	third_party/gmock/gtest/gtest.h	/^  RE(const RE& other) { Init(other.pattern()); }$/;"	f	class:std::tr1::RE
RE	third_party/gmock/gtest/gtest.h	/^  RE(const char* regex) { Init(regex); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ RE {$/;"	c	namespace:std::tr1
READMARK_NOT_USED	src/sqlite/sqlite3.c	55275;"	d	file:
READ_LOCK	src/sqlite/sqlite3.c	58771;"	d	file:
READ_UTF16BE	src/sqlite/sqlite3.c	27662;"	d	file:
READ_UTF16LE	src/sqlite/sqlite3.c	27652;"	d	file:
READ_UTF8	src/sqlite/sqlite3.c	164030;"	d	file:
READ_UTF8	src/sqlite/sqlite3.c	201232;"	d	file:
READ_UTF8	src/sqlite/sqlite3.c	27699;"	d	file:
REARGUARD	src/sqlite/sqlite3.c	21432;"	d	file:
REGISTER_TRACE	src/sqlite/sqlite3.c	79132;"	d	file:
REGISTER_TRACE	src/sqlite/sqlite3.c	79134;"	d	file:
REGISTER_TYPED_TEST_CASE_P	third_party/gmock/gtest/gtest.h	17460;"	d
RESERVED_BYTE	src/sqlite/sqlite3.c	14619;"	d	file:
RESERVED_LOCK	src/sqlite/sqlite3.c	14555;"	d	file:
RETURNED	third_party/gmock/gmock-gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
RID	src/include/common/rid.h	/^  RID() : page_id_(INVALID_PAGE_ID), slot_num_(-1){}; \/\/ invalid rid$/;"	f	class:cmudb::RID
RID	src/include/common/rid.h	/^  RID(int64_t rid) : page_id_(rid >> 32), slot_num_(rid){};$/;"	f	class:cmudb::RID
RID	src/include/common/rid.h	/^  RID(page_id_t page_id, int slot_num)$/;"	f	class:cmudb::RID
RID	src/include/common/rid.h	/^class RID {$/;"	c	namespace:cmudb
RLatch	src/include/page/page.h	/^  inline void RLatch() { rwlatch_.RLock(); }$/;"	f	class:cmudb::Page
RLock	src/include/common/rwmutex.h	/^  void RLock() {$/;"	f	class:cmudb::RWMutex
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/test/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	test/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	test/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	test/test/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RNDAWAY	src/sqlite/sqlite3.c	167708;"	d	file:
RNDTOWARDS	src/sqlite/sqlite3.c	167707;"	d	file:
ROL64	src/sqlite/shell.c	879;"	d	file:
ROUND8	src/sqlite/sqlite3.c	12809;"	d	file:
ROUNDDOWN8	src/sqlite/sqlite3.c	12814;"	d	file:
ROWSET_ALLOCATION_SIZE	src/sqlite/sqlite3.c	46755;"	d	file:
ROWSET_ENTRY_PER_CHUNK	src/sqlite/sqlite3.c	46760;"	d	file:
ROWSET_NEXT	src/sqlite/sqlite3.c	46809;"	d	file:
ROWSET_SORTED	src/sqlite/sqlite3.c	46808;"	d	file:
RTREE_CACHE_SZ	src/sqlite/sqlite3.c	164970;"	d	file:
RTREE_COORD_INT32	src/sqlite/sqlite3.c	164908;"	d	file:
RTREE_COORD_REAL32	src/sqlite/sqlite3.c	164907;"	d	file:
RTREE_DECODE_COORD	src/sqlite/sqlite3.c	165805;"	d	file:
RTREE_DECODE_COORD	src/sqlite/sqlite3.c	165811;"	d	file:
RTREE_DECODE_COORD	src/sqlite/sqlite3.c	165817;"	d	file:
RTREE_DECODE_COORD	src/sqlite/sqlite3.c	165825;"	d	file:
RTREE_DECODE_COORD	src/sqlite/sqlite3.c	165831;"	d	file:
RTREE_DEFAULT_ROWEST	src/sqlite/sqlite3.c	164856;"	d	file:
RTREE_EQ	src/sqlite/sqlite3.c	165035;"	d	file:
RTREE_GE	src/sqlite/sqlite3.c	165038;"	d	file:
RTREE_GEOMETRY_MAGIC	src/sqlite/sqlite3.c	165095;"	d	file:
RTREE_GT	src/sqlite/sqlite3.c	165039;"	d	file:
RTREE_LE	src/sqlite/sqlite3.c	165036;"	d	file:
RTREE_LT	src/sqlite/sqlite3.c	165037;"	d	file:
RTREE_MATCH	src/sqlite/sqlite3.c	165040;"	d	file:
RTREE_MAXCELLS	src/sqlite/sqlite3.c	164953;"	d	file:
RTREE_MAX_DEPTH	src/sqlite/sqlite3.c	164962;"	d	file:
RTREE_MAX_DIMENSIONS	src/sqlite/sqlite3.c	164841;"	d	file:
RTREE_MINCELLS	src/sqlite/sqlite3.c	164951;"	d	file:
RTREE_MIN_ROWEST	src/sqlite/sqlite3.c	164857;"	d	file:
RTREE_OF_CURSOR	src/sqlite/sqlite3.c	164992;"	d	file:
RTREE_QUERY	src/sqlite/sqlite3.c	165041;"	d	file:
RTREE_QUEUE_TRACE	src/sqlite/sqlite3.c	166187;"	d	file:
RTREE_REINSERT	src/sqlite/sqlite3.c	164952;"	d	file:
RTREE_ZERO	src/sqlite/sqlite3.c	164918;"	d	file:
RTREE_ZERO	src/sqlite/sqlite3.c	164922;"	d	file:
RTrim	src/include/common/string_utility.h	/^  static inline void RTrim(std::string &s) {$/;"	f	class:cmudb::StringUtility
RUN_ALL_TESTS	third_party/gmock/gtest/gtest.h	/^inline int RUN_ALL_TESTS() {$/;"	f
RUnlatch	src/include/page/page.h	/^  inline void RUnlatch() { rwlatch_.RUnlock(); }$/;"	f	class:cmudb::Page
RUnlock	src/include/common/rwmutex.h	/^  void RUnlock() {$/;"	f	class:cmudb::RWMutex
RWMutex	src/include/common/rwmutex.h	/^  RWMutex() : reader_count_(0), writer_entered_(false) {}$/;"	f	class:cmudb::RWMutex
RWMutex	src/include/common/rwmutex.h	/^class RWMutex {$/;"	c	namespace:cmudb
Random	third_party/gmock/gtest/gtest.h	/^  explicit Random(UInt32 seed) : state_(seed) {}$/;"	f	class:testing::internal::Random
Random	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ Random {$/;"	c	namespace:testing::internal
Randomize	third_party/gmock/gmock-gtest-all.cc	/^void MatchMatrix::Randomize() {$/;"	f	class:testing::internal::MatchMatrix
Range	third_party/gmock/gtest/gtest.h	/^internal::ParamGenerator<T> Range(T start, T end) {$/;"	f	namespace:testing
Range	third_party/gmock/gtest/gtest.h	/^internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {$/;"	f	namespace:testing
RangeGenerator	third_party/gmock/gtest/gtest.h	/^  RangeGenerator(T begin, T end, IncrementT step)$/;"	f	class:testing::internal::RangeGenerator
RangeGenerator	third_party/gmock/gtest/gtest.h	/^class RangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
RawArgsTuple	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(ArgsTuple) RawArgsTuple;$/;"	t	class:testing::internal::ArgsMatcherImpl
RawContainer	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
RawContainer	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::QuantifierMatcherImpl
RawContainer	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
RawElement	third_party/gmock/gmock/gmock.h	/^      typename internal::PointeeOf<ElementPointer>::type) RawElement;$/;"	t	class:testing::internal::StlContainerView
RawElement	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_CONST_(Element) RawElement;$/;"	t	class:testing::internal::StlContainerView
RawPairType	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;$/;"	t	class:testing::internal::KeyMatcherImpl
RawPairType	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;$/;"	t	class:testing::internal::PairMatcherImpl
RbuFrame	src/sqlite/sqlite3.c	/^struct RbuFrame {$/;"	s	file:
RbuFrame	src/sqlite/sqlite3.c	/^typedef struct RbuFrame RbuFrame;$/;"	t	typeref:struct:RbuFrame	file:
RbuObjIter	src/sqlite/sqlite3.c	/^struct RbuObjIter {$/;"	s	file:
RbuObjIter	src/sqlite/sqlite3.c	/^typedef struct RbuObjIter RbuObjIter;$/;"	t	typeref:struct:RbuObjIter	file:
RbuState	src/sqlite/sqlite3.c	/^struct RbuState {$/;"	s	file:
RbuState	src/sqlite/sqlite3.c	/^typedef struct RbuState RbuState;$/;"	t	typeref:struct:RbuState	file:
RbuUpdateStmt	src/sqlite/sqlite3.c	/^struct RbuUpdateStmt {$/;"	s	file:
RbuUpdateStmt	src/sqlite/sqlite3.c	/^typedef struct RbuUpdateStmt RbuUpdateStmt;$/;"	t	typeref:struct:RbuUpdateStmt	file:
ReactionToSharding	third_party/gmock/gmock-gtest-all.cc	/^  enum ReactionToSharding {$/;"	g	class:testing::internal::UnitTestImpl	file:
Read	test/common/rwmutex_test.cpp	/^  int Read() {$/;"	f	class:cmudb::Counter
Read	third_party/gmock/gtest/gtest.h	/^inline int Read(int fd, void* buf, unsigned int count) {$/;"	f	namespace:std::tr1::posix
ReadAndInterpretStatusByte	third_party/gmock/gmock-gtest-all.cc	/^void DeathTestImpl::ReadAndInterpretStatusByte() {$/;"	f	class:testing::internal::DeathTestImpl
ReadEntireFile	third_party/gmock/gmock-gtest-all.cc	/^std::string CapturedStream::ReadEntireFile(FILE* file) {$/;"	f	class:testing::internal::CapturedStream
ReadPage	src/disk/disk_manager.cpp	/^void DiskManager::ReadPage(page_id_t page_id, char *page_data) {$/;"	f	class:cmudb::DiskManager
RecordCompare	src/sqlite/sqlite3.c	/^typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);$/;"	t	file:
RecordProperty	third_party/gmock/gmock-gtest-all.cc	/^  static void RecordProperty(TestResult* test_result,$/;"	f	class:testing::internal::TestResultAccessor
RecordProperty	third_party/gmock/gmock-gtest-all.cc	/^void Test::RecordProperty(const std::string& key, const std::string& value) {$/;"	f	class:testing::Test
RecordProperty	third_party/gmock/gmock-gtest-all.cc	/^void Test::RecordProperty(const std::string& key, int value) {$/;"	f	class:testing::Test
RecordProperty	third_party/gmock/gmock-gtest-all.cc	/^void TestResult::RecordProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
RecordProperty	third_party/gmock/gmock-gtest-all.cc	/^void UnitTest::RecordProperty(const std::string& key,$/;"	f	class:testing::UnitTest
RecordProperty	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::RecordProperty(const TestProperty& test_property) {$/;"	f	class:testing::internal::UnitTestImpl
Redistribute	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::Redistribute(N *neighbor_node, N *node, int index) $/;"	f	class:cmudb::BPLUSTREE_TYPE
Ref	third_party/gmock/gmock/gmock.h	/^inline internal::RefMatcher<T&> Ref(T& x) {  \/\/ NOLINT$/;"	f	namespace:testing
RefMatcher	third_party/gmock/gmock/gmock.h	/^  explicit RefMatcher(T& x) : object_(x) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RefMatcher
RefMatcher	third_party/gmock/gmock/gmock.h	/^class RefMatcher<T&> {$/;"	c	namespace:testing::internal
RefToConstProperty	third_party/gmock/gmock/gmock.h	/^  typedef GTEST_REFERENCE_TO_CONST_(PropertyType) RefToConstProperty;$/;"	t	class:testing::internal::PropertyMatcher
ReferenceWrapper	third_party/gmock/gmock/gmock.h	/^  explicit ReferenceWrapper(T& l_value) : pointer_(&l_value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReferenceWrapper
ReferenceWrapper	third_party/gmock/gmock/gmock.h	/^class ReferenceWrapper {$/;"	c	namespace:testing::internal
Register	third_party/gmock/gtest/gtest.h	/^  static bool Register(const char* \/*prefix*\/, const char* \/*case_name*\/,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	third_party/gmock/gtest/gtest.h	/^  static bool Register(const char* \/*prefix*\/, const char* \/*case_name*\/,$/;"	f	class:testing::internal::TypeParameterizedTestCase
Register	third_party/gmock/gtest/gtest.h	/^  static bool Register(const char* prefix, const char* case_name,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	third_party/gmock/gtest/gtest.h	/^  static bool Register(const char* prefix, const char* case_name,$/;"	f	class:testing::internal::TypeParameterizedTestCase
RegisterParameterizedTests	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::RegisterParameterizedTests() {$/;"	f	class:testing::internal::UnitTestImpl
RegisterTests	third_party/gmock/gtest/gtest.h	/^  virtual void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
RegisterTests	third_party/gmock/gtest/gtest.h	/^  void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
Reinsert	src/sqlite/sqlite3.c	/^static int Reinsert($/;"	f	file:
ReinterpretBits	third_party/gmock/gtest/gtest.h	/^  static RawType ReinterpretBits(const Bits bits) {$/;"	f	class:testing::internal::FloatingPoint
RelationToSource	third_party/gmock/gtest/gtest.h	/^enum RelationToSource {$/;"	g	namespace:testing::internal
Release	third_party/gmock/gmock-gtest-all.cc	/^TestEventListener* TestEventListeners::Release(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Release	third_party/gmock/gmock-gtest-all.cc	/^TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
Remove	src/hash/extendible_hash.cpp	/^bool ExtendibleHash<K, V>::Remove(const K &key) {$/;"	f	class:cmudb::ExtendibleHash
Remove	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::Remove(const KeyType &key, Transaction *transaction) $/;"	f	class:cmudb::BPLUSTREE_TYPE
Remove	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::Remove(int index) $/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
RemoveAndDeleteRecord	src/page/b_plus_tree_leaf_page.cpp	/^int B_PLUS_TREE_LEAF_PAGE_TYPE::RemoveAndDeleteRecord($/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
RemoveAndReturnOnlyChild	src/page/b_plus_tree_internal_page.cpp	/^ValueType B_PLUS_TREE_INTERNAL_PAGE_TYPE::RemoveAndReturnOnlyChild() $/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
RemoveConst	third_party/gmock/gtest/gtest.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	third_party/gmock/gtest/gtest.h	/^struct RemoveConst<T[N]> {$/;"	s	namespace:testing::internal
RemoveConst	third_party/gmock/gtest/gtest.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	third_party/gmock/gtest/gtest.h	/^struct RemoveConst<const T[N]> {$/;"	s	namespace:testing::internal
RemoveConstFromKey	third_party/gmock/gmock/gmock.h	/^struct RemoveConstFromKey {$/;"	s	namespace:testing::internal
RemoveConstFromKey	third_party/gmock/gmock/gmock.h	/^struct RemoveConstFromKey<std::pair<const K, V> > {$/;"	s	namespace:testing::internal
RemoveDirectoryName	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::RemoveDirectoryName() const {$/;"	f	class:testing::internal::FilePath
RemoveExtension	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::RemoveExtension(const char* extension) const {$/;"	f	class:testing::internal::FilePath
RemoveFileName	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::RemoveFileName() const {$/;"	f	class:testing::internal::FilePath
RemoveFromFile	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::RemoveFromFile(const std::string &file_name,$/;"	f	class:cmudb::BPLUSTREE_TYPE
RemoveInvalidXmlCharacters	third_party/gmock/gmock-gtest-all.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
RemoveReference	third_party/gmock/gtest/gtest.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReference	third_party/gmock/gtest/gtest.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveTrailingPathSeparator	third_party/gmock/gmock-gtest-all.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;"	f	class:testing::internal::FilePath
Replacer	src/include/buffer/replacer.h	/^  Replacer() {}$/;"	f	class:cmudb::Replacer
Replacer	src/include/buffer/replacer.h	/^template <typename T> class Replacer {$/;"	c	namespace:cmudb
ReportFailure	third_party/gmock/gmock-gtest-all.cc	/^  virtual void ReportFailure(FailureType type, const char* file, int line,$/;"	f	class:testing::internal::GoogleTestFailureReporter
ReportFailureInUnknownLocation	third_party/gmock/gmock-gtest-all.cc	/^void ReportFailureInUnknownLocation(TestPartResult::Type result_type,$/;"	f	namespace:testing::internal
ReportInvalidTestCaseType	third_party/gmock/gmock-gtest-all.cc	/^void ReportInvalidTestCaseType(const char* test_case_name,$/;"	f	namespace:testing::internal
ReportTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^void DefaultGlobalTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
ReportTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^void DefaultPerThreadTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
ReportTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^void HasNewFatalFailureHelper::ReportTestPartResult($/;"	f	class:testing::internal::HasNewFatalFailureHelper
ReportTestPartResult	third_party/gmock/gmock-gtest-all.cc	/^void ScopedFakeTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ReportUninterestingCall	third_party/gmock/gmock-gtest-all.cc	/^void ReportUninterestingCall(CallReaction reaction, const string& msg) {$/;"	f	namespace:testing::internal
Reseed	third_party/gmock/gtest/gtest.h	/^  void Reseed(UInt32 seed) { state_ = seed; }$/;"	f	class:testing::internal::Random
Reset	third_party/gmock/gmock-gtest-all.cc	/^  void Reset() { Reset(INVALID_HANDLE_VALUE); }$/;"	f	class:testing::internal::AutoHandle
Reset	third_party/gmock/gmock-gtest-all.cc	/^  void Reset(HANDLE handle) {$/;"	f	class:testing::internal::AutoHandle
ResetMemory	src/include/page/page.h	/^  inline void ResetMemory() { memset(data_, 0, PAGE_SIZE); }$/;"	f	class:cmudb::Page
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::DoBothAction::Impl
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnAction::Impl
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnRefAction::Impl
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnRefOfCopyAction::Impl
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::WithArgsAction::Impl
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::PolymorphicAction::MonomorphicImpl
Result	third_party/gmock/gmock/gmock.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::internal::IgnoreResultAction::Impl
Result	third_party/gmock/gmock/gmock.h	/^  typedef R Result;$/;"	t	struct:testing::internal::Function
Result	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::FunctionMockerBase
Result	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::TypedExpectation
Result	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F1>::Result Result;$/;"	t	class:testing::internal::ActionAdaptor
Result	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::Action
Result	third_party/gmock/gmock/gmock.h	/^  typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::ActionInterface
ResultHolder	third_party/gmock/gmock/gmock.h	/^  typedef ActionResultHolder<Result> ResultHolder;$/;"	t	class:testing::internal::FunctionMockerBase
ResultOf	third_party/gmock/gmock/gmock.h	/^internal::ResultOfMatcher<Callable> ResultOf($/;"	f	namespace:testing
ResultOfMatcher	third_party/gmock/gmock/gmock.h	/^  ResultOfMatcher(Callable callable, const Matcher<ResultType>& matcher)$/;"	f	class:testing::internal::ResultOfMatcher
ResultOfMatcher	third_party/gmock/gmock/gmock.h	/^class ResultOfMatcher {$/;"	c	namespace:testing::internal
ResultType	third_party/gmock/gmock/gmock.h	/^  typedef ResType ResultType;$/;"	t	struct:testing::internal::CallableTraits
ResultType	third_party/gmock/gmock/gmock.h	/^  typedef typename CallableTraits<Callable>::ResultType ResultType;$/;"	t	class:testing::internal::ResultOfMatcher
ResultType	third_party/gmock/gmock/gmock.h	/^  typedef typename Functor::result_type ResultType;$/;"	t	struct:testing::internal::CallableTraits
RetiresOnSaturation	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& RetiresOnSaturation() {$/;"	f	class:testing::internal::TypedExpectation
Return	third_party/gmock/gmock/gmock.h	/^inline PolymorphicAction<internal::ReturnVoidAction> Return() {$/;"	f	namespace:testing
Return	third_party/gmock/gmock/gmock.h	/^internal::ReturnAction<R> Return(R value) {$/;"	f	namespace:testing
ReturnAction	third_party/gmock/gmock/gmock.h	/^  explicit ReturnAction(R value) : value_(value) {}$/;"	f	class:testing::internal::ReturnAction
ReturnAction	third_party/gmock/gmock/gmock.h	/^class ReturnAction {$/;"	c	namespace:testing::internal
ReturnNull	third_party/gmock/gmock/gmock.h	/^inline PolymorphicAction<internal::ReturnNullAction> ReturnNull() {$/;"	f	namespace:testing
ReturnNullAction	third_party/gmock/gmock/gmock.h	/^class ReturnNullAction {$/;"	c	namespace:testing::internal
ReturnRef	third_party/gmock/gmock/gmock.h	/^inline internal::ReturnRefAction<R> ReturnRef(R& x) {  \/\/ NOLINT$/;"	f	namespace:testing
ReturnRefAction	third_party/gmock/gmock/gmock.h	/^  explicit ReturnRefAction(T& ref) : ref_(ref) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefAction
ReturnRefAction	third_party/gmock/gmock/gmock.h	/^class ReturnRefAction {$/;"	c	namespace:testing::internal
ReturnRefOfCopy	third_party/gmock/gmock/gmock.h	/^inline internal::ReturnRefOfCopyAction<R> ReturnRefOfCopy(const R& x) {$/;"	f	namespace:testing
ReturnRefOfCopyAction	third_party/gmock/gmock/gmock.h	/^  explicit ReturnRefOfCopyAction(const T& value) : value_(value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefOfCopyAction
ReturnRefOfCopyAction	third_party/gmock/gmock/gmock.h	/^class ReturnRefOfCopyAction {$/;"	c	namespace:testing::internal
ReturnSentinel	third_party/gmock/gtest/gtest.h	/^    explicit ReturnSentinel(DeathTest* test) : test_(test) { }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
ReturnSentinel	third_party/gmock/gtest/gtest.h	/^  class ReturnSentinel {$/;"	c	class:testing::internal::DeathTest
ReturnVoidAction	third_party/gmock/gmock/gmock.h	/^class ReturnVoidAction {$/;"	c	namespace:testing::internal
ReusableSpace	src/sqlite/sqlite3.c	/^struct ReusableSpace {$/;"	s	file:
RhsSize	third_party/gmock/gmock/gmock.h	/^  size_t RhsSize() const { return num_matchers_; }$/;"	f	class:testing::internal::MatchMatrix
RhsStlContainer	third_party/gmock/gmock/gmock.h	/^  typedef typename RhsView::type RhsStlContainer;$/;"	t	class:testing::internal::PointwiseMatcher
RhsValue	third_party/gmock/gmock/gmock.h	/^  typedef typename RhsStlContainer::value_type RhsValue;$/;"	t	class:testing::internal::PointwiseMatcher
RhsView	third_party/gmock/gmock/gmock.h	/^  typedef internal::StlContainerView<RhsContainer> RhsView;$/;"	t	class:testing::internal::PointwiseMatcher
RmDir	third_party/gmock/gtest/gtest.h	/^inline int RmDir(const char* dir) { return _rmdir(dir); }$/;"	f	namespace:std::tr1::posix
RollbackDelete	src/page/table_page.cpp	/^void TablePage::RollbackDelete(const RID &rid, Transaction *txn) {$/;"	f	class:cmudb::TablePage
RollbackDelete	src/table/table_heap.cpp	/^void TableHeap::RollbackDelete(const RID &rid, Transaction *txn) {$/;"	f	class:cmudb::TableHeap
RowSet	src/sqlite/sqlite3.c	/^struct RowSet {$/;"	s	file:
RowSet	src/sqlite/sqlite3.c	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet	file:
RowSetChunk	src/sqlite/sqlite3.c	/^struct RowSetChunk {$/;"	s	file:
RowSetEntry	src/sqlite/sqlite3.c	/^struct RowSetEntry {$/;"	s	file:
Rtree	src/sqlite/sqlite3.c	/^struct Rtree {$/;"	s	file:
Rtree	src/sqlite/sqlite3.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
RtreeCell	src/sqlite/sqlite3.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	src/sqlite/sqlite3.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeConstraint	src/sqlite/sqlite3.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	src/sqlite/sqlite3.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeCoord	src/sqlite/sqlite3.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	src/sqlite/sqlite3.c	/^union RtreeCoord {$/;"	u	file:
RtreeCursor	src/sqlite/sqlite3.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	src/sqlite/sqlite3.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeDValue	src/sqlite/sqlite3.c	/^  typedef double RtreeDValue;              \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	src/sqlite/sqlite3.c	/^  typedef sqlite3_int64 RtreeDValue;       \/* High accuracy coordinate *\/$/;"	t	file:
RtreeGeomCallback	src/sqlite/sqlite3.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	src/sqlite/sqlite3.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeMatchArg	src/sqlite/sqlite3.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	src/sqlite/sqlite3.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeNode	src/sqlite/sqlite3.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	src/sqlite/sqlite3.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
RtreeSearchPoint	src/sqlite/sqlite3.c	/^struct RtreeSearchPoint {$/;"	s	file:
RtreeSearchPoint	src/sqlite/sqlite3.c	/^typedef struct RtreeSearchPoint RtreeSearchPoint;$/;"	t	typeref:struct:RtreeSearchPoint	file:
RtreeValue	src/sqlite/sqlite3.c	/^  typedef float RtreeValue;                \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	src/sqlite/sqlite3.c	/^  typedef int RtreeValue;                  \/* Low accuracy coordinate *\/$/;"	t	file:
Run	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::Run() {$/;"	f	class:testing::UnitTest
Run	third_party/gmock/gmock-gtest-all.cc	/^void Test::Run() {$/;"	f	class:testing::Test
Run	third_party/gmock/gmock-gtest-all.cc	/^void TestCase::Run() {$/;"	f	class:testing::TestCase
Run	third_party/gmock/gmock-gtest-all.cc	/^void TestInfo::Run() {$/;"	f	class:testing::TestInfo
Run	third_party/gmock/gmock/gmock.h	/^  static OutIter Run(Func f, const Tuple& t, OutIter out) {$/;"	f	class:testing::internal::TransformTupleValuesHelper
Run	third_party/gmock/gtest/gtest.h	/^  virtual void Run() {$/;"	f	class:std::tr1::ThreadWithParam
RunAllTests	third_party/gmock/gmock-gtest-all.cc	/^bool UnitTestImpl::RunAllTests() {$/;"	f	class:testing::internal::UnitTestImpl
RunSetUpTestCase	third_party/gmock/gtest/gtest.h	/^  void RunSetUpTestCase() { (*set_up_tc_)(); }$/;"	f	class:testing::TestCase
RunTearDownTestCase	third_party/gmock/gtest/gtest.h	/^  void RunTearDownTestCase() { (*tear_down_tc_)(); }$/;"	f	class:testing::TestCase
SAVEPOINT_BEGIN	src/sqlite/sqlite3.c	15338;"	d	file:
SAVEPOINT_RELEASE	src/sqlite/sqlite3.c	15339;"	d	file:
SAVEPOINT_ROLLBACK	src/sqlite/sqlite3.c	15340;"	d	file:
SCHEMA_ENC	src/sqlite/sqlite3.c	15092;"	d	file:
SCHEMA_TABLE	src/sqlite/sqlite3.c	12927;"	d	file:
SCOPED_TRACE	third_party/gmock/gtest/gtest.h	19941;"	d
SELECTTRACE	src/sqlite/sqlite3.c	117091;"	d	file:
SELECTTRACE	src/sqlite/sqlite3.c	117097;"	d	file:
SELECTTRACE_ENABLED	src/sqlite/sqlite3.c	12890;"	d	file:
SELECTTRACE_ENABLED	src/sqlite/sqlite3.c	12892;"	d	file:
SEP_Column	src/sqlite/shell.c	1571;"	d	file:
SEP_Comma	src/sqlite/shell.c	1575;"	d	file:
SEP_CrLf	src/sqlite/shell.c	1576;"	d	file:
SEP_Record	src/sqlite/shell.c	1578;"	d	file:
SEP_Row	src/sqlite/shell.c	1572;"	d	file:
SEP_Space	src/sqlite/shell.c	1574;"	d	file:
SEP_Tab	src/sqlite/shell.c	1573;"	d	file:
SEP_Unit	src/sqlite/shell.c	1577;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	src/sqlite/sqlite3.c	175482;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	src/sqlite/sqlite3.c	175484;"	d	file:
SESSION_UINT32	src/sqlite/sqlite3.c	175742;"	d	file:
SETBIT	src/sqlite/sqlite3.c	44433;"	d	file:
SET_FULLSYNC	src/sqlite/sqlite3.c	14501;"	d	file:
SF_Aggregate	src/sqlite/sqlite3.c	16386;"	d	file:
SF_All	src/sqlite/sqlite3.c	16384;"	d	file:
SF_Compound	src/sqlite/sqlite3.c	16391;"	d	file:
SF_Converted	src/sqlite/sqlite3.c	16399;"	d	file:
SF_Distinct	src/sqlite/sqlite3.c	16383;"	d	file:
SF_Expanded	src/sqlite/sqlite3.c	16389;"	d	file:
SF_FixedLimit	src/sqlite/sqlite3.c	16397;"	d	file:
SF_HasAgg	src/sqlite/sqlite3.c	16387;"	d	file:
SF_HasTypeInfo	src/sqlite/sqlite3.c	16390;"	d	file:
SF_IncludeHidden	src/sqlite/sqlite3.c	16400;"	d	file:
SF_MaybeConvert	src/sqlite/sqlite3.c	16398;"	d	file:
SF_MinMaxAgg	src/sqlite/sqlite3.c	16395;"	d	file:
SF_MultiValue	src/sqlite/sqlite3.c	16393;"	d	file:
SF_NestedFrom	src/sqlite/sqlite3.c	16394;"	d	file:
SF_Recursive	src/sqlite/sqlite3.c	16396;"	d	file:
SF_Resolved	src/sqlite/sqlite3.c	16385;"	d	file:
SF_UsesEphemeral	src/sqlite/sqlite3.c	16388;"	d	file:
SF_Values	src/sqlite/sqlite3.c	16392;"	d	file:
SHA3Context	src/sqlite/shell.c	/^struct SHA3Context {$/;"	s	file:
SHA3Context	src/sqlite/shell.c	/^typedef struct SHA3Context SHA3Context;$/;"	t	typeref:struct:SHA3Context	file:
SHA3Final	src/sqlite/shell.c	/^static unsigned char *SHA3Final(SHA3Context *p){$/;"	f	file:
SHA3Init	src/sqlite/shell.c	/^static void SHA3Init(SHA3Context *p, int iSize){$/;"	f	file:
SHA3Update	src/sqlite/shell.c	/^static void SHA3Update($/;"	f	file:
SHA3_BYTEORDER	src/sqlite/shell.c	805;"	d	file:
SHA3_BYTEORDER	src/sqlite/shell.c	807;"	d	file:
SHA3_BYTEORDER	src/sqlite/shell.c	809;"	d	file:
SHARED_FIRST	src/sqlite/sqlite3.c	14620;"	d	file:
SHARED_LOCK	src/sqlite/sqlite3.c	14554;"	d	file:
SHARED_SIZE	src/sqlite/sqlite3.c	14621;"	d	file:
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	test/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	test/test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL_USE_LOCAL_GETLINE	src/sqlite/shell.c	111;"	d	file:
SHFLG_Backslash	src/sqlite/shell.c	1524;"	d	file:
SHFLG_CountChanges	src/sqlite/shell.c	1526;"	d	file:
SHFLG_Echo	src/sqlite/shell.c	1527;"	d	file:
SHFLG_Lookaside	src/sqlite/shell.c	1523;"	d	file:
SHFLG_Pagecache	src/sqlite/shell.c	1522;"	d	file:
SHFLG_PreserveRowid	src/sqlite/shell.c	1525;"	d	file:
SHFLG_Scratch	src/sqlite/shell.c	1521;"	d	file:
SHRINKING	src/include/concurrency/transaction.h	/^enum class TransactionState { GROWING, SHRINKING, COMMITTED, ABORTED };$/;"	m	class:cmudb::TransactionState
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SLOT_2_0	src/sqlite/sqlite3.c	202734;"	d	file:
SLOT_2_0	src/sqlite/sqlite3.c	28904;"	d	file:
SLOT_4_2_0	src/sqlite/sqlite3.c	202735;"	d	file:
SLOT_4_2_0	src/sqlite/sqlite3.c	28905;"	d	file:
SMALLEST_INT64	src/sqlite/sqlite3.c	12803;"	d	file:
SMALLEST_INT64	src/sqlite/sqlite3.c	149662;"	d	file:
SMALLEST_INT64	src/sqlite/sqlite3.c	180160;"	d	file:
SMALLEST_INT64	src/sqlite/sqlite3.c	183187;"	d	file:
SMALLINT	src/include/type/type_id.h	/^  SMALLINT,$/;"	e	enum:cmudb::TypeId
SMALLINT_COMPARE_FUNC	src/type/smallint_type.cpp	11;"	d	file:
SMALLINT_MODIFY_FUNC	src/type/smallint_type.cpp	31;"	d	file:
SORTER_MAX_MERGE_COUNT	src/sqlite/sqlite3.c	86925;"	d	file:
SORTER_TYPE_INTEGER	src/sqlite/sqlite3.c	86803;"	d	file:
SORTER_TYPE_TEXT	src/sqlite/sqlite3.c	86804;"	d	file:
SORTFLAG_UseSorter	src/sqlite/sqlite3.c	117130;"	d	file:
SPILLFLAG_NOSYNC	src/sqlite/sqlite3.c	47800;"	d	file:
SPILLFLAG_OFF	src/sqlite/sqlite3.c	47798;"	d	file:
SPILLFLAG_ROLLBACK	src/sqlite/sqlite3.c	47799;"	d	file:
SQLITE3EXT_H	src/include/sqlite/sqlite3ext.h	19;"	d
SQLITE3EXT_H	src/sqlite/sqlite3.c	111793;"	d	file:
SQLITE3_H	src/include/sqlite/sqlite3.h	34;"	d
SQLITE3_H	src/sqlite/sqlite3.c	1066;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/sqlite/sqlite3.c	23606;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/sqlite/sqlite3.c	23608;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/sqlite/sqlite3.c	23610;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/sqlite/sqlite3.c	24288;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/sqlite/sqlite3.c	24291;"	d	file:
SQLITE3_TEXT	src/include/sqlite/sqlite3.h	4264;"	d
SQLITE3_TEXT	src/sqlite/sqlite3.c	5296;"	d	file:
SQLITECONFIG_H	src/sqlite/sqlite3.c	11651;"	d	file:
SQLITECONFIG_H	src/sqlite/sqlite3.c	53;"	d	file:
SQLITEINT_H	src/sqlite/sqlite3.c	796;"	d	file:
SQLITE_ABORT	src/include/sqlite/sqlite3.h	423;"	d
SQLITE_ABORT	src/sqlite/sqlite3.c	1455;"	d	file:
SQLITE_ABORT_ROLLBACK	src/include/sqlite/sqlite3.h	509;"	d
SQLITE_ABORT_ROLLBACK	src/sqlite/sqlite3.c	1541;"	d	file:
SQLITE_ACCESS_EXISTS	src/include/sqlite/sqlite3.h	1293;"	d
SQLITE_ACCESS_EXISTS	src/sqlite/sqlite3.c	2325;"	d	file:
SQLITE_ACCESS_READ	src/include/sqlite/sqlite3.h	1295;"	d
SQLITE_ACCESS_READ	src/sqlite/sqlite3.c	2327;"	d	file:
SQLITE_ACCESS_READWRITE	src/include/sqlite/sqlite3.h	1294;"	d
SQLITE_ACCESS_READWRITE	src/sqlite/sqlite3.c	2326;"	d	file:
SQLITE_AFF_BLOB	src/sqlite/sqlite3.c	15414;"	d	file:
SQLITE_AFF_INTEGER	src/sqlite/sqlite3.c	15417;"	d	file:
SQLITE_AFF_MASK	src/sqlite/sqlite3.c	15426;"	d	file:
SQLITE_AFF_NUMERIC	src/sqlite/sqlite3.c	15416;"	d	file:
SQLITE_AFF_REAL	src/sqlite/sqlite3.c	15418;"	d	file:
SQLITE_AFF_TEXT	src/sqlite/sqlite3.c	15415;"	d	file:
SQLITE_ALLOW_COVERING_INDEX_SCAN	src/sqlite/sqlite3.c	18193;"	d	file:
SQLITE_ALTER_TABLE	src/include/sqlite/sqlite3.h	2840;"	d
SQLITE_ALTER_TABLE	src/sqlite/sqlite3.c	3872;"	d	file:
SQLITE_AMALGAMATION	src/sqlite/sqlite3.c	24;"	d	file:
SQLITE_ANALYZE	src/include/sqlite/sqlite3.h	2842;"	d
SQLITE_ANALYZE	src/sqlite/sqlite3.c	3874;"	d	file:
SQLITE_ANY	src/include/sqlite/sqlite3.h	4628;"	d
SQLITE_ANY	src/sqlite/sqlite3.c	5660;"	d	file:
SQLITE_API	src/include/sqlite/sqlite3.h	52;"	d
SQLITE_API	src/sqlite/sqlite3.c	1084;"	d	file:
SQLITE_APICALL	src/include/sqlite/sqlite3.h	58;"	d
SQLITE_APICALL	src/sqlite/sqlite3.c	1090;"	d	file:
SQLITE_ASCII	src/sqlite/sqlite3.c	12621;"	d	file:
SQLITE_ATTACH	src/include/sqlite/sqlite3.h	2838;"	d
SQLITE_ATTACH	src/sqlite/sqlite3.c	3870;"	d	file:
SQLITE_AUTH	src/include/sqlite/sqlite3.h	442;"	d
SQLITE_AUTH	src/sqlite/sqlite3.c	1474;"	d	file:
SQLITE_AUTH_USER	src/include/sqlite/sqlite3.h	523;"	d
SQLITE_AUTH_USER	src/sqlite/sqlite3.c	1555;"	d	file:
SQLITE_AllOpts	src/sqlite/sqlite3.c	15163;"	d	file:
SQLITE_AutoIndex	src/sqlite/sqlite3.c	15121;"	d	file:
SQLITE_BIGENDIAN	src/sqlite/sqlite3.c	12779;"	d	file:
SQLITE_BIGENDIAN	src/sqlite/sqlite3.c	12783;"	d	file:
SQLITE_BIGENDIAN	src/sqlite/sqlite3.c	12792;"	d	file:
SQLITE_BIG_DBL	src/sqlite/sqlite3.c	12509;"	d	file:
SQLITE_BIG_DBL	src/sqlite/sqlite3.c	12517;"	d	file:
SQLITE_BLDF_INDEXED	src/sqlite/sqlite3.c	127230;"	d	file:
SQLITE_BLDF_UNIQUE	src/sqlite/sqlite3.c	127231;"	d	file:
SQLITE_BLOB	src/include/sqlite/sqlite3.h	4257;"	d
SQLITE_BLOB	src/sqlite/sqlite3.c	5289;"	d	file:
SQLITE_BTREE_H	src/sqlite/sqlite3.c	13077;"	d	file:
SQLITE_BUSY	src/include/sqlite/sqlite3.h	424;"	d
SQLITE_BUSY	src/sqlite/sqlite3.c	1456;"	d	file:
SQLITE_BUSY_RECOVERY	src/include/sqlite/sqlite3.h	498;"	d
SQLITE_BUSY_RECOVERY	src/sqlite/sqlite3.c	1530;"	d	file:
SQLITE_BUSY_SNAPSHOT	src/include/sqlite/sqlite3.h	499;"	d
SQLITE_BUSY_SNAPSHOT	src/sqlite/sqlite3.c	1531;"	d	file:
SQLITE_BYTEORDER	src/sqlite/sqlite3.c	12771;"	d	file:
SQLITE_BYTEORDER	src/sqlite/sqlite3.c	12773;"	d	file:
SQLITE_BYTEORDER	src/sqlite/sqlite3.c	12775;"	d	file:
SQLITE_BYTEORDER	src/sqlite/sqlite3.c	165152;"	d	file:
SQLITE_BYTEORDER	src/sqlite/sqlite3.c	165154;"	d	file:
SQLITE_BYTEORDER	src/sqlite/sqlite3.c	165156;"	d	file:
SQLITE_CALLBACK	src/include/sqlite/sqlite3.h	64;"	d
SQLITE_CALLBACK	src/sqlite/sqlite3.c	1096;"	d	file:
SQLITE_CANTOPEN	src/include/sqlite/sqlite3.h	433;"	d
SQLITE_CANTOPEN	src/sqlite/sqlite3.c	1465;"	d	file:
SQLITE_CANTOPEN_BKPT	src/sqlite/sqlite3.c	17059;"	d	file:
SQLITE_CANTOPEN_CONVPATH	src/include/sqlite/sqlite3.h	503;"	d
SQLITE_CANTOPEN_CONVPATH	src/sqlite/sqlite3.c	1535;"	d	file:
SQLITE_CANTOPEN_FULLPATH	src/include/sqlite/sqlite3.h	502;"	d
SQLITE_CANTOPEN_FULLPATH	src/sqlite/sqlite3.c	1534;"	d	file:
SQLITE_CANTOPEN_ISDIR	src/include/sqlite/sqlite3.h	501;"	d
SQLITE_CANTOPEN_ISDIR	src/sqlite/sqlite3.c	1533;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	src/include/sqlite/sqlite3.h	500;"	d
SQLITE_CANTOPEN_NOTEMPDIR	src/sqlite/sqlite3.c	1532;"	d	file:
SQLITE_CDECL	src/include/sqlite/sqlite3.h	55;"	d
SQLITE_CDECL	src/sqlite/sqlite3.c	1087;"	d	file:
SQLITE_CHANGESET_ABORT	src/include/sqlite/sqlite3.h	9873;"	d
SQLITE_CHANGESET_ABORT	src/sqlite/sqlite3.c	10905;"	d	file:
SQLITE_CHANGESET_CONFLICT	src/include/sqlite/sqlite3.h	9836;"	d
SQLITE_CHANGESET_CONFLICT	src/sqlite/sqlite3.c	10868;"	d	file:
SQLITE_CHANGESET_CONSTRAINT	src/include/sqlite/sqlite3.h	9837;"	d
SQLITE_CHANGESET_CONSTRAINT	src/sqlite/sqlite3.c	10869;"	d	file:
SQLITE_CHANGESET_DATA	src/include/sqlite/sqlite3.h	9834;"	d
SQLITE_CHANGESET_DATA	src/sqlite/sqlite3.c	10866;"	d	file:
SQLITE_CHANGESET_FOREIGN_KEY	src/include/sqlite/sqlite3.h	9838;"	d
SQLITE_CHANGESET_FOREIGN_KEY	src/sqlite/sqlite3.c	10870;"	d	file:
SQLITE_CHANGESET_NOTFOUND	src/include/sqlite/sqlite3.h	9835;"	d
SQLITE_CHANGESET_NOTFOUND	src/sqlite/sqlite3.c	10867;"	d	file:
SQLITE_CHANGESET_OMIT	src/include/sqlite/sqlite3.h	9871;"	d
SQLITE_CHANGESET_OMIT	src/sqlite/sqlite3.c	10903;"	d	file:
SQLITE_CHANGESET_REPLACE	src/include/sqlite/sqlite3.h	9872;"	d
SQLITE_CHANGESET_REPLACE	src/sqlite/sqlite3.c	10904;"	d	file:
SQLITE_CHECKPOINT_FULL	src/include/sqlite/sqlite3.h	8087;"	d
SQLITE_CHECKPOINT_FULL	src/sqlite/sqlite3.c	9119;"	d	file:
SQLITE_CHECKPOINT_PASSIVE	src/include/sqlite/sqlite3.h	8086;"	d
SQLITE_CHECKPOINT_PASSIVE	src/sqlite/sqlite3.c	9118;"	d	file:
SQLITE_CHECKPOINT_RESTART	src/include/sqlite/sqlite3.h	8088;"	d
SQLITE_CHECKPOINT_RESTART	src/sqlite/sqlite3.c	9120;"	d	file:
SQLITE_CHECKPOINT_TRUNCATE	src/include/sqlite/sqlite3.h	8089;"	d
SQLITE_CHECKPOINT_TRUNCATE	src/sqlite/sqlite3.c	9121;"	d	file:
SQLITE_CONFIG_COVERING_INDEX_SCAN	src/include/sqlite/sqlite3.h	1895;"	d
SQLITE_CONFIG_COVERING_INDEX_SCAN	src/sqlite/sqlite3.c	2927;"	d	file:
SQLITE_CONFIG_GETMALLOC	src/include/sqlite/sqlite3.h	1880;"	d
SQLITE_CONFIG_GETMALLOC	src/sqlite/sqlite3.c	2912;"	d	file:
SQLITE_CONFIG_GETMUTEX	src/include/sqlite/sqlite3.h	1886;"	d
SQLITE_CONFIG_GETMUTEX	src/sqlite/sqlite3.c	2918;"	d	file:
SQLITE_CONFIG_GETPCACHE	src/include/sqlite/sqlite3.h	1890;"	d
SQLITE_CONFIG_GETPCACHE	src/sqlite/sqlite3.c	2922;"	d	file:
SQLITE_CONFIG_GETPCACHE2	src/include/sqlite/sqlite3.h	1894;"	d
SQLITE_CONFIG_GETPCACHE2	src/sqlite/sqlite3.c	2926;"	d	file:
SQLITE_CONFIG_HEAP	src/include/sqlite/sqlite3.h	1883;"	d
SQLITE_CONFIG_HEAP	src/sqlite/sqlite3.c	2915;"	d	file:
SQLITE_CONFIG_LOG	src/include/sqlite/sqlite3.h	1891;"	d
SQLITE_CONFIG_LOG	src/sqlite/sqlite3.c	2923;"	d	file:
SQLITE_CONFIG_LOOKASIDE	src/include/sqlite/sqlite3.h	1888;"	d
SQLITE_CONFIG_LOOKASIDE	src/sqlite/sqlite3.c	2920;"	d	file:
SQLITE_CONFIG_MALLOC	src/include/sqlite/sqlite3.h	1879;"	d
SQLITE_CONFIG_MALLOC	src/sqlite/sqlite3.c	2911;"	d	file:
SQLITE_CONFIG_MEMSTATUS	src/include/sqlite/sqlite3.h	1884;"	d
SQLITE_CONFIG_MEMSTATUS	src/sqlite/sqlite3.c	2916;"	d	file:
SQLITE_CONFIG_MMAP_SIZE	src/include/sqlite/sqlite3.h	1897;"	d
SQLITE_CONFIG_MMAP_SIZE	src/sqlite/sqlite3.c	2929;"	d	file:
SQLITE_CONFIG_MULTITHREAD	src/include/sqlite/sqlite3.h	1877;"	d
SQLITE_CONFIG_MULTITHREAD	src/sqlite/sqlite3.c	2909;"	d	file:
SQLITE_CONFIG_MUTEX	src/include/sqlite/sqlite3.h	1885;"	d
SQLITE_CONFIG_MUTEX	src/sqlite/sqlite3.c	2917;"	d	file:
SQLITE_CONFIG_PAGECACHE	src/include/sqlite/sqlite3.h	1882;"	d
SQLITE_CONFIG_PAGECACHE	src/sqlite/sqlite3.c	2914;"	d	file:
SQLITE_CONFIG_PCACHE	src/include/sqlite/sqlite3.h	1889;"	d
SQLITE_CONFIG_PCACHE	src/sqlite/sqlite3.c	2921;"	d	file:
SQLITE_CONFIG_PCACHE2	src/include/sqlite/sqlite3.h	1893;"	d
SQLITE_CONFIG_PCACHE2	src/sqlite/sqlite3.c	2925;"	d	file:
SQLITE_CONFIG_PCACHE_HDRSZ	src/include/sqlite/sqlite3.h	1899;"	d
SQLITE_CONFIG_PCACHE_HDRSZ	src/sqlite/sqlite3.c	2931;"	d	file:
SQLITE_CONFIG_PMASZ	src/include/sqlite/sqlite3.h	1900;"	d
SQLITE_CONFIG_PMASZ	src/sqlite/sqlite3.c	2932;"	d	file:
SQLITE_CONFIG_SCRATCH	src/include/sqlite/sqlite3.h	1881;"	d
SQLITE_CONFIG_SCRATCH	src/sqlite/sqlite3.c	2913;"	d	file:
SQLITE_CONFIG_SERIALIZED	src/include/sqlite/sqlite3.h	1878;"	d
SQLITE_CONFIG_SERIALIZED	src/sqlite/sqlite3.c	2910;"	d	file:
SQLITE_CONFIG_SINGLETHREAD	src/include/sqlite/sqlite3.h	1876;"	d
SQLITE_CONFIG_SINGLETHREAD	src/sqlite/sqlite3.c	2908;"	d	file:
SQLITE_CONFIG_SQLLOG	src/include/sqlite/sqlite3.h	1896;"	d
SQLITE_CONFIG_SQLLOG	src/sqlite/sqlite3.c	2928;"	d	file:
SQLITE_CONFIG_STMTJRNL_SPILL	src/include/sqlite/sqlite3.h	1901;"	d
SQLITE_CONFIG_STMTJRNL_SPILL	src/sqlite/sqlite3.c	2933;"	d	file:
SQLITE_CONFIG_URI	src/include/sqlite/sqlite3.h	1892;"	d
SQLITE_CONFIG_URI	src/sqlite/sqlite3.c	2924;"	d	file:
SQLITE_CONFIG_WIN32_HEAPSIZE	src/include/sqlite/sqlite3.h	1898;"	d
SQLITE_CONFIG_WIN32_HEAPSIZE	src/sqlite/sqlite3.c	2930;"	d	file:
SQLITE_CONSTRAINT	src/include/sqlite/sqlite3.h	438;"	d
SQLITE_CONSTRAINT	src/sqlite/sqlite3.c	1470;"	d	file:
SQLITE_CONSTRAINT_CHECK	src/include/sqlite/sqlite3.h	510;"	d
SQLITE_CONSTRAINT_CHECK	src/sqlite/sqlite3.c	1542;"	d	file:
SQLITE_CONSTRAINT_COMMITHOOK	src/include/sqlite/sqlite3.h	511;"	d
SQLITE_CONSTRAINT_COMMITHOOK	src/sqlite/sqlite3.c	1543;"	d	file:
SQLITE_CONSTRAINT_FOREIGNKEY	src/include/sqlite/sqlite3.h	512;"	d
SQLITE_CONSTRAINT_FOREIGNKEY	src/sqlite/sqlite3.c	1544;"	d	file:
SQLITE_CONSTRAINT_FUNCTION	src/include/sqlite/sqlite3.h	513;"	d
SQLITE_CONSTRAINT_FUNCTION	src/sqlite/sqlite3.c	1545;"	d	file:
SQLITE_CONSTRAINT_NOTNULL	src/include/sqlite/sqlite3.h	514;"	d
SQLITE_CONSTRAINT_NOTNULL	src/sqlite/sqlite3.c	1546;"	d	file:
SQLITE_CONSTRAINT_PRIMARYKEY	src/include/sqlite/sqlite3.h	515;"	d
SQLITE_CONSTRAINT_PRIMARYKEY	src/sqlite/sqlite3.c	1547;"	d	file:
SQLITE_CONSTRAINT_ROWID	src/include/sqlite/sqlite3.h	519;"	d
SQLITE_CONSTRAINT_ROWID	src/sqlite/sqlite3.c	1551;"	d	file:
SQLITE_CONSTRAINT_TRIGGER	src/include/sqlite/sqlite3.h	516;"	d
SQLITE_CONSTRAINT_TRIGGER	src/sqlite/sqlite3.c	1548;"	d	file:
SQLITE_CONSTRAINT_UNIQUE	src/include/sqlite/sqlite3.h	517;"	d
SQLITE_CONSTRAINT_UNIQUE	src/sqlite/sqlite3.c	1549;"	d	file:
SQLITE_CONSTRAINT_VTAB	src/include/sqlite/sqlite3.h	518;"	d
SQLITE_CONSTRAINT_VTAB	src/sqlite/sqlite3.c	1550;"	d	file:
SQLITE_COPY	src/include/sqlite/sqlite3.h	2847;"	d
SQLITE_COPY	src/sqlite/sqlite3.c	3879;"	d	file:
SQLITE_CORE	src/sqlite/sqlite3.c	111771;"	d	file:
SQLITE_CORE	src/sqlite/sqlite3.c	146804;"	d	file:
SQLITE_CORE	src/sqlite/sqlite3.c	23;"	d	file:
SQLITE_CORRUPT	src/include/sqlite/sqlite3.h	430;"	d
SQLITE_CORRUPT	src/sqlite/sqlite3.c	1462;"	d	file:
SQLITE_CORRUPT_BKPT	src/sqlite/sqlite3.c	17057;"	d	file:
SQLITE_CORRUPT_PGNO	src/sqlite/sqlite3.c	17066;"	d	file:
SQLITE_CORRUPT_PGNO	src/sqlite/sqlite3.c	17070;"	d	file:
SQLITE_CORRUPT_VTAB	src/include/sqlite/sqlite3.h	504;"	d
SQLITE_CORRUPT_VTAB	src/sqlite/sqlite3.c	1536;"	d	file:
SQLITE_CREATE_INDEX	src/include/sqlite/sqlite3.h	2815;"	d
SQLITE_CREATE_INDEX	src/sqlite/sqlite3.c	3847;"	d	file:
SQLITE_CREATE_TABLE	src/include/sqlite/sqlite3.h	2816;"	d
SQLITE_CREATE_TABLE	src/sqlite/sqlite3.c	3848;"	d	file:
SQLITE_CREATE_TEMP_INDEX	src/include/sqlite/sqlite3.h	2817;"	d
SQLITE_CREATE_TEMP_INDEX	src/sqlite/sqlite3.c	3849;"	d	file:
SQLITE_CREATE_TEMP_TABLE	src/include/sqlite/sqlite3.h	2818;"	d
SQLITE_CREATE_TEMP_TABLE	src/sqlite/sqlite3.c	3850;"	d	file:
SQLITE_CREATE_TEMP_TRIGGER	src/include/sqlite/sqlite3.h	2819;"	d
SQLITE_CREATE_TEMP_TRIGGER	src/sqlite/sqlite3.c	3851;"	d	file:
SQLITE_CREATE_TEMP_VIEW	src/include/sqlite/sqlite3.h	2820;"	d
SQLITE_CREATE_TEMP_VIEW	src/sqlite/sqlite3.c	3852;"	d	file:
SQLITE_CREATE_TRIGGER	src/include/sqlite/sqlite3.h	2821;"	d
SQLITE_CREATE_TRIGGER	src/sqlite/sqlite3.c	3853;"	d	file:
SQLITE_CREATE_VIEW	src/include/sqlite/sqlite3.h	2822;"	d
SQLITE_CREATE_VIEW	src/sqlite/sqlite3.c	3854;"	d	file:
SQLITE_CREATE_VTABLE	src/include/sqlite/sqlite3.h	2843;"	d
SQLITE_CREATE_VTABLE	src/sqlite/sqlite3.c	3875;"	d	file:
SQLITE_CacheSpill	src/sqlite/sqlite3.c	15108;"	d	file:
SQLITE_CellSizeCk	src/sqlite/sqlite3.c	15126;"	d	file:
SQLITE_CkptFullFSync	src/sqlite/sqlite3.c	15107;"	d	file:
SQLITE_ColumnCache	src/sqlite/sqlite3.c	15151;"	d	file:
SQLITE_CountRows	src/sqlite/sqlite3.c	15110;"	d	file:
SQLITE_CoverIdxScan	src/sqlite/sqlite3.c	15156;"	d	file:
SQLITE_CursorHints	src/sqlite/sqlite3.c	15162;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	src/include/sqlite/sqlite3.h	2025;"	d
SQLITE_DBCONFIG_ENABLE_FKEY	src/sqlite/sqlite3.c	3057;"	d	file:
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	src/include/sqlite/sqlite3.h	2027;"	d
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	src/sqlite/sqlite3.c	3059;"	d	file:
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	src/include/sqlite/sqlite3.h	2028;"	d
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	src/sqlite/sqlite3.c	3060;"	d	file:
SQLITE_DBCONFIG_ENABLE_QPSG	src/include/sqlite/sqlite3.h	2030;"	d
SQLITE_DBCONFIG_ENABLE_QPSG	src/sqlite/sqlite3.c	3062;"	d	file:
SQLITE_DBCONFIG_ENABLE_TRIGGER	src/include/sqlite/sqlite3.h	2026;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	src/sqlite/sqlite3.c	3058;"	d	file:
SQLITE_DBCONFIG_LOOKASIDE	src/include/sqlite/sqlite3.h	2024;"	d
SQLITE_DBCONFIG_LOOKASIDE	src/sqlite/sqlite3.c	3056;"	d	file:
SQLITE_DBCONFIG_MAINDBNAME	src/include/sqlite/sqlite3.h	2023;"	d
SQLITE_DBCONFIG_MAINDBNAME	src/sqlite/sqlite3.c	3055;"	d	file:
SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE	src/include/sqlite/sqlite3.h	2029;"	d
SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE	src/sqlite/sqlite3.c	3061;"	d	file:
SQLITE_DBSTATUS_CACHE_HIT	src/include/sqlite/sqlite3.h	7155;"	d
SQLITE_DBSTATUS_CACHE_HIT	src/sqlite/sqlite3.c	8187;"	d	file:
SQLITE_DBSTATUS_CACHE_MISS	src/include/sqlite/sqlite3.h	7156;"	d
SQLITE_DBSTATUS_CACHE_MISS	src/sqlite/sqlite3.c	8188;"	d	file:
SQLITE_DBSTATUS_CACHE_USED	src/include/sqlite/sqlite3.h	7149;"	d
SQLITE_DBSTATUS_CACHE_USED	src/sqlite/sqlite3.c	8181;"	d	file:
SQLITE_DBSTATUS_CACHE_USED_SHARED	src/include/sqlite/sqlite3.h	7159;"	d
SQLITE_DBSTATUS_CACHE_USED_SHARED	src/sqlite/sqlite3.c	8191;"	d	file:
SQLITE_DBSTATUS_CACHE_WRITE	src/include/sqlite/sqlite3.h	7157;"	d
SQLITE_DBSTATUS_CACHE_WRITE	src/sqlite/sqlite3.c	8189;"	d	file:
SQLITE_DBSTATUS_DEFERRED_FKS	src/include/sqlite/sqlite3.h	7158;"	d
SQLITE_DBSTATUS_DEFERRED_FKS	src/sqlite/sqlite3.c	8190;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_HIT	src/include/sqlite/sqlite3.h	7152;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	src/sqlite/sqlite3.c	8184;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	src/include/sqlite/sqlite3.h	7154;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	src/sqlite/sqlite3.c	8186;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	src/include/sqlite/sqlite3.h	7153;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	src/sqlite/sqlite3.c	8185;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_USED	src/include/sqlite/sqlite3.h	7148;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	src/sqlite/sqlite3.c	8180;"	d	file:
SQLITE_DBSTATUS_MAX	src/include/sqlite/sqlite3.h	7160;"	d
SQLITE_DBSTATUS_MAX	src/sqlite/sqlite3.c	8192;"	d	file:
SQLITE_DBSTATUS_SCHEMA_USED	src/include/sqlite/sqlite3.h	7150;"	d
SQLITE_DBSTATUS_SCHEMA_USED	src/sqlite/sqlite3.c	8182;"	d	file:
SQLITE_DBSTATUS_STMT_USED	src/include/sqlite/sqlite3.h	7151;"	d
SQLITE_DBSTATUS_STMT_USED	src/sqlite/sqlite3.c	8183;"	d	file:
SQLITE_DEBUG_OS_TRACE	src/sqlite/sqlite3.c	141172;"	d	file:
SQLITE_DEFAULT_AUTOVACUUM	src/sqlite/sqlite3.c	13089;"	d	file:
SQLITE_DEFAULT_CACHE_SIZE	src/sqlite/sqlite3.c	11765;"	d	file:
SQLITE_DEFAULT_FILE_FORMAT	src/sqlite/sqlite3.c	12539;"	d	file:
SQLITE_DEFAULT_FILE_PERMISSIONS	src/sqlite/sqlite3.c	30256;"	d	file:
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	src/sqlite/sqlite3.c	14000;"	d	file:
SQLITE_DEFAULT_LOOKASIDE	src/sqlite/sqlite3.c	18224;"	d	file:
SQLITE_DEFAULT_MEMSTATUS	src/sqlite/sqlite3.c	11989;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/sqlite/sqlite3.c	12864;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/sqlite/sqlite3.c	12867;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/sqlite/sqlite3.c	12868;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	11815;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	11818;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	11819;"	d	file:
SQLITE_DEFAULT_PCACHE_INITSZ	src/sqlite/sqlite3.c	12588;"	d	file:
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	src/sqlite/sqlite3.c	30263;"	d	file:
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	src/sqlite/sqlite3.c	12547;"	d	file:
SQLITE_DEFAULT_SECTOR_SIZE	src/sqlite/sqlite3.c	14508;"	d	file:
SQLITE_DEFAULT_SYNCHRONOUS	src/sqlite/sqlite3.c	14763;"	d	file:
SQLITE_DEFAULT_SYNCHRONOUS	src/sqlite/sqlite3.c	14783;"	d	file:
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	src/sqlite/sqlite3.c	11773;"	d	file:
SQLITE_DEFAULT_WAL_SYNCHRONOUS	src/sqlite/sqlite3.c	14786;"	d	file:
SQLITE_DEFAULT_WORKER_THREADS	src/sqlite/sqlite3.c	12571;"	d	file:
SQLITE_DELETE	src/include/sqlite/sqlite3.h	2823;"	d
SQLITE_DELETE	src/sqlite/sqlite3.c	3855;"	d	file:
SQLITE_DENY	src/include/sqlite/sqlite3.h	2792;"	d
SQLITE_DENY	src/sqlite/sqlite3.c	3824;"	d	file:
SQLITE_DEPRECATED	src/include/sqlite/sqlite3.h	83;"	d
SQLITE_DEPRECATED	src/sqlite/sqlite3.c	1115;"	d	file:
SQLITE_DETACH	src/include/sqlite/sqlite3.h	2839;"	d
SQLITE_DETACH	src/sqlite/sqlite3.c	3871;"	d	file:
SQLITE_DETERMINISTIC	src/include/sqlite/sqlite3.h	4639;"	d
SQLITE_DETERMINISTIC	src/sqlite/sqlite3.c	5671;"	d	file:
SQLITE_DONE	src/include/sqlite/sqlite3.h	449;"	d
SQLITE_DONE	src/sqlite/sqlite3.c	1481;"	d	file:
SQLITE_DROP_INDEX	src/include/sqlite/sqlite3.h	2824;"	d
SQLITE_DROP_INDEX	src/sqlite/sqlite3.c	3856;"	d	file:
SQLITE_DROP_TABLE	src/include/sqlite/sqlite3.h	2825;"	d
SQLITE_DROP_TABLE	src/sqlite/sqlite3.c	3857;"	d	file:
SQLITE_DROP_TEMP_INDEX	src/include/sqlite/sqlite3.h	2826;"	d
SQLITE_DROP_TEMP_INDEX	src/sqlite/sqlite3.c	3858;"	d	file:
SQLITE_DROP_TEMP_TABLE	src/include/sqlite/sqlite3.h	2827;"	d
SQLITE_DROP_TEMP_TABLE	src/sqlite/sqlite3.c	3859;"	d	file:
SQLITE_DROP_TEMP_TRIGGER	src/include/sqlite/sqlite3.h	2828;"	d
SQLITE_DROP_TEMP_TRIGGER	src/sqlite/sqlite3.c	3860;"	d	file:
SQLITE_DROP_TEMP_VIEW	src/include/sqlite/sqlite3.h	2829;"	d
SQLITE_DROP_TEMP_VIEW	src/sqlite/sqlite3.c	3861;"	d	file:
SQLITE_DROP_TRIGGER	src/include/sqlite/sqlite3.h	2830;"	d
SQLITE_DROP_TRIGGER	src/sqlite/sqlite3.c	3862;"	d	file:
SQLITE_DROP_VIEW	src/include/sqlite/sqlite3.h	2831;"	d
SQLITE_DROP_VIEW	src/sqlite/sqlite3.c	3863;"	d	file:
SQLITE_DROP_VTABLE	src/include/sqlite/sqlite3.h	2844;"	d
SQLITE_DROP_VTABLE	src/sqlite/sqlite3.c	3876;"	d	file:
SQLITE_DYNAMIC	src/sqlite/sqlite3.c	12948;"	d	file:
SQLITE_DeferFKs	src/sqlite/sqlite3.c	15124;"	d	file:
SQLITE_DistinctOpt	src/sqlite/sqlite3.c	15155;"	d	file:
SQLITE_EBCDIC	src/sqlite/sqlite3.c	12619;"	d	file:
SQLITE_ECEL_DUP	src/sqlite/sqlite3.c	17421;"	d	file:
SQLITE_ECEL_FACTOR	src/sqlite/sqlite3.c	17422;"	d	file:
SQLITE_ECEL_OMITREF	src/sqlite/sqlite3.c	17424;"	d	file:
SQLITE_ECEL_REF	src/sqlite/sqlite3.c	17423;"	d	file:
SQLITE_EMPTY	src/include/sqlite/sqlite3.h	435;"	d
SQLITE_EMPTY	src/sqlite/sqlite3.c	1467;"	d	file:
SQLITE_ENABLE_EXPLAIN_COMMENTS	src/sqlite/sqlite3.c	12065;"	d	file:
SQLITE_ENABLE_EXPLAIN_COMMENTS	src/sqlite/sqlite3.c	12185;"	d	file:
SQLITE_ENABLE_FTS3	src/sqlite/sqlite3.c	145920;"	d	file:
SQLITE_ENABLE_FTS3	src/sqlite/sqlite3.c	145930;"	d	file:
SQLITE_ENABLE_FTS3	src/sqlite/sqlite3.c	17077;"	d	file:
SQLITE_ENABLE_FTS3	src/sqlite/sqlite3.c	17087;"	d	file:
SQLITE_ENABLE_FTS4	src/sqlite/sqlite3.c	145921;"	d	file:
SQLITE_ENABLE_FTS4	src/sqlite/sqlite3.c	17078;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/sqlite/sqlite3.c	113133;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/sqlite/sqlite3.c	113135;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/sqlite/sqlite3.c	30174;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/sqlite/sqlite3.c	30176;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/sqlite/sqlite3.c	917;"	d	file:
SQLITE_ENABLE_MEMSYS3	src/sqlite/sqlite3.c	17184;"	d	file:
SQLITE_ENABLE_STAT3	src/sqlite/sqlite3.c	12877;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/sqlite/sqlite3.c	12878;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/sqlite/sqlite3.c	12880;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/sqlite/sqlite3.c	12882;"	d	file:
SQLITE_ERROR	src/include/sqlite/sqlite3.h	420;"	d
SQLITE_ERROR	src/sqlite/sqlite3.c	1452;"	d	file:
SQLITE_EXPERIMENTAL	src/include/sqlite/sqlite3.h	84;"	d
SQLITE_EXPERIMENTAL	src/sqlite/sqlite3.c	1116;"	d	file:
SQLITE_EXTENSION_INIT1	src/include/sqlite/sqlite3ext.h	552;"	d
SQLITE_EXTENSION_INIT1	src/include/sqlite/sqlite3ext.h	559;"	d
SQLITE_EXTENSION_INIT1	src/sqlite/sqlite3.c	112326;"	d	file:
SQLITE_EXTENSION_INIT1	src/sqlite/sqlite3.c	112333;"	d	file:
SQLITE_EXTENSION_INIT2	src/include/sqlite/sqlite3ext.h	553;"	d
SQLITE_EXTENSION_INIT2	src/include/sqlite/sqlite3ext.h	560;"	d
SQLITE_EXTENSION_INIT2	src/sqlite/sqlite3.c	112327;"	d	file:
SQLITE_EXTENSION_INIT2	src/sqlite/sqlite3.c	112334;"	d	file:
SQLITE_EXTENSION_INIT3	src/include/sqlite/sqlite3ext.h	554;"	d
SQLITE_EXTENSION_INIT3	src/include/sqlite/sqlite3ext.h	561;"	d
SQLITE_EXTENSION_INIT3	src/sqlite/sqlite3.c	112328;"	d	file:
SQLITE_EXTENSION_INIT3	src/sqlite/sqlite3.c	112335;"	d	file:
SQLITE_EXTERN	src/include/sqlite/sqlite3.h	49;"	d
SQLITE_EXTERN	src/sqlite/sqlite3.c	1081;"	d	file:
SQLITE_EnableQPSG	src/sqlite/sqlite3.c	15128;"	d	file:
SQLITE_EnableTrigger	src/sqlite/sqlite3.c	15123;"	d	file:
SQLITE_FAIL	src/include/sqlite/sqlite3.h	8174;"	d
SQLITE_FAIL	src/sqlite/sqlite3.c	9206;"	d	file:
SQLITE_FAULTINJECTOR_COUNT	src/sqlite/sqlite3.c	17891;"	d	file:
SQLITE_FAULTINJECTOR_MALLOC	src/sqlite/sqlite3.c	17890;"	d	file:
SQLITE_FCNTL_BUSYHANDLER	src/include/sqlite/sqlite3.h	1031;"	d
SQLITE_FCNTL_BUSYHANDLER	src/sqlite/sqlite3.c	2063;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	src/include/sqlite/sqlite3.h	1022;"	d
SQLITE_FCNTL_CHUNK_SIZE	src/sqlite/sqlite3.c	2054;"	d	file:
SQLITE_FCNTL_COMMIT_PHASETWO	src/include/sqlite/sqlite3.h	1037;"	d
SQLITE_FCNTL_COMMIT_PHASETWO	src/sqlite/sqlite3.c	2069;"	d	file:
SQLITE_FCNTL_DB_UNCHANGED	src/sqlite/sqlite3.c	14642;"	d	file:
SQLITE_FCNTL_FILE_POINTER	src/include/sqlite/sqlite3.h	1023;"	d
SQLITE_FCNTL_FILE_POINTER	src/sqlite/sqlite3.c	2055;"	d	file:
SQLITE_FCNTL_GET_LOCKPROXYFILE	src/include/sqlite/sqlite3.h	1018;"	d
SQLITE_FCNTL_GET_LOCKPROXYFILE	src/sqlite/sqlite3.c	2050;"	d	file:
SQLITE_FCNTL_HAS_MOVED	src/include/sqlite/sqlite3.h	1035;"	d
SQLITE_FCNTL_HAS_MOVED	src/sqlite/sqlite3.c	2067;"	d	file:
SQLITE_FCNTL_JOURNAL_POINTER	src/include/sqlite/sqlite3.h	1043;"	d
SQLITE_FCNTL_JOURNAL_POINTER	src/sqlite/sqlite3.c	2075;"	d	file:
SQLITE_FCNTL_LAST_ERRNO	src/include/sqlite/sqlite3.h	1020;"	d
SQLITE_FCNTL_LAST_ERRNO	src/sqlite/sqlite3.c	2052;"	d	file:
SQLITE_FCNTL_LOCKSTATE	src/include/sqlite/sqlite3.h	1017;"	d
SQLITE_FCNTL_LOCKSTATE	src/sqlite/sqlite3.c	2049;"	d	file:
SQLITE_FCNTL_MMAP_SIZE	src/include/sqlite/sqlite3.h	1033;"	d
SQLITE_FCNTL_MMAP_SIZE	src/sqlite/sqlite3.c	2065;"	d	file:
SQLITE_FCNTL_OVERWRITE	src/include/sqlite/sqlite3.h	1027;"	d
SQLITE_FCNTL_OVERWRITE	src/sqlite/sqlite3.c	2059;"	d	file:
SQLITE_FCNTL_PDB	src/include/sqlite/sqlite3.h	1045;"	d
SQLITE_FCNTL_PDB	src/sqlite/sqlite3.c	2077;"	d	file:
SQLITE_FCNTL_PERSIST_WAL	src/include/sqlite/sqlite3.h	1026;"	d
SQLITE_FCNTL_PERSIST_WAL	src/sqlite/sqlite3.c	2058;"	d	file:
SQLITE_FCNTL_POWERSAFE_OVERWRITE	src/include/sqlite/sqlite3.h	1029;"	d
SQLITE_FCNTL_POWERSAFE_OVERWRITE	src/sqlite/sqlite3.c	2061;"	d	file:
SQLITE_FCNTL_PRAGMA	src/include/sqlite/sqlite3.h	1030;"	d
SQLITE_FCNTL_PRAGMA	src/sqlite/sqlite3.c	2062;"	d	file:
SQLITE_FCNTL_RBU	src/include/sqlite/sqlite3.h	1041;"	d
SQLITE_FCNTL_RBU	src/sqlite/sqlite3.c	2073;"	d	file:
SQLITE_FCNTL_RBUCNT	src/sqlite/sqlite3.c	170140;"	d	file:
SQLITE_FCNTL_SET_LOCKPROXYFILE	src/include/sqlite/sqlite3.h	1019;"	d
SQLITE_FCNTL_SET_LOCKPROXYFILE	src/sqlite/sqlite3.c	2051;"	d	file:
SQLITE_FCNTL_SIZE_HINT	src/include/sqlite/sqlite3.h	1021;"	d
SQLITE_FCNTL_SIZE_HINT	src/sqlite/sqlite3.c	2053;"	d	file:
SQLITE_FCNTL_SYNC	src/include/sqlite/sqlite3.h	1036;"	d
SQLITE_FCNTL_SYNC	src/sqlite/sqlite3.c	2068;"	d	file:
SQLITE_FCNTL_SYNC_OMITTED	src/include/sqlite/sqlite3.h	1024;"	d
SQLITE_FCNTL_SYNC_OMITTED	src/sqlite/sqlite3.c	2056;"	d	file:
SQLITE_FCNTL_TEMPFILENAME	src/include/sqlite/sqlite3.h	1032;"	d
SQLITE_FCNTL_TEMPFILENAME	src/sqlite/sqlite3.c	2064;"	d	file:
SQLITE_FCNTL_TRACE	src/include/sqlite/sqlite3.h	1034;"	d
SQLITE_FCNTL_TRACE	src/sqlite/sqlite3.c	2066;"	d	file:
SQLITE_FCNTL_VFSNAME	src/include/sqlite/sqlite3.h	1028;"	d
SQLITE_FCNTL_VFSNAME	src/sqlite/sqlite3.c	2060;"	d	file:
SQLITE_FCNTL_VFS_POINTER	src/include/sqlite/sqlite3.h	1042;"	d
SQLITE_FCNTL_VFS_POINTER	src/sqlite/sqlite3.c	2074;"	d	file:
SQLITE_FCNTL_WAL_BLOCK	src/include/sqlite/sqlite3.h	1039;"	d
SQLITE_FCNTL_WAL_BLOCK	src/sqlite/sqlite3.c	2071;"	d	file:
SQLITE_FCNTL_WIN32_AV_RETRY	src/include/sqlite/sqlite3.h	1025;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	src/sqlite/sqlite3.c	2057;"	d	file:
SQLITE_FCNTL_WIN32_GET_HANDLE	src/include/sqlite/sqlite3.h	1044;"	d
SQLITE_FCNTL_WIN32_GET_HANDLE	src/sqlite/sqlite3.c	2076;"	d	file:
SQLITE_FCNTL_WIN32_SET_HANDLE	src/include/sqlite/sqlite3.h	1038;"	d
SQLITE_FCNTL_WIN32_SET_HANDLE	src/sqlite/sqlite3.c	2070;"	d	file:
SQLITE_FCNTL_ZIPVFS	src/include/sqlite/sqlite3.h	1040;"	d
SQLITE_FCNTL_ZIPVFS	src/sqlite/sqlite3.c	2072;"	d	file:
SQLITE_FILE_HEADER	src/sqlite/sqlite3.c	58700;"	d	file:
SQLITE_FLOAT	src/include/sqlite/sqlite3.h	4256;"	d
SQLITE_FLOAT	src/sqlite/sqlite3.c	5288;"	d	file:
SQLITE_FORMAT	src/include/sqlite/sqlite3.h	443;"	d
SQLITE_FORMAT	src/sqlite/sqlite3.c	1475;"	d	file:
SQLITE_FREE	src/sqlite/sqlite3.c	21134;"	d	file:
SQLITE_FREE	src/sqlite/sqlite3.c	21146;"	d	file:
SQLITE_FSFLAGS_IS_MSDOS	src/sqlite/sqlite3.c	30241;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	src/sqlite/sqlite3.c	153093;"	d	file:
SQLITE_FTS3_MAX_EXPR_DEPTH	src/sqlite/sqlite3.c	146234;"	d	file:
SQLITE_FULL	src/include/sqlite/sqlite3.h	432;"	d
SQLITE_FULL	src/sqlite/sqlite3.c	1464;"	d	file:
SQLITE_FUNCTION	src/include/sqlite/sqlite3.h	2845;"	d
SQLITE_FUNCTION	src/sqlite/sqlite3.c	3877;"	d	file:
SQLITE_FUNC_AFFINITY	src/sqlite/sqlite3.c	15260;"	d	file:
SQLITE_FUNC_CASE	src/sqlite/sqlite3.c	15248;"	d	file:
SQLITE_FUNC_COALESCE	src/sqlite/sqlite3.c	15254;"	d	file:
SQLITE_FUNC_CONSTANT	src/sqlite/sqlite3.c	15256;"	d	file:
SQLITE_FUNC_COUNT	src/sqlite/sqlite3.c	15253;"	d	file:
SQLITE_FUNC_ENCMASK	src/sqlite/sqlite3.c	15246;"	d	file:
SQLITE_FUNC_EPHEM	src/sqlite/sqlite3.c	15249;"	d	file:
SQLITE_FUNC_HASH_SZ	src/sqlite/sqlite3.c	14906;"	d	file:
SQLITE_FUNC_LENGTH	src/sqlite/sqlite3.c	15251;"	d	file:
SQLITE_FUNC_LIKE	src/sqlite/sqlite3.c	15247;"	d	file:
SQLITE_FUNC_MINMAX	src/sqlite/sqlite3.c	15257;"	d	file:
SQLITE_FUNC_NEEDCOLL	src/sqlite/sqlite3.c	15250;"	d	file:
SQLITE_FUNC_SLOCHNG	src/sqlite/sqlite3.c	15258;"	d	file:
SQLITE_FUNC_TYPEOF	src/sqlite/sqlite3.c	15252;"	d	file:
SQLITE_FUNC_UNLIKELY	src/sqlite/sqlite3.c	15255;"	d	file:
SQLITE_FactorOutConst	src/sqlite/sqlite3.c	15153;"	d	file:
SQLITE_ForeignKeys	src/sqlite/sqlite3.c	15120;"	d	file:
SQLITE_Fts3Tokenizer	src/sqlite/sqlite3.c	15127;"	d	file:
SQLITE_FullColNames	src/sqlite/sqlite3.c	15105;"	d	file:
SQLITE_FullFSync	src/sqlite/sqlite3.c	15106;"	d	file:
SQLITE_GET_LOCKPROXYFILE	src/include/sqlite/sqlite3.h	1048;"	d
SQLITE_GET_LOCKPROXYFILE	src/sqlite/sqlite3.c	2080;"	d	file:
SQLITE_GroupByOrder	src/sqlite/sqlite3.c	15152;"	d	file:
SQLITE_HASH_H	src/sqlite/sqlite3.c	12222;"	d	file:
SQLITE_HAVE_ISNAN	src/sqlite/sqlite3.c	12514;"	d	file:
SQLITE_HAVE_OS_TRACE	src/sqlite/sqlite3.c	12162;"	d	file:
SQLITE_HAVE_OS_TRACE	src/sqlite/sqlite3.c	12165;"	d	file:
SQLITE_HOMEGROWN_RECURSIVE_MUTEX	src/sqlite/sqlite3.c	915;"	d	file:
SQLITE_HWTIME_H	src/sqlite/sqlite3.c	24024;"	d	file:
SQLITE_HWTIME_H	src/sqlite/sqlite3.c	30450;"	d	file:
SQLITE_HWTIME_H	src/sqlite/sqlite3.c	38010;"	d	file:
SQLITE_HWTIME_H	src/sqlite/sqlite3.c	79162;"	d	file:
SQLITE_ICU_READ_UTF8	src/sqlite/sqlite3.c	168629;"	d	file:
SQLITE_ICU_SKIP_UTF8	src/sqlite/sqlite3.c	168638;"	d	file:
SQLITE_IDXTYPE_APPDEF	src/sqlite/sqlite3.c	15808;"	d	file:
SQLITE_IDXTYPE_PRIMARYKEY	src/sqlite/sqlite3.c	15810;"	d	file:
SQLITE_IDXTYPE_UNIQUE	src/sqlite/sqlite3.c	15809;"	d	file:
SQLITE_IGNORE	src/include/sqlite/sqlite3.h	2793;"	d
SQLITE_IGNORE	src/sqlite/sqlite3.c	3825;"	d	file:
SQLITE_INDEX_CONSTRAINT_EQ	src/include/sqlite/sqlite3.h	6120;"	d
SQLITE_INDEX_CONSTRAINT_EQ	src/sqlite/sqlite3.c	7152;"	d	file:
SQLITE_INDEX_CONSTRAINT_GE	src/include/sqlite/sqlite3.h	6124;"	d
SQLITE_INDEX_CONSTRAINT_GE	src/sqlite/sqlite3.c	7156;"	d	file:
SQLITE_INDEX_CONSTRAINT_GLOB	src/include/sqlite/sqlite3.h	6127;"	d
SQLITE_INDEX_CONSTRAINT_GLOB	src/sqlite/sqlite3.c	7159;"	d	file:
SQLITE_INDEX_CONSTRAINT_GT	src/include/sqlite/sqlite3.h	6121;"	d
SQLITE_INDEX_CONSTRAINT_GT	src/sqlite/sqlite3.c	7153;"	d	file:
SQLITE_INDEX_CONSTRAINT_LE	src/include/sqlite/sqlite3.h	6122;"	d
SQLITE_INDEX_CONSTRAINT_LE	src/sqlite/sqlite3.c	7154;"	d	file:
SQLITE_INDEX_CONSTRAINT_LIKE	src/include/sqlite/sqlite3.h	6126;"	d
SQLITE_INDEX_CONSTRAINT_LIKE	src/sqlite/sqlite3.c	7158;"	d	file:
SQLITE_INDEX_CONSTRAINT_LT	src/include/sqlite/sqlite3.h	6123;"	d
SQLITE_INDEX_CONSTRAINT_LT	src/sqlite/sqlite3.c	7155;"	d	file:
SQLITE_INDEX_CONSTRAINT_MATCH	src/include/sqlite/sqlite3.h	6125;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	src/sqlite/sqlite3.c	7157;"	d	file:
SQLITE_INDEX_CONSTRAINT_REGEXP	src/include/sqlite/sqlite3.h	6128;"	d
SQLITE_INDEX_CONSTRAINT_REGEXP	src/sqlite/sqlite3.c	7160;"	d	file:
SQLITE_INDEX_SCAN_UNIQUE	src/include/sqlite/sqlite3.h	6110;"	d
SQLITE_INDEX_SCAN_UNIQUE	src/sqlite/sqlite3.c	7142;"	d	file:
SQLITE_INSERT	src/include/sqlite/sqlite3.h	2832;"	d
SQLITE_INSERT	src/sqlite/sqlite3.c	3864;"	d	file:
SQLITE_INTEGER	src/include/sqlite/sqlite3.h	4255;"	d
SQLITE_INTEGER	src/sqlite/sqlite3.c	5287;"	d	file:
SQLITE_INTEGRITY_CHECK_ERROR_MAX	src/sqlite/sqlite3.c	115135;"	d	file:
SQLITE_INTERNAL	src/include/sqlite/sqlite3.h	421;"	d
SQLITE_INTERNAL	src/sqlite/sqlite3.c	1453;"	d	file:
SQLITE_INTERRUPT	src/include/sqlite/sqlite3.h	428;"	d
SQLITE_INTERRUPT	src/sqlite/sqlite3.c	1460;"	d	file:
SQLITE_INT_TO_PTR	src/sqlite/sqlite3.c	11907;"	d	file:
SQLITE_INT_TO_PTR	src/sqlite/sqlite3.c	11910;"	d	file:
SQLITE_INT_TO_PTR	src/sqlite/sqlite3.c	11913;"	d	file:
SQLITE_INT_TO_PTR	src/sqlite/sqlite3.c	11916;"	d	file:
SQLITE_IOCAP_ATOMIC	src/include/sqlite/sqlite3.h	584;"	d
SQLITE_IOCAP_ATOMIC	src/sqlite/sqlite3.c	1616;"	d	file:
SQLITE_IOCAP_ATOMIC16K	src/include/sqlite/sqlite3.h	590;"	d
SQLITE_IOCAP_ATOMIC16K	src/sqlite/sqlite3.c	1622;"	d	file:
SQLITE_IOCAP_ATOMIC1K	src/include/sqlite/sqlite3.h	586;"	d
SQLITE_IOCAP_ATOMIC1K	src/sqlite/sqlite3.c	1618;"	d	file:
SQLITE_IOCAP_ATOMIC2K	src/include/sqlite/sqlite3.h	587;"	d
SQLITE_IOCAP_ATOMIC2K	src/sqlite/sqlite3.c	1619;"	d	file:
SQLITE_IOCAP_ATOMIC32K	src/include/sqlite/sqlite3.h	591;"	d
SQLITE_IOCAP_ATOMIC32K	src/sqlite/sqlite3.c	1623;"	d	file:
SQLITE_IOCAP_ATOMIC4K	src/include/sqlite/sqlite3.h	588;"	d
SQLITE_IOCAP_ATOMIC4K	src/sqlite/sqlite3.c	1620;"	d	file:
SQLITE_IOCAP_ATOMIC512	src/include/sqlite/sqlite3.h	585;"	d
SQLITE_IOCAP_ATOMIC512	src/sqlite/sqlite3.c	1617;"	d	file:
SQLITE_IOCAP_ATOMIC64K	src/include/sqlite/sqlite3.h	592;"	d
SQLITE_IOCAP_ATOMIC64K	src/sqlite/sqlite3.c	1624;"	d	file:
SQLITE_IOCAP_ATOMIC8K	src/include/sqlite/sqlite3.h	589;"	d
SQLITE_IOCAP_ATOMIC8K	src/sqlite/sqlite3.c	1621;"	d	file:
SQLITE_IOCAP_IMMUTABLE	src/include/sqlite/sqlite3.h	597;"	d
SQLITE_IOCAP_IMMUTABLE	src/sqlite/sqlite3.c	1629;"	d	file:
SQLITE_IOCAP_POWERSAFE_OVERWRITE	src/include/sqlite/sqlite3.h	596;"	d
SQLITE_IOCAP_POWERSAFE_OVERWRITE	src/sqlite/sqlite3.c	1628;"	d	file:
SQLITE_IOCAP_SAFE_APPEND	src/include/sqlite/sqlite3.h	593;"	d
SQLITE_IOCAP_SAFE_APPEND	src/sqlite/sqlite3.c	1625;"	d	file:
SQLITE_IOCAP_SEQUENTIAL	src/include/sqlite/sqlite3.h	594;"	d
SQLITE_IOCAP_SEQUENTIAL	src/sqlite/sqlite3.c	1626;"	d	file:
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	src/include/sqlite/sqlite3.h	595;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	src/sqlite/sqlite3.c	1627;"	d	file:
SQLITE_IOERR	src/include/sqlite/sqlite3.h	429;"	d
SQLITE_IOERR	src/sqlite/sqlite3.c	1461;"	d	file:
SQLITE_IOERR_ACCESS	src/include/sqlite/sqlite3.h	481;"	d
SQLITE_IOERR_ACCESS	src/sqlite/sqlite3.c	1513;"	d	file:
SQLITE_IOERR_AUTH	src/include/sqlite/sqlite3.h	496;"	d
SQLITE_IOERR_AUTH	src/sqlite/sqlite3.c	1528;"	d	file:
SQLITE_IOERR_BLOCKED	src/include/sqlite/sqlite3.h	479;"	d
SQLITE_IOERR_BLOCKED	src/sqlite/sqlite3.c	1511;"	d	file:
SQLITE_IOERR_CHECKRESERVEDLOCK	src/include/sqlite/sqlite3.h	482;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	src/sqlite/sqlite3.c	1514;"	d	file:
SQLITE_IOERR_CLOSE	src/include/sqlite/sqlite3.h	484;"	d
SQLITE_IOERR_CLOSE	src/sqlite/sqlite3.c	1516;"	d	file:
SQLITE_IOERR_CONVPATH	src/include/sqlite/sqlite3.h	494;"	d
SQLITE_IOERR_CONVPATH	src/sqlite/sqlite3.c	1526;"	d	file:
SQLITE_IOERR_DELETE	src/include/sqlite/sqlite3.h	478;"	d
SQLITE_IOERR_DELETE	src/sqlite/sqlite3.c	1510;"	d	file:
SQLITE_IOERR_DELETE_NOENT	src/include/sqlite/sqlite3.h	491;"	d
SQLITE_IOERR_DELETE_NOENT	src/sqlite/sqlite3.c	1523;"	d	file:
SQLITE_IOERR_DIR_CLOSE	src/include/sqlite/sqlite3.h	485;"	d
SQLITE_IOERR_DIR_CLOSE	src/sqlite/sqlite3.c	1517;"	d	file:
SQLITE_IOERR_DIR_FSYNC	src/include/sqlite/sqlite3.h	473;"	d
SQLITE_IOERR_DIR_FSYNC	src/sqlite/sqlite3.c	1505;"	d	file:
SQLITE_IOERR_FSTAT	src/include/sqlite/sqlite3.h	475;"	d
SQLITE_IOERR_FSTAT	src/sqlite/sqlite3.c	1507;"	d	file:
SQLITE_IOERR_FSYNC	src/include/sqlite/sqlite3.h	472;"	d
SQLITE_IOERR_FSYNC	src/sqlite/sqlite3.c	1504;"	d	file:
SQLITE_IOERR_GETTEMPPATH	src/include/sqlite/sqlite3.h	493;"	d
SQLITE_IOERR_GETTEMPPATH	src/sqlite/sqlite3.c	1525;"	d	file:
SQLITE_IOERR_LOCK	src/include/sqlite/sqlite3.h	483;"	d
SQLITE_IOERR_LOCK	src/sqlite/sqlite3.c	1515;"	d	file:
SQLITE_IOERR_MMAP	src/include/sqlite/sqlite3.h	492;"	d
SQLITE_IOERR_MMAP	src/sqlite/sqlite3.c	1524;"	d	file:
SQLITE_IOERR_NOMEM	src/include/sqlite/sqlite3.h	480;"	d
SQLITE_IOERR_NOMEM	src/sqlite/sqlite3.c	1512;"	d	file:
SQLITE_IOERR_NOMEM_BKPT	src/sqlite/sqlite3.c	17065;"	d	file:
SQLITE_IOERR_NOMEM_BKPT	src/sqlite/sqlite3.c	17069;"	d	file:
SQLITE_IOERR_RDLOCK	src/include/sqlite/sqlite3.h	477;"	d
SQLITE_IOERR_RDLOCK	src/sqlite/sqlite3.c	1509;"	d	file:
SQLITE_IOERR_READ	src/include/sqlite/sqlite3.h	469;"	d
SQLITE_IOERR_READ	src/sqlite/sqlite3.c	1501;"	d	file:
SQLITE_IOERR_SEEK	src/include/sqlite/sqlite3.h	490;"	d
SQLITE_IOERR_SEEK	src/sqlite/sqlite3.c	1522;"	d	file:
SQLITE_IOERR_SHMLOCK	src/include/sqlite/sqlite3.h	488;"	d
SQLITE_IOERR_SHMLOCK	src/sqlite/sqlite3.c	1520;"	d	file:
SQLITE_IOERR_SHMMAP	src/include/sqlite/sqlite3.h	489;"	d
SQLITE_IOERR_SHMMAP	src/sqlite/sqlite3.c	1521;"	d	file:
SQLITE_IOERR_SHMOPEN	src/include/sqlite/sqlite3.h	486;"	d
SQLITE_IOERR_SHMOPEN	src/sqlite/sqlite3.c	1518;"	d	file:
SQLITE_IOERR_SHMSIZE	src/include/sqlite/sqlite3.h	487;"	d
SQLITE_IOERR_SHMSIZE	src/sqlite/sqlite3.c	1519;"	d	file:
SQLITE_IOERR_SHORT_READ	src/include/sqlite/sqlite3.h	470;"	d
SQLITE_IOERR_SHORT_READ	src/sqlite/sqlite3.c	1502;"	d	file:
SQLITE_IOERR_TRUNCATE	src/include/sqlite/sqlite3.h	474;"	d
SQLITE_IOERR_TRUNCATE	src/sqlite/sqlite3.c	1506;"	d	file:
SQLITE_IOERR_UNLOCK	src/include/sqlite/sqlite3.h	476;"	d
SQLITE_IOERR_UNLOCK	src/sqlite/sqlite3.c	1508;"	d	file:
SQLITE_IOERR_VNODE	src/include/sqlite/sqlite3.h	495;"	d
SQLITE_IOERR_VNODE	src/sqlite/sqlite3.c	1527;"	d	file:
SQLITE_IOERR_WRITE	src/include/sqlite/sqlite3.h	471;"	d
SQLITE_IOERR_WRITE	src/sqlite/sqlite3.c	1503;"	d	file:
SQLITE_IgnoreChecks	src/sqlite/sqlite3.c	15115;"	d	file:
SQLITE_InternChanges	src/sqlite/sqlite3.c	15131;"	d	file:
SQLITE_JUMPIFNULL	src/sqlite/sqlite3.c	15438;"	d	file:
SQLITE_KEEPNULL	src/sqlite/sqlite3.c	15437;"	d	file:
SQLITE_LAST_ERRNO	src/include/sqlite/sqlite3.h	1050;"	d
SQLITE_LAST_ERRNO	src/sqlite/sqlite3.c	2082;"	d	file:
SQLITE_LIMIT_ATTACHED	src/include/sqlite/sqlite3.h	3478;"	d
SQLITE_LIMIT_ATTACHED	src/sqlite/sqlite3.c	4510;"	d	file:
SQLITE_LIMIT_COLUMN	src/include/sqlite/sqlite3.h	3473;"	d
SQLITE_LIMIT_COLUMN	src/sqlite/sqlite3.c	4505;"	d	file:
SQLITE_LIMIT_COMPOUND_SELECT	src/include/sqlite/sqlite3.h	3475;"	d
SQLITE_LIMIT_COMPOUND_SELECT	src/sqlite/sqlite3.c	4507;"	d	file:
SQLITE_LIMIT_EXPR_DEPTH	src/include/sqlite/sqlite3.h	3474;"	d
SQLITE_LIMIT_EXPR_DEPTH	src/sqlite/sqlite3.c	4506;"	d	file:
SQLITE_LIMIT_FUNCTION_ARG	src/include/sqlite/sqlite3.h	3477;"	d
SQLITE_LIMIT_FUNCTION_ARG	src/sqlite/sqlite3.c	4509;"	d	file:
SQLITE_LIMIT_LENGTH	src/include/sqlite/sqlite3.h	3471;"	d
SQLITE_LIMIT_LENGTH	src/sqlite/sqlite3.c	4503;"	d	file:
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	src/include/sqlite/sqlite3.h	3479;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	src/sqlite/sqlite3.c	4511;"	d	file:
SQLITE_LIMIT_SQL_LENGTH	src/include/sqlite/sqlite3.h	3472;"	d
SQLITE_LIMIT_SQL_LENGTH	src/sqlite/sqlite3.c	4504;"	d	file:
SQLITE_LIMIT_TRIGGER_DEPTH	src/include/sqlite/sqlite3.h	3481;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	src/sqlite/sqlite3.c	4513;"	d	file:
SQLITE_LIMIT_VARIABLE_NUMBER	src/include/sqlite/sqlite3.h	3480;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	src/sqlite/sqlite3.c	4512;"	d	file:
SQLITE_LIMIT_VDBE_OP	src/include/sqlite/sqlite3.h	3476;"	d
SQLITE_LIMIT_VDBE_OP	src/sqlite/sqlite3.c	4508;"	d	file:
SQLITE_LIMIT_WORKER_THREADS	src/include/sqlite/sqlite3.h	3482;"	d
SQLITE_LIMIT_WORKER_THREADS	src/sqlite/sqlite3.c	4514;"	d	file:
SQLITE_LITTLEENDIAN	src/sqlite/sqlite3.c	12780;"	d	file:
SQLITE_LITTLEENDIAN	src/sqlite/sqlite3.c	12784;"	d	file:
SQLITE_LITTLEENDIAN	src/sqlite/sqlite3.c	12793;"	d	file:
SQLITE_LOCKED	src/include/sqlite/sqlite3.h	425;"	d
SQLITE_LOCKED	src/sqlite/sqlite3.c	1457;"	d	file:
SQLITE_LOCKED_SHAREDCACHE	src/include/sqlite/sqlite3.h	497;"	d
SQLITE_LOCKED_SHAREDCACHE	src/sqlite/sqlite3.c	1529;"	d	file:
SQLITE_LOCKFILEEX_FLAGS	src/sqlite/sqlite3.c	41224;"	d	file:
SQLITE_LOCKFILE_FLAGS	src/sqlite/sqlite3.c	41215;"	d	file:
SQLITE_LOCK_EXCLUSIVE	src/include/sqlite/sqlite3.h	610;"	d
SQLITE_LOCK_EXCLUSIVE	src/sqlite/sqlite3.c	1642;"	d	file:
SQLITE_LOCK_NONE	src/include/sqlite/sqlite3.h	606;"	d
SQLITE_LOCK_NONE	src/sqlite/sqlite3.c	1638;"	d	file:
SQLITE_LOCK_PENDING	src/include/sqlite/sqlite3.h	609;"	d
SQLITE_LOCK_PENDING	src/sqlite/sqlite3.c	1641;"	d	file:
SQLITE_LOCK_RESERVED	src/include/sqlite/sqlite3.h	608;"	d
SQLITE_LOCK_RESERVED	src/sqlite/sqlite3.c	1640;"	d	file:
SQLITE_LOCK_SHARED	src/include/sqlite/sqlite3.h	607;"	d
SQLITE_LOCK_SHARED	src/sqlite/sqlite3.c	1639;"	d	file:
SQLITE_LegacyFileFmt	src/sqlite/sqlite3.c	15104;"	d	file:
SQLITE_LoadExtFunc	src/sqlite/sqlite3.c	15132;"	d	file:
SQLITE_LoadExtension	src/sqlite/sqlite3.c	15122;"	d	file:
SQLITE_MAGIC_BUSY	src/sqlite/sqlite3.c	15185;"	d	file:
SQLITE_MAGIC_CLOSED	src/sqlite/sqlite3.c	15183;"	d	file:
SQLITE_MAGIC_ERROR	src/sqlite/sqlite3.c	15186;"	d	file:
SQLITE_MAGIC_OPEN	src/sqlite/sqlite3.c	15182;"	d	file:
SQLITE_MAGIC_SICK	src/sqlite/sqlite3.c	15184;"	d	file:
SQLITE_MAGIC_ZOMBIE	src/sqlite/sqlite3.c	15187;"	d	file:
SQLITE_MALLOC	src/sqlite/sqlite3.c	21133;"	d	file:
SQLITE_MALLOC	src/sqlite/sqlite3.c	21145;"	d	file:
SQLITE_MALLOCSIZE	src/sqlite/sqlite3.c	21136;"	d	file:
SQLITE_MALLOCSIZE	src/sqlite/sqlite3.c	21178;"	d	file:
SQLITE_MALLOCSIZE	src/sqlite/sqlite3.c	21182;"	d	file:
SQLITE_MALLOC_SOFT_LIMIT	src/sqlite/sqlite3.c	12030;"	d	file:
SQLITE_MATCH	src/sqlite/sqlite3.c	106653;"	d	file:
SQLITE_MAX_ATTACHED	src/sqlite/sqlite3.c	11783;"	d	file:
SQLITE_MAX_COLUMN	src/sqlite/sqlite3.c	11700;"	d	file:
SQLITE_MAX_COMPOUND_SELECT	src/sqlite/sqlite3.c	11737;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	11830;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	11833;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/sqlite/sqlite3.c	11834;"	d	file:
SQLITE_MAX_EXPR_DEPTH	src/sqlite/sqlite3.c	11725;"	d	file:
SQLITE_MAX_FILE_FORMAT	src/sqlite/sqlite3.c	12537;"	d	file:
SQLITE_MAX_FUNCTION_ARG	src/sqlite/sqlite3.c	11752;"	d	file:
SQLITE_MAX_LENGTH	src/sqlite/sqlite3.c	11679;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	src/sqlite/sqlite3.c	11854;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	src/sqlite/sqlite3.c	168603;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/sqlite/sqlite3.c	12835;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/sqlite/sqlite3.c	12836;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/sqlite/sqlite3.c	12852;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/sqlite/sqlite3.c	12854;"	d	file:
SQLITE_MAX_PAGE_COUNT	src/sqlite/sqlite3.c	11846;"	d	file:
SQLITE_MAX_PAGE_SIZE	src/sqlite/sqlite3.c	11806;"	d	file:
SQLITE_MAX_PAGE_SIZE	src/sqlite/sqlite3.c	11808;"	d	file:
SQLITE_MAX_PMASZ	src/sqlite/sqlite3.c	86620;"	d	file:
SQLITE_MAX_SCHEMA_RETRY	src/sqlite/sqlite3.c	18381;"	d	file:
SQLITE_MAX_SQL_LENGTH	src/sqlite/sqlite3.c	11711;"	d	file:
SQLITE_MAX_SYMLINKS	src/sqlite/sqlite3.c	30274;"	d	file:
SQLITE_MAX_TRIGGER_DEPTH	src/sqlite/sqlite3.c	11865;"	d	file:
SQLITE_MAX_U32	src/sqlite/sqlite3.c	12683;"	d	file:
SQLITE_MAX_VARIABLE_NUMBER	src/sqlite/sqlite3.c	11791;"	d	file:
SQLITE_MAX_VDBE_OP	src/sqlite/sqlite3.c	11745;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/sqlite/sqlite3.c	12564;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/sqlite/sqlite3.c	12565;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/sqlite/sqlite3.c	12568;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/sqlite/sqlite3.c	12574;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/sqlite/sqlite3.c	12575;"	d	file:
SQLITE_MINIMUM_FILE_DESCRIPTOR	src/sqlite/sqlite3.c	30912;"	d	file:
SQLITE_MISMATCH	src/include/sqlite/sqlite3.h	439;"	d
SQLITE_MISMATCH	src/sqlite/sqlite3.c	1471;"	d	file:
SQLITE_MISUSE	src/include/sqlite/sqlite3.h	440;"	d
SQLITE_MISUSE	src/sqlite/sqlite3.c	1472;"	d	file:
SQLITE_MISUSE_BKPT	src/sqlite/sqlite3.c	17058;"	d	file:
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	src/sqlite/sqlite3.c	12513;"	d	file:
SQLITE_MSVC_H	src/sqlite/sqlite3.c	864;"	d	file:
SQLITE_MUTEX_FAST	src/include/sqlite/sqlite3.h	6773;"	d
SQLITE_MUTEX_FAST	src/sqlite/sqlite3.c	7805;"	d	file:
SQLITE_MUTEX_NOOP	src/sqlite/sqlite3.c	14732;"	d	file:
SQLITE_MUTEX_NREF	src/sqlite/sqlite3.c	23586;"	d	file:
SQLITE_MUTEX_NREF	src/sqlite/sqlite3.c	23588;"	d	file:
SQLITE_MUTEX_OMIT	src/sqlite/sqlite3.c	14724;"	d	file:
SQLITE_MUTEX_PTHREADS	src/sqlite/sqlite3.c	14728;"	d	file:
SQLITE_MUTEX_RECURSIVE	src/include/sqlite/sqlite3.h	6774;"	d
SQLITE_MUTEX_RECURSIVE	src/sqlite/sqlite3.c	7806;"	d	file:
SQLITE_MUTEX_STATIC_APP1	src/include/sqlite/sqlite3.h	6783;"	d
SQLITE_MUTEX_STATIC_APP1	src/sqlite/sqlite3.c	7815;"	d	file:
SQLITE_MUTEX_STATIC_APP2	src/include/sqlite/sqlite3.h	6784;"	d
SQLITE_MUTEX_STATIC_APP2	src/sqlite/sqlite3.c	7816;"	d	file:
SQLITE_MUTEX_STATIC_APP3	src/include/sqlite/sqlite3.h	6785;"	d
SQLITE_MUTEX_STATIC_APP3	src/sqlite/sqlite3.c	7817;"	d	file:
SQLITE_MUTEX_STATIC_LRU	src/include/sqlite/sqlite3.h	6780;"	d
SQLITE_MUTEX_STATIC_LRU	src/sqlite/sqlite3.c	7812;"	d	file:
SQLITE_MUTEX_STATIC_LRU2	src/include/sqlite/sqlite3.h	6781;"	d
SQLITE_MUTEX_STATIC_LRU2	src/sqlite/sqlite3.c	7813;"	d	file:
SQLITE_MUTEX_STATIC_MASTER	src/include/sqlite/sqlite3.h	6775;"	d
SQLITE_MUTEX_STATIC_MASTER	src/sqlite/sqlite3.c	7807;"	d	file:
SQLITE_MUTEX_STATIC_MEM	src/include/sqlite/sqlite3.h	6776;"	d
SQLITE_MUTEX_STATIC_MEM	src/sqlite/sqlite3.c	7808;"	d	file:
SQLITE_MUTEX_STATIC_MEM2	src/include/sqlite/sqlite3.h	6777;"	d
SQLITE_MUTEX_STATIC_MEM2	src/sqlite/sqlite3.c	7809;"	d	file:
SQLITE_MUTEX_STATIC_OPEN	src/include/sqlite/sqlite3.h	6778;"	d
SQLITE_MUTEX_STATIC_OPEN	src/sqlite/sqlite3.c	7810;"	d	file:
SQLITE_MUTEX_STATIC_PMEM	src/include/sqlite/sqlite3.h	6782;"	d
SQLITE_MUTEX_STATIC_PMEM	src/sqlite/sqlite3.c	7814;"	d	file:
SQLITE_MUTEX_STATIC_PRNG	src/include/sqlite/sqlite3.h	6779;"	d
SQLITE_MUTEX_STATIC_PRNG	src/sqlite/sqlite3.c	7811;"	d	file:
SQLITE_MUTEX_STATIC_VFS1	src/include/sqlite/sqlite3.h	6786;"	d
SQLITE_MUTEX_STATIC_VFS1	src/sqlite/sqlite3.c	7818;"	d	file:
SQLITE_MUTEX_STATIC_VFS2	src/include/sqlite/sqlite3.h	6787;"	d
SQLITE_MUTEX_STATIC_VFS2	src/sqlite/sqlite3.c	7819;"	d	file:
SQLITE_MUTEX_STATIC_VFS3	src/include/sqlite/sqlite3.h	6788;"	d
SQLITE_MUTEX_STATIC_VFS3	src/sqlite/sqlite3.c	7820;"	d	file:
SQLITE_MUTEX_W32	src/sqlite/sqlite3.c	14730;"	d	file:
SQLITE_MX_JUMP_OPCODE	src/sqlite/sqlite3.c	13812;"	d	file:
SQLITE_NEED_ERR_NAME	src/sqlite/sqlite3.c	12176;"	d	file:
SQLITE_NEED_ERR_NAME	src/sqlite/sqlite3.c	12178;"	d	file:
SQLITE_NOINLINE	src/sqlite/sqlite3.c	11925;"	d	file:
SQLITE_NOINLINE	src/sqlite/sqlite3.c	11927;"	d	file:
SQLITE_NOINLINE	src/sqlite/sqlite3.c	11929;"	d	file:
SQLITE_NOLFS	src/include/sqlite/sqlite3.h	441;"	d
SQLITE_NOLFS	src/sqlite/sqlite3.c	1473;"	d	file:
SQLITE_NOMATCH	src/sqlite/sqlite3.c	106654;"	d	file:
SQLITE_NOMEM	src/include/sqlite/sqlite3.h	426;"	d
SQLITE_NOMEM	src/sqlite/sqlite3.c	1458;"	d	file:
SQLITE_NOMEM_BKPT	src/sqlite/sqlite3.c	17064;"	d	file:
SQLITE_NOMEM_BKPT	src/sqlite/sqlite3.c	17068;"	d	file:
SQLITE_NOTADB	src/include/sqlite/sqlite3.h	445;"	d
SQLITE_NOTADB	src/sqlite/sqlite3.c	1477;"	d	file:
SQLITE_NOTFOUND	src/include/sqlite/sqlite3.h	431;"	d
SQLITE_NOTFOUND	src/sqlite/sqlite3.c	1463;"	d	file:
SQLITE_NOTICE	src/include/sqlite/sqlite3.h	446;"	d
SQLITE_NOTICE	src/sqlite/sqlite3.c	1478;"	d	file:
SQLITE_NOTICE_RECOVER_ROLLBACK	src/include/sqlite/sqlite3.h	521;"	d
SQLITE_NOTICE_RECOVER_ROLLBACK	src/sqlite/sqlite3.c	1553;"	d	file:
SQLITE_NOTICE_RECOVER_WAL	src/include/sqlite/sqlite3.h	520;"	d
SQLITE_NOTICE_RECOVER_WAL	src/sqlite/sqlite3.c	1552;"	d	file:
SQLITE_NOTNULL	src/sqlite/sqlite3.c	15441;"	d	file:
SQLITE_NOWILDCARDMATCH	src/sqlite/sqlite3.c	106655;"	d	file:
SQLITE_NULL	src/include/sqlite/sqlite3.h	4258;"	d
SQLITE_NULL	src/sqlite/sqlite3.c	5290;"	d	file:
SQLITE_NULLEQ	src/sqlite/sqlite3.c	15440;"	d	file:
SQLITE_N_BTREE_META	src/sqlite/sqlite3.c	13082;"	d	file:
SQLITE_N_COLCACHE	src/sqlite/sqlite3.c	16519;"	d	file:
SQLITE_N_KEYWORD	src/sqlite/sqlite3.c	140237;"	d	file:
SQLITE_N_LIMIT	src/sqlite/sqlite3.c	14862;"	d	file:
SQLITE_NoCkptOnClose	src/sqlite/sqlite3.c	15117;"	d	file:
SQLITE_NullCallback	src/sqlite/sqlite3.c	15113;"	d	file:
SQLITE_OK	src/include/sqlite/sqlite3.h	418;"	d
SQLITE_OK	src/sqlite/sqlite3.c	1450;"	d	file:
SQLITE_OK_LOAD_PERMANENTLY	src/include/sqlite/sqlite3.h	524;"	d
SQLITE_OK_LOAD_PERMANENTLY	src/sqlite/sqlite3.c	1556;"	d	file:
SQLITE_OMIT_DATETIME_FUNCS	src/sqlite/sqlite3.c	12511;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	src/sqlite/shell.c	45;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	src/sqlite/sqlite3.c	916;"	d	file:
SQLITE_OMIT_POPEN	src/sqlite/shell.c	136;"	d	file:
SQLITE_OMIT_TRACE	src/sqlite/sqlite3.c	12512;"	d	file:
SQLITE_OPEN_AUTOPROXY	src/include/sqlite/sqlite3.h	538;"	d
SQLITE_OPEN_AUTOPROXY	src/sqlite/sqlite3.c	1570;"	d	file:
SQLITE_OPEN_CREATE	src/include/sqlite/sqlite3.h	535;"	d
SQLITE_OPEN_CREATE	src/sqlite/sqlite3.c	1567;"	d	file:
SQLITE_OPEN_DELETEONCLOSE	src/include/sqlite/sqlite3.h	536;"	d
SQLITE_OPEN_DELETEONCLOSE	src/sqlite/sqlite3.c	1568;"	d	file:
SQLITE_OPEN_EXCLUSIVE	src/include/sqlite/sqlite3.h	537;"	d
SQLITE_OPEN_EXCLUSIVE	src/sqlite/sqlite3.c	1569;"	d	file:
SQLITE_OPEN_FULLMUTEX	src/include/sqlite/sqlite3.h	549;"	d
SQLITE_OPEN_FULLMUTEX	src/sqlite/sqlite3.c	1581;"	d	file:
SQLITE_OPEN_MAIN_DB	src/include/sqlite/sqlite3.h	541;"	d
SQLITE_OPEN_MAIN_DB	src/sqlite/sqlite3.c	1573;"	d	file:
SQLITE_OPEN_MAIN_JOURNAL	src/include/sqlite/sqlite3.h	544;"	d
SQLITE_OPEN_MAIN_JOURNAL	src/sqlite/sqlite3.c	1576;"	d	file:
SQLITE_OPEN_MASTER_JOURNAL	src/include/sqlite/sqlite3.h	547;"	d
SQLITE_OPEN_MASTER_JOURNAL	src/sqlite/sqlite3.c	1579;"	d	file:
SQLITE_OPEN_MEMORY	src/include/sqlite/sqlite3.h	540;"	d
SQLITE_OPEN_MEMORY	src/sqlite/sqlite3.c	1572;"	d	file:
SQLITE_OPEN_NOMUTEX	src/include/sqlite/sqlite3.h	548;"	d
SQLITE_OPEN_NOMUTEX	src/sqlite/sqlite3.c	1580;"	d	file:
SQLITE_OPEN_PRIVATECACHE	src/include/sqlite/sqlite3.h	551;"	d
SQLITE_OPEN_PRIVATECACHE	src/sqlite/sqlite3.c	1583;"	d	file:
SQLITE_OPEN_READONLY	src/include/sqlite/sqlite3.h	533;"	d
SQLITE_OPEN_READONLY	src/sqlite/sqlite3.c	1565;"	d	file:
SQLITE_OPEN_READWRITE	src/include/sqlite/sqlite3.h	534;"	d
SQLITE_OPEN_READWRITE	src/sqlite/sqlite3.c	1566;"	d	file:
SQLITE_OPEN_SHAREDCACHE	src/include/sqlite/sqlite3.h	550;"	d
SQLITE_OPEN_SHAREDCACHE	src/sqlite/sqlite3.c	1582;"	d	file:
SQLITE_OPEN_SUBJOURNAL	src/include/sqlite/sqlite3.h	546;"	d
SQLITE_OPEN_SUBJOURNAL	src/sqlite/sqlite3.c	1578;"	d	file:
SQLITE_OPEN_TEMP_DB	src/include/sqlite/sqlite3.h	542;"	d
SQLITE_OPEN_TEMP_DB	src/sqlite/sqlite3.c	1574;"	d	file:
SQLITE_OPEN_TEMP_JOURNAL	src/include/sqlite/sqlite3.h	545;"	d
SQLITE_OPEN_TEMP_JOURNAL	src/sqlite/sqlite3.c	1577;"	d	file:
SQLITE_OPEN_TRANSIENT_DB	src/include/sqlite/sqlite3.h	543;"	d
SQLITE_OPEN_TRANSIENT_DB	src/sqlite/sqlite3.c	1575;"	d	file:
SQLITE_OPEN_URI	src/include/sqlite/sqlite3.h	539;"	d
SQLITE_OPEN_URI	src/sqlite/sqlite3.c	1571;"	d	file:
SQLITE_OPEN_WAL	src/include/sqlite/sqlite3.h	552;"	d
SQLITE_OPEN_WAL	src/sqlite/sqlite3.c	1584;"	d	file:
SQLITE_OS_OTHER	src/sqlite/sqlite3.c	14469;"	d	file:
SQLITE_OS_OTHER	src/sqlite/sqlite3.c	14473;"	d	file:
SQLITE_OS_OTHER	src/sqlite/sqlite3.c	914;"	d	file:
SQLITE_OS_SETUP_H	src/sqlite/sqlite3.c	14452;"	d	file:
SQLITE_OS_UNIX	src/sqlite/sqlite3.c	14464;"	d	file:
SQLITE_OS_UNIX	src/sqlite/sqlite3.c	14465;"	d	file:
SQLITE_OS_UNIX	src/sqlite/sqlite3.c	14478;"	d	file:
SQLITE_OS_UNIX	src/sqlite/sqlite3.c	14481;"	d	file:
SQLITE_OS_UNIX	src/sqlite/sqlite3.c	14484;"	d	file:
SQLITE_OS_WIN	src/sqlite/sqlite3.c	14466;"	d	file:
SQLITE_OS_WIN	src/sqlite/sqlite3.c	14467;"	d	file:
SQLITE_OS_WIN	src/sqlite/sqlite3.c	14477;"	d	file:
SQLITE_OS_WIN	src/sqlite/sqlite3.c	14480;"	d	file:
SQLITE_OS_WIN	src/sqlite/sqlite3.c	14488;"	d	file:
SQLITE_OS_WINCE	src/sqlite/sqlite3.c	24221;"	d	file:
SQLITE_OS_WINCE	src/sqlite/sqlite3.c	24223;"	d	file:
SQLITE_OS_WINNT	src/sqlite/sqlite3.c	24213;"	d	file:
SQLITE_OS_WINRT	src/sqlite/sqlite3.c	24231;"	d	file:
SQLITE_OS_WIN_H	src/sqlite/sqlite3.c	24183;"	d	file:
SQLITE_OS_WIN_THREADS	src/sqlite/sqlite3.c	24250;"	d	file:
SQLITE_OS_WIN_THREADS	src/sqlite/sqlite3.c	24252;"	d	file:
SQLITE_OmitNoopJoin	src/sqlite/sqlite3.c	15160;"	d	file:
SQLITE_OrderByIdxJoin	src/sqlite/sqlite3.c	15157;"	d	file:
SQLITE_PAGER_H	src/sqlite/sqlite3.c	13992;"	d	file:
SQLITE_PERM	src/include/sqlite/sqlite3.h	422;"	d
SQLITE_PERM	src/sqlite/sqlite3.c	1454;"	d	file:
SQLITE_POWERSAFE_OVERWRITE	src/sqlite/sqlite3.c	11980;"	d	file:
SQLITE_PRAGMA	src/include/sqlite/sqlite3.h	2833;"	d
SQLITE_PRAGMA	src/sqlite/sqlite3.c	3865;"	d	file:
SQLITE_PREPARE_MASK	src/sqlite/sqlite3.c	13821;"	d	file:
SQLITE_PREPARE_PERSISTENT	src/include/sqlite/sqlite3.h	3504;"	d
SQLITE_PREPARE_PERSISTENT	src/sqlite/sqlite3.c	4536;"	d	file:
SQLITE_PREPARE_SAVESQL	src/sqlite/sqlite3.c	13820;"	d	file:
SQLITE_PRINTF_INTERNAL	src/sqlite/sqlite3.c	16868;"	d	file:
SQLITE_PRINTF_MALLOCED	src/sqlite/sqlite3.c	16870;"	d	file:
SQLITE_PRINTF_SQLFUNC	src/sqlite/sqlite3.c	16869;"	d	file:
SQLITE_PRINT_BUF_SIZE	src/sqlite/sqlite3.c	25644;"	d	file:
SQLITE_PRIVATE	src/sqlite/sqlite3.c	26;"	d	file:
SQLITE_PROTOCOL	src/include/sqlite/sqlite3.h	434;"	d
SQLITE_PROTOCOL	src/sqlite/sqlite3.c	1466;"	d	file:
SQLITE_PTRSIZE	src/sqlite/sqlite3.c	12727;"	d	file:
SQLITE_PTRSIZE	src/sqlite/sqlite3.c	12730;"	d	file:
SQLITE_PTRSIZE	src/sqlite/sqlite3.c	12732;"	d	file:
SQLITE_PTR_TO_INT	src/sqlite/sqlite3.c	11908;"	d	file:
SQLITE_PTR_TO_INT	src/sqlite/sqlite3.c	11911;"	d	file:
SQLITE_PTR_TO_INT	src/sqlite/sqlite3.c	11914;"	d	file:
SQLITE_PTR_TO_INT	src/sqlite/sqlite3.c	11917;"	d	file:
SQLITE_PTR_TO_INT64	src/sqlite/sqlite3.c	203684;"	d	file:
SQLITE_PreferBuiltin	src/sqlite/sqlite3.c	15133;"	d	file:
SQLITE_QueryFlattener	src/sqlite/sqlite3.c	15150;"	d	file:
SQLITE_QueryOnly	src/sqlite/sqlite3.c	15125;"	d	file:
SQLITE_RANGE	src/include/sqlite/sqlite3.h	444;"	d
SQLITE_RANGE	src/sqlite/sqlite3.c	1476;"	d	file:
SQLITE_RBU_STATE_CHECKPOINT	src/sqlite/sqlite3.c	169970;"	d	file:
SQLITE_RBU_STATE_DONE	src/sqlite/sqlite3.c	169971;"	d	file:
SQLITE_RBU_STATE_ERROR	src/sqlite/sqlite3.c	169972;"	d	file:
SQLITE_RBU_STATE_MOVE	src/sqlite/sqlite3.c	169969;"	d	file:
SQLITE_RBU_STATE_OAL	src/sqlite/sqlite3.c	169968;"	d	file:
SQLITE_RBU_UPDATE_CACHESIZE	src/sqlite/sqlite3.c	170044;"	d	file:
SQLITE_READ	src/include/sqlite/sqlite3.h	2834;"	d
SQLITE_READ	src/sqlite/sqlite3.c	3866;"	d	file:
SQLITE_READONLY	src/include/sqlite/sqlite3.h	427;"	d
SQLITE_READONLY	src/sqlite/sqlite3.c	1459;"	d	file:
SQLITE_READONLY_CANTLOCK	src/include/sqlite/sqlite3.h	506;"	d
SQLITE_READONLY_CANTLOCK	src/sqlite/sqlite3.c	1538;"	d	file:
SQLITE_READONLY_DBMOVED	src/include/sqlite/sqlite3.h	508;"	d
SQLITE_READONLY_DBMOVED	src/sqlite/sqlite3.c	1540;"	d	file:
SQLITE_READONLY_RECOVERY	src/include/sqlite/sqlite3.h	505;"	d
SQLITE_READONLY_RECOVERY	src/sqlite/sqlite3.c	1537;"	d	file:
SQLITE_READONLY_ROLLBACK	src/include/sqlite/sqlite3.h	507;"	d
SQLITE_READONLY_ROLLBACK	src/sqlite/sqlite3.c	1539;"	d	file:
SQLITE_REALLOC	src/sqlite/sqlite3.c	21135;"	d	file:
SQLITE_REALLOC	src/sqlite/sqlite3.c	21147;"	d	file:
SQLITE_RECURSIVE	src/include/sqlite/sqlite3.h	2848;"	d
SQLITE_RECURSIVE	src/sqlite/sqlite3.c	3880;"	d	file:
SQLITE_REINDEX	src/include/sqlite/sqlite3.h	2841;"	d
SQLITE_REINDEX	src/sqlite/sqlite3.c	3873;"	d	file:
SQLITE_REPLACE	src/include/sqlite/sqlite3.h	8176;"	d
SQLITE_REPLACE	src/sqlite/sqlite3.c	9208;"	d	file:
SQLITE_ROLLBACK	src/include/sqlite/sqlite3.h	8172;"	d
SQLITE_ROLLBACK	src/sqlite/sqlite3.c	9204;"	d	file:
SQLITE_ROW	src/include/sqlite/sqlite3.h	448;"	d
SQLITE_ROW	src/sqlite/sqlite3.c	1480;"	d	file:
SQLITE_ReadUncommit	src/sqlite/sqlite3.c	15116;"	d	file:
SQLITE_RecTriggers	src/sqlite/sqlite3.c	15119;"	d	file:
SQLITE_ReverseOrder	src/sqlite/sqlite3.c	15118;"	d	file:
SQLITE_SAVEPOINT	src/include/sqlite/sqlite3.h	2846;"	d
SQLITE_SAVEPOINT	src/sqlite/sqlite3.c	3878;"	d	file:
SQLITE_SCANSTAT_EST	src/include/sqlite/sqlite3.h	8227;"	d
SQLITE_SCANSTAT_EST	src/sqlite/sqlite3.c	9259;"	d	file:
SQLITE_SCANSTAT_EXPLAIN	src/include/sqlite/sqlite3.h	8229;"	d
SQLITE_SCANSTAT_EXPLAIN	src/sqlite/sqlite3.c	9261;"	d	file:
SQLITE_SCANSTAT_NAME	src/include/sqlite/sqlite3.h	8228;"	d
SQLITE_SCANSTAT_NAME	src/sqlite/sqlite3.c	9260;"	d	file:
SQLITE_SCANSTAT_NLOOP	src/include/sqlite/sqlite3.h	8225;"	d
SQLITE_SCANSTAT_NLOOP	src/sqlite/sqlite3.c	9257;"	d	file:
SQLITE_SCANSTAT_NVISIT	src/include/sqlite/sqlite3.h	8226;"	d
SQLITE_SCANSTAT_NVISIT	src/sqlite/sqlite3.c	9258;"	d	file:
SQLITE_SCANSTAT_SELECTID	src/include/sqlite/sqlite3.h	8230;"	d
SQLITE_SCANSTAT_SELECTID	src/sqlite/sqlite3.c	9262;"	d	file:
SQLITE_SCHEMA	src/include/sqlite/sqlite3.h	436;"	d
SQLITE_SCHEMA	src/sqlite/sqlite3.c	1468;"	d	file:
SQLITE_SELECT	src/include/sqlite/sqlite3.h	2835;"	d
SQLITE_SELECT	src/sqlite/sqlite3.c	3867;"	d	file:
SQLITE_SET_LOCKPROXYFILE	src/include/sqlite/sqlite3.h	1049;"	d
SQLITE_SET_LOCKPROXYFILE	src/sqlite/sqlite3.c	2081;"	d	file:
SQLITE_SHELL_IS_UTF8	src/sqlite/shell.c	7266;"	d	file:
SQLITE_SHELL_IS_UTF8	src/sqlite/shell.c	7268;"	d	file:
SQLITE_SHM_EXCLUSIVE	src/include/sqlite/sqlite3.h	1322;"	d
SQLITE_SHM_EXCLUSIVE	src/sqlite/sqlite3.c	2354;"	d	file:
SQLITE_SHM_LOCK	src/include/sqlite/sqlite3.h	1320;"	d
SQLITE_SHM_LOCK	src/sqlite/sqlite3.c	2352;"	d	file:
SQLITE_SHM_NLOCK	src/include/sqlite/sqlite3.h	1332;"	d
SQLITE_SHM_NLOCK	src/sqlite/sqlite3.c	2364;"	d	file:
SQLITE_SHM_SHARED	src/include/sqlite/sqlite3.h	1321;"	d
SQLITE_SHM_SHARED	src/sqlite/sqlite3.c	2353;"	d	file:
SQLITE_SHM_UNLOCK	src/include/sqlite/sqlite3.h	1319;"	d
SQLITE_SHM_UNLOCK	src/sqlite/sqlite3.c	2351;"	d	file:
SQLITE_SKIP_UTF8	src/sqlite/sqlite3.c	17041;"	d	file:
SQLITE_SORTER_PMASZ	src/sqlite/sqlite3.c	18200;"	d	file:
SQLITE_SOURCE_ID	src/include/sqlite/sqlite3.h	126;"	d
SQLITE_SOURCE_ID	src/sqlite/sqlite3.c	1158;"	d	file:
SQLITE_SO_ASC	src/sqlite/sqlite3.c	15396;"	d	file:
SQLITE_SO_DESC	src/sqlite/sqlite3.c	15397;"	d	file:
SQLITE_SO_UNDEFINED	src/sqlite/sqlite3.c	15398;"	d	file:
SQLITE_STAT4_SAMPLES	src/sqlite/sqlite3.c	97576;"	d	file:
SQLITE_STAT4_SAMPLES	src/sqlite/sqlite3.c	97577;"	d	file:
SQLITE_STAT4_SAMPLES	src/sqlite/sqlite3.c	97679;"	d	file:
SQLITE_STATIC	src/include/sqlite/sqlite3.h	4912;"	d
SQLITE_STATIC	src/sqlite/sqlite3.c	5944;"	d	file:
SQLITE_STATUS_MALLOC_COUNT	src/include/sqlite/sqlite3.h	7019;"	d
SQLITE_STATUS_MALLOC_COUNT	src/sqlite/sqlite3.c	8051;"	d	file:
SQLITE_STATUS_MALLOC_SIZE	src/include/sqlite/sqlite3.h	7015;"	d
SQLITE_STATUS_MALLOC_SIZE	src/sqlite/sqlite3.c	8047;"	d	file:
SQLITE_STATUS_MEMORY_USED	src/include/sqlite/sqlite3.h	7010;"	d
SQLITE_STATUS_MEMORY_USED	src/sqlite/sqlite3.c	8042;"	d	file:
SQLITE_STATUS_PAGECACHE_OVERFLOW	src/include/sqlite/sqlite3.h	7012;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	src/sqlite/sqlite3.c	8044;"	d	file:
SQLITE_STATUS_PAGECACHE_SIZE	src/include/sqlite/sqlite3.h	7017;"	d
SQLITE_STATUS_PAGECACHE_SIZE	src/sqlite/sqlite3.c	8049;"	d	file:
SQLITE_STATUS_PAGECACHE_USED	src/include/sqlite/sqlite3.h	7011;"	d
SQLITE_STATUS_PAGECACHE_USED	src/sqlite/sqlite3.c	8043;"	d	file:
SQLITE_STATUS_PARSER_STACK	src/include/sqlite/sqlite3.h	7016;"	d
SQLITE_STATUS_PARSER_STACK	src/sqlite/sqlite3.c	8048;"	d	file:
SQLITE_STATUS_SCRATCH_OVERFLOW	src/include/sqlite/sqlite3.h	7014;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	src/sqlite/sqlite3.c	8046;"	d	file:
SQLITE_STATUS_SCRATCH_SIZE	src/include/sqlite/sqlite3.h	7018;"	d
SQLITE_STATUS_SCRATCH_SIZE	src/sqlite/sqlite3.c	8050;"	d	file:
SQLITE_STATUS_SCRATCH_USED	src/include/sqlite/sqlite3.h	7013;"	d
SQLITE_STATUS_SCRATCH_USED	src/sqlite/sqlite3.c	8045;"	d	file:
SQLITE_STDCALL	src/include/sqlite/sqlite3.h	61;"	d
SQLITE_STDCALL	src/sqlite/sqlite3.c	1093;"	d	file:
SQLITE_STMTJRNL_SPILL	src/sqlite/sqlite3.c	18212;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	src/include/sqlite/sqlite3.h	7246;"	d
SQLITE_STMTSTATUS_AUTOINDEX	src/sqlite/sqlite3.c	8278;"	d	file:
SQLITE_STMTSTATUS_FULLSCAN_STEP	src/include/sqlite/sqlite3.h	7244;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	src/sqlite/sqlite3.c	8276;"	d	file:
SQLITE_STMTSTATUS_MEMUSED	src/include/sqlite/sqlite3.h	7250;"	d
SQLITE_STMTSTATUS_MEMUSED	src/sqlite/sqlite3.c	8282;"	d	file:
SQLITE_STMTSTATUS_REPREPARE	src/include/sqlite/sqlite3.h	7248;"	d
SQLITE_STMTSTATUS_REPREPARE	src/sqlite/sqlite3.c	8280;"	d	file:
SQLITE_STMTSTATUS_RUN	src/include/sqlite/sqlite3.h	7249;"	d
SQLITE_STMTSTATUS_RUN	src/sqlite/sqlite3.c	8281;"	d	file:
SQLITE_STMTSTATUS_SORT	src/include/sqlite/sqlite3.h	7245;"	d
SQLITE_STMTSTATUS_SORT	src/sqlite/sqlite3.c	8277;"	d	file:
SQLITE_STMTSTATUS_VM_STEP	src/include/sqlite/sqlite3.h	7247;"	d
SQLITE_STMTSTATUS_VM_STEP	src/sqlite/sqlite3.c	8279;"	d	file:
SQLITE_STOREP2	src/sqlite/sqlite3.c	15439;"	d	file:
SQLITE_SYNC_DATAONLY	src/include/sqlite/sqlite3.h	640;"	d
SQLITE_SYNC_DATAONLY	src/sqlite/sqlite3.c	1672;"	d	file:
SQLITE_SYNC_FULL	src/include/sqlite/sqlite3.h	639;"	d
SQLITE_SYNC_FULL	src/sqlite/sqlite3.c	1671;"	d	file:
SQLITE_SYNC_MASK	src/sqlite/sqlite3.c	47236;"	d	file:
SQLITE_SYNC_NORMAL	src/include/sqlite/sqlite3.h	638;"	d
SQLITE_SYNC_NORMAL	src/sqlite/sqlite3.c	1670;"	d	file:
SQLITE_SYSAPI	src/include/sqlite/sqlite3.h	67;"	d
SQLITE_SYSAPI	src/sqlite/sqlite3.c	1099;"	d	file:
SQLITE_SYSTEM_MALLOC	src/sqlite/sqlite3.c	12022;"	d	file:
SQLITE_ShortColNames	src/sqlite/sqlite3.c	15109;"	d	file:
SQLITE_SqlTrace	src/sqlite/sqlite3.c	15137;"	d	file:
SQLITE_Stat34	src/sqlite/sqlite3.c	15161;"	d	file:
SQLITE_SubqCoroutine	src/sqlite/sqlite3.c	15158;"	d	file:
SQLITE_TCLAPI	src/sqlite/sqlite3.c	830;"	d	file:
SQLITE_TEMP_FILE_PREFIX	src/sqlite/sqlite3.c	14533;"	d	file:
SQLITE_TEMP_STORE	src/sqlite/sqlite3.c	12555;"	d	file:
SQLITE_TESTCTRL_ALWAYS	src/include/sqlite/sqlite3.h	6876;"	d
SQLITE_TESTCTRL_ALWAYS	src/sqlite/sqlite3.c	7908;"	d	file:
SQLITE_TESTCTRL_ASSERT	src/include/sqlite/sqlite3.h	6875;"	d
SQLITE_TESTCTRL_ASSERT	src/sqlite/sqlite3.c	7907;"	d	file:
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	src/include/sqlite/sqlite3.h	6873;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	src/sqlite/sqlite3.c	7905;"	d	file:
SQLITE_TESTCTRL_BITVEC_TEST	src/include/sqlite/sqlite3.h	6871;"	d
SQLITE_TESTCTRL_BITVEC_TEST	src/sqlite/sqlite3.c	7903;"	d	file:
SQLITE_TESTCTRL_BYTEORDER	src/include/sqlite/sqlite3.h	6886;"	d
SQLITE_TESTCTRL_BYTEORDER	src/sqlite/sqlite3.c	7918;"	d	file:
SQLITE_TESTCTRL_EXPLAIN_STMT	src/include/sqlite/sqlite3.h	6882;"	d
SQLITE_TESTCTRL_EXPLAIN_STMT	src/sqlite/sqlite3.c	7914;"	d	file:
SQLITE_TESTCTRL_FAULT_INSTALL	src/include/sqlite/sqlite3.h	6872;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	src/sqlite/sqlite3.c	7904;"	d	file:
SQLITE_TESTCTRL_FIRST	src/include/sqlite/sqlite3.h	6867;"	d
SQLITE_TESTCTRL_FIRST	src/sqlite/sqlite3.c	7899;"	d	file:
SQLITE_TESTCTRL_IMPOSTER	src/include/sqlite/sqlite3.h	6889;"	d
SQLITE_TESTCTRL_IMPOSTER	src/sqlite/sqlite3.c	7921;"	d	file:
SQLITE_TESTCTRL_ISINIT	src/include/sqlite/sqlite3.h	6887;"	d
SQLITE_TESTCTRL_ISINIT	src/sqlite/sqlite3.c	7919;"	d	file:
SQLITE_TESTCTRL_ISKEYWORD	src/include/sqlite/sqlite3.h	6879;"	d
SQLITE_TESTCTRL_ISKEYWORD	src/sqlite/sqlite3.c	7911;"	d	file:
SQLITE_TESTCTRL_LAST	src/include/sqlite/sqlite3.h	6890;"	d
SQLITE_TESTCTRL_LAST	src/sqlite/sqlite3.c	7922;"	d	file:
SQLITE_TESTCTRL_LOCALTIME_FAULT	src/include/sqlite/sqlite3.h	6881;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	src/sqlite/sqlite3.c	7913;"	d	file:
SQLITE_TESTCTRL_NEVER_CORRUPT	src/include/sqlite/sqlite3.h	6884;"	d
SQLITE_TESTCTRL_NEVER_CORRUPT	src/sqlite/sqlite3.c	7916;"	d	file:
SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD	src/include/sqlite/sqlite3.h	6883;"	d
SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD	src/sqlite/sqlite3.c	7915;"	d	file:
SQLITE_TESTCTRL_OPTIMIZATIONS	src/include/sqlite/sqlite3.h	6878;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	src/sqlite/sqlite3.c	7910;"	d	file:
SQLITE_TESTCTRL_PENDING_BYTE	src/include/sqlite/sqlite3.h	6874;"	d
SQLITE_TESTCTRL_PENDING_BYTE	src/sqlite/sqlite3.c	7906;"	d	file:
SQLITE_TESTCTRL_PRNG_RESET	src/include/sqlite/sqlite3.h	6870;"	d
SQLITE_TESTCTRL_PRNG_RESET	src/sqlite/sqlite3.c	7902;"	d	file:
SQLITE_TESTCTRL_PRNG_RESTORE	src/include/sqlite/sqlite3.h	6869;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	src/sqlite/sqlite3.c	7901;"	d	file:
SQLITE_TESTCTRL_PRNG_SAVE	src/include/sqlite/sqlite3.h	6868;"	d
SQLITE_TESTCTRL_PRNG_SAVE	src/sqlite/sqlite3.c	7900;"	d	file:
SQLITE_TESTCTRL_RESERVE	src/include/sqlite/sqlite3.h	6877;"	d
SQLITE_TESTCTRL_RESERVE	src/sqlite/sqlite3.c	7909;"	d	file:
SQLITE_TESTCTRL_SCRATCHMALLOC	src/include/sqlite/sqlite3.h	6880;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	src/sqlite/sqlite3.c	7912;"	d	file:
SQLITE_TESTCTRL_SORTER_MMAP	src/include/sqlite/sqlite3.h	6888;"	d
SQLITE_TESTCTRL_SORTER_MMAP	src/sqlite/sqlite3.c	7920;"	d	file:
SQLITE_TESTCTRL_VDBE_COVERAGE	src/include/sqlite/sqlite3.h	6885;"	d
SQLITE_TESTCTRL_VDBE_COVERAGE	src/sqlite/sqlite3.c	7917;"	d	file:
SQLITE_TEXT	src/include/sqlite/sqlite3.h	4260;"	d
SQLITE_TEXT	src/include/sqlite/sqlite3.h	4262;"	d
SQLITE_TEXT	src/sqlite/sqlite3.c	5292;"	d	file:
SQLITE_TEXT	src/sqlite/sqlite3.c	5294;"	d	file:
SQLITE_THREADSAFE	src/sqlite/sqlite3.c	11969;"	d	file:
SQLITE_THREADSAFE	src/sqlite/sqlite3.c	11971;"	d	file:
SQLITE_THREADS_IMPLEMENTED	src/sqlite/sqlite3.c	27305;"	d	file:
SQLITE_THREADS_IMPLEMENTED	src/sqlite/sqlite3.c	27377;"	d	file:
SQLITE_TOOBIG	src/include/sqlite/sqlite3.h	437;"	d
SQLITE_TOOBIG	src/sqlite/sqlite3.c	1469;"	d	file:
SQLITE_TRACE_CLOSE	src/include/sqlite/sqlite3.h	2942;"	d
SQLITE_TRACE_CLOSE	src/sqlite/sqlite3.c	3974;"	d	file:
SQLITE_TRACE_LEGACY	src/sqlite/sqlite3.c	14953;"	d	file:
SQLITE_TRACE_LEGACY	src/sqlite/sqlite3.c	14955;"	d	file:
SQLITE_TRACE_PROFILE	src/include/sqlite/sqlite3.h	2940;"	d
SQLITE_TRACE_PROFILE	src/sqlite/sqlite3.c	3972;"	d	file:
SQLITE_TRACE_ROW	src/include/sqlite/sqlite3.h	2941;"	d
SQLITE_TRACE_ROW	src/sqlite/sqlite3.c	3973;"	d	file:
SQLITE_TRACE_STMT	src/include/sqlite/sqlite3.h	2939;"	d
SQLITE_TRACE_STMT	src/sqlite/sqlite3.c	3971;"	d	file:
SQLITE_TRANSACTION	src/include/sqlite/sqlite3.h	2836;"	d
SQLITE_TRANSACTION	src/sqlite/sqlite3.c	3868;"	d	file:
SQLITE_TRANSIENT	src/include/sqlite/sqlite3.h	4913;"	d
SQLITE_TRANSIENT	src/sqlite/sqlite3.c	5945;"	d	file:
SQLITE_Transitive	src/sqlite/sqlite3.c	15159;"	d	file:
SQLITE_UNIX_THREADS	src/sqlite/sqlite3.c	30249;"	d	file:
SQLITE_UPDATE	src/include/sqlite/sqlite3.h	2837;"	d
SQLITE_UPDATE	src/sqlite/sqlite3.c	3869;"	d	file:
SQLITE_USE_MALLOC_H	src/sqlite/sqlite3.c	21154;"	d	file:
SQLITE_USE_MALLOC_H	src/sqlite/sqlite3.c	21163;"	d	file:
SQLITE_USE_MALLOC_USABLE_SIZE	src/sqlite/sqlite3.c	21155;"	d	file:
SQLITE_USE_MSIZE	src/sqlite/sqlite3.c	21164;"	d	file:
SQLITE_USE_URI	src/sqlite/sqlite3.c	18182;"	d	file:
SQLITE_USE_URI	src/sqlite/sqlite3.c	18184;"	d	file:
SQLITE_UTF16	src/include/sqlite/sqlite3.h	4627;"	d
SQLITE_UTF16	src/sqlite/sqlite3.c	5659;"	d	file:
SQLITE_UTF16BE	src/include/sqlite/sqlite3.h	4626;"	d
SQLITE_UTF16BE	src/sqlite/sqlite3.c	5658;"	d	file:
SQLITE_UTF16LE	src/include/sqlite/sqlite3.h	4625;"	d
SQLITE_UTF16LE	src/sqlite/sqlite3.c	5657;"	d	file:
SQLITE_UTF16NATIVE	src/sqlite/sqlite3.c	12781;"	d	file:
SQLITE_UTF16NATIVE	src/sqlite/sqlite3.c	12785;"	d	file:
SQLITE_UTF16NATIVE	src/sqlite/sqlite3.c	12794;"	d	file:
SQLITE_UTF16_ALIGNED	src/include/sqlite/sqlite3.h	4629;"	d
SQLITE_UTF16_ALIGNED	src/sqlite/sqlite3.c	5661;"	d	file:
SQLITE_UTF8	src/include/sqlite/sqlite3.h	4624;"	d
SQLITE_UTF8	src/sqlite/sqlite3.c	5656;"	d	file:
SQLITE_VDBEINT_H	src/sqlite/sqlite3.c	18374;"	d	file:
SQLITE_VDBE_H	src/sqlite/sqlite3.c	13455;"	d	file:
SQLITE_VERSION	src/include/sqlite/sqlite3.h	124;"	d
SQLITE_VERSION	src/include/sqlite/sqlite3.h	90;"	d
SQLITE_VERSION	src/sqlite/sqlite3.c	1122;"	d	file:
SQLITE_VERSION	src/sqlite/sqlite3.c	1156;"	d	file:
SQLITE_VERSION_NUMBER	src/include/sqlite/sqlite3.h	125;"	d
SQLITE_VERSION_NUMBER	src/include/sqlite/sqlite3.h	93;"	d
SQLITE_VERSION_NUMBER	src/sqlite/sqlite3.c	1125;"	d	file:
SQLITE_VERSION_NUMBER	src/sqlite/sqlite3.c	1157;"	d	file:
SQLITE_VTAB_CONSTRAINT_SUPPORT	src/include/sqlite/sqlite3.h	8146;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	src/sqlite/sqlite3.c	9178;"	d	file:
SQLITE_Vacuum	src/sqlite/sqlite3.c	15134;"	d	file:
SQLITE_VdbeAddopTrace	src/sqlite/sqlite3.c	15140;"	d	file:
SQLITE_VdbeEQP	src/sqlite/sqlite3.c	15141;"	d	file:
SQLITE_VdbeListing	src/sqlite/sqlite3.c	15138;"	d	file:
SQLITE_VdbeTrace	src/sqlite/sqlite3.c	15139;"	d	file:
SQLITE_W32_MUTEX_INITIALIZER	src/sqlite/sqlite3.c	24285;"	d	file:
SQLITE_WAL_H	src/sqlite/sqlite3.c	47228;"	d	file:
SQLITE_WARNING	src/include/sqlite/sqlite3.h	447;"	d
SQLITE_WARNING	src/sqlite/sqlite3.c	1479;"	d	file:
SQLITE_WARNING_AUTOINDEX	src/include/sqlite/sqlite3.h	522;"	d
SQLITE_WARNING_AUTOINDEX	src/sqlite/sqlite3.c	1554;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/sqlite/sqlite3.c	38517;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/sqlite/sqlite3.c	38519;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/sqlite/sqlite3.c	38529;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/sqlite/sqlite3.c	38530;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	src/sqlite/sqlite3.c	38228;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	src/sqlite/sqlite3.c	38230;"	d	file:
SQLITE_WIN32_DATA_DIRECTORY_TYPE	src/sqlite/sqlite3.c	38449;"	d	file:
SQLITE_WIN32_DBG_BUF_SIZE	src/sqlite/sqlite3.c	38441;"	d	file:
SQLITE_WIN32_GETVERSIONEX	src/sqlite/sqlite3.c	38215;"	d	file:
SQLITE_WIN32_GETVERSIONEX	src/sqlite/sqlite3.c	38217;"	d	file:
SQLITE_WIN32_HAS_ANSI	src/sqlite/sqlite3.c	38173;"	d	file:
SQLITE_WIN32_HAS_WIDE	src/sqlite/sqlite3.c	38182;"	d	file:
SQLITE_WIN32_HEAP_CREATE	src/sqlite/sqlite3.c	38481;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	src/sqlite/sqlite3.c	38554;"	d	file:
SQLITE_WIN32_HEAP_INIT_EXTRA	src/sqlite/sqlite3.c	38497;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	src/sqlite/sqlite3.c	38537;"	d	file:
SQLITE_WIN32_HEAP_MAX_INIT_SIZE	src/sqlite/sqlite3.c	38489;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	src/sqlite/sqlite3.c	38546;"	d	file:
SQLITE_WIN32_IOERR_RETRY	src/sqlite/sqlite3.c	40219;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	src/sqlite/sqlite3.c	40222;"	d	file:
SQLITE_WIN32_MAX_CACHE_SIZE	src/sqlite/sqlite3.c	38506;"	d	file:
SQLITE_WIN32_MAX_ERRMSG_CHARS	src/sqlite/sqlite3.c	38286;"	d	file:
SQLITE_WIN32_MAX_PATH_BYTES	src/sqlite/sqlite3.c	38270;"	d	file:
SQLITE_WIN32_MAX_PATH_CHARS	src/sqlite/sqlite3.c	38246;"	d	file:
SQLITE_WIN32_TEMP_DIRECTORY_TYPE	src/sqlite/sqlite3.c	38457;"	d	file:
SQLITE_WIN32_VOLATILE	src/sqlite/sqlite3.c	24239;"	d	file:
SQLITE_WIN32_VOLATILE	src/sqlite/sqlite3.c	24241;"	d	file:
SQLITE_WINNT_MAX_PATH_BYTES	src/sqlite/sqlite3.c	38278;"	d	file:
SQLITE_WINNT_MAX_PATH_CHARS	src/sqlite/sqlite3.c	38261;"	d	file:
SQLITE_WITHIN	src/sqlite/sqlite3.c	12754;"	d	file:
SQLITE_WSD	src/sqlite/sqlite3.c	12965;"	d	file:
SQLITE_WSD	src/sqlite/sqlite3.c	12971;"	d	file:
SQLITE_WriteSchema	src/sqlite/sqlite3.c	15103;"	d	file:
SQL_CHOMP_SEGDIR	src/sqlite/sqlite3.c	156857;"	d	file:
SQL_CONTENT_INSERT	src/sqlite/sqlite3.c	156841;"	d	file:
SQL_DELETE_ALL_CONTENT	src/sqlite/sqlite3.c	156825;"	d	file:
SQL_DELETE_ALL_DOCSIZE	src/sqlite/sqlite3.c	156828;"	d	file:
SQL_DELETE_ALL_SEGDIR	src/sqlite/sqlite3.c	156827;"	d	file:
SQL_DELETE_ALL_SEGMENTS	src/sqlite/sqlite3.c	156826;"	d	file:
SQL_DELETE_ALL_STAT	src/sqlite/sqlite3.c	156829;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	src/sqlite/sqlite3.c	156849;"	d	file:
SQL_DELETE_CONTENT	src/sqlite/sqlite3.c	156823;"	d	file:
SQL_DELETE_DOCSIZE	src/sqlite/sqlite3.c	156842;"	d	file:
SQL_DELETE_SEGDIR_ENTRY	src/sqlite/sqlite3.c	156854;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	src/sqlite/sqlite3.c	156839;"	d	file:
SQL_DELETE_SEGDIR_RANGE	src/sqlite/sqlite3.c	156850;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	src/sqlite/sqlite3.c	156840;"	d	file:
SQL_FIND_MERGE_LEVEL	src/sqlite/sqlite3.c	156852;"	d	file:
SQL_INSERT_SEGDIR	src/sqlite/sqlite3.c	156834;"	d	file:
SQL_INSERT_SEGMENTS	src/sqlite/sqlite3.c	156832;"	d	file:
SQL_IS_EMPTY	src/sqlite/sqlite3.c	156824;"	d	file:
SQL_MAX_LEAF_NODE_ESTIMATE	src/sqlite/sqlite3.c	156853;"	d	file:
SQL_NEXT_SEGMENTS_ID	src/sqlite/sqlite3.c	156833;"	d	file:
SQL_NEXT_SEGMENT_INDEX	src/sqlite/sqlite3.c	156831;"	d	file:
SQL_REPLACE_DOCSIZE	src/sqlite/sqlite3.c	156843;"	d	file:
SQL_REPLACE_STAT	src/sqlite/sqlite3.c	156846;"	d	file:
SQL_SEGMENT_IS_APPENDABLE	src/sqlite/sqlite3.c	156858;"	d	file:
SQL_SELECT_ALL_LANGID	src/sqlite/sqlite3.c	156851;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	src/sqlite/sqlite3.c	156848;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	src/sqlite/sqlite3.c	156830;"	d	file:
SQL_SELECT_DOCSIZE	src/sqlite/sqlite3.c	156844;"	d	file:
SQL_SELECT_INDEXES	src/sqlite/sqlite3.c	156859;"	d	file:
SQL_SELECT_LEVEL	src/sqlite/sqlite3.c	156835;"	d	file:
SQL_SELECT_LEVEL_COUNT	src/sqlite/sqlite3.c	156837;"	d	file:
SQL_SELECT_LEVEL_RANGE	src/sqlite/sqlite3.c	156836;"	d	file:
SQL_SELECT_LEVEL_RANGE2	src/sqlite/sqlite3.c	156862;"	d	file:
SQL_SELECT_MXLEVEL	src/sqlite/sqlite3.c	156860;"	d	file:
SQL_SELECT_SEGDIR	src/sqlite/sqlite3.c	156856;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	src/sqlite/sqlite3.c	156838;"	d	file:
SQL_SELECT_STAT	src/sqlite/sqlite3.c	156845;"	d	file:
SQL_SHIFT_SEGDIR_ENTRY	src/sqlite/sqlite3.c	156855;"	d	file:
SQL_UPDATE_LEVEL	src/sqlite/sqlite3.c	156864;"	d	file:
SQL_UPDATE_LEVEL_IDX	src/sqlite/sqlite3.c	156863;"	d	file:
SQLiteThread	src/sqlite/sqlite3.c	/^struct SQLiteThread {$/;"	s	file:
SQLiteThread	src/sqlite/sqlite3.c	/^typedef struct SQLiteThread SQLiteThread;$/;"	t	typeref:struct:SQLiteThread	file:
SRT_Coroutine	src/sqlite/sqlite3.c	16483;"	d	file:
SRT_Discard	src/sqlite/sqlite3.c	16470;"	d	file:
SRT_DistFifo	src/sqlite/sqlite3.c	16472;"	d	file:
SRT_DistQueue	src/sqlite/sqlite3.c	16474;"	d	file:
SRT_EphemTab	src/sqlite/sqlite3.c	16482;"	d	file:
SRT_Except	src/sqlite/sqlite3.c	16468;"	d	file:
SRT_Exists	src/sqlite/sqlite3.c	16469;"	d	file:
SRT_Fifo	src/sqlite/sqlite3.c	16471;"	d	file:
SRT_Mem	src/sqlite/sqlite3.c	16480;"	d	file:
SRT_Output	src/sqlite/sqlite3.c	16479;"	d	file:
SRT_Queue	src/sqlite/sqlite3.c	16473;"	d	file:
SRT_Set	src/sqlite/sqlite3.c	16481;"	d	file:
SRT_Table	src/sqlite/sqlite3.c	16484;"	d	file:
SRT_Union	src/sqlite/sqlite3.c	16467;"	d	file:
SRVAL	src/sqlite/sqlite3.c	86921;"	d	file:
STAT_GET_NDLT	src/sqlite/sqlite3.c	98230;"	d	file:
STAT_GET_NEQ	src/sqlite/sqlite3.c	98228;"	d	file:
STAT_GET_NLT	src/sqlite/sqlite3.c	98229;"	d	file:
STAT_GET_ROWID	src/sqlite/sqlite3.c	98227;"	d	file:
STAT_GET_STAT1	src/sqlite/sqlite3.c	98226;"	d	file:
STMT_COLUMN_BUSY	src/sqlite/sqlite3.c	203743;"	d	file:
STMT_COLUMN_MEM	src/sqlite/sqlite3.c	203750;"	d	file:
STMT_COLUMN_NAIDX	src/sqlite/sqlite3.c	203746;"	d	file:
STMT_COLUMN_NCOL	src/sqlite/sqlite3.c	203741;"	d	file:
STMT_COLUMN_NSCAN	src/sqlite/sqlite3.c	203744;"	d	file:
STMT_COLUMN_NSORT	src/sqlite/sqlite3.c	203745;"	d	file:
STMT_COLUMN_NSTEP	src/sqlite/sqlite3.c	203747;"	d	file:
STMT_COLUMN_PTR	src/sqlite/sqlite3.c	203739;"	d	file:
STMT_COLUMN_REPREP	src/sqlite/sqlite3.c	203748;"	d	file:
STMT_COLUMN_RO	src/sqlite/sqlite3.c	203742;"	d	file:
STMT_COLUMN_RUN	src/sqlite/sqlite3.c	203749;"	d	file:
STMT_COLUMN_SQL	src/sqlite/sqlite3.c	203740;"	d	file:
STRACCUM_NOMEM	src/sqlite/sqlite3.c	16866;"	d	file:
STRACCUM_TOOBIG	src/sqlite/sqlite3.c	16867;"	d	file:
STRINGIFY	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
STRINGIFY	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
STR_FUNCTION	src/sqlite/sqlite3.c	15308;"	d	file:
SUCCEED	third_party/gmock/gtest/gtest.h	19300;"	d
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/test/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	test/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	test/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	test/test/Makefile	/^SUFFIXES =$/;"	m
SWAP	src/sqlite/sqlite3.c	12612;"	d	file:
SWAP	src/sqlite/sqlite3.c	170050;"	d	file:
SWAPVAL	src/sqlite/sqlite3.c	192747;"	d	file:
SYSCALL	src/sqlite/sqlite3.c	38631;"	d	file:
SafeMatcherCast	third_party/gmock/gmock/gmock.h	/^inline Matcher<T> SafeMatcherCast(const M& polymorphic_matcher) {$/;"	f	namespace:testing
SafeMatcherCastImpl	third_party/gmock/gmock/gmock.h	/^class SafeMatcherCastImpl {$/;"	c	namespace:testing
SavedModeInfo	src/sqlite/shell.c	/^struct SavedModeInfo {$/;"	s	file:
SavedModeInfo	src/sqlite/shell.c	/^typedef struct SavedModeInfo SavedModeInfo;$/;"	t	typeref:struct:SavedModeInfo	file:
Savepoint	src/sqlite/sqlite3.c	/^struct Savepoint {$/;"	s	file:
Savepoint	src/sqlite/sqlite3.c	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint	file:
ScanKey	src/include/vtable/virtual_table.h	/^  inline void ScanKey(const Tuple &key) {$/;"	f	class:cmudb::Cursor
ScanKey	src/index/b_plus_tree_index.cpp	/^void BPLUSTREE_INDEX_TYPE::ScanKey(const Tuple &key, std::vector<RID> &result,$/;"	f	class:cmudb::BPLUSTREE_INDEX_TYPE
ScanStatus	src/sqlite/sqlite3.c	/^struct ScanStatus {$/;"	s	file:
ScanStatus	src/sqlite/sqlite3.c	/^typedef struct ScanStatus ScanStatus;$/;"	t	typeref:struct:ScanStatus	file:
SchedulerException	src/include/common/exception.h	/^  SchedulerException(std::string msg)$/;"	f	class:cmudb::SchedulerException
SchedulerException	src/include/common/exception.h	/^class SchedulerException : public Exception {$/;"	c	namespace:cmudb
Schema	src/catalog/schema.cpp	/^Schema::Schema(const std::vector<Column> &columns) : tuple_is_inlined(true) {$/;"	f	class:cmudb::Schema
Schema	src/include/catalog/schema.h	/^class Schema {$/;"	c	namespace:cmudb
Schema	src/sqlite/sqlite3.c	/^struct Schema {$/;"	s	file:
Schema	src/sqlite/sqlite3.c	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema	file:
ScopedFakeTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ScopedFakeTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;"	c	namespace:testing	file:
ScopedPrematureExitFile	third_party/gmock/gmock-gtest-all.cc	/^  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)$/;"	f	class:testing::internal::ScopedPrematureExitFile
ScopedPrematureExitFile	third_party/gmock/gmock-gtest-all.cc	/^class ScopedPrematureExitFile {$/;"	c	namespace:testing::internal	file:
ScopedTrace	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ ScopedTrace {$/;"	c	namespace:testing::internal
ScratchFreeslot	src/sqlite/sqlite3.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	src/sqlite/sqlite3.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
SecondType	third_party/gmock/gmock/gmock.h	/^  typedef typename RawPairType::second_type SecondType;$/;"	t	class:testing::internal::PairMatcherImpl
SegmentNode	src/sqlite/sqlite3.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	src/sqlite/sqlite3.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentWriter	src/sqlite/sqlite3.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	src/sqlite/sqlite3.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
Select	src/sqlite/sqlite3.c	/^struct Select {$/;"	s	file:
Select	src/sqlite/sqlite3.c	/^typedef struct Select Select;$/;"	t	typeref:struct:Select	file:
Select	third_party/gmock/gmock/gmock.h	/^  static SelectedArgs Select(const ArgumentTuple& \/* args *\/) {$/;"	f	class:testing::internal::SelectArgs
Select	third_party/gmock/gmock/gmock.h	/^  static SelectedArgs Select(const ArgumentTuple& args) {$/;"	f	class:testing::internal::SelectArgs
SelectArgs	third_party/gmock/gmock/gmock.h	/^class SelectArgs {$/;"	c	namespace:testing::internal
SelectArgs	third_party/gmock/gmock/gmock.h	/^class SelectArgs<Result, ArgumentTuple,$/;"	c	namespace:testing::internal
SelectDest	src/sqlite/sqlite3.c	/^struct SelectDest {$/;"	s	file:
SelectDest	src/sqlite/sqlite3.c	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest	file:
SelectedArgs	third_party/gmock/gmock/gmock.h	/^      k6, k7, k8, k9>::type SelectedArgs;$/;"	t	class:testing::internal::ArgsMatcherImpl
SelectedArgs	third_party/gmock/gmock/gmock.h	/^  typedef typename Function<type>::ArgumentTuple SelectedArgs;$/;"	t	class:testing::internal::SelectArgs
Send	third_party/gmock/gmock-gtest-all.cc	/^    virtual void Send(const string& message) {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SendLn	third_party/gmock/gmock-gtest-all.cc	/^    void SendLn(const string& message) {$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
SendLn	third_party/gmock/gmock-gtest-all.cc	/^  void SendLn(const string& message) { socket_writer_->SendLn(message); }$/;"	f	class:testing::internal::StreamingListener	file:
Sequence	third_party/gmock/gmock/gmock.h	/^  Sequence() : last_expectation_(new Expectation) {}$/;"	f	class:testing::Sequence
Sequence	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ Sequence {$/;"	c	namespace:testing
SerializationException	src/include/common/exception.h	/^  SerializationException(std::string msg)$/;"	f	class:cmudb::SerializationException
SerializationException	src/include/common/exception.h	/^class SerializationException : public Exception {$/;"	c	namespace:cmudb
SerializeTo	src/include/type/value.h	/^  inline void SerializeTo(char *storage) const {$/;"	f	class:cmudb::Value
SerializeTo	src/type/bigint_type.cpp	/^void BigintType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::BigintType
SerializeTo	src/type/boolean_type.cpp	/^void BooleanType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::BooleanType
SerializeTo	src/type/decimal_type.cpp	/^void DecimalType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::DecimalType
SerializeTo	src/type/integer_type.cpp	/^void IntegerType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::IntegerType
SerializeTo	src/type/smallint_type.cpp	/^void SmallintType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::SmallintType
SerializeTo	src/type/tinyint_type.cpp	/^void TinyintType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::TinyintType
SerializeTo	src/type/type.cpp	/^void Type::SerializeTo(const Value &val __attribute__((unused)),$/;"	f	class:cmudb::Type
SerializeTo	src/type/varlen_type.cpp	/^void VarlenType::SerializeTo(const Value &val, char *storage) const {$/;"	f	class:cmudb::VarlenType
SessionApplyCtx	src/sqlite/sqlite3.c	/^struct SessionApplyCtx {$/;"	s	file:
SessionApplyCtx	src/sqlite/sqlite3.c	/^typedef struct SessionApplyCtx SessionApplyCtx;$/;"	t	typeref:struct:SessionApplyCtx	file:
SessionBuffer	src/sqlite/sqlite3.c	/^struct SessionBuffer {$/;"	s	file:
SessionBuffer	src/sqlite/sqlite3.c	/^typedef struct SessionBuffer SessionBuffer;$/;"	t	typeref:struct:SessionBuffer	file:
SessionChange	src/sqlite/sqlite3.c	/^struct SessionChange {$/;"	s	file:
SessionChange	src/sqlite/sqlite3.c	/^typedef struct SessionChange SessionChange;$/;"	t	typeref:struct:SessionChange	file:
SessionDiffCtx	src/sqlite/sqlite3.c	/^struct SessionDiffCtx {$/;"	s	file:
SessionDiffCtx	src/sqlite/sqlite3.c	/^typedef struct SessionDiffCtx SessionDiffCtx;$/;"	t	typeref:struct:SessionDiffCtx	file:
SessionHook	src/sqlite/sqlite3.c	/^struct SessionHook {$/;"	s	file:
SessionHook	src/sqlite/sqlite3.c	/^typedef struct SessionHook SessionHook;$/;"	t	typeref:struct:SessionHook	file:
SessionInput	src/sqlite/sqlite3.c	/^struct SessionInput {$/;"	s	file:
SessionInput	src/sqlite/sqlite3.c	/^typedef struct SessionInput SessionInput;$/;"	t	typeref:struct:SessionInput	file:
SessionTable	src/sqlite/sqlite3.c	/^struct SessionTable {$/;"	s	file:
SessionTable	src/sqlite/sqlite3.c	/^typedef struct SessionTable SessionTable;$/;"	t	typeref:struct:SessionTable	file:
Set	src/include/common/rid.h	/^  inline void Set(page_id_t page_id, int slot_num) {$/;"	f	class:cmudb::RID
Set	third_party/gmock/gmock/gmock.h	/^  static void Set(T x) {$/;"	f	class:testing::DefaultValue
Set	third_party/gmock/gmock/gmock.h	/^  static void Set(T& x) {  \/\/ NOLINT$/;"	f	class:testing::DefaultValue
Set	third_party/gmock/gmock/gmock.h	/^  typedef ::std::set<Expectation, Less> Set;$/;"	t	class:testing::Expectation
Set	third_party/gmock/gtest/gtest.h	/^  void Set(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
SetArgPointee	third_party/gmock/gmock/gmock.h	/^SetArgPointee(const T& x) {$/;"	f	namespace:testing
SetArgPointee	third_party/gmock/gmock/gmock.h	/^SetArgPointee(const char* p) {$/;"	f	namespace:testing
SetArgPointee	third_party/gmock/gmock/gmock.h	/^SetArgPointee(const wchar_t* p) {$/;"	f	namespace:testing
SetArgumentPointee	third_party/gmock/gmock/gmock.h	/^SetArgumentPointee(const T& x) {$/;"	f	namespace:testing
SetArgumentPointeeAction	third_party/gmock/gmock/gmock.h	/^  explicit SetArgumentPointeeAction(const A& value) : value_(value) {}$/;"	f	class:testing::internal::SetArgumentPointeeAction
SetArgumentPointeeAction	third_party/gmock/gmock/gmock.h	/^  explicit SetArgumentPointeeAction(const Proto& proto) : proto_(new Proto) {$/;"	f	class:testing::internal::SetArgumentPointeeAction
SetArgumentPointeeAction	third_party/gmock/gmock/gmock.h	/^class SetArgumentPointeeAction {$/;"	c	namespace:testing::internal
SetArgumentPointeeAction	third_party/gmock/gmock/gmock.h	/^class SetArgumentPointeeAction<N, Proto, true> {$/;"	c	namespace:testing::internal
SetDefaultResultPrinter	third_party/gmock/gmock-gtest-all.cc	/^void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDefaultXmlGenerator	third_party/gmock/gmock-gtest-all.cc	/^void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetEdge	third_party/gmock/gmock/gmock.h	/^  void SetEdge(size_t ilhs, size_t irhs, bool b) {$/;"	f	class:testing::internal::MatchMatrix
SetErrnoAndReturn	third_party/gmock/gmock/gmock.h	/^SetErrnoAndReturn(int errval, T result) {$/;"	f	namespace:testing
SetErrnoAndReturnAction	third_party/gmock/gmock/gmock.h	/^  SetErrnoAndReturnAction(int errno_value, T result)$/;"	f	class:testing::internal::SetErrnoAndReturnAction
SetErrnoAndReturnAction	third_party/gmock/gmock/gmock.h	/^class SetErrnoAndReturnAction {$/;"	c	namespace:testing::internal
SetFreeSpacePointer	src/page/table_page.cpp	/^void TablePage::SetFreeSpacePointer(int32_t free_space_pointer) {$/;"	f	class:cmudb::TablePage
SetFromInteger	src/include/index/generic_key.h	/^  inline void SetFromInteger(int64_t key) {$/;"	f	class:cmudb::GenericKey
SetFromKey	src/include/index/generic_key.h	/^  inline void SetFromKey(const Tuple &tuple) {$/;"	f	class:cmudb::GenericKey
SetGlobalTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::SetGlobalTestPartResultReporter($/;"	f	class:testing::internal::UnitTestImpl
SetInjectableArgvs	third_party/gmock/gmock-gtest-all.cc	/^void SetInjectableArgvs(const ::std::vector<testing::internal::string>* argvs) {$/;"	f	namespace:testing::internal
SetInlined	src/catalog/column.cpp	/^void Column::SetInlined() {$/;"	f	class:cmudb::Column
SetKeyAt	src/page/b_plus_tree_internal_page.cpp	/^void B_PLUS_TREE_INTERNAL_PAGE_TYPE::SetKeyAt(int index, const KeyType &key) $/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
SetLength	src/catalog/column.cpp	/^void Column::SetLength(int32_t column_length) {$/;"	f	class:cmudb::Column
SetMatchers	third_party/gmock/gmock/gmock.h	/^  void SetMatchers(const ArgumentMatcherTuple& matchers) {$/;"	f	class:testing::internal::MockSpec
SetMaxSize	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::SetMaxSize(int size) $/;"	f	class:cmudb::BPlusTreePage
SetNextPageId	src/page/b_plus_tree_leaf_page.cpp	/^void B_PLUS_TREE_LEAF_PAGE_TYPE::SetNextPageId(page_id_t next_page_id) $/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
SetNextPageId	src/page/table_page.cpp	/^void TablePage::SetNextPageId(page_id_t next_page_id) {$/;"	f	class:cmudb::TablePage
SetPageId	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::SetPageId(page_id_t page_id) $/;"	f	class:cmudb::BPlusTreePage
SetPageType	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::SetPageType(IndexPageType page_type) $/;"	f	class:cmudb::BPlusTreePage
SetParam	third_party/gmock/gtest/gtest.h	/^  static void SetParam(const ParamType* parameter) {$/;"	f	class:testing::WithParamInterface
SetParentPageId	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::SetParentPageId(page_id_t parent_page_id) $/;"	f	class:cmudb::BPlusTreePage
SetPrevPageId	src/page/table_page.cpp	/^void TablePage::SetPrevPageId(page_id_t prev_page_id) {$/;"	f	class:cmudb::TablePage
SetRecordCount	src/page/header_page.cpp	/^void HeaderPage::SetRecordCount(int record_count) {$/;"	f	class:cmudb::HeaderPage
SetScanFlag	src/include/vtable/virtual_table.h	/^  inline void SetScanFlag(bool is_index_scan) {$/;"	f	class:cmudb::Cursor
SetSize	src/page/b_plus_tree_page.cpp	/^void BPlusTreePage::SetSize(int size) $/;"	f	class:cmudb::BPlusTreePage
SetState	src/include/concurrency/transaction.h	/^  inline void SetState(TransactionState state) { state_ = state; }$/;"	f	class:cmudb::Transaction
SetTestPartResultReporterForCurrentThread	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::SetTestPartResultReporterForCurrentThread($/;"	f	class:testing::internal::UnitTestImpl
SetTupleCount	src/page/table_page.cpp	/^void TablePage::SetTupleCount(int32_t tuple_count) {$/;"	f	class:cmudb::TablePage
SetTupleOffset	src/page/table_page.cpp	/^void TablePage::SetTupleOffset(int slot_num, int32_t offset) {$/;"	f	class:cmudb::TablePage
SetTupleSize	src/page/table_page.cpp	/^void TablePage::SetTupleSize(int slot_num, int32_t offset) {$/;"	f	class:cmudb::TablePage
SetUp	third_party/gmock/gmock-gtest-all.cc	/^void Test::SetUp() {$/;"	f	class:testing::Test
SetUp	third_party/gmock/gtest/gtest.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Environment
SetUpEnvironment	third_party/gmock/gmock-gtest-all.cc	/^static void SetUpEnvironment(Environment* env) { env->SetUp(); }$/;"	f	namespace:testing::internal
SetUpTestCase	third_party/gmock/gtest/gtest.h	/^  static void SetUpTestCase() {}$/;"	f	class:testing::Test
SetUpTestCaseFunc	third_party/gmock/gtest/gtest.h	/^  typedef internal::SetUpTestCaseFunc SetUpTestCaseFunc;$/;"	t	class:testing::Test
SetUpTestCaseFunc	third_party/gmock/gtest/gtest.h	/^typedef void (*SetUpTestCaseFunc)();$/;"	t	namespace:testing::internal
SetValue	third_party/gmock/gtest/gtest.h	/^  void SetValue(const std::string& new_value) {$/;"	f	class:testing::TestProperty
Setup	third_party/gmock/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Environment
Setup	third_party/gmock/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Test
Setup_should_be_spelled_SetUp	third_party/gmock/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Environment
Setup_should_be_spelled_SetUp	third_party/gmock/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Test
ShellClearFlag	src/sqlite/shell.c	1534;"	d	file:
ShellHasFlag	src/sqlite/shell.c	1532;"	d	file:
ShellSetFlag	src/sqlite/shell.c	1533;"	d	file:
ShellState	src/sqlite/shell.c	/^struct ShellState {$/;"	s	file:
ShellState	src/sqlite/shell.c	/^typedef struct ShellState ShellState;$/;"	t	typeref:struct:ShellState	file:
ShellText	src/sqlite/shell.c	/^struct ShellText {$/;"	s	file:
ShellText	src/sqlite/shell.c	/^typedef struct ShellText ShellText;$/;"	t	typeref:struct:ShellText	file:
ShmRegion	src/sqlite/sqlite3.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
ShouldRunTest	third_party/gmock/gtest/gtest.h	/^  static bool ShouldRunTest(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
ShouldRunTestCase	third_party/gmock/gmock-gtest-all.cc	/^static bool ShouldRunTestCase(const TestCase* test_case) {$/;"	f	namespace:testing::internal
ShouldRunTestOnShard	third_party/gmock/gmock-gtest-all.cc	/^bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {$/;"	f	namespace:testing::internal
ShouldShard	third_party/gmock/gmock-gtest-all.cc	/^bool ShouldShard(const char* total_shards_env,$/;"	f	namespace:testing::internal
ShouldUseColor	third_party/gmock/gmock-gtest-all.cc	/^bool ShouldUseColor(bool stdout_is_tty) {$/;"	f	namespace:testing::internal
ShowWideCString	third_party/gmock/gmock-gtest-all.cc	/^std::string String::ShowWideCString(const wchar_t * wide_c_str) {$/;"	f	class:testing::internal::String
Shuffle	third_party/gmock/gmock-gtest-all.cc	/^inline void Shuffle(internal::Random* random, std::vector<E>* v) {$/;"	f	namespace:testing::internal
ShuffleRange	third_party/gmock/gmock-gtest-all.cc	/^void ShuffleRange(internal::Random* random, int begin, int end,$/;"	f	namespace:testing::internal
ShuffleTests	third_party/gmock/gmock-gtest-all.cc	/^void TestCase::ShuffleTests(internal::Random* random) {$/;"	f	class:testing::TestCase
ShuffleTests	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::ShuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
SignAndMagnitudeToBiased	third_party/gmock/gtest/gtest.h	/^  static Bits SignAndMagnitudeToBiased(const Bits &sam) {$/;"	f	class:testing::internal::FloatingPoint
SimulateDiskfullError	src/sqlite/sqlite3.c	24131;"	d	file:
SimulateDiskfullError	src/sqlite/sqlite3.c	24145;"	d	file:
SimulateDiskfullError	src/sqlite/sqlite3.c	30557;"	d	file:
SimulateDiskfullError	src/sqlite/sqlite3.c	30571;"	d	file:
SimulateDiskfullError	src/sqlite/sqlite3.c	38117;"	d	file:
SimulateDiskfullError	src/sqlite/sqlite3.c	38131;"	d	file:
SimulateIOError	src/sqlite/sqlite3.c	24122;"	d	file:
SimulateIOError	src/sqlite/sqlite3.c	24144;"	d	file:
SimulateIOError	src/sqlite/sqlite3.c	30548;"	d	file:
SimulateIOError	src/sqlite/sqlite3.c	30570;"	d	file:
SimulateIOError	src/sqlite/sqlite3.c	38108;"	d	file:
SimulateIOError	src/sqlite/sqlite3.c	38130;"	d	file:
SimulateIOErrorBenign	src/sqlite/sqlite3.c	24121;"	d	file:
SimulateIOErrorBenign	src/sqlite/sqlite3.c	24143;"	d	file:
SimulateIOErrorBenign	src/sqlite/sqlite3.c	30547;"	d	file:
SimulateIOErrorBenign	src/sqlite/sqlite3.c	30569;"	d	file:
SimulateIOErrorBenign	src/sqlite/sqlite3.c	38107;"	d	file:
SimulateIOErrorBenign	src/sqlite/sqlite3.c	38129;"	d	file:
SingleFailureChecker	third_party/gmock/gmock-gtest-all.cc	/^SingleFailureChecker:: SingleFailureChecker($/;"	f	class:testing::internal::SingleFailureChecker
SingleFailureChecker	third_party/gmock/gmock-gtest-all.cc	/^class GTEST_API_ SingleFailureChecker {$/;"	c	namespace:testing::internal	file:
Size	src/buffer/lru_replacer.cpp	/^template <typename T> size_t LRUReplacer<T>::Size() { $/;"	f	class:cmudb::LRUReplacer
SizeIs	third_party/gmock/gmock/gmock.h	/^SizeIs(const SizeMatcher& size_matcher) {$/;"	f	namespace:testing
SizeIsMatcher	third_party/gmock/gmock/gmock.h	/^  explicit SizeIsMatcher(const SizeMatcher& size_matcher)$/;"	f	class:testing::internal::SizeIsMatcher
SizeIsMatcher	third_party/gmock/gmock/gmock.h	/^class SizeIsMatcher {$/;"	c	namespace:testing::internal
SizeType	third_party/gmock/gmock/gmock.h	/^    typedef typename ContainerView::type::size_type SizeType;$/;"	t	class:testing::internal::SizeIsMatcher::Impl
SizeofArray	src/sqlite/sqlite3.c	146260;"	d	file:
SkipComma	third_party/gmock/gtest/gtest.h	/^inline const char* SkipComma(const char* str) {$/;"	f	namespace:testing::internal
SkipPrefix	third_party/gmock/gmock-gtest-all.cc	/^bool SkipPrefix(const char* prefix, const char** pstr) {$/;"	f	namespace:testing::internal
SkipSpaces	third_party/gmock/gmock-gtest-all.cc	/^static const char* SkipSpaces(const char* str) {$/;"	f	namespace:testing::internal
SleepMilliseconds	third_party/gmock/gtest/gtest.h	/^inline void SleepMilliseconds(int n) {$/;"	f	namespace:std::tr1
SmallintType	src/include/type/smallint_type.h	/^class SmallintType : public IntegerParentType {$/;"	c	namespace:cmudb
SmallintType	src/type/smallint_type.cpp	/^SmallintType::SmallintType() : IntegerParentType(TypeId::SMALLINT) {}$/;"	f	class:cmudb::SmallintType
SnippetFragment	src/sqlite/sqlite3.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	src/sqlite/sqlite3.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetIter	src/sqlite/sqlite3.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	src/sqlite/sqlite3.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetPhrase	src/sqlite/sqlite3.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	src/sqlite/sqlite3.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SocketWriter	third_party/gmock/gmock-gtest-all.cc	/^    SocketWriter(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SocketWriter	third_party/gmock/gmock-gtest-all.cc	/^  class SocketWriter : public AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener	file:
SortByDimension	src/sqlite/sqlite3.c	/^static void SortByDimension($/;"	f	file:
SortByDistance	src/sqlite/sqlite3.c	/^static void SortByDistance($/;"	f	file:
SortCtx	src/sqlite/sqlite3.c	/^struct SortCtx {$/;"	s	file:
SortCtx	src/sqlite/sqlite3.c	/^typedef struct SortCtx SortCtx;$/;"	t	typeref:struct:SortCtx	file:
SortSubtask	src/sqlite/sqlite3.c	/^struct SortSubtask {$/;"	s	file:
SortSubtask	src/sqlite/sqlite3.c	/^typedef struct SortSubtask SortSubtask;     \/* A sub-task in the sort process *\/$/;"	t	typeref:struct:SortSubtask	file:
SorterCompare	src/sqlite/sqlite3.c	/^typedef int (*SorterCompare)(SortSubtask*,int*,const void*,int,const void*,int);$/;"	t	file:
SorterFile	src/sqlite/sqlite3.c	/^struct SorterFile {$/;"	s	file:
SorterFile	src/sqlite/sqlite3.c	/^typedef struct SorterFile SorterFile;       \/* Temporary file object wrapper *\/$/;"	t	typeref:struct:SorterFile	file:
SorterList	src/sqlite/sqlite3.c	/^struct SorterList {$/;"	s	file:
SorterList	src/sqlite/sqlite3.c	/^typedef struct SorterList SorterList;       \/* In-memory list of records *\/$/;"	t	typeref:struct:SorterList	file:
SorterRecord	src/sqlite/sqlite3.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	src/sqlite/sqlite3.c	/^typedef struct SorterRecord SorterRecord;   \/* A record being sorted *\/$/;"	t	typeref:struct:SorterRecord	file:
SpaceIndex	third_party/gmock/gmock/gmock.h	/^  size_t SpaceIndex(size_t ilhs, size_t irhs) const {$/;"	f	class:testing::internal::MatchMatrix
SpecifyCardinality	third_party/gmock/gmock-gtest-all.cc	/^void ExpectationBase::SpecifyCardinality(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase
Split	src/include/common/string_utility.h	/^  static std::vector<std::string> Split(const std::string &s, char delim) {$/;"	f	class:cmudb::StringUtility
Split	src/index/b_plus_tree.cpp	/^template <typename N> N *BPLUSTREE_TYPE::Split(N *node) $/;"	f	class:cmudb::BPLUSTREE_TYPE
SplitNode	src/sqlite/sqlite3.c	/^static int SplitNode($/;"	f	file:
SplitString	third_party/gmock/gmock-gtest-all.cc	/^static void SplitString(const ::std::string& str, char delimiter,$/;"	f	namespace:testing::internal
Sqlite3Config	src/sqlite/sqlite3.c	/^struct Sqlite3Config {$/;"	s	file:
Sqrt	src/include/type/value.h	/^  inline Value Sqrt() const { return Type::GetInstance(type_id_)->Sqrt(*this); }$/;"	f	class:cmudb::Value
Sqrt	src/type/bigint_type.cpp	/^Value BigintType::Sqrt(const Value &val) const {$/;"	f	class:cmudb::BigintType
Sqrt	src/type/decimal_type.cpp	/^Value DecimalType::Sqrt(const Value &val) const {$/;"	f	class:cmudb::DecimalType
Sqrt	src/type/integer_type.cpp	/^Value IntegerType::Sqrt(const Value &val) const {$/;"	f	class:cmudb::IntegerType
Sqrt	src/type/smallint_type.cpp	/^Value SmallintType::Sqrt(const Value &val) const {$/;"	f	class:cmudb::SmallintType
Sqrt	src/type/tinyint_type.cpp	/^Value TinyintType::Sqrt(const Value &val) const {$/;"	f	class:cmudb::TinyintType
Sqrt	src/type/type.cpp	/^Value Type::Sqrt(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
SrcCount	src/sqlite/sqlite3.c	/^struct SrcCount {$/;"	s	file:
SrcList	src/sqlite/sqlite3.c	/^struct SrcList {$/;"	s	file:
SrcList	src/sqlite/sqlite3.c	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList	file:
SrcList_item	src/sqlite/sqlite3.c	/^  struct SrcList_item {$/;"	s	struct:SrcList	file:
StackGrowsDown	third_party/gmock/gmock-gtest-all.cc	/^bool StackGrowsDown() {$/;"	f	namespace:testing::internal
StackLowerThanAddress	third_party/gmock/gmock-gtest-all.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) {$/;"	f	namespace:testing::internal
Start	third_party/gmock/gmock-gtest-all.cc	/^  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }$/;"	f	class:testing::internal::StreamingListener	file:
StartNewTree	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::StartNewTree(const KeyType &key, const ValueType &value) $/;"	f	class:cmudb::BPLUSTREE_TYPE
StartsWith	third_party/gmock/gmock/gmock.h	/^    StartsWith(const internal::string& prefix) {$/;"	f	namespace:testing
StartsWith	third_party/gmock/gmock/gmock.h	/^    StartsWith(const internal::wstring& prefix) {$/;"	f	namespace:testing
StartsWithMatcher	third_party/gmock/gmock/gmock.h	/^  explicit StartsWithMatcher(const StringType& prefix) : prefix_(prefix) {$/;"	f	class:testing::internal::StartsWithMatcher
StartsWithMatcher	third_party/gmock/gmock/gmock.h	/^class StartsWithMatcher {$/;"	c	namespace:testing::internal
Stat	third_party/gmock/gtest/gtest.h	/^inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }$/;"	f	namespace:std::tr1::posix
Stat4Accum	src/sqlite/sqlite3.c	/^struct Stat4Accum {$/;"	s	file:
Stat4Accum	src/sqlite/sqlite3.c	/^typedef struct Stat4Accum Stat4Accum;$/;"	t	typeref:struct:Stat4Accum	file:
Stat4Sample	src/sqlite/sqlite3.c	/^struct Stat4Sample {$/;"	s	file:
Stat4Sample	src/sqlite/sqlite3.c	/^typedef struct Stat4Sample Stat4Sample;$/;"	t	typeref:struct:Stat4Sample	file:
StatCell	src/sqlite/sqlite3.c	/^struct StatCell {$/;"	s	file:
StatCell	src/sqlite/sqlite3.c	/^typedef struct StatCell StatCell;$/;"	t	typeref:struct:StatCell	file:
StatCursor	src/sqlite/sqlite3.c	/^struct StatCursor {$/;"	s	file:
StatCursor	src/sqlite/sqlite3.c	/^typedef struct StatCursor StatCursor;$/;"	t	typeref:struct:StatCursor	file:
StatException	src/include/common/exception.h	/^  StatException(std::string msg) : Exception(EXCEPTION_TYPE_STAT, msg) {}$/;"	f	class:cmudb::StatException
StatException	src/include/common/exception.h	/^class StatException : public Exception {$/;"	c	namespace:cmudb
StatPage	src/sqlite/sqlite3.c	/^struct StatPage {$/;"	s	file:
StatPage	src/sqlite/sqlite3.c	/^typedef struct StatPage StatPage;$/;"	t	typeref:struct:StatPage	file:
StatStruct	third_party/gmock/gtest/gtest.h	/^typedef struct _stat StatStruct;$/;"	t	namespace:std::tr1::posix	typeref:struct:std::tr1::posix::_stat
StatTable	src/sqlite/sqlite3.c	/^struct StatTable {$/;"	s	file:
StatTable	src/sqlite/sqlite3.c	/^typedef struct StatTable StatTable;$/;"	t	typeref:struct:StatTable	file:
StateMap	third_party/gmock/gmock-gtest-all.cc	/^  typedef std::map<const void*, MockObjectState> StateMap;$/;"	t	class:testing::__anon8::MockObjectRegistry	file:
StaticAssertTypeEq	third_party/gmock/gtest/gtest.h	/^bool StaticAssertTypeEq() {$/;"	f	namespace:testing
StlContainer	third_party/gmock/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::ContainerEqMatcher
StlContainer	third_party/gmock/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
StlContainer	third_party/gmock/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::QuantifierMatcherImpl
StlContainer	third_party/gmock/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
StlContainerConstIterator	third_party/gmock/gmock/gmock.h	/^  typedef typename StlContainer::const_iterator StlContainerConstIterator;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
StlContainerReference	third_party/gmock/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::ContainerEqMatcher
StlContainerReference	third_party/gmock/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
StlContainerReference	third_party/gmock/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::QuantifierMatcherImpl
StlContainerReference	third_party/gmock/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
StlContainerView	third_party/gmock/gmock/gmock.h	/^class StlContainerView {$/;"	c	namespace:testing::internal
StlContainerView	third_party/gmock/gmock/gmock.h	/^class StlContainerView< ::std::tr1::tuple<ElementPointer, Size> > {$/;"	c	namespace:testing::internal
StlContainerView	third_party/gmock/gmock/gmock.h	/^class StlContainerView<Element[N]> {$/;"	c	namespace:testing::internal
StorageType	third_party/gmock/gmock/gmock.h	/^  typedef Functor StorageType;$/;"	t	struct:testing::internal::CallableTraits
StorageType	third_party/gmock/gmock/gmock.h	/^  typedef ResType(*StorageType)(ArgType);$/;"	t	struct:testing::internal::CallableTraits
StrAccum	src/sqlite/sqlite3.c	/^struct StrAccum {$/;"	s	file:
StrAccum	src/sqlite/sqlite3.c	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum	file:
StrBuffer	src/sqlite/sqlite3.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	src/sqlite/sqlite3.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
StrCaseCmp	third_party/gmock/gtest/gtest.h	/^inline int StrCaseCmp(const char* s1, const char* s2) {$/;"	f	namespace:std::tr1::posix
StrCaseEq	third_party/gmock/gmock/gmock.h	/^    StrCaseEq(const internal::string& str) {$/;"	f	namespace:testing
StrCaseEq	third_party/gmock/gmock/gmock.h	/^    StrCaseEq(const internal::wstring& str) {$/;"	f	namespace:testing
StrCaseNe	third_party/gmock/gmock/gmock.h	/^    StrCaseNe(const internal::string& str) {$/;"	f	namespace:testing
StrCaseNe	third_party/gmock/gmock/gmock.h	/^    StrCaseNe(const internal::wstring& str) {$/;"	f	namespace:testing
StrDup	third_party/gmock/gtest/gtest.h	/^inline char* StrDup(const char* src) { return _strdup(src); }$/;"	f	namespace:std::tr1::posix
StrDup	third_party/gmock/gtest/gtest.h	/^inline char* StrDup(const char* src) { return strdup(src); }$/;"	f	namespace:std::tr1::posix
StrEq	third_party/gmock/gmock/gmock.h	/^    StrEq(const internal::string& str) {$/;"	f	namespace:testing
StrEq	third_party/gmock/gmock/gmock.h	/^    StrEq(const internal::wstring& str) {$/;"	f	namespace:testing
StrEqualityMatcher	third_party/gmock/gmock/gmock.h	/^  StrEqualityMatcher(const StringType& str, bool expect_eq,$/;"	f	class:testing::internal::StrEqualityMatcher
StrEqualityMatcher	third_party/gmock/gmock/gmock.h	/^class StrEqualityMatcher {$/;"	c	namespace:testing::internal
StrError	third_party/gmock/gtest/gtest.h	/^inline const char* StrError(int errnum) { return strerror(errnum); }$/;"	f	namespace:std::tr1::posix
StrNCpy	third_party/gmock/gtest/gtest.h	/^inline const char* StrNCpy(char* dest, const char* src, size_t n) {$/;"	f	namespace:std::tr1::posix
StrNe	third_party/gmock/gmock/gmock.h	/^    StrNe(const internal::string& str) {$/;"	f	namespace:testing
StrNe	third_party/gmock/gmock/gmock.h	/^    StrNe(const internal::wstring& str) {$/;"	f	namespace:testing
StreamHelper	third_party/gmock/gtest/gtest.h	/^  inline void StreamHelper(internal::false_type \/*is_pointer*\/,$/;"	f	class:testing::Message
StreamHelper	third_party/gmock/gtest/gtest.h	/^  inline void StreamHelper(internal::true_type \/*is_pointer*\/, T* pointer) {$/;"	f	class:testing::Message
StreamMatchResultListener	third_party/gmock/gmock/gmock.h	/^  explicit StreamMatchResultListener(::std::ostream* os)$/;"	f	class:testing::internal::StreamMatchResultListener
StreamMatchResultListener	third_party/gmock/gmock/gmock.h	/^class StreamMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
StreamWideCharsToMessage	third_party/gmock/gmock-gtest-all.cc	/^static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,$/;"	f	namespace:testing::internal
StreamableToString	third_party/gmock/gtest/gtest.h	/^std::string StreamableToString(const T& streamable) {$/;"	f	namespace:testing::internal
StreamingListener	third_party/gmock/gmock-gtest-all.cc	/^  StreamingListener(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	third_party/gmock/gmock-gtest-all.cc	/^  explicit StreamingListener(AbstractSocketWriter* socket_writer)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	third_party/gmock/gmock-gtest-all.cc	/^class StreamingListener : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
StrictMock	third_party/gmock/gmock/gmock.h	/^  StrictMock() {$/;"	f	class:testing::StrictMock
StrictMock	third_party/gmock/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::StrictMock
StrictMock	third_party/gmock/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::StrictMock
StrictMock	third_party/gmock/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::StrictMock
StrictMock	third_party/gmock/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::StrictMock
StrictMock	third_party/gmock/gmock/gmock.h	/^  explicit StrictMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::StrictMock
StrictMock	third_party/gmock/gmock/gmock.h	/^class StrictMock : public MockClass {$/;"	c	namespace:testing
String	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ String {$/;"	c	namespace:testing::internal
StringFromGTestEnv	third_party/gmock/gmock-gtest-all.cc	/^const char* StringFromGTestEnv(const char* flag, const char* default_value) {$/;"	f	namespace:testing::internal
StringMatchResultListener	third_party/gmock/gmock/gmock.h	/^  StringMatchResultListener() : MatchResultListener(&ss_) {}$/;"	f	class:testing::StringMatchResultListener
StringMatchResultListener	third_party/gmock/gmock/gmock.h	/^class StringMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing
StringStreamToString	third_party/gmock/gmock-gtest-all.cc	/^std::string StringStreamToString(::std::stringstream* ss) {$/;"	f	namespace:testing::internal
StringUtility	src/include/common/string_utility.h	/^class StringUtility {$/;"	c	namespace:cmudb
Stringify	src/sqlite/sqlite3.c	78796;"	d	file:
Strings	third_party/gmock/gtest/gtest.h	/^typedef ::std::vector<string> Strings;$/;"	t	namespace:testing::internal
SubProgram	src/sqlite/sqlite3.c	/^struct SubProgram {$/;"	s	file:
SubProgram	src/sqlite/sqlite3.c	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram	file:
SubstContext	src/sqlite/sqlite3.c	/^typedef struct SubstContext {$/;"	s	file:
SubstContext	src/sqlite/sqlite3.c	/^} SubstContext;$/;"	t	typeref:struct:SubstContext	file:
Subtract	src/include/type/value.h	/^  inline Value Subtract(const Value &o) const {$/;"	f	class:cmudb::Value
Subtract	src/type/bigint_type.cpp	/^Value BigintType::Subtract(const Value &left, const Value &right) const {$/;"	f	class:cmudb::BigintType
Subtract	src/type/decimal_type.cpp	/^Value DecimalType::Subtract(const Value &left, const Value &right) const {$/;"	f	class:cmudb::DecimalType
Subtract	src/type/integer_type.cpp	/^Value IntegerType::Subtract(const Value &left, const Value &right) const {$/;"	f	class:cmudb::IntegerType
Subtract	src/type/smallint_type.cpp	/^Value SmallintType::Subtract(const Value &left, const Value &right) const {$/;"	f	class:cmudb::SmallintType
Subtract	src/type/tinyint_type.cpp	/^Value TinyintType::Subtract(const Value &left, const Value &right) const {$/;"	f	class:cmudb::TinyintType
Subtract	src/type/type.cpp	/^Value Type::Subtract(const Value &left __attribute__((unused)),$/;"	f	class:cmudb::Type
SubtractValue	src/include/type/integer_parent_type.h	/^Value IntegerParentType::SubtractValue(const Value &left,$/;"	f	class:cmudb::IntegerParentType
SumCtx	src/sqlite/sqlite3.c	/^struct SumCtx {$/;"	s	file:
SumCtx	src/sqlite/sqlite3.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
SumOverTestCaseList	third_party/gmock/gmock-gtest-all.cc	/^static int SumOverTestCaseList(const std::vector<TestCase*>& case_list,$/;"	f	namespace:testing::internal
SuppressEventForwarding	third_party/gmock/gmock-gtest-all.cc	/^void TestEventListeners::SuppressEventForwarding() {$/;"	f	class:testing::TestEventListeners
SuppressTestEventsIfInSubprocess	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::SuppressTestEventsIfInSubprocess() {$/;"	f	class:testing::internal::UnitTestImpl
SyntaxException	src/include/common/exception.h	/^  SyntaxException(std::string msg) : Exception(EXCEPTION_TYPE_SYNTAX, msg) {}$/;"	f	class:cmudb::SyntaxException
SyntaxException	src/include/common/exception.h	/^class SyntaxException : public Exception {$/;"	c	namespace:cmudb
T	third_party/gmock/gtest/gtest.h	/^  static void Print(const T (&a)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalPrinter
T	third_party/gmock/gtest/gtest.h	/^  static void Print(const T (&value)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalTersePrinter
T	third_party/gmock/gtest/gtest.h	/^inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {$/;"	m	namespace:testing::internal
T	third_party/gmock/gtest/gtest.h	/^inline void CopyArray(const T(&from)[N], U(*to)[N]) {$/;"	m	namespace:testing::internal
T	third_party/gmock/gtest/gtest.h	/^internal::ParamGenerator<T> ValuesIn(const T (&array)[N]);$/;"	m	namespace:testing
TEMP_MASTER_NAME	src/sqlite/sqlite3.c	12917;"	d	file:
TERM_ANDINFO	src/sqlite/sqlite3.c	127103;"	d	file:
TERM_CODED	src/sqlite/sqlite3.c	127100;"	d	file:
TERM_COPIED	src/sqlite/sqlite3.c	127101;"	d	file:
TERM_DYNAMIC	src/sqlite/sqlite3.c	127098;"	d	file:
TERM_IS	src/sqlite/sqlite3.c	127113;"	d	file:
TERM_LIKE	src/sqlite/sqlite3.c	127112;"	d	file:
TERM_LIKECOND	src/sqlite/sqlite3.c	127111;"	d	file:
TERM_LIKEOPT	src/sqlite/sqlite3.c	127110;"	d	file:
TERM_ORINFO	src/sqlite/sqlite3.c	127102;"	d	file:
TERM_OR_OK	src/sqlite/sqlite3.c	127104;"	d	file:
TERM_VIRTUAL	src/sqlite/sqlite3.c	127099;"	d	file:
TERM_VNULL	src/sqlite/sqlite3.c	127106;"	d	file:
TERM_VNULL	src/sqlite/sqlite3.c	127108;"	d	file:
TEST	test/buffer/buffer_pool_manager_test.cpp	/^TEST(BufferPoolManagerTest, SampleTest) {$/;"	f	namespace:cmudb
TEST	test/buffer/lru_replacer_test.cpp	/^TEST(LRUReplacerTest, SampleTest) {$/;"	f	namespace:cmudb
TEST	test/common/rwmutex_test.cpp	/^TEST(RWMutexTest, BasicTest) {$/;"	f	namespace:cmudb
TEST	test/concurrency/lock_manager_test.cpp	/^TEST(LockManagerTest, BasicTest) {$/;"	f	namespace:cmudb
TEST	test/hash/extendible_hash_test.cpp	/^TEST(ExtendibleHashTest, ConcurrentInsertTest) {$/;"	f	namespace:cmudb
TEST	test/hash/extendible_hash_test.cpp	/^TEST(ExtendibleHashTest, ConcurrentRemoveTest) {$/;"	f	namespace:cmudb
TEST	test/hash/extendible_hash_test.cpp	/^TEST(ExtendibleHashTest, SampleTest) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_concurrent_test.cpp	/^TEST(BPlusTreeConcurrentTest, DeleteTest1) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_concurrent_test.cpp	/^TEST(BPlusTreeConcurrentTest, DeleteTest2) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_concurrent_test.cpp	/^TEST(BPlusTreeConcurrentTest, InsertTest1) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_concurrent_test.cpp	/^TEST(BPlusTreeConcurrentTest, InsertTest2) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_concurrent_test.cpp	/^TEST(BPlusTreeConcurrentTest, MixTest) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_print_test.cpp	/^TEST(BptTreeTest, UnitTest) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_test.cpp	/^TEST(BPlusTreeTests, DeleteTest1) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_test.cpp	/^TEST(BPlusTreeTests, DeleteTest2) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_test.cpp	/^TEST(BPlusTreeTests, InsertTest1) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_test.cpp	/^TEST(BPlusTreeTests, InsertTest2) {$/;"	f	namespace:cmudb
TEST	test/index/b_plus_tree_test.cpp	/^TEST(BPlusTreeTests, ScaleTest) {$/;"	f	namespace:cmudb
TEST	test/table/header_page_test.cpp	/^TEST(HeaderPageTest, UnitTest) {$/;"	f	namespace:cmudb
TEST	test/table/tuple_test.cpp	/^TEST(TupleTest, TableHeapTest) {$/;"	f	namespace:cmudb
TEST	test/type/type_test.cpp	/^TEST(TypeTests, GetInstanceTest) {$/;"	f	namespace:cmudb
TEST	test/type/type_test.cpp	/^TEST(TypeTests, InvalidTypeTest) {$/;"	f	namespace:cmudb
TEST	test/type/type_test.cpp	/^TEST(TypeTests, MaxValueTest) {$/;"	f	namespace:cmudb
TEST	test/type/type_test.cpp	/^TEST(TypeTests, MinValueTest) {$/;"	f	namespace:cmudb
TEST	test/type/type_test.cpp	/^TEST(TypeTests, TemplateTest) {$/;"	f	namespace:cmudb
TEST	test/vtable/virtual_table_test.cpp	/^TEST(VtableTest, CreateTest) {$/;"	f	namespace:cmudb
TEST	third_party/gmock/gtest/gtest.h	20013;"	d
TESTBIT	src/sqlite/sqlite3.c	44435;"	d	file:
TESTONLY	src/sqlite/sqlite3.c	12095;"	d	file:
TESTONLY	src/sqlite/sqlite3.c	12097;"	d	file:
TESTONLY	src/sqlite/sqlite3.c	146358;"	d	file:
TESTONLY	src/sqlite/sqlite3.c	146360;"	d	file:
TEST_DID_NOT_DIE	third_party/gmock/gtest/gtest.h	/^    TEST_DID_NOT_DIE$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_ENCOUNTERED_RETURN_STATEMENT	third_party/gmock/gtest/gtest.h	/^    TEST_ENCOUNTERED_RETURN_STATEMENT,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_F	third_party/gmock/gtest/gtest.h	20042;"	d
TEST_P	third_party/gmock/gtest/gtest.h	16947;"	d
TEST_THREW_EXCEPTION	third_party/gmock/gtest/gtest.h	/^    TEST_THREW_EXCEPTION,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TF_Autoincrement	src/sqlite/sqlite3.c	15544;"	d	file:
TF_Ephemeral	src/sqlite/sqlite3.c	15542;"	d	file:
TF_HasNotNull	src/sqlite/sqlite3.c	15551;"	d	file:
TF_HasPrimaryKey	src/sqlite/sqlite3.c	15543;"	d	file:
TF_HasStat1	src/sqlite/sqlite3.c	15545;"	d	file:
TF_NoVisibleRowid	src/sqlite/sqlite3.c	15547;"	d	file:
TF_OOOHidden	src/sqlite/sqlite3.c	15548;"	d	file:
TF_Readonly	src/sqlite/sqlite3.c	15541;"	d	file:
TF_StatsUsed	src/sqlite/sqlite3.c	15549;"	d	file:
TF_WithoutRowid	src/sqlite/sqlite3.c	15546;"	d	file:
THREE_BYTE_INT	src/sqlite/sqlite3.c	75202;"	d	file:
THREW	third_party/gmock/gmock-gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
TIMER_ELAPSED	src/sqlite/sqlite3.c	24101;"	d	file:
TIMER_ELAPSED	src/sqlite/sqlite3.c	24105;"	d	file:
TIMER_ELAPSED	src/sqlite/sqlite3.c	30527;"	d	file:
TIMER_ELAPSED	src/sqlite/sqlite3.c	30531;"	d	file:
TIMER_ELAPSED	src/sqlite/sqlite3.c	38087;"	d	file:
TIMER_ELAPSED	src/sqlite/sqlite3.c	38091;"	d	file:
TIMER_END	src/sqlite/sqlite3.c	24100;"	d	file:
TIMER_END	src/sqlite/sqlite3.c	24104;"	d	file:
TIMER_END	src/sqlite/sqlite3.c	30526;"	d	file:
TIMER_END	src/sqlite/sqlite3.c	30530;"	d	file:
TIMER_END	src/sqlite/sqlite3.c	38086;"	d	file:
TIMER_END	src/sqlite/sqlite3.c	38090;"	d	file:
TIMER_START	src/sqlite/sqlite3.c	24099;"	d	file:
TIMER_START	src/sqlite/sqlite3.c	24103;"	d	file:
TIMER_START	src/sqlite/sqlite3.c	30525;"	d	file:
TIMER_START	src/sqlite/sqlite3.c	30529;"	d	file:
TIMER_START	src/sqlite/sqlite3.c	38085;"	d	file:
TIMER_START	src/sqlite/sqlite3.c	38089;"	d	file:
TIMESTAMP	src/include/type/type_id.h	/^  TIMESTAMP,$/;"	e	enum:cmudb::TypeId
TINYINT	src/include/type/type_id.h	/^  TINYINT,$/;"	e	enum:cmudb::TypeId
TINYINT_COMPARE_FUNC	src/type/tinyint_type.cpp	12;"	d	file:
TINYINT_MODIFY_FUNC	src/type/tinyint_type.cpp	32;"	d	file:
TKFLG_DONTFOLD	src/sqlite/sqlite3.c	12478;"	d	file:
TKFLG_MASK	src/sqlite/sqlite3.c	12474;"	d	file:
TK_ABORT	src/sqlite/sqlite3.c	12335;"	d	file:
TK_ACTION	src/sqlite/sqlite3.c	12336;"	d	file:
TK_ADD	src/sqlite/sqlite3.c	12449;"	d	file:
TK_AFTER	src/sqlite/sqlite3.c	12337;"	d	file:
TK_AGG_COLUMN	src/sqlite/sqlite3.c	12461;"	d	file:
TK_AGG_FUNCTION	src/sqlite/sqlite3.c	12460;"	d	file:
TK_ALL	src/sqlite/sqlite3.c	12423;"	d	file:
TK_ALTER	src/sqlite/sqlite3.c	12448;"	d	file:
TK_ANALYZE	src/sqlite/sqlite3.c	12338;"	d	file:
TK_AND	src/sqlite/sqlite3.c	12378;"	d	file:
TK_ANY	src/sqlite/sqlite3.c	12376;"	d	file:
TK_AS	src/sqlite/sqlite3.c	12331;"	d	file:
TK_ASC	src/sqlite/sqlite3.c	12339;"	d	file:
TK_ASTERISK	src/sqlite/sqlite3.c	12468;"	d	file:
TK_ATTACH	src/sqlite/sqlite3.c	12340;"	d	file:
TK_AUTOINCR	src/sqlite/sqlite3.c	12413;"	d	file:
TK_BEFORE	src/sqlite/sqlite3.c	12341;"	d	file:
TK_BEGIN	src/sqlite/sqlite3.c	12312;"	d	file:
TK_BETWEEN	src/sqlite/sqlite3.c	12380;"	d	file:
TK_BITAND	src/sqlite/sqlite3.c	12391;"	d	file:
TK_BITNOT	src/sqlite/sqlite3.c	12402;"	d	file:
TK_BITOR	src/sqlite/sqlite3.c	12392;"	d	file:
TK_BLOB	src/sqlite/sqlite3.c	12440;"	d	file:
TK_BY	src/sqlite/sqlite3.c	12342;"	d	file:
TK_CASCADE	src/sqlite/sqlite3.c	12343;"	d	file:
TK_CASE	src/sqlite/sqlite3.c	12443;"	d	file:
TK_CAST	src/sqlite/sqlite3.c	12344;"	d	file:
TK_CHECK	src/sqlite/sqlite3.c	12411;"	d	file:
TK_COLLATE	src/sqlite/sqlite3.c	12401;"	d	file:
TK_COLUMN	src/sqlite/sqlite3.c	12459;"	d	file:
TK_COLUMNKW	src/sqlite/sqlite3.c	12345;"	d	file:
TK_COMMA	src/sqlite/sqlite3.c	12333;"	d	file:
TK_COMMIT	src/sqlite/sqlite3.c	12317;"	d	file:
TK_CONCAT	src/sqlite/sqlite3.c	12400;"	d	file:
TK_CONFLICT	src/sqlite/sqlite3.c	12346;"	d	file:
TK_CONSTRAINT	src/sqlite/sqlite3.c	12406;"	d	file:
TK_CREATE	src/sqlite/sqlite3.c	12324;"	d	file:
TK_CTIME_KW	src/sqlite/sqlite3.c	12375;"	d	file:
TK_DATABASE	src/sqlite/sqlite3.c	12347;"	d	file:
TK_DEFAULT	src/sqlite/sqlite3.c	12407;"	d	file:
TK_DEFERRABLE	src/sqlite/sqlite3.c	12419;"	d	file:
TK_DEFERRED	src/sqlite/sqlite3.c	12314;"	d	file:
TK_DELETE	src/sqlite/sqlite3.c	12416;"	d	file:
TK_DESC	src/sqlite/sqlite3.c	12348;"	d	file:
TK_DETACH	src/sqlite/sqlite3.c	12349;"	d	file:
TK_DISTINCT	src/sqlite/sqlite3.c	12428;"	d	file:
TK_DOT	src/sqlite/sqlite3.c	12429;"	d	file:
TK_DROP	src/sqlite/sqlite3.c	12421;"	d	file:
TK_EACH	src/sqlite/sqlite3.c	12350;"	d	file:
TK_ELSE	src/sqlite/sqlite3.c	12446;"	d	file:
TK_END	src/sqlite/sqlite3.c	12318;"	d	file:
TK_END_OF_FILE	src/sqlite/sqlite3.c	12456;"	d	file:
TK_EQ	src/sqlite/sqlite3.c	12385;"	d	file:
TK_ESCAPE	src/sqlite/sqlite3.c	12390;"	d	file:
TK_EXCEPT	src/sqlite/sqlite3.c	12424;"	d	file:
TK_EXCLUSIVE	src/sqlite/sqlite3.c	12316;"	d	file:
TK_EXISTS	src/sqlite/sqlite3.c	12327;"	d	file:
TK_EXPLAIN	src/sqlite/sqlite3.c	12309;"	d	file:
TK_FAIL	src/sqlite/sqlite3.c	12351;"	d	file:
TK_FLOAT	src/sqlite/sqlite3.c	12439;"	d	file:
TK_FOR	src/sqlite/sqlite3.c	12352;"	d	file:
TK_FOREIGN	src/sqlite/sqlite3.c	12420;"	d	file:
TK_FROM	src/sqlite/sqlite3.c	12430;"	d	file:
TK_FUNCTION	src/sqlite/sqlite3.c	12458;"	d	file:
TK_GE	src/sqlite/sqlite3.c	12389;"	d	file:
TK_GROUP	src/sqlite/sqlite3.c	12434;"	d	file:
TK_GT	src/sqlite/sqlite3.c	12386;"	d	file:
TK_HAVING	src/sqlite/sqlite3.c	12435;"	d	file:
TK_ID	src/sqlite/sqlite3.c	12334;"	d	file:
TK_IF	src/sqlite/sqlite3.c	12325;"	d	file:
TK_IF_NULL_ROW	src/sqlite/sqlite3.c	12467;"	d	file:
TK_IGNORE	src/sqlite/sqlite3.c	12353;"	d	file:
TK_ILLEGAL	src/sqlite/sqlite3.c	12471;"	d	file:
TK_IMMEDIATE	src/sqlite/sqlite3.c	12315;"	d	file:
TK_IN	src/sqlite/sqlite3.c	12381;"	d	file:
TK_INDEX	src/sqlite/sqlite3.c	12447;"	d	file:
TK_INDEXED	src/sqlite/sqlite3.c	12403;"	d	file:
TK_INITIALLY	src/sqlite/sqlite3.c	12354;"	d	file:
TK_INSERT	src/sqlite/sqlite3.c	12415;"	d	file:
TK_INSTEAD	src/sqlite/sqlite3.c	12355;"	d	file:
TK_INTEGER	src/sqlite/sqlite3.c	12441;"	d	file:
TK_INTERSECT	src/sqlite/sqlite3.c	12425;"	d	file:
TK_INTO	src/sqlite/sqlite3.c	12438;"	d	file:
TK_IS	src/sqlite/sqlite3.c	12379;"	d	file:
TK_ISNOT	src/sqlite/sqlite3.c	12455;"	d	file:
TK_ISNULL	src/sqlite/sqlite3.c	12382;"	d	file:
TK_JOIN	src/sqlite/sqlite3.c	12431;"	d	file:
TK_JOIN_KW	src/sqlite/sqlite3.c	12405;"	d	file:
TK_KEY	src/sqlite/sqlite3.c	12359;"	d	file:
TK_LE	src/sqlite/sqlite3.c	12387;"	d	file:
TK_LIKE_KW	src/sqlite/sqlite3.c	12356;"	d	file:
TK_LIMIT	src/sqlite/sqlite3.c	12436;"	d	file:
TK_LP	src/sqlite/sqlite3.c	12329;"	d	file:
TK_LSHIFT	src/sqlite/sqlite3.c	12393;"	d	file:
TK_LT	src/sqlite/sqlite3.c	12388;"	d	file:
TK_MATCH	src/sqlite/sqlite3.c	12357;"	d	file:
TK_MINUS	src/sqlite/sqlite3.c	12396;"	d	file:
TK_NE	src/sqlite/sqlite3.c	12384;"	d	file:
TK_NO	src/sqlite/sqlite3.c	12358;"	d	file:
TK_NOT	src/sqlite/sqlite3.c	12326;"	d	file:
TK_NOTNULL	src/sqlite/sqlite3.c	12383;"	d	file:
TK_NULL	src/sqlite/sqlite3.c	12408;"	d	file:
TK_OF	src/sqlite/sqlite3.c	12360;"	d	file:
TK_OFFSET	src/sqlite/sqlite3.c	12361;"	d	file:
TK_ON	src/sqlite/sqlite3.c	12414;"	d	file:
TK_OR	src/sqlite/sqlite3.c	12377;"	d	file:
TK_ORDER	src/sqlite/sqlite3.c	12433;"	d	file:
TK_PLAN	src/sqlite/sqlite3.c	12311;"	d	file:
TK_PLUS	src/sqlite/sqlite3.c	12395;"	d	file:
TK_PRAGMA	src/sqlite/sqlite3.c	12362;"	d	file:
TK_PRIMARY	src/sqlite/sqlite3.c	12409;"	d	file:
TK_QUERY	src/sqlite/sqlite3.c	12310;"	d	file:
TK_RAISE	src/sqlite/sqlite3.c	12363;"	d	file:
TK_RECURSIVE	src/sqlite/sqlite3.c	12364;"	d	file:
TK_REFERENCES	src/sqlite/sqlite3.c	12412;"	d	file:
TK_REGISTER	src/sqlite/sqlite3.c	12464;"	d	file:
TK_REINDEX	src/sqlite/sqlite3.c	12373;"	d	file:
TK_RELEASE	src/sqlite/sqlite3.c	12321;"	d	file:
TK_REM	src/sqlite/sqlite3.c	12399;"	d	file:
TK_RENAME	src/sqlite/sqlite3.c	12374;"	d	file:
TK_REPLACE	src/sqlite/sqlite3.c	12365;"	d	file:
TK_RESTRICT	src/sqlite/sqlite3.c	12366;"	d	file:
TK_ROLLBACK	src/sqlite/sqlite3.c	12319;"	d	file:
TK_ROW	src/sqlite/sqlite3.c	12367;"	d	file:
TK_RP	src/sqlite/sqlite3.c	12330;"	d	file:
TK_RSHIFT	src/sqlite/sqlite3.c	12394;"	d	file:
TK_SAVEPOINT	src/sqlite/sqlite3.c	12320;"	d	file:
TK_SELECT	src/sqlite/sqlite3.c	12426;"	d	file:
TK_SELECT_COLUMN	src/sqlite/sqlite3.c	12466;"	d	file:
TK_SEMI	src/sqlite/sqlite3.c	12308;"	d	file:
TK_SET	src/sqlite/sqlite3.c	12418;"	d	file:
TK_SLASH	src/sqlite/sqlite3.c	12398;"	d	file:
TK_SPACE	src/sqlite/sqlite3.c	12470;"	d	file:
TK_SPAN	src/sqlite/sqlite3.c	12469;"	d	file:
TK_STAR	src/sqlite/sqlite3.c	12397;"	d	file:
TK_STRING	src/sqlite/sqlite3.c	12404;"	d	file:
TK_TABLE	src/sqlite/sqlite3.c	12323;"	d	file:
TK_TEMP	src/sqlite/sqlite3.c	12328;"	d	file:
TK_THEN	src/sqlite/sqlite3.c	12445;"	d	file:
TK_TO	src/sqlite/sqlite3.c	12322;"	d	file:
TK_TO_BLOB	src/sqlite/sqlite3.c	12451;"	d	file:
TK_TO_INT	src/sqlite/sqlite3.c	12453;"	d	file:
TK_TO_NUMERIC	src/sqlite/sqlite3.c	12452;"	d	file:
TK_TO_REAL	src/sqlite/sqlite3.c	12454;"	d	file:
TK_TO_TEXT	src/sqlite/sqlite3.c	12450;"	d	file:
TK_TRANSACTION	src/sqlite/sqlite3.c	12313;"	d	file:
TK_TRIGGER	src/sqlite/sqlite3.c	12368;"	d	file:
TK_UMINUS	src/sqlite/sqlite3.c	12462;"	d	file:
TK_UNCLOSED_STRING	src/sqlite/sqlite3.c	12457;"	d	file:
TK_UNION	src/sqlite/sqlite3.c	12422;"	d	file:
TK_UNIQUE	src/sqlite/sqlite3.c	12410;"	d	file:
TK_UPDATE	src/sqlite/sqlite3.c	12417;"	d	file:
TK_UPLUS	src/sqlite/sqlite3.c	12463;"	d	file:
TK_USING	src/sqlite/sqlite3.c	12432;"	d	file:
TK_VACUUM	src/sqlite/sqlite3.c	12369;"	d	file:
TK_VALUES	src/sqlite/sqlite3.c	12427;"	d	file:
TK_VARIABLE	src/sqlite/sqlite3.c	12442;"	d	file:
TK_VECTOR	src/sqlite/sqlite3.c	12465;"	d	file:
TK_VIEW	src/sqlite/sqlite3.c	12370;"	d	file:
TK_VIRTUAL	src/sqlite/sqlite3.c	12371;"	d	file:
TK_WHEN	src/sqlite/sqlite3.c	12444;"	d	file:
TK_WHERE	src/sqlite/sqlite3.c	12437;"	d	file:
TK_WITH	src/sqlite/sqlite3.c	12372;"	d	file:
TK_WITHOUT	src/sqlite/sqlite3.c	12332;"	d	file:
TOKEN	src/sqlite/sqlite3.c	139596;"	d	file:
TRACE	src/sqlite/sqlite3.c	59480;"	d	file:
TRACE_IDX_INPUTS	src/sqlite/sqlite3.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	src/sqlite/sqlite3.c	131561;"	d	file:
TRACE_IDX_OUTPUTS	src/sqlite/sqlite3.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	src/sqlite/sqlite3.c	131562;"	d	file:
TRANS_NONE	src/sqlite/sqlite3.c	58819;"	d	file:
TRANS_READ	src/sqlite/sqlite3.c	58820;"	d	file:
TRANS_WRITE	src/sqlite/sqlite3.c	58821;"	d	file:
TRIGGER_AFTER	src/sqlite/sqlite3.c	16784;"	d	file:
TRIGGER_BEFORE	src/sqlite/sqlite3.c	16783;"	d	file:
TWO_BYTE_INT	src/sqlite/sqlite3.c	75201;"	d	file:
TYPED_TEST	third_party/gmock/gtest/gtest.h	17390;"	d
TYPED_TEST_CASE	third_party/gmock/gtest/gtest.h	17386;"	d
TYPED_TEST_CASE_P	third_party/gmock/gtest/gtest.h	17440;"	d
TYPED_TEST_P	third_party/gmock/gtest/gtest.h	17444;"	d
TYPE_OVERFLOW	src/include/common/exception.h	/^  static const int TYPE_OVERFLOW = 2;$/;"	m	class:cmudb::NumericValueOutOfRangeException
TYPE_UNDERFLOW	src/include/common/exception.h	/^  static const int TYPE_UNDERFLOW = 1;$/;"	m	class:cmudb::NumericValueOutOfRangeException
TabResult	src/sqlite/sqlite3.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	src/sqlite/sqlite3.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
Table	src/sqlite/sqlite3.c	/^struct Table {$/;"	s	file:
Table	src/sqlite/sqlite3.c	/^typedef struct Table Table;$/;"	t	typeref:struct:Table	file:
TableHeap	src/include/table/table_heap.h	/^class TableHeap {$/;"	c	namespace:cmudb
TableHeap	src/table/table_heap.cpp	/^TableHeap::TableHeap(BufferPoolManager *buffer_pool_manager,$/;"	f	class:cmudb::TableHeap
TableIterator	src/include/table/table_iterator.h	/^class TableIterator {$/;"	c	namespace:cmudb
TableIterator	src/table/table_iterator.cpp	/^TableIterator::TableIterator(TableHeap *table_heap, RID rid, Transaction *txn)$/;"	f	class:cmudb::TableIterator
TableLock	src/sqlite/sqlite3.c	/^struct TableLock {$/;"	s	file:
TableLock	src/sqlite/sqlite3.c	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock	file:
TablePage	src/include/page/table_page.h	/^class TablePage : public Page {$/;"	c	namespace:cmudb
Tail	third_party/gmock/gtest/gtest.h	/^      T14> Tail;$/;"	t	struct:testing::internal::Templates14
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Templates27
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Templates26
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Templates25
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Templates24
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Templates23
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Templates22
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Templates21
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Templates20
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Templates19
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Templates18
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16, T17> Tail;$/;"	t	struct:testing::internal::Templates17
Tail	third_party/gmock/gtest/gtest.h	/^      T15, T16> Tail;$/;"	t	struct:testing::internal::Templates16
Tail	third_party/gmock/gtest/gtest.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Templates15
Tail	third_party/gmock/gtest/gtest.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Types15
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;$/;"	t	struct:testing::internal::Types28
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Types27
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Types26
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Types25
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Types24
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Types23
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Types22
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Types21
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Types20
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Types19
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Types18
Tail	third_party/gmock/gtest/gtest.h	/^      T16, T17> Tail;$/;"	t	struct:testing::internal::Types17
Tail	third_party/gmock/gtest/gtest.h	/^      T16> Tail;$/;"	t	struct:testing::internal::Types16
Tail	third_party/gmock/gtest/gtest.h	/^      T28> Tail;$/;"	t	struct:testing::internal::Templates28
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Templates41
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Templates40
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Templates39
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Templates38
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Templates37
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Templates36
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Templates35
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Templates34
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Templates33
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Templates32
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30, T31> Tail;$/;"	t	struct:testing::internal::Templates31
Tail	third_party/gmock/gtest/gtest.h	/^      T29, T30> Tail;$/;"	t	struct:testing::internal::Templates30
Tail	third_party/gmock/gtest/gtest.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Templates29
Tail	third_party/gmock/gtest/gtest.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Types29
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;$/;"	t	struct:testing::internal::Types42
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Types41
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Types40
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Types39
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Types38
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Types37
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Types36
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Types35
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Types34
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Types33
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Types32
Tail	third_party/gmock/gtest/gtest.h	/^      T30, T31> Tail;$/;"	t	struct:testing::internal::Types31
Tail	third_party/gmock/gtest/gtest.h	/^      T30> Tail;$/;"	t	struct:testing::internal::Types30
Tail	third_party/gmock/gtest/gtest.h	/^      T42> Tail;$/;"	t	struct:testing::internal::Templates42
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Templates50
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Templates49
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Templates48
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Templates47
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Templates46
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44, T45> Tail;$/;"	t	struct:testing::internal::Templates45
Tail	third_party/gmock/gtest/gtest.h	/^      T43, T44> Tail;$/;"	t	struct:testing::internal::Templates44
Tail	third_party/gmock/gtest/gtest.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Templates43
Tail	third_party/gmock/gtest/gtest.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Types43
Tail	third_party/gmock/gtest/gtest.h	/^      T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Types50
Tail	third_party/gmock/gtest/gtest.h	/^      T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Types49
Tail	third_party/gmock/gtest/gtest.h	/^      T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Types48
Tail	third_party/gmock/gtest/gtest.h	/^      T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Types47
Tail	third_party/gmock/gtest/gtest.h	/^      T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Types46
Tail	third_party/gmock/gtest/gtest.h	/^      T44, T45> Tail;$/;"	t	struct:testing::internal::Types45
Tail	third_party/gmock/gtest/gtest.h	/^      T44> Tail;$/;"	t	struct:testing::internal::Types44
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates0 Tail;$/;"	t	struct:testing::internal::Templates1
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Templates11
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Templates12
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Templates13
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates1<T2> Tail;$/;"	t	struct:testing::internal::Templates2
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates2<T2, T3> Tail;$/;"	t	struct:testing::internal::Templates3
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Templates4
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Templates5
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Templates6
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Templates7
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Templates8
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Templates9
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Templates10
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types0 Tail;$/;"	t	struct:testing::internal::Types1
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Types11
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Types12
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Types13
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;$/;"	t	struct:testing::internal::Types14
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types1<T2> Tail;$/;"	t	struct:testing::internal::Types2
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types2<T2, T3> Tail;$/;"	t	struct:testing::internal::Types3
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Types4
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Types5
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Types6
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Types7
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Types8
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Types9
Tail	third_party/gmock/gtest/gtest.h	/^  typedef Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Types10
TearDown	third_party/gmock/gmock-gtest-all.cc	/^void Test::TearDown() {$/;"	f	class:testing::Test
TearDown	third_party/gmock/gtest/gtest.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Environment
TearDownEnvironment	third_party/gmock/gmock-gtest-all.cc	/^static void TearDownEnvironment(Environment* env) { env->TearDown(); }$/;"	f	namespace:testing::internal
TearDownTestCase	third_party/gmock/gtest/gtest.h	/^  static void TearDownTestCase() {}$/;"	f	class:testing::Test
TearDownTestCaseFunc	third_party/gmock/gtest/gtest.h	/^  typedef internal::TearDownTestCaseFunc TearDownTestCaseFunc;$/;"	t	class:testing::Test
TearDownTestCaseFunc	third_party/gmock/gtest/gtest.h	/^typedef void (*TearDownTestCaseFunc)();$/;"	t	namespace:testing::internal
TemplateSel	third_party/gmock/gtest/gtest.h	/^struct TemplateSel {$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates {$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,$/;"	s	namespace:testing::internal
Templates	third_party/gmock/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing::internal
Templates0	third_party/gmock/gtest/gtest.h	/^struct Templates0 {};$/;"	s	namespace:testing::internal
Templates1	third_party/gmock/gtest/gtest.h	/^struct Templates1 {$/;"	s	namespace:testing::internal
Templates10	third_party/gmock/gtest/gtest.h	/^struct Templates10 {$/;"	s	namespace:testing::internal
Templates11	third_party/gmock/gtest/gtest.h	/^struct Templates11 {$/;"	s	namespace:testing::internal
Templates12	third_party/gmock/gtest/gtest.h	/^struct Templates12 {$/;"	s	namespace:testing::internal
Templates13	third_party/gmock/gtest/gtest.h	/^struct Templates13 {$/;"	s	namespace:testing::internal
Templates14	third_party/gmock/gtest/gtest.h	/^struct Templates14 {$/;"	s	namespace:testing::internal
Templates15	third_party/gmock/gtest/gtest.h	/^struct Templates15 {$/;"	s	namespace:testing::internal
Templates16	third_party/gmock/gtest/gtest.h	/^struct Templates16 {$/;"	s	namespace:testing::internal
Templates17	third_party/gmock/gtest/gtest.h	/^struct Templates17 {$/;"	s	namespace:testing::internal
Templates18	third_party/gmock/gtest/gtest.h	/^struct Templates18 {$/;"	s	namespace:testing::internal
Templates19	third_party/gmock/gtest/gtest.h	/^struct Templates19 {$/;"	s	namespace:testing::internal
Templates2	third_party/gmock/gtest/gtest.h	/^struct Templates2 {$/;"	s	namespace:testing::internal
Templates20	third_party/gmock/gtest/gtest.h	/^struct Templates20 {$/;"	s	namespace:testing::internal
Templates21	third_party/gmock/gtest/gtest.h	/^struct Templates21 {$/;"	s	namespace:testing::internal
Templates22	third_party/gmock/gtest/gtest.h	/^struct Templates22 {$/;"	s	namespace:testing::internal
Templates23	third_party/gmock/gtest/gtest.h	/^struct Templates23 {$/;"	s	namespace:testing::internal
Templates24	third_party/gmock/gtest/gtest.h	/^struct Templates24 {$/;"	s	namespace:testing::internal
Templates25	third_party/gmock/gtest/gtest.h	/^struct Templates25 {$/;"	s	namespace:testing::internal
Templates26	third_party/gmock/gtest/gtest.h	/^struct Templates26 {$/;"	s	namespace:testing::internal
Templates27	third_party/gmock/gtest/gtest.h	/^struct Templates27 {$/;"	s	namespace:testing::internal
Templates28	third_party/gmock/gtest/gtest.h	/^struct Templates28 {$/;"	s	namespace:testing::internal
Templates29	third_party/gmock/gtest/gtest.h	/^struct Templates29 {$/;"	s	namespace:testing::internal
Templates3	third_party/gmock/gtest/gtest.h	/^struct Templates3 {$/;"	s	namespace:testing::internal
Templates30	third_party/gmock/gtest/gtest.h	/^struct Templates30 {$/;"	s	namespace:testing::internal
Templates31	third_party/gmock/gtest/gtest.h	/^struct Templates31 {$/;"	s	namespace:testing::internal
Templates32	third_party/gmock/gtest/gtest.h	/^struct Templates32 {$/;"	s	namespace:testing::internal
Templates33	third_party/gmock/gtest/gtest.h	/^struct Templates33 {$/;"	s	namespace:testing::internal
Templates34	third_party/gmock/gtest/gtest.h	/^struct Templates34 {$/;"	s	namespace:testing::internal
Templates35	third_party/gmock/gtest/gtest.h	/^struct Templates35 {$/;"	s	namespace:testing::internal
Templates36	third_party/gmock/gtest/gtest.h	/^struct Templates36 {$/;"	s	namespace:testing::internal
Templates37	third_party/gmock/gtest/gtest.h	/^struct Templates37 {$/;"	s	namespace:testing::internal
Templates38	third_party/gmock/gtest/gtest.h	/^struct Templates38 {$/;"	s	namespace:testing::internal
Templates39	third_party/gmock/gtest/gtest.h	/^struct Templates39 {$/;"	s	namespace:testing::internal
Templates4	third_party/gmock/gtest/gtest.h	/^struct Templates4 {$/;"	s	namespace:testing::internal
Templates40	third_party/gmock/gtest/gtest.h	/^struct Templates40 {$/;"	s	namespace:testing::internal
Templates41	third_party/gmock/gtest/gtest.h	/^struct Templates41 {$/;"	s	namespace:testing::internal
Templates42	third_party/gmock/gtest/gtest.h	/^struct Templates42 {$/;"	s	namespace:testing::internal
Templates43	third_party/gmock/gtest/gtest.h	/^struct Templates43 {$/;"	s	namespace:testing::internal
Templates44	third_party/gmock/gtest/gtest.h	/^struct Templates44 {$/;"	s	namespace:testing::internal
Templates45	third_party/gmock/gtest/gtest.h	/^struct Templates45 {$/;"	s	namespace:testing::internal
Templates46	third_party/gmock/gtest/gtest.h	/^struct Templates46 {$/;"	s	namespace:testing::internal
Templates47	third_party/gmock/gtest/gtest.h	/^struct Templates47 {$/;"	s	namespace:testing::internal
Templates48	third_party/gmock/gtest/gtest.h	/^struct Templates48 {$/;"	s	namespace:testing::internal
Templates49	third_party/gmock/gtest/gtest.h	/^struct Templates49 {$/;"	s	namespace:testing::internal
Templates5	third_party/gmock/gtest/gtest.h	/^struct Templates5 {$/;"	s	namespace:testing::internal
Templates50	third_party/gmock/gtest/gtest.h	/^struct Templates50 {$/;"	s	namespace:testing::internal
Templates6	third_party/gmock/gtest/gtest.h	/^struct Templates6 {$/;"	s	namespace:testing::internal
Templates7	third_party/gmock/gtest/gtest.h	/^struct Templates7 {$/;"	s	namespace:testing::internal
Templates8	third_party/gmock/gtest/gtest.h	/^struct Templates8 {$/;"	s	namespace:testing::internal
Templates9	third_party/gmock/gtest/gtest.h	/^struct Templates9 {$/;"	s	namespace:testing::internal
TermOffset	src/sqlite/sqlite3.c	/^struct TermOffset {$/;"	s	file:
TermOffset	src/sqlite/sqlite3.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffsetCtx	src/sqlite/sqlite3.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	src/sqlite/sqlite3.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermSelect	src/sqlite/sqlite3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	src/sqlite/sqlite3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
TersePrintPrefixToStrings	third_party/gmock/gtest/gtest.h	/^  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
TersePrintPrefixToStrings	third_party/gmock/gtest/gtest.h	/^  static void TersePrintPrefixToStrings(const Tuple&, Strings*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
Test	third_party/gmock/gmock-gtest-all.cc	/^Test::Test()$/;"	f	class:testing::Test
Test	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ Test {$/;"	c	namespace:testing
TestCase	third_party/gmock/gmock-gtest-all.cc	/^TestCase::TestCase(const char* a_name, const char* a_type_param,$/;"	f	class:testing::TestCase
TestCase	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TestCase {$/;"	c	namespace:testing
TestCaseFailed	third_party/gmock/gmock-gtest-all.cc	/^static bool TestCaseFailed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestCaseInfoContainer	third_party/gmock/gtest/gtest.h	/^  typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseRegistry
TestCaseNameIs	third_party/gmock/gmock-gtest-all.cc	/^  explicit TestCaseNameIs(const std::string& name)$/;"	f	class:testing::internal::TestCaseNameIs
TestCaseNameIs	third_party/gmock/gmock-gtest-all.cc	/^class TestCaseNameIs {$/;"	c	namespace:testing::internal	file:
TestCasePassed	third_party/gmock/gmock-gtest-all.cc	/^static bool TestCasePassed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestDisabled	third_party/gmock/gtest/gtest.h	/^  static bool TestDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestEventListener	third_party/gmock/gtest/gtest.h	/^class TestEventListener {$/;"	c	namespace:testing
TestEventListeners	third_party/gmock/gmock-gtest-all.cc	/^TestEventListeners::TestEventListeners()$/;"	f	class:testing::TestEventListeners
TestEventListeners	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TestEventListeners {$/;"	c	namespace:testing
TestEventRepeater	third_party/gmock/gmock-gtest-all.cc	/^  TestEventRepeater() : forwarding_enabled_(true) {}$/;"	f	class:testing::internal::TestEventRepeater
TestEventRepeater	third_party/gmock/gmock-gtest-all.cc	/^class TestEventRepeater : public TestEventListener {$/;"	c	namespace:testing::internal	file:
TestFactoryBase	third_party/gmock/gtest/gtest.h	/^  TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
TestFactoryBase	third_party/gmock/gtest/gtest.h	/^class TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryImpl	third_party/gmock/gtest/gtest.h	/^class TestFactoryImpl : public TestFactoryBase {$/;"	c	namespace:testing::internal
TestFailed	third_party/gmock/gtest/gtest.h	/^  static bool TestFailed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestInfo	third_party/gmock/gmock-gtest-all.cc	/^TestInfo::TestInfo(const std::string& a_test_case_name,$/;"	f	class:testing::TestInfo
TestInfo	third_party/gmock/gtest/gtest.h	/^    TestInfo(const char* a_test_case_base_name,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
TestInfo	third_party/gmock/gtest/gtest.h	/^  struct TestInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
TestInfo	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TestInfo {$/;"	c	namespace:testing
TestInfoContainer	third_party/gmock/gtest/gtest.h	/^  typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
TestMetaFactory	third_party/gmock/gtest/gtest.h	/^  TestMetaFactory() {}$/;"	f	class:testing::internal::TestMetaFactory
TestMetaFactory	third_party/gmock/gtest/gtest.h	/^class TestMetaFactory$/;"	c	namespace:testing::internal
TestMetaFactoryBase	third_party/gmock/gtest/gtest.h	/^class TestMetaFactoryBase {$/;"	c	namespace:testing::internal
TestNameIs	third_party/gmock/gmock-gtest-all.cc	/^  explicit TestNameIs(const char* name)$/;"	f	class:testing::__anon4::TestNameIs
TestNameIs	third_party/gmock/gmock-gtest-all.cc	/^class TestNameIs {$/;"	c	namespace:testing::__anon4	file:
TestPartFatallyFailed	third_party/gmock/gmock-gtest-all.cc	/^static bool TestPartFatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartNonfatallyFailed	third_party/gmock/gmock-gtest-all.cc	/^static bool TestPartNonfatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartResult	third_party/gmock/gtest/gtest.h	/^  TestPartResult(Type a_type,$/;"	f	class:testing::TestPartResult
TestPartResult	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TestPartResult {$/;"	c	namespace:testing
TestPartResultArray	third_party/gmock/gtest/gtest.h	/^  TestPartResultArray() {}$/;"	f	class:testing::TestPartResultArray
TestPartResultArray	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TestPartResultArray {$/;"	c	namespace:testing
TestPartResultReporterInterface	third_party/gmock/gtest/gtest.h	/^class TestPartResultReporterInterface {$/;"	c	namespace:testing
TestPartResultTypeToString	third_party/gmock/gmock-gtest-all.cc	/^static const char * TestPartResultTypeToString(TestPartResult::Type type) {$/;"	f	namespace:testing
TestPassed	third_party/gmock/gtest/gtest.h	/^  static bool TestPassed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestPropertiesAsXmlAttributes	third_party/gmock/gmock-gtest-all.cc	/^std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
TestProperty	third_party/gmock/gtest/gtest.h	/^  TestProperty(const std::string& a_key, const std::string& a_value) :$/;"	f	class:testing::TestProperty
TestProperty	third_party/gmock/gtest/gtest.h	/^class TestProperty {$/;"	c	namespace:testing
TestPropertyKeyIs	third_party/gmock/gmock-gtest-all.cc	/^  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}$/;"	f	class:testing::internal::TestPropertyKeyIs
TestPropertyKeyIs	third_party/gmock/gmock-gtest-all.cc	/^class TestPropertyKeyIs {$/;"	c	namespace:testing::internal	file:
TestReportable	third_party/gmock/gtest/gtest.h	/^  static bool TestReportable(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestReportableDisabled	third_party/gmock/gtest/gtest.h	/^  static bool TestReportableDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestResult	third_party/gmock/gmock-gtest-all.cc	/^TestResult::TestResult()$/;"	f	class:testing::TestResult
TestResult	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TestResult {$/;"	c	namespace:testing
TestResultAccessor	third_party/gmock/gmock-gtest-all.cc	/^class TestResultAccessor {$/;"	c	namespace:testing::internal	file:
TestRole	third_party/gmock/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	g	class:testing::internal::DeathTest
TestWithParam	third_party/gmock/gtest/gtest.h	/^class TestWithParam : public Test, public WithParamInterface<T> {$/;"	c	namespace:testing
ThreadFuncWithCLinkage	third_party/gmock/gtest/gtest.h	/^extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {$/;"	f	namespace:std::tr1
ThreadLocal	third_party/gmock/gtest/gtest.h	/^  ThreadLocal() : key_(CreateKey()),$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	third_party/gmock/gtest/gtest.h	/^  ThreadLocal() : value_() {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	third_party/gmock/gtest/gtest.h	/^  explicit ThreadLocal(const T& value) : key_(CreateKey()),$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	third_party/gmock/gtest/gtest.h	/^  explicit ThreadLocal(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	third_party/gmock/gtest/gtest.h	/^class ThreadLocal {$/;"	c	namespace:std::tr1
ThreadLocalValueHolderBase	third_party/gmock/gtest/gtest.h	/^class ThreadLocalValueHolderBase {$/;"	c	namespace:std::tr1
ThreadWithParam	third_party/gmock/gtest/gtest.h	/^  ThreadWithParam($/;"	f	class:std::tr1::ThreadWithParam
ThreadWithParam	third_party/gmock/gtest/gtest.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;"	c	namespace:std::tr1
ThreadWithParamBase	third_party/gmock/gtest/gtest.h	/^class ThreadWithParamBase {$/;"	c	namespace:std::tr1
TimeInMillis	third_party/gmock/gtest/gtest.h	/^typedef TypeWithSize<8>::Int TimeInMillis;  \/\/ Represents time in milliseconds.$/;"	t	namespace:std::tr1
TimeInMillis	third_party/gmock/gtest/gtest.h	/^typedef internal::TimeInMillis TimeInMillis;$/;"	t	namespace:testing
Times	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& Times(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::TypedExpectation
Times	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& Times(int n) {$/;"	f	class:testing::internal::TypedExpectation
TinyintType	src/include/type/tinyint_type.h	/^class TinyintType : public IntegerParentType {$/;"	c	namespace:cmudb
TinyintType	src/type/tinyint_type.cpp	/^TinyintType::TinyintType() : IntegerParentType(TINYINT) {}$/;"	f	class:cmudb::TinyintType
ToLower	src/sqlite/shell.c	151;"	d	file:
ToLower	third_party/gmock/gtest/gtest.h	/^inline char ToLower(char ch) {$/;"	f	namespace:std::tr1
ToString	src/catalog/column.cpp	/^std::string Column::ToString() const {$/;"	f	class:cmudb::Column
ToString	src/catalog/schema.cpp	/^std::string Schema::ToString() const {$/;"	f	class:cmudb::Schema
ToString	src/include/common/rid.h	/^  inline std::string ToString() const {$/;"	f	class:cmudb::RID
ToString	src/include/index/generic_key.h	/^  inline int64_t ToString() const {$/;"	f	class:cmudb::GenericKey
ToString	src/include/index/index.h	/^  const std::string ToString() const {$/;"	f	class:cmudb::Index
ToString	src/include/index/index.h	/^  const std::string ToString() const {$/;"	f	class:cmudb::IndexMetadata
ToString	src/include/type/value.h	/^  inline std::string ToString() const {$/;"	f	class:cmudb::Value
ToString	src/index/b_plus_tree.cpp	/^std::string BPLUSTREE_TYPE::ToString(bool verbose) { return "Empty tree"; }$/;"	f	class:cmudb::BPLUSTREE_TYPE
ToString	src/page/b_plus_tree_internal_page.cpp	/^std::string B_PLUS_TREE_INTERNAL_PAGE_TYPE::ToString(bool verbose) const {$/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
ToString	src/page/b_plus_tree_leaf_page.cpp	/^std::string B_PLUS_TREE_LEAF_PAGE_TYPE::ToString(bool verbose) const {$/;"	f	class:cmudb::B_PLUS_TREE_LEAF_PAGE_TYPE
ToString	src/table/tuple.cpp	/^std::string Tuple::ToString(Schema *schema) const {$/;"	f	class:cmudb::Tuple
ToString	src/type/bigint_type.cpp	/^std::string BigintType::ToString(const Value &val) const {$/;"	f	class:cmudb::BigintType
ToString	src/type/boolean_type.cpp	/^std::string BooleanType::ToString(const Value &val) const {$/;"	f	class:cmudb::BooleanType
ToString	src/type/decimal_type.cpp	/^std::string DecimalType::ToString(const Value &val) const {$/;"	f	class:cmudb::DecimalType
ToString	src/type/integer_type.cpp	/^std::string IntegerType::ToString(const Value &val) const {$/;"	f	class:cmudb::IntegerType
ToString	src/type/smallint_type.cpp	/^std::string SmallintType::ToString(const Value &val) const {$/;"	f	class:cmudb::SmallintType
ToString	src/type/tinyint_type.cpp	/^std::string TinyintType::ToString(const Value &val) const {$/;"	f	class:cmudb::TinyintType
ToString	src/type/type.cpp	/^std::string Type::ToString(const Value &val __attribute__((unused))) const {$/;"	f	class:cmudb::Type
ToString	src/type/varlen_type.cpp	/^std::string VarlenType::ToString(const Value &val) const {$/;"	f	class:cmudb::VarlenType
ToUpper	third_party/gmock/gtest/gtest.h	/^inline char ToUpper(char ch) {$/;"	f	namespace:std::tr1
ToValue	src/include/index/generic_key.h	/^  inline Value ToValue(Schema *schema, int column_id) const {$/;"	f	class:cmudb::GenericKey
Token	src/sqlite/sqlite3.c	/^struct Token {$/;"	s	file:
Token	src/sqlite/sqlite3.c	/^typedef struct Token Token;$/;"	t	typeref:struct:Token	file:
TokenCtx	src/sqlite/sqlite3.c	/^struct TokenCtx {$/;"	s	file:
TokenCtx	src/sqlite/sqlite3.c	/^typedef struct TokenCtx TokenCtx;$/;"	t	typeref:struct:TokenCtx	file:
TokenDoclist	src/sqlite/sqlite3.c	/^struct TokenDoclist {$/;"	s	file:
TokenDoclist	src/sqlite/sqlite3.c	/^typedef struct TokenDoclist TokenDoclist;$/;"	t	typeref:struct:TokenDoclist	file:
TraceInfo	third_party/gmock/gmock-gtest-all.cc	/^struct TraceInfo {$/;"	s	namespace:testing::internal	file:
Transaction	src/include/concurrency/transaction.h	/^  Transaction(txn_id_t txn_id)$/;"	f	class:cmudb::Transaction
Transaction	src/include/concurrency/transaction.h	/^class Transaction {$/;"	c	namespace:cmudb
TransactionException	src/include/common/exception.h	/^  TransactionException(std::string msg)$/;"	f	class:cmudb::TransactionException
TransactionException	src/include/common/exception.h	/^class TransactionException : public Exception {$/;"	c	namespace:cmudb
TransactionManager	src/include/concurrency/transaction_manager.h	/^  TransactionManager(LockManager *lock_manager) : lock_manager_(lock_manager) {}$/;"	f	class:cmudb::TransactionManager
TransactionManager	src/include/concurrency/transaction_manager.h	/^class TransactionManager {$/;"	c	namespace:cmudb
TransactionState	src/include/concurrency/transaction.h	/^enum class TransactionState { GROWING, SHRINKING, COMMITTED, ABORTED };$/;"	c	namespace:cmudb
TransformTupleValues	third_party/gmock/gmock/gmock.h	/^OutIter TransformTupleValues(Func f, const Tuple& t, OutIter out) {$/;"	f	namespace:testing::internal
TransformTupleValuesHelper	third_party/gmock/gmock/gmock.h	/^class TransformTupleValuesHelper {$/;"	c	namespace:testing::internal
TreeView	src/sqlite/sqlite3.c	/^struct TreeView {$/;"	s	file:
TreeView	src/sqlite/sqlite3.c	/^typedef struct TreeView TreeView;$/;"	t	typeref:struct:TreeView	file:
TrigEvent	src/sqlite/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
Trigger	src/sqlite/sqlite3.c	/^struct Trigger {$/;"	s	file:
Trigger	src/sqlite/sqlite3.c	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger	file:
TriggerPrg	src/sqlite/sqlite3.c	/^struct TriggerPrg {$/;"	s	file:
TriggerPrg	src/sqlite/sqlite3.c	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg	file:
TriggerStep	src/sqlite/sqlite3.c	/^struct TriggerStep {$/;"	s	file:
TriggerStep	src/sqlite/sqlite3.c	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep	file:
Trim	src/include/common/string_utility.h	/^  static inline void Trim(std::string &s) {$/;"	f	class:cmudb::StringUtility
Truly	third_party/gmock/gmock/gmock.h	/^Truly(Predicate pred) {$/;"	f	namespace:testing
TrulyMatcher	third_party/gmock/gmock/gmock.h	/^  explicit TrulyMatcher(Predicate pred) : predicate_(pred) {}$/;"	f	class:testing::internal::TrulyMatcher
TrulyMatcher	third_party/gmock/gmock/gmock.h	/^class TrulyMatcher {$/;"	c	namespace:testing::internal
TryAugment	third_party/gmock/gmock-gtest-all.cc	/^  bool TryAugment(size_t ilhs, ::std::vector<char>* seen) {$/;"	f	class:testing::internal::MaxBipartiteMatchState	file:
Tuple	src/include/table/tuple.h	/^  Tuple(RID rid) : allocated_(false), rid_(rid) {}$/;"	f	class:cmudb::Tuple
Tuple	src/include/table/tuple.h	/^class Tuple {$/;"	c	namespace:cmudb
Tuple	src/table/tuple.cpp	/^Tuple::Tuple(const Tuple &other)$/;"	f	class:cmudb::Tuple
Tuple	src/table/tuple.cpp	/^Tuple::Tuple(std::vector<Value> values, Schema *schema) : allocated_(true) {$/;"	f	class:cmudb::Tuple
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 0, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 1, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 2, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 3, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 4, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 5, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 6, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 7, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 8, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	third_party/gmock/gtest/gtest.h	/^struct TupleElement<true, 9, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, -1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, k7, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	third_party/gmock/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, k7, k8, -1> {$/;"	c	namespace:testing::internal
TupleMatches	third_party/gmock/gmock/gmock.h	/^bool TupleMatches(const MatcherTuple& matcher_tuple,$/;"	f	namespace:testing::internal
TuplePrefix	third_party/gmock/gmock/gmock.h	/^class TuplePrefix {$/;"	c	namespace:testing::internal
TuplePrefix	third_party/gmock/gmock/gmock.h	/^class TuplePrefix<0> {$/;"	c	namespace:testing::internal
TuplePrefixPrinter	third_party/gmock/gtest/gtest.h	/^struct TuplePrefixPrinter {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	third_party/gmock/gtest/gtest.h	/^struct TuplePrefixPrinter<0> {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	third_party/gmock/gtest/gtest.h	/^struct TuplePrefixPrinter<1> {$/;"	s	namespace:testing::internal
TupleSize	third_party/gmock/gmock/gmock.h	/^  typedef typename ::std::tr1::tuple_size<Tuple> TupleSize;$/;"	t	class:testing::internal::TransformTupleValuesHelper
Type	src/include/type/type.h	/^  Type(TypeId type_id) : type_id_(type_id) {}$/;"	f	class:cmudb::Type
Type	src/include/type/type.h	/^class Type {$/;"	c	namespace:cmudb
Type	third_party/gmock/gtest/gtest.h	/^  enum Type {$/;"	g	class:testing::TestPartResult
TypeId	src/include/type/type_id.h	/^enum TypeId {$/;"	g	namespace:cmudb
TypeId	third_party/gmock/gtest/gtest.h	/^typedef const void* TypeId;$/;"	t	namespace:testing::internal
TypeIdHelper	third_party/gmock/gtest/gtest.h	/^class TypeIdHelper {$/;"	c	namespace:testing::internal
TypeIdToString	src/type/type.cpp	/^std::string Type::TypeIdToString(const TypeId type_id) {$/;"	f	class:cmudb::Type
TypeKind	third_party/gmock/gmock/gmock.h	/^enum TypeKind {$/;"	g	namespace:testing::internal
TypeKind	third_party/gmock/gtest/gtest.h	/^enum TypeKind {$/;"	g	namespace:testing::internal2
TypeList	third_party/gmock/gtest/gtest.h	/^struct TypeList {$/;"	s	namespace:testing::internal
TypeList	third_party/gmock/gtest/gtest.h	/^struct TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing::internal
TypeMismatchException	src/include/common/exception.h	/^  TypeMismatchException(std::string msg, const TypeId type_1,$/;"	f	class:cmudb::TypeMismatchException
TypeMismatchException	src/include/common/exception.h	/^class TypeMismatchException : public Exception {$/;"	c	namespace:cmudb
TypeParameterizedTest	third_party/gmock/gtest/gtest.h	/^class TypeParameterizedTest {$/;"	c	namespace:testing::internal
TypeParameterizedTest	third_party/gmock/gtest/gtest.h	/^class TypeParameterizedTest<Fixture, TestSel, Types0> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	third_party/gmock/gtest/gtest.h	/^class TypeParameterizedTestCase {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	third_party/gmock/gtest/gtest.h	/^class TypeParameterizedTestCase<Fixture, Templates0, Types> {$/;"	c	namespace:testing::internal
TypeUtil	src/include/type/type_util.h	/^class TypeUtil {$/;"	c	namespace:cmudb
TypeWithSize	third_party/gmock/gtest/gtest.h	/^class TypeWithSize {$/;"	c	namespace:std::tr1
TypeWithSize	third_party/gmock/gtest/gtest.h	/^class TypeWithSize<4> {$/;"	c	namespace:std::tr1
TypeWithSize	third_party/gmock/gtest/gtest.h	/^class TypeWithSize<8> {$/;"	c	namespace:std::tr1
TypeWithoutFormatter	third_party/gmock/gtest/gtest.h	/^class TypeWithoutFormatter {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	third_party/gmock/gtest/gtest.h	/^class TypeWithoutFormatter<T, kConvertibleToInteger> {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	third_party/gmock/gtest/gtest.h	/^class TypeWithoutFormatter<T, kProtobuf> {$/;"	c	namespace:testing::internal2
TypedEq	third_party/gmock/gmock/gmock.h	/^inline Matcher<Lhs> TypedEq(const Rhs& rhs) { return Eq(rhs); }$/;"	f	namespace:testing
TypedExpectation	third_party/gmock/gmock/gmock.h	/^  TypedExpectation(FunctionMockerBase<F>* owner,$/;"	f	class:testing::internal::TypedExpectation
TypedExpectation	third_party/gmock/gmock/gmock.h	/^class TypedExpectation : public ExpectationBase {$/;"	c	namespace:testing::internal
TypedTestCasePState	third_party/gmock/gtest/gtest.h	/^  TypedTestCasePState() : registered_(false) {}$/;"	f	class:testing::internal::TypedTestCasePState
TypedTestCasePState	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ TypedTestCasePState {$/;"	c	namespace:testing::internal
Types	third_party/gmock/gtest/gtest.h	/^struct Types {$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, T3, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, T2, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<T1, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	third_party/gmock/gtest/gtest.h	/^struct Types<internal::None, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types0	third_party/gmock/gtest/gtest.h	/^struct Types0 {};$/;"	s	namespace:testing::internal
Types1	third_party/gmock/gtest/gtest.h	/^struct Types1 {$/;"	s	namespace:testing::internal
Types10	third_party/gmock/gtest/gtest.h	/^struct Types10 {$/;"	s	namespace:testing::internal
Types11	third_party/gmock/gtest/gtest.h	/^struct Types11 {$/;"	s	namespace:testing::internal
Types12	third_party/gmock/gtest/gtest.h	/^struct Types12 {$/;"	s	namespace:testing::internal
Types13	third_party/gmock/gtest/gtest.h	/^struct Types13 {$/;"	s	namespace:testing::internal
Types14	third_party/gmock/gtest/gtest.h	/^struct Types14 {$/;"	s	namespace:testing::internal
Types15	third_party/gmock/gtest/gtest.h	/^struct Types15 {$/;"	s	namespace:testing::internal
Types16	third_party/gmock/gtest/gtest.h	/^struct Types16 {$/;"	s	namespace:testing::internal
Types17	third_party/gmock/gtest/gtest.h	/^struct Types17 {$/;"	s	namespace:testing::internal
Types18	third_party/gmock/gtest/gtest.h	/^struct Types18 {$/;"	s	namespace:testing::internal
Types19	third_party/gmock/gtest/gtest.h	/^struct Types19 {$/;"	s	namespace:testing::internal
Types2	third_party/gmock/gtest/gtest.h	/^struct Types2 {$/;"	s	namespace:testing::internal
Types20	third_party/gmock/gtest/gtest.h	/^struct Types20 {$/;"	s	namespace:testing::internal
Types21	third_party/gmock/gtest/gtest.h	/^struct Types21 {$/;"	s	namespace:testing::internal
Types22	third_party/gmock/gtest/gtest.h	/^struct Types22 {$/;"	s	namespace:testing::internal
Types23	third_party/gmock/gtest/gtest.h	/^struct Types23 {$/;"	s	namespace:testing::internal
Types24	third_party/gmock/gtest/gtest.h	/^struct Types24 {$/;"	s	namespace:testing::internal
Types25	third_party/gmock/gtest/gtest.h	/^struct Types25 {$/;"	s	namespace:testing::internal
Types26	third_party/gmock/gtest/gtest.h	/^struct Types26 {$/;"	s	namespace:testing::internal
Types27	third_party/gmock/gtest/gtest.h	/^struct Types27 {$/;"	s	namespace:testing::internal
Types28	third_party/gmock/gtest/gtest.h	/^struct Types28 {$/;"	s	namespace:testing::internal
Types29	third_party/gmock/gtest/gtest.h	/^struct Types29 {$/;"	s	namespace:testing::internal
Types3	third_party/gmock/gtest/gtest.h	/^struct Types3 {$/;"	s	namespace:testing::internal
Types30	third_party/gmock/gtest/gtest.h	/^struct Types30 {$/;"	s	namespace:testing::internal
Types31	third_party/gmock/gtest/gtest.h	/^struct Types31 {$/;"	s	namespace:testing::internal
Types32	third_party/gmock/gtest/gtest.h	/^struct Types32 {$/;"	s	namespace:testing::internal
Types33	third_party/gmock/gtest/gtest.h	/^struct Types33 {$/;"	s	namespace:testing::internal
Types34	third_party/gmock/gtest/gtest.h	/^struct Types34 {$/;"	s	namespace:testing::internal
Types35	third_party/gmock/gtest/gtest.h	/^struct Types35 {$/;"	s	namespace:testing::internal
Types36	third_party/gmock/gtest/gtest.h	/^struct Types36 {$/;"	s	namespace:testing::internal
Types37	third_party/gmock/gtest/gtest.h	/^struct Types37 {$/;"	s	namespace:testing::internal
Types38	third_party/gmock/gtest/gtest.h	/^struct Types38 {$/;"	s	namespace:testing::internal
Types39	third_party/gmock/gtest/gtest.h	/^struct Types39 {$/;"	s	namespace:testing::internal
Types4	third_party/gmock/gtest/gtest.h	/^struct Types4 {$/;"	s	namespace:testing::internal
Types40	third_party/gmock/gtest/gtest.h	/^struct Types40 {$/;"	s	namespace:testing::internal
Types41	third_party/gmock/gtest/gtest.h	/^struct Types41 {$/;"	s	namespace:testing::internal
Types42	third_party/gmock/gtest/gtest.h	/^struct Types42 {$/;"	s	namespace:testing::internal
Types43	third_party/gmock/gtest/gtest.h	/^struct Types43 {$/;"	s	namespace:testing::internal
Types44	third_party/gmock/gtest/gtest.h	/^struct Types44 {$/;"	s	namespace:testing::internal
Types45	third_party/gmock/gtest/gtest.h	/^struct Types45 {$/;"	s	namespace:testing::internal
Types46	third_party/gmock/gtest/gtest.h	/^struct Types46 {$/;"	s	namespace:testing::internal
Types47	third_party/gmock/gtest/gtest.h	/^struct Types47 {$/;"	s	namespace:testing::internal
Types48	third_party/gmock/gtest/gtest.h	/^struct Types48 {$/;"	s	namespace:testing::internal
Types49	third_party/gmock/gtest/gtest.h	/^struct Types49 {$/;"	s	namespace:testing::internal
Types5	third_party/gmock/gtest/gtest.h	/^struct Types5 {$/;"	s	namespace:testing::internal
Types50	third_party/gmock/gtest/gtest.h	/^struct Types50 {$/;"	s	namespace:testing::internal
Types6	third_party/gmock/gtest/gtest.h	/^struct Types6 {$/;"	s	namespace:testing::internal
Types7	third_party/gmock/gtest/gtest.h	/^struct Types7 {$/;"	s	namespace:testing::internal
Types8	third_party/gmock/gtest/gtest.h	/^struct Types8 {$/;"	s	namespace:testing::internal
Types9	third_party/gmock/gtest/gtest.h	/^struct Types9 {$/;"	s	namespace:testing::internal
UAUTH_Admin	src/sqlite/sqlite3.c	14928;"	d	file:
UAUTH_Fail	src/sqlite/sqlite3.c	14926;"	d	file:
UAUTH_Unknown	src/sqlite/sqlite3.c	14925;"	d	file:
UAUTH_User	src/sqlite/sqlite3.c	14927;"	d	file:
UINT16_TYPE	src/sqlite/sqlite3.c	12640;"	d	file:
UINT16_TYPE	src/sqlite/sqlite3.c	12642;"	d	file:
UINT32_TYPE	src/sqlite/sqlite3.c	12633;"	d	file:
UINT32_TYPE	src/sqlite/sqlite3.c	12635;"	d	file:
UINT8_TYPE	src/sqlite/sqlite3.c	12654;"	d	file:
UINT8_TYPE	src/sqlite/sqlite3.c	12656;"	d	file:
UInt	third_party/gmock/gtest/gtest.h	/^  typedef unsigned __int64 UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	third_party/gmock/gtest/gtest.h	/^  typedef unsigned int UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	third_party/gmock/gtest/gtest.h	/^  typedef void UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt32	third_party/gmock/gtest/gtest.h	/^typedef TypeWithSize<4>::UInt UInt32;$/;"	t	namespace:std::tr1
UInt64	third_party/gmock/gtest/gtest.h	/^typedef TypeWithSize<8>::UInt UInt64;$/;"	t	namespace:std::tr1
UNICODE_STRING_MAX_CHARS	src/sqlite/sqlite3.c	38253;"	d	file:
UNIXFILE_DELETE	src/sqlite/sqlite3.c	30382;"	d	file:
UNIXFILE_DIRSYNC	src/sqlite/sqlite3.c	30377;"	d	file:
UNIXFILE_DIRSYNC	src/sqlite/sqlite3.c	30379;"	d	file:
UNIXFILE_EXCL	src/sqlite/sqlite3.c	30373;"	d	file:
UNIXFILE_NOLOCK	src/sqlite/sqlite3.c	30384;"	d	file:
UNIXFILE_PERSIST_WAL	src/sqlite/sqlite3.c	30375;"	d	file:
UNIXFILE_PSOW	src/sqlite/sqlite3.c	30381;"	d	file:
UNIXFILE_RDONLY	src/sqlite/sqlite3.c	30374;"	d	file:
UNIXFILE_URI	src/sqlite/sqlite3.c	30383;"	d	file:
UNIXVFS	src/sqlite/sqlite3.c	37843;"	d	file:
UNIX_SHM_BASE	src/sqlite/sqlite3.c	34383;"	d	file:
UNIX_SHM_DMS	src/sqlite/sqlite3.c	34384;"	d	file:
UNKNOWN_LOCK	src/sqlite/sqlite3.c	47745;"	d	file:
UNUSED_PARAM	src/sqlite/sqlite3.c	180155;"	d	file:
UNUSED_PARAM	src/sqlite/sqlite3.c	183232;"	d	file:
UNUSED_PARAM2	src/sqlite/sqlite3.c	183236;"	d	file:
UNUSED_PARAMETER	src/sqlite/shell.c	340;"	d	file:
UNUSED_PARAMETER	src/sqlite/sqlite3.c	12992;"	d	file:
UNUSED_PARAMETER	src/sqlite/sqlite3.c	146343;"	d	file:
UNUSED_PARAMETER	src/sqlite/sqlite3.c	164827;"	d	file:
UNUSED_PARAMETER2	src/sqlite/sqlite3.c	12993;"	d	file:
UNUSED_VARIABLE_VALUE	src/sqlite/sqlite3.c	38302;"	d	file:
UPDATE_MAX_BLOBSIZE	src/sqlite/sqlite3.c	78753;"	d	file:
UPDATE_MAX_BLOBSIZE	src/sqlite/sqlite3.c	78755;"	d	file:
USEFETCH	src/sqlite/sqlite3.c	48130;"	d	file:
USEFETCH	src/sqlite/sqlite3.c	48132;"	d	file:
USE_PREAD	src/sqlite/sqlite3.c	30186;"	d	file:
USE_PREAD	src/sqlite/sqlite3.c	30190;"	d	file:
USE_PREAD64	src/sqlite/sqlite3.c	30187;"	d	file:
USE_PREAD64	src/sqlite/sqlite3.c	30189;"	d	file:
Unicode61Tokenizer	src/sqlite/sqlite3.c	/^struct Unicode61Tokenizer {$/;"	s	file:
Unicode61Tokenizer	src/sqlite/sqlite3.c	/^typedef struct Unicode61Tokenizer Unicode61Tokenizer;$/;"	t	typeref:struct:Unicode61Tokenizer	file:
UnitTest	third_party/gmock/gmock-gtest-all.cc	/^UnitTest::UnitTest() {$/;"	f	class:testing::UnitTest
UnitTest	third_party/gmock/gtest/gtest.h	/^class GTEST_API_ UnitTest {$/;"	c	namespace:testing
UnitTestImpl	third_party/gmock/gmock-gtest-all.cc	/^UnitTestImpl::UnitTestImpl(UnitTest* parent)$/;"	f	class:testing::internal::UnitTestImpl
UnitTestImpl	third_party/gmock/gmock-gtest-all.cc	/^class GTEST_API_ UnitTestImpl {$/;"	c	namespace:testing::internal	file:
UnitTestOptions	third_party/gmock/gmock-gtest-all.cc	/^class GTEST_API_ UnitTestOptions {$/;"	c	namespace:testing::internal	file:
UniversalPrint	third_party/gmock/gtest/gtest.h	/^void UniversalPrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	third_party/gmock/gmock-gtest-all.cc	/^void UniversalPrintArray(const char* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	third_party/gmock/gmock-gtest-all.cc	/^void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	third_party/gmock/gtest/gtest.h	/^void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintCharArray	third_party/gmock/gmock-gtest-all.cc	/^static void UniversalPrintCharArray($/;"	f	namespace:testing::internal
UniversalPrinter	third_party/gmock/gtest/gtest.h	/^class UniversalPrinter {$/;"	c	namespace:testing::internal
UniversalPrinter	third_party/gmock/gtest/gtest.h	/^class UniversalPrinter<T&> {$/;"	c	namespace:testing::internal
UniversalPrinter	third_party/gmock/gtest/gtest.h	/^class UniversalPrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrint	third_party/gmock/gtest/gtest.h	/^void UniversalTersePrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalTersePrintTupleFieldsToStrings	third_party/gmock/gtest/gtest.h	/^Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {$/;"	f	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter {$/;"	c	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter<T&> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter<char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter<const wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	third_party/gmock/gtest/gtest.h	/^class UniversalTersePrinter<wchar_t*> {$/;"	c	namespace:testing::internal
UnixUnusedFd	src/sqlite/sqlite3.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	src/sqlite/sqlite3.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnknownTypeException	src/include/common/exception.h	/^  UnknownTypeException(int type, std::string msg)$/;"	f	class:cmudb::UnknownTypeException
UnknownTypeException	src/include/common/exception.h	/^class UnknownTypeException : public Exception {$/;"	c	namespace:cmudb
Unlock	src/concurrency/lock_manager.cpp	/^bool LockManager::Unlock(Transaction *txn, const RID &rid) {$/;"	f	class:cmudb::LockManager
Unlock	third_party/gmock/gtest/gtest.h	/^  void Unlock() {$/;"	f	class:std::tr1::MutexBase
Unlock	third_party/gmock/gtest/gtest.h	/^  void Unlock() {}$/;"	f	class:std::tr1::Mutex
UnorderedElementsAre	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAre() {$/;"	f	namespace:testing
UnorderedElementsAre	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1) {$/;"	f	namespace:testing
UnorderedElementsAre	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2) {$/;"	f	namespace:testing
UnorderedElementsAre	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3) {$/;"	f	namespace:testing
UnorderedElementsAre	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4) {$/;"	f	namespace:testing
UnorderedElementsAre	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4,$/;"	f	namespace:testing
UnorderedElementsAreArray	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAreArray(::std::initializer_list<T> xs) {$/;"	f	namespace:testing
UnorderedElementsAreArray	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAreArray(Iter first, Iter last) {$/;"	f	namespace:testing
UnorderedElementsAreArray	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAreArray(const ::std::vector<T, A>& vec) {$/;"	f	namespace:testing
UnorderedElementsAreArray	third_party/gmock/gmock/gmock.h	/^UnorderedElementsAreArray(const T* pointer, size_t count) {$/;"	f	namespace:testing
UnorderedElementsAreArrayMatcher	third_party/gmock/gmock/gmock.h	/^  UnorderedElementsAreArrayMatcher() {}$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
UnorderedElementsAreArrayMatcher	third_party/gmock/gmock/gmock.h	/^  UnorderedElementsAreArrayMatcher(Iter first, Iter last)$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
UnorderedElementsAreArrayMatcher	third_party/gmock/gmock/gmock.h	/^class UnorderedElementsAreArrayMatcher {$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcher	third_party/gmock/gmock/gmock.h	/^  explicit UnorderedElementsAreMatcher(const MatcherTuple& args)$/;"	f	class:testing::internal::UnorderedElementsAreMatcher
UnorderedElementsAreMatcher	third_party/gmock/gmock/gmock.h	/^class UnorderedElementsAreMatcher {$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcherImpl	third_party/gmock/gmock/gmock.h	/^  UnorderedElementsAreMatcherImpl(InputIter first, InputIter last) {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
UnorderedElementsAreMatcherImpl	third_party/gmock/gmock/gmock.h	/^class UnorderedElementsAreMatcherImpl$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcherImplBase	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ UnorderedElementsAreMatcherImplBase {$/;"	c	namespace:testing::internal
UnpackedRecord	src/sqlite/sqlite3.c	/^struct UnpackedRecord {$/;"	s	file:
UnpackedRecord	src/sqlite/sqlite3.c	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord	file:
UnpinPage	src/buffer/buffer_pool_manager.cpp	/^bool BufferPoolManager::UnpinPage(page_id_t page_id, bool is_dirty) {$/;"	f	class:cmudb::BufferPoolManager
UnshuffleTests	third_party/gmock/gmock-gtest-all.cc	/^void TestCase::UnshuffleTests() {$/;"	f	class:testing::TestCase
UnshuffleTests	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::UnshuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
UntypedActionResultHolderBase	third_party/gmock/gmock/gmock.h	/^class UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
UntypedActions	third_party/gmock/gmock/gmock.h	/^  typedef std::vector<const void*> UntypedActions;$/;"	t	class:testing::internal::ExpectationBase
UntypedExpectations	third_party/gmock/gmock/gmock.h	/^  UntypedExpectations;$/;"	t	class:testing::internal::UntypedFunctionMockerBase
UntypedFunctionMockerBase	third_party/gmock/gmock-gtest-all.cc	/^UntypedFunctionMockerBase::UntypedFunctionMockerBase()$/;"	f	class:testing::internal::UntypedFunctionMockerBase
UntypedFunctionMockerBase	third_party/gmock/gmock/gmock.h	/^class GTEST_API_ UntypedFunctionMockerBase {$/;"	c	namespace:testing::internal
UntypedOnCallSpecBase	third_party/gmock/gmock/gmock.h	/^  UntypedOnCallSpecBase(const char* a_file, int a_line)$/;"	f	class:testing::internal::UntypedOnCallSpecBase
UntypedOnCallSpecBase	third_party/gmock/gmock/gmock.h	/^class UntypedOnCallSpecBase {$/;"	c	namespace:testing::internal
UntypedOnCallSpecs	third_party/gmock/gmock/gmock.h	/^  typedef std::vector<const void*> UntypedOnCallSpecs;$/;"	t	class:testing::internal::UntypedFunctionMockerBase
UntypedPerformAction	third_party/gmock/gmock/gmock.h	/^  virtual UntypedActionResultHolderBase* UntypedPerformAction($/;"	f	class:testing::internal::FunctionMockerBase
UntypedPerformDefaultAction	third_party/gmock/gmock/gmock.h	/^  virtual UntypedActionResultHolderBase* UntypedPerformDefaultAction($/;"	f	class:testing::internal::FunctionMockerBase
UntypedPrintArgs	third_party/gmock/gmock/gmock.h	/^  virtual void UntypedPrintArgs(const void* untyped_args,$/;"	f	class:testing::internal::FunctionMockerBase
UntypedTimes	third_party/gmock/gmock-gtest-all.cc	/^void ExpectationBase::UntypedTimes(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase
Unused	third_party/gmock/gmock/gmock.h	/^typedef internal::IgnoredValue Unused;$/;"	t	namespace:testing
UpdateRecord	src/page/header_page.cpp	/^bool HeaderPage::UpdateRecord(const std::string &name,$/;"	f	class:cmudb::HeaderPage
UpdateRootPageId	src/index/b_plus_tree.cpp	/^void BPLUSTREE_TYPE::UpdateRootPageId(int insert_record) {$/;"	f	class:cmudb::BPLUSTREE_TYPE
UpdateTuple	src/include/vtable/virtual_table.h	/^  inline bool UpdateTuple(const Tuple &tuple, const RID &rid) {$/;"	f	class:cmudb::VirtualTable
UpdateTuple	src/page/table_page.cpp	/^bool TablePage::UpdateTuple(const Tuple &new_tuple, Tuple &old_tuple,$/;"	f	class:cmudb::TablePage
UpdateTuple	src/table/table_heap.cpp	/^bool TableHeap::UpdateTuple(const Tuple &tuple, const RID &rid,$/;"	f	class:cmudb::TableHeap
UpperToLower	src/sqlite/sqlite3.c	28354;"	d	file:
UrlEncode	third_party/gmock/gmock-gtest-all.cc	/^string StreamingListener::UrlEncode(const char* str) {$/;"	f	class:testing::internal::StreamingListener
UserThreadFunc	third_party/gmock/gtest/gtest.h	/^  typedef void (*UserThreadFunc)(T);$/;"	t	class:std::tr1::ThreadWithParam
Utf16ToAnsi	third_party/gmock/gmock-gtest-all.cc	/^const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {$/;"	f	class:testing::internal::String
Utf8Read	src/sqlite/sqlite3.c	106637;"	d	file:
Utf8Read	src/sqlite/sqlite3.c	106639;"	d	file:
VARCHAR	src/include/type/type_id.h	/^  VARCHAR,$/;"	e	enum:cmudb::TypeId
VARLEN_COMPARE_FUNC	src/type/varlen_type.cpp	11;"	d	file:
VDBE_DISPLAY_P4	src/sqlite/sqlite3.c	18390;"	d	file:
VDBE_DISPLAY_P4	src/sqlite/sqlite3.c	18392;"	d	file:
VDBE_MAGIC_DEAD	src/sqlite/sqlite3.c	18774;"	d	file:
VDBE_MAGIC_HALT	src/sqlite/sqlite3.c	18772;"	d	file:
VDBE_MAGIC_INIT	src/sqlite/sqlite3.c	18770;"	d	file:
VDBE_MAGIC_RESET	src/sqlite/sqlite3.c	18773;"	d	file:
VDBE_MAGIC_RUN	src/sqlite/sqlite3.c	18771;"	d	file:
VDBE_OFFSET_LINENO	src/sqlite/sqlite3.c	13954;"	d	file:
VDBE_OFFSET_LINENO	src/sqlite/sqlite3.c	13960;"	d	file:
VFUNCTION	src/sqlite/sqlite3.c	15299;"	d	file:
VList	src/sqlite/sqlite3.c	/^typedef int VList;$/;"	t	file:
VTAB_SCHEMA	src/sqlite/sqlite3.c	174814;"	d	file:
VTable	src/sqlite/sqlite3.c	/^struct VTable {$/;"	s	file:
VTable	src/sqlite/sqlite3.c	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable	file:
VVA_ONLY	src/sqlite/sqlite3.c	12109;"	d	file:
VVA_ONLY	src/sqlite/sqlite3.c	12111;"	d	file:
Val	src/include/type/value.h	/^  union Val {$/;"	u	class:cmudb::Value
ValMod	src/include/type/numeric_type.h	/^  static inline double ValMod(double x, double y) {$/;"	f	class:cmudb::NumericType
ValidateRegex	third_party/gmock/gmock-gtest-all.cc	/^bool ValidateRegex(const char* regex) {$/;"	f	namespace:testing::internal
ValidateTestProperty	third_party/gmock/gmock-gtest-all.cc	/^bool TestResult::ValidateTestProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
ValidateTestPropertyName	third_party/gmock/gmock-gtest-all.cc	/^bool ValidateTestPropertyName(const std::string& property_name,$/;"	f	namespace:testing
Value	src/include/type/value.h	/^  Value(const TypeId type) : manage_data_(false), type_id_(type) {$/;"	f	class:cmudb::Value
Value	src/include/type/value.h	/^class Value {$/;"	c	namespace:cmudb
Value	src/type/value.cpp	/^Value::Value(TypeId type, const char *data, uint32_t len, bool manage_data)$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, const std::string &data) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, double d) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, float f) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, int16_t i) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, int32_t i) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, int64_t i) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, int8_t i) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(TypeId type, uint64_t i) : Value(type) {$/;"	f	class:cmudb::Value
Value	src/type/value.cpp	/^Value::Value(const Value &other) {$/;"	f	class:cmudb::Value
Value	third_party/gmock/gmock/gmock.h	/^inline bool Value(const T& value, M matcher) {$/;"	f	namespace:testing
ValueArray1	third_party/gmock/gtest/gtest.h	/^  explicit ValueArray1(T1 v1) : v1_(v1) {}$/;"	f	class:testing::internal::ValueArray1
ValueArray1	third_party/gmock/gtest/gtest.h	/^class ValueArray1 {$/;"	c	namespace:testing::internal
ValueArray10	third_party/gmock/gtest/gtest.h	/^  ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray10
ValueArray10	third_party/gmock/gtest/gtest.h	/^class ValueArray10 {$/;"	c	namespace:testing::internal
ValueArray11	third_party/gmock/gtest/gtest.h	/^  ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray11
ValueArray11	third_party/gmock/gtest/gtest.h	/^class ValueArray11 {$/;"	c	namespace:testing::internal
ValueArray12	third_party/gmock/gtest/gtest.h	/^  ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray12
ValueArray12	third_party/gmock/gtest/gtest.h	/^class ValueArray12 {$/;"	c	namespace:testing::internal
ValueArray13	third_party/gmock/gtest/gtest.h	/^  ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray13
ValueArray13	third_party/gmock/gtest/gtest.h	/^class ValueArray13 {$/;"	c	namespace:testing::internal
ValueArray14	third_party/gmock/gtest/gtest.h	/^  ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray14
ValueArray14	third_party/gmock/gtest/gtest.h	/^class ValueArray14 {$/;"	c	namespace:testing::internal
ValueArray15	third_party/gmock/gtest/gtest.h	/^  ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray15
ValueArray15	third_party/gmock/gtest/gtest.h	/^class ValueArray15 {$/;"	c	namespace:testing::internal
ValueArray16	third_party/gmock/gtest/gtest.h	/^  ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray16
ValueArray16	third_party/gmock/gtest/gtest.h	/^class ValueArray16 {$/;"	c	namespace:testing::internal
ValueArray17	third_party/gmock/gtest/gtest.h	/^  ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray17
ValueArray17	third_party/gmock/gtest/gtest.h	/^class ValueArray17 {$/;"	c	namespace:testing::internal
ValueArray18	third_party/gmock/gtest/gtest.h	/^  ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray18
ValueArray18	third_party/gmock/gtest/gtest.h	/^class ValueArray18 {$/;"	c	namespace:testing::internal
ValueArray19	third_party/gmock/gtest/gtest.h	/^  ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray19
ValueArray19	third_party/gmock/gtest/gtest.h	/^class ValueArray19 {$/;"	c	namespace:testing::internal
ValueArray2	third_party/gmock/gtest/gtest.h	/^  ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) {}$/;"	f	class:testing::internal::ValueArray2
ValueArray2	third_party/gmock/gtest/gtest.h	/^class ValueArray2 {$/;"	c	namespace:testing::internal
ValueArray20	third_party/gmock/gtest/gtest.h	/^  ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray20
ValueArray20	third_party/gmock/gtest/gtest.h	/^class ValueArray20 {$/;"	c	namespace:testing::internal
ValueArray21	third_party/gmock/gtest/gtest.h	/^  ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray21
ValueArray21	third_party/gmock/gtest/gtest.h	/^class ValueArray21 {$/;"	c	namespace:testing::internal
ValueArray22	third_party/gmock/gtest/gtest.h	/^  ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray22
ValueArray22	third_party/gmock/gtest/gtest.h	/^class ValueArray22 {$/;"	c	namespace:testing::internal
ValueArray23	third_party/gmock/gtest/gtest.h	/^  ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray23
ValueArray23	third_party/gmock/gtest/gtest.h	/^class ValueArray23 {$/;"	c	namespace:testing::internal
ValueArray24	third_party/gmock/gtest/gtest.h	/^  ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray24
ValueArray24	third_party/gmock/gtest/gtest.h	/^class ValueArray24 {$/;"	c	namespace:testing::internal
ValueArray25	third_party/gmock/gtest/gtest.h	/^  ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray25
ValueArray25	third_party/gmock/gtest/gtest.h	/^class ValueArray25 {$/;"	c	namespace:testing::internal
ValueArray26	third_party/gmock/gtest/gtest.h	/^  ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray26
ValueArray26	third_party/gmock/gtest/gtest.h	/^class ValueArray26 {$/;"	c	namespace:testing::internal
ValueArray27	third_party/gmock/gtest/gtest.h	/^  ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray27
ValueArray27	third_party/gmock/gtest/gtest.h	/^class ValueArray27 {$/;"	c	namespace:testing::internal
ValueArray28	third_party/gmock/gtest/gtest.h	/^  ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray28
ValueArray28	third_party/gmock/gtest/gtest.h	/^class ValueArray28 {$/;"	c	namespace:testing::internal
ValueArray29	third_party/gmock/gtest/gtest.h	/^  ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray29
ValueArray29	third_party/gmock/gtest/gtest.h	/^class ValueArray29 {$/;"	c	namespace:testing::internal
ValueArray3	third_party/gmock/gtest/gtest.h	/^  ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) {}$/;"	f	class:testing::internal::ValueArray3
ValueArray3	third_party/gmock/gtest/gtest.h	/^class ValueArray3 {$/;"	c	namespace:testing::internal
ValueArray30	third_party/gmock/gtest/gtest.h	/^  ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray30
ValueArray30	third_party/gmock/gtest/gtest.h	/^class ValueArray30 {$/;"	c	namespace:testing::internal
ValueArray31	third_party/gmock/gtest/gtest.h	/^  ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray31
ValueArray31	third_party/gmock/gtest/gtest.h	/^class ValueArray31 {$/;"	c	namespace:testing::internal
ValueArray32	third_party/gmock/gtest/gtest.h	/^  ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray32
ValueArray32	third_party/gmock/gtest/gtest.h	/^class ValueArray32 {$/;"	c	namespace:testing::internal
ValueArray33	third_party/gmock/gtest/gtest.h	/^  ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray33
ValueArray33	third_party/gmock/gtest/gtest.h	/^class ValueArray33 {$/;"	c	namespace:testing::internal
ValueArray34	third_party/gmock/gtest/gtest.h	/^  ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray34
ValueArray34	third_party/gmock/gtest/gtest.h	/^class ValueArray34 {$/;"	c	namespace:testing::internal
ValueArray35	third_party/gmock/gtest/gtest.h	/^  ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray35
ValueArray35	third_party/gmock/gtest/gtest.h	/^class ValueArray35 {$/;"	c	namespace:testing::internal
ValueArray36	third_party/gmock/gtest/gtest.h	/^  ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray36
ValueArray36	third_party/gmock/gtest/gtest.h	/^class ValueArray36 {$/;"	c	namespace:testing::internal
ValueArray37	third_party/gmock/gtest/gtest.h	/^  ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray37
ValueArray37	third_party/gmock/gtest/gtest.h	/^class ValueArray37 {$/;"	c	namespace:testing::internal
ValueArray38	third_party/gmock/gtest/gtest.h	/^  ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray38
ValueArray38	third_party/gmock/gtest/gtest.h	/^class ValueArray38 {$/;"	c	namespace:testing::internal
ValueArray39	third_party/gmock/gtest/gtest.h	/^  ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray39
ValueArray39	third_party/gmock/gtest/gtest.h	/^class ValueArray39 {$/;"	c	namespace:testing::internal
ValueArray4	third_party/gmock/gtest/gtest.h	/^  ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray4
ValueArray4	third_party/gmock/gtest/gtest.h	/^class ValueArray4 {$/;"	c	namespace:testing::internal
ValueArray40	third_party/gmock/gtest/gtest.h	/^  ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray40
ValueArray40	third_party/gmock/gtest/gtest.h	/^class ValueArray40 {$/;"	c	namespace:testing::internal
ValueArray41	third_party/gmock/gtest/gtest.h	/^  ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray41
ValueArray41	third_party/gmock/gtest/gtest.h	/^class ValueArray41 {$/;"	c	namespace:testing::internal
ValueArray42	third_party/gmock/gtest/gtest.h	/^  ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray42
ValueArray42	third_party/gmock/gtest/gtest.h	/^class ValueArray42 {$/;"	c	namespace:testing::internal
ValueArray43	third_party/gmock/gtest/gtest.h	/^  ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray43
ValueArray43	third_party/gmock/gtest/gtest.h	/^class ValueArray43 {$/;"	c	namespace:testing::internal
ValueArray44	third_party/gmock/gtest/gtest.h	/^  ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray44
ValueArray44	third_party/gmock/gtest/gtest.h	/^class ValueArray44 {$/;"	c	namespace:testing::internal
ValueArray45	third_party/gmock/gtest/gtest.h	/^  ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray45
ValueArray45	third_party/gmock/gtest/gtest.h	/^class ValueArray45 {$/;"	c	namespace:testing::internal
ValueArray46	third_party/gmock/gtest/gtest.h	/^  ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray46
ValueArray46	third_party/gmock/gtest/gtest.h	/^class ValueArray46 {$/;"	c	namespace:testing::internal
ValueArray47	third_party/gmock/gtest/gtest.h	/^  ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray47
ValueArray47	third_party/gmock/gtest/gtest.h	/^class ValueArray47 {$/;"	c	namespace:testing::internal
ValueArray48	third_party/gmock/gtest/gtest.h	/^  ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray48
ValueArray48	third_party/gmock/gtest/gtest.h	/^class ValueArray48 {$/;"	c	namespace:testing::internal
ValueArray49	third_party/gmock/gtest/gtest.h	/^  ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray49
ValueArray49	third_party/gmock/gtest/gtest.h	/^class ValueArray49 {$/;"	c	namespace:testing::internal
ValueArray5	third_party/gmock/gtest/gtest.h	/^  ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray5
ValueArray5	third_party/gmock/gtest/gtest.h	/^class ValueArray5 {$/;"	c	namespace:testing::internal
ValueArray50	third_party/gmock/gtest/gtest.h	/^  ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray50
ValueArray50	third_party/gmock/gtest/gtest.h	/^class ValueArray50 {$/;"	c	namespace:testing::internal
ValueArray6	third_party/gmock/gtest/gtest.h	/^  ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),$/;"	f	class:testing::internal::ValueArray6
ValueArray6	third_party/gmock/gtest/gtest.h	/^class ValueArray6 {$/;"	c	namespace:testing::internal
ValueArray7	third_party/gmock/gtest/gtest.h	/^  ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),$/;"	f	class:testing::internal::ValueArray7
ValueArray7	third_party/gmock/gtest/gtest.h	/^class ValueArray7 {$/;"	c	namespace:testing::internal
ValueArray8	third_party/gmock/gtest/gtest.h	/^  ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	class:testing::internal::ValueArray8
ValueArray8	third_party/gmock/gtest/gtest.h	/^class ValueArray8 {$/;"	c	namespace:testing::internal
ValueArray9	third_party/gmock/gtest/gtest.h	/^  ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	class:testing::internal::ValueArray9
ValueArray9	third_party/gmock/gtest/gtest.h	/^class ValueArray9 {$/;"	c	namespace:testing::internal
ValueAt	src/page/b_plus_tree_internal_page.cpp	/^ValueType B_PLUS_TREE_INTERNAL_PAGE_TYPE::ValueAt(int index) const $/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
ValueHolder	third_party/gmock/gtest/gtest.h	/^    explicit ValueHolder(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
ValueHolder	third_party/gmock/gtest/gtest.h	/^  class ValueHolder : public ThreadLocalValueHolderBase {$/;"	c	class:std::tr1::ThreadLocal
ValueIndex	src/page/b_plus_tree_internal_page.cpp	/^int B_PLUS_TREE_INTERNAL_PAGE_TYPE::ValueIndex(const ValueType &value) const $/;"	f	class:cmudb::B_PLUS_TREE_INTERNAL_PAGE_TYPE
ValueNewStat4Ctx	src/sqlite/sqlite3.c	/^struct ValueNewStat4Ctx {$/;"	s	file:
ValueOutOfRangeException	src/include/common/exception.h	/^  ValueOutOfRangeException(const TypeId varType, const size_t length)$/;"	f	class:cmudb::ValueOutOfRangeException
ValueOutOfRangeException	src/include/common/exception.h	/^  ValueOutOfRangeException(const double value, const TypeId origType,$/;"	f	class:cmudb::ValueOutOfRangeException
ValueOutOfRangeException	src/include/common/exception.h	/^  ValueOutOfRangeException(const int64_t value, const TypeId origType,$/;"	f	class:cmudb::ValueOutOfRangeException
ValueOutOfRangeException	src/include/common/exception.h	/^class ValueOutOfRangeException : public Exception {$/;"	c	namespace:cmudb
Values	third_party/gmock/gtest/gtest.h	/^    T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^    T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray1<T1> Values(T1 v1) {$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) {$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) {$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	third_party/gmock/gtest/gtest.h	/^internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
ValuesIn	third_party/gmock/gtest/gtest.h	/^ValuesIn(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:testing
ValuesIn	third_party/gmock/gtest/gtest.h	/^internal::ParamGenerator<typename Container::value_type> ValuesIn($/;"	f	namespace:testing
ValuesInIteratorRangeGenerator	third_party/gmock/gtest/gtest.h	/^  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
ValuesInIteratorRangeGenerator	third_party/gmock/gtest/gtest.h	/^class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
VariadicMatcher	third_party/gmock/gmock/gmock.h	/^  VariadicMatcher(const Args&... matchers)  \/\/ NOLINT$/;"	f	class:testing::internal::VariadicMatcher
VariadicMatcher	third_party/gmock/gmock/gmock.h	/^class VariadicMatcher {$/;"	c	namespace:testing::internal
VarlenType	src/include/type/varlen_type.h	/^class VarlenType : public Type {$/;"	c	namespace:cmudb
VarlenType	src/type/varlen_type.cpp	/^VarlenType::VarlenType(TypeId type) : Type(type) {}$/;"	f	class:cmudb::VarlenType
Vdbe	src/sqlite/sqlite3.c	/^struct Vdbe {$/;"	s	file:
Vdbe	src/sqlite/sqlite3.c	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe	file:
VdbeBranchTaken	src/sqlite/sqlite3.c	78775;"	d	file:
VdbeBranchTaken	src/sqlite/sqlite3.c	78777;"	d	file:
VdbeComment	src/sqlite/sqlite3.c	13912;"	d	file:
VdbeComment	src/sqlite/sqlite3.c	13921;"	d	file:
VdbeCoverage	src/sqlite/sqlite3.c	13950;"	d	file:
VdbeCoverage	src/sqlite/sqlite3.c	13956;"	d	file:
VdbeCoverageAlwaysTaken	src/sqlite/sqlite3.c	13952;"	d	file:
VdbeCoverageAlwaysTaken	src/sqlite/sqlite3.c	13958;"	d	file:
VdbeCoverageIf	src/sqlite/sqlite3.c	13951;"	d	file:
VdbeCoverageIf	src/sqlite/sqlite3.c	13957;"	d	file:
VdbeCoverageNeverTaken	src/sqlite/sqlite3.c	13953;"	d	file:
VdbeCoverageNeverTaken	src/sqlite/sqlite3.c	13959;"	d	file:
VdbeCursor	src/sqlite/sqlite3.c	/^struct VdbeCursor {$/;"	s	file:
VdbeCursor	src/sqlite/sqlite3.c	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor	file:
VdbeFrame	src/sqlite/sqlite3.c	/^struct VdbeFrame {$/;"	s	file:
VdbeFrame	src/sqlite/sqlite3.c	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame	file:
VdbeFrameMem	src/sqlite/sqlite3.c	18536;"	d	file:
VdbeMemDynamic	src/sqlite/sqlite3.c	18620;"	d	file:
VdbeModuleComment	src/sqlite/sqlite3.c	13916;"	d	file:
VdbeModuleComment	src/sqlite/sqlite3.c	13918;"	d	file:
VdbeModuleComment	src/sqlite/sqlite3.c	13923;"	d	file:
VdbeNoopComment	src/sqlite/sqlite3.c	13914;"	d	file:
VdbeNoopComment	src/sqlite/sqlite3.c	13922;"	d	file:
VdbeOp	src/sqlite/sqlite3.c	/^struct VdbeOp {$/;"	s	file:
VdbeOp	src/sqlite/sqlite3.c	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp	file:
VdbeOpIter	src/sqlite/sqlite3.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	src/sqlite/sqlite3.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpList	src/sqlite/sqlite3.c	/^struct VdbeOpList {$/;"	s	file:
VdbeOpList	src/sqlite/sqlite3.c	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList	file:
VdbeSorter	src/sqlite/sqlite3.c	/^struct VdbeSorter {$/;"	s	file:
VdbeSorter	src/sqlite/sqlite3.c	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter	file:
VerifyAllElementsAndMatchersAreMatched	third_party/gmock/gmock-gtest-all.cc	/^VerifyAllElementsAndMatchersAreMatched($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
VerifyRegisteredTestNames	third_party/gmock/gmock-gtest-all.cc	/^const char* TypedTestCasePState::VerifyRegisteredTestNames($/;"	f	class:testing::internal::TypedTestCasePState
Victim	src/buffer/lru_replacer.cpp	/^template <typename T> bool LRUReplacer<T>::Victim(T &value) {$/;"	f	class:cmudb::LRUReplacer
View	third_party/gmock/gmock/gmock.h	/^  typedef StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::QuantifierMatcherImpl
View	third_party/gmock/gmock/gmock.h	/^  typedef internal::StlContainerView<Container> View;$/;"	t	class:testing::internal::ContainerEqMatcher
View	third_party/gmock/gmock/gmock.h	/^  typedef internal::StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
View	third_party/gmock/gmock/gmock.h	/^  typedef internal::StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
VirtualTable	src/include/vtable/virtual_table.h	/^  VirtualTable(Schema *schema, BufferPoolManager *buffer_pool_manager,$/;"	f	class:cmudb::VirtualTable
VirtualTable	src/include/vtable/virtual_table.h	/^class VirtualTable {$/;"	c	namespace:cmudb
VisibleRowid	src/sqlite/sqlite3.c	15584;"	d	file:
VoidResult	third_party/gmock/gmock/gmock.h	/^    typedef typename Function<F>::MakeResultVoid VoidResult;$/;"	t	class:testing::internal::DoBothAction::Impl
VtabBegin	src/vtable/virtual_table.cpp	/^int VtabBegin(sqlite3_vtab *pVTab) {$/;"	f	namespace:cmudb
VtabBestIndex	src/vtable/virtual_table.cpp	/^int VtabBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo) {$/;"	f	namespace:cmudb
VtabClose	src/vtable/virtual_table.cpp	/^int VtabClose(sqlite3_vtab_cursor *cur) {$/;"	f	namespace:cmudb
VtabColumn	src/vtable/virtual_table.cpp	/^int VtabColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i) {$/;"	f	namespace:cmudb
VtabCommit	src/vtable/virtual_table.cpp	/^int VtabCommit(sqlite3_vtab *pVTab) {$/;"	f	namespace:cmudb
VtabConnect	src/vtable/virtual_table.cpp	/^int VtabConnect(sqlite3 *db, void *pAux, int argc, const char *const *argv,$/;"	f	namespace:cmudb
VtabCreate	src/vtable/virtual_table.cpp	/^int VtabCreate(sqlite3 *db, void *pAux, int argc, const char *const *argv,$/;"	f	namespace:cmudb
VtabCtx	src/sqlite/sqlite3.c	/^struct VtabCtx {$/;"	s	file:
VtabCtx	src/sqlite/sqlite3.c	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx	file:
VtabDisconnect	src/vtable/virtual_table.cpp	/^int VtabDisconnect(sqlite3_vtab *pVtab) {$/;"	f	namespace:cmudb
VtabEof	src/vtable/virtual_table.cpp	/^int VtabEof(sqlite3_vtab_cursor *cur) {$/;"	f	namespace:cmudb
VtabFilter	src/vtable/virtual_table.cpp	/^int VtabFilter(sqlite3_vtab_cursor *pVtabCursor, int idxNum, const char *idxStr,$/;"	f	namespace:cmudb
VtabNext	src/vtable/virtual_table.cpp	/^int VtabNext(sqlite3_vtab_cursor *cur) {$/;"	f	namespace:cmudb
VtabOpen	src/vtable/virtual_table.cpp	/^int VtabOpen(sqlite3_vtab *pVtab, sqlite3_vtab_cursor **ppCursor) {$/;"	f	namespace:cmudb
VtabRowid	src/vtable/virtual_table.cpp	/^int VtabRowid(sqlite3_vtab_cursor *cur, sqlite3_int64 *pRowid) {$/;"	f	namespace:cmudb
VtabUpdate	src/vtable/virtual_table.cpp	/^int VtabUpdate(sqlite3_vtab *pVTab, int argc, sqlite3_value **argv,$/;"	f	namespace:cmudb
VtableModule	src/vtable/virtual_table.cpp	/^sqlite3_module VtableModule = {$/;"	m	namespace:cmudb	file:
WALINDEX_HDR_SIZE	src/sqlite/sqlite3.c	55284;"	d	file:
WALINDEX_LOCK_OFFSET	src/sqlite/sqlite3.c	55283;"	d	file:
WALINDEX_MAX_VERSION	src/sqlite/sqlite3.c	55161;"	d	file:
WALINDEX_PGSZ	src/sqlite/sqlite3.c	55416;"	d	file:
WALTRACE	src/sqlite/sqlite3.c	55142;"	d	file:
WALTRACE	src/sqlite/sqlite3.c	55144;"	d	file:
WAL_ALL_BUT_WRITE	src/sqlite/sqlite3.c	55169;"	d	file:
WAL_CKPT_LOCK	src/sqlite/sqlite3.c	55170;"	d	file:
WAL_EXCLUSIVE_MODE	src/sqlite/sqlite3.c	55353;"	d	file:
WAL_FRAME_HDRSIZE	src/sqlite/sqlite3.c	55287;"	d	file:
WAL_HDRSIZE	src/sqlite/sqlite3.c	55291;"	d	file:
WAL_HEAPMEMORY_MODE	src/sqlite/sqlite3.c	55354;"	d	file:
WAL_LOCK_CKPT	src/sqlite/sqlite3.c	170137;"	d	file:
WAL_LOCK_READ0	src/sqlite/sqlite3.c	170138;"	d	file:
WAL_LOCK_WRITE	src/sqlite/sqlite3.c	170136;"	d	file:
WAL_MAGIC	src/sqlite/sqlite3.c	55302;"	d	file:
WAL_MAX_VERSION	src/sqlite/sqlite3.c	55160;"	d	file:
WAL_NORMAL_MODE	src/sqlite/sqlite3.c	55352;"	d	file:
WAL_NREADER	src/sqlite/sqlite3.c	55173;"	d	file:
WAL_RDONLY	src/sqlite/sqlite3.c	55360;"	d	file:
WAL_RDWR	src/sqlite/sqlite3.c	55359;"	d	file:
WAL_READ_LOCK	src/sqlite/sqlite3.c	55172;"	d	file:
WAL_RECOVER_LOCK	src/sqlite/sqlite3.c	55171;"	d	file:
WAL_RETRY	src/sqlite/sqlite3.c	57021;"	d	file:
WAL_SAVEPOINT_NDATA	src/sqlite/sqlite3.c	47260;"	d	file:
WAL_SHM_RDONLY	src/sqlite/sqlite3.c	55361;"	d	file:
WAL_SYNC_TRANSACTIONS	src/sqlite/sqlite3.c	47235;"	d	file:
WAL_WRITE_LOCK	src/sqlite/sqlite3.c	55168;"	d	file:
WHERETRACE	src/sqlite/sqlite3.c	126853;"	d	file:
WHERETRACE	src/sqlite/sqlite3.c	126856;"	d	file:
WHERETRACE_ENABLED	src/sqlite/sqlite3.c	126854;"	d	file:
WHERE_AUTO_INDEX	src/sqlite/sqlite3.c	127382;"	d	file:
WHERE_BOTH_LIMIT	src/sqlite/sqlite3.c	127374;"	d	file:
WHERE_BTM_LIMIT	src/sqlite/sqlite3.c	127373;"	d	file:
WHERE_COLUMN_EQ	src/sqlite/sqlite3.c	127367;"	d	file:
WHERE_COLUMN_IN	src/sqlite/sqlite3.c	127369;"	d	file:
WHERE_COLUMN_NULL	src/sqlite/sqlite3.c	127370;"	d	file:
WHERE_COLUMN_RANGE	src/sqlite/sqlite3.c	127368;"	d	file:
WHERE_CONSTRAINT	src/sqlite/sqlite3.c	127371;"	d	file:
WHERE_DISTINCTBY	src/sqlite/sqlite3.c	16266;"	d	file:
WHERE_DISTINCT_NOOP	src/sqlite/sqlite3.c	16278;"	d	file:
WHERE_DISTINCT_ORDERED	src/sqlite/sqlite3.c	16280;"	d	file:
WHERE_DISTINCT_UNIQUE	src/sqlite/sqlite3.c	16279;"	d	file:
WHERE_DISTINCT_UNORDERED	src/sqlite/sqlite3.c	16281;"	d	file:
WHERE_DUPLICATES_OK	src/sqlite/sqlite3.c	16262;"	d	file:
WHERE_GROUPBY	src/sqlite/sqlite3.c	16265;"	d	file:
WHERE_IDX_ONLY	src/sqlite/sqlite3.c	127375;"	d	file:
WHERE_INDEXED	src/sqlite/sqlite3.c	127377;"	d	file:
WHERE_IN_ABLE	src/sqlite/sqlite3.c	127379;"	d	file:
WHERE_IPK	src/sqlite/sqlite3.c	127376;"	d	file:
WHERE_LOOP_XFER_SZ	src/sqlite/sqlite3.c	126969;"	d	file:
WHERE_MULTI_OR	src/sqlite/sqlite3.c	127381;"	d	file:
WHERE_ONEPASS_DESIRED	src/sqlite/sqlite3.c	16260;"	d	file:
WHERE_ONEPASS_MULTIROW	src/sqlite/sqlite3.c	16261;"	d	file:
WHERE_ONEROW	src/sqlite/sqlite3.c	127380;"	d	file:
WHERE_ORDERBY_LIMIT	src/sqlite/sqlite3.c	16270;"	d	file:
WHERE_ORDERBY_MAX	src/sqlite/sqlite3.c	16259;"	d	file:
WHERE_ORDERBY_MIN	src/sqlite/sqlite3.c	16258;"	d	file:
WHERE_ORDERBY_NORMAL	src/sqlite/sqlite3.c	16257;"	d	file:
WHERE_OR_SUBCLAUSE	src/sqlite/sqlite3.c	16263;"	d	file:
WHERE_PARTIALIDX	src/sqlite/sqlite3.c	127385;"	d	file:
WHERE_SEEK_TABLE	src/sqlite/sqlite3.c	16269;"	d	file:
WHERE_SEEK_UNIQ_TABLE	src/sqlite/sqlite3.c	16271;"	d	file:
WHERE_SKIPSCAN	src/sqlite/sqlite3.c	127383;"	d	file:
WHERE_SORTBYGROUP	src/sqlite/sqlite3.c	16268;"	d	file:
WHERE_TOP_LIMIT	src/sqlite/sqlite3.c	127372;"	d	file:
WHERE_UNQ_WANTED	src/sqlite/sqlite3.c	127384;"	d	file:
WHERE_USE_LIMIT	src/sqlite/sqlite3.c	16273;"	d	file:
WHERE_VIRTUALTABLE	src/sqlite/sqlite3.c	127378;"	d	file:
WHERE_WANT_DISTINCT	src/sqlite/sqlite3.c	16267;"	d	file:
WINCE_DELETION_ATTEMPTS	src/sqlite/sqlite3.c	40788;"	d	file:
WINFILE_PERSIST_WAL	src/sqlite/sqlite3.c	38434;"	d	file:
WINFILE_PSOW	src/sqlite/sqlite3.c	38435;"	d	file:
WINFILE_RDONLY	src/sqlite/sqlite3.c	38433;"	d	file:
WINMEM_MAGIC1	src/sqlite/sqlite3.c	38575;"	d	file:
WINMEM_MAGIC2	src/sqlite/sqlite3.c	38576;"	d	file:
WINSHM_RDLCK	src/sqlite/sqlite3.c	41849;"	d	file:
WINSHM_UNLCK	src/sqlite/sqlite3.c	41848;"	d	file:
WINSHM_WRLCK	src/sqlite/sqlite3.c	41850;"	d	file:
WIN_SHM_BASE	src/sqlite/sqlite3.c	41842;"	d	file:
WIN_SHM_DMS	src/sqlite/sqlite3.c	41843;"	d	file:
WLatch	src/include/page/page.h	/^  inline void WLatch() { rwlatch_.WLock(); }$/;"	f	class:cmudb::Page
WLock	src/include/common/rwmutex.h	/^  void WLock() {$/;"	f	class:cmudb::RWMutex
WO_ALL	src/sqlite/sqlite3.c	127359;"	d	file:
WO_AND	src/sqlite/sqlite3.c	127355;"	d	file:
WO_EQ	src/sqlite/sqlite3.c	127346;"	d	file:
WO_EQUIV	src/sqlite/sqlite3.c	127356;"	d	file:
WO_GE	src/sqlite/sqlite3.c	127350;"	d	file:
WO_GT	src/sqlite/sqlite3.c	127349;"	d	file:
WO_IN	src/sqlite/sqlite3.c	127345;"	d	file:
WO_IS	src/sqlite/sqlite3.c	127352;"	d	file:
WO_ISNULL	src/sqlite/sqlite3.c	127353;"	d	file:
WO_LE	src/sqlite/sqlite3.c	127348;"	d	file:
WO_LT	src/sqlite/sqlite3.c	127347;"	d	file:
WO_MATCH	src/sqlite/sqlite3.c	127351;"	d	file:
WO_NOOP	src/sqlite/sqlite3.c	127357;"	d	file:
WO_OR	src/sqlite/sqlite3.c	127354;"	d	file:
WO_SINGLE	src/sqlite/sqlite3.c	127360;"	d	file:
WRC_Abort	src/sqlite/sqlite3.c	17009;"	d	file:
WRC_Continue	src/sqlite/sqlite3.c	17007;"	d	file:
WRC_Prune	src/sqlite/sqlite3.c	17008;"	d	file:
WRITE_LOCK	src/sqlite/sqlite3.c	58772;"	d	file:
WRITE_UTF16BE	src/sqlite/sqlite3.c	27640;"	d	file:
WRITE_UTF16LE	src/sqlite/sqlite3.c	27628;"	d	file:
WRITE_UTF8	src/sqlite/sqlite3.c	164042;"	d	file:
WRITE_UTF8	src/sqlite/sqlite3.c	201245;"	d	file:
WRITE_UTF8	src/sqlite/sqlite3.c	27608;"	d	file:
WType	src/include/concurrency/transaction.h	/^enum class WType { INSERT = 0, DELETE, UPDATE };$/;"	c	namespace:cmudb
WUnlatch	src/include/page/page.h	/^  inline void WUnlatch() { rwlatch_.WUnlock(); }$/;"	f	class:cmudb::Page
WUnlock	src/include/common/rwmutex.h	/^  void WUnlock() {$/;"	f	class:cmudb::RWMutex
Wait	third_party/gmock/gmock-gtest-all.cc	/^int ForkingDeathTest::Wait() {$/;"	f	class:testing::internal::ForkingDeathTest
Wait	third_party/gmock/gmock-gtest-all.cc	/^int WindowsDeathTest::Wait() {$/;"	f	class:testing::internal::WindowsDeathTest
WaitForNotification	third_party/gmock/gtest/gtest.h	/^  void WaitForNotification() {$/;"	f	class:std::tr1::Notification
Wal	src/sqlite/sqlite3.c	/^struct Wal {$/;"	s	file:
Wal	src/sqlite/sqlite3.c	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal	file:
WalCkptInfo	src/sqlite/sqlite3.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	src/sqlite/sqlite3.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalIndexHdr	src/sqlite/sqlite3.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	src/sqlite/sqlite3.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIterator	src/sqlite/sqlite3.c	/^struct WalIterator {$/;"	s	file:
WalIterator	src/sqlite/sqlite3.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalSegment	src/sqlite/sqlite3.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
WalWriter	src/sqlite/sqlite3.c	/^typedef struct WalWriter {$/;"	s	file:
WalWriter	src/sqlite/sqlite3.c	/^} WalWriter;$/;"	t	typeref:struct:WalWriter	file:
Walker	src/sqlite/sqlite3.c	/^struct Walker {$/;"	s	file:
Walker	src/sqlite/sqlite3.c	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker	file:
WhenSorted	third_party/gmock/gmock/gmock.h	/^WhenSorted(const ContainerMatcher& container_matcher) {$/;"	f	namespace:testing
WhenSortedBy	third_party/gmock/gmock/gmock.h	/^WhenSortedBy(const Comparator& comparator,$/;"	f	namespace:testing
WhenSortedByMatcher	third_party/gmock/gmock/gmock.h	/^  WhenSortedByMatcher(const Comparator& comparator,$/;"	f	class:testing::internal::WhenSortedByMatcher
WhenSortedByMatcher	third_party/gmock/gmock/gmock.h	/^class WhenSortedByMatcher {$/;"	c	namespace:testing::internal
WhereAndInfo	src/sqlite/sqlite3.c	/^struct WhereAndInfo {$/;"	s	file:
WhereAndInfo	src/sqlite/sqlite3.c	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo	file:
WhereClause	src/sqlite/sqlite3.c	/^struct WhereClause {$/;"	s	file:
WhereClause	src/sqlite/sqlite3.c	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause	file:
WhereInfo	src/sqlite/sqlite3.c	/^struct WhereInfo {$/;"	s	file:
WhereInfo	src/sqlite/sqlite3.c	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo	file:
WhereLevel	src/sqlite/sqlite3.c	/^struct WhereLevel {$/;"	s	file:
WhereLevel	src/sqlite/sqlite3.c	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel	file:
WhereLoop	src/sqlite/sqlite3.c	/^struct WhereLoop {$/;"	s	file:
WhereLoop	src/sqlite/sqlite3.c	/^typedef struct WhereLoop WhereLoop;$/;"	t	typeref:struct:WhereLoop	file:
WhereLoopBuilder	src/sqlite/sqlite3.c	/^struct WhereLoopBuilder {$/;"	s	file:
WhereLoopBuilder	src/sqlite/sqlite3.c	/^typedef struct WhereLoopBuilder WhereLoopBuilder;$/;"	t	typeref:struct:WhereLoopBuilder	file:
WhereMaskSet	src/sqlite/sqlite3.c	/^struct WhereMaskSet {$/;"	s	file:
WhereMaskSet	src/sqlite/sqlite3.c	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet	file:
WhereOrCost	src/sqlite/sqlite3.c	/^struct WhereOrCost {$/;"	s	file:
WhereOrCost	src/sqlite/sqlite3.c	/^typedef struct WhereOrCost WhereOrCost;$/;"	t	typeref:struct:WhereOrCost	file:
WhereOrInfo	src/sqlite/sqlite3.c	/^struct WhereOrInfo {$/;"	s	file:
WhereOrInfo	src/sqlite/sqlite3.c	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo	file:
WhereOrSet	src/sqlite/sqlite3.c	/^struct WhereOrSet {$/;"	s	file:
WhereOrSet	src/sqlite/sqlite3.c	/^typedef struct WhereOrSet WhereOrSet;$/;"	t	typeref:struct:WhereOrSet	file:
WherePath	src/sqlite/sqlite3.c	/^struct WherePath {$/;"	s	file:
WherePath	src/sqlite/sqlite3.c	/^typedef struct WherePath WherePath;$/;"	t	typeref:struct:WherePath	file:
WhereScan	src/sqlite/sqlite3.c	/^struct WhereScan {$/;"	s	file:
WhereScan	src/sqlite/sqlite3.c	/^typedef struct WhereScan WhereScan;$/;"	t	typeref:struct:WhereScan	file:
WhereTerm	src/sqlite/sqlite3.c	/^struct WhereTerm {$/;"	s	file:
WhereTerm	src/sqlite/sqlite3.c	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm	file:
WideCStringEquals	third_party/gmock/gmock-gtest-all.cc	/^bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {$/;"	f	class:testing::internal::String
WideStringToUtf8	third_party/gmock/gmock-gtest-all.cc	/^std::string WideStringToUtf8(const wchar_t* str, int num_chars) {$/;"	f	namespace:testing::internal
WillByDefault	third_party/gmock/gmock/gmock.h	/^  OnCallSpec& WillByDefault(const Action<F>& action) {$/;"	f	class:testing::internal::OnCallSpec
WillOnce	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& WillOnce(const Action<F>& action) {$/;"	f	class:testing::internal::TypedExpectation
WillRepeatedly	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& WillRepeatedly(const Action<F>& action) {$/;"	f	class:testing::internal::TypedExpectation
WindowsDeathTest	third_party/gmock/gmock-gtest-all.cc	/^  WindowsDeathTest(const char* a_statement,$/;"	f	class:testing::internal::WindowsDeathTest
WindowsDeathTest	third_party/gmock/gmock-gtest-all.cc	/^class WindowsDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
With	src/sqlite/sqlite3.c	/^struct With {$/;"	s	file:
With	src/sqlite/sqlite3.c	/^typedef struct With With;$/;"	t	typeref:struct:With	file:
With	third_party/gmock/gmock/gmock.h	/^  MockSpec<F>& With() {$/;"	f	class:testing::internal::FunctionMocker
With	third_party/gmock/gmock/gmock.h	/^  MockSpec<F>& With(const Matcher<A1>& m1) {$/;"	f	class:testing::internal::FunctionMocker
With	third_party/gmock/gmock/gmock.h	/^  MockSpec<F>& With(const Matcher<A1>& m1, const Matcher<A2>& m2) {$/;"	f	class:testing::internal::FunctionMocker
With	third_party/gmock/gmock/gmock.h	/^  MockSpec<F>& With(const Matcher<A1>& m1, const Matcher<A2>& m2,$/;"	f	class:testing::internal::FunctionMocker
With	third_party/gmock/gmock/gmock.h	/^  OnCallSpec& With(const Matcher<const ArgumentTuple&>& m) {$/;"	f	class:testing::internal::OnCallSpec
With	third_party/gmock/gmock/gmock.h	/^  TypedExpectation& With(const Matcher<const ArgumentTuple&>& m) {$/;"	f	class:testing::internal::TypedExpectation
WithArg	third_party/gmock/gmock/gmock.h	/^WithArg(const InnerAction& action) {$/;"	f	namespace:testing
WithArgs	third_party/gmock/gmock/gmock.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing
WithArgsAction	third_party/gmock/gmock/gmock.h	/^  explicit WithArgsAction(const InnerAction& action) : action_(action) {}$/;"	f	class:testing::internal::WithArgsAction
WithArgsAction	third_party/gmock/gmock/gmock.h	/^class WithArgsAction {$/;"	c	namespace:testing::internal
WithParamInterface	third_party/gmock/gtest/gtest.h	/^class WithParamInterface {$/;"	c	namespace:testing
WithoutArgs	third_party/gmock/gmock/gmock.h	/^WithoutArgs(const InnerAction& action) {$/;"	f	namespace:testing
Write	third_party/gmock/gtest/gtest.h	/^inline int Write(int fd, const void* buf, unsigned int count) {$/;"	f	namespace:std::tr1::posix
WritePage	src/disk/disk_manager.cpp	/^void DiskManager::WritePage(page_id_t page_id, const char *page_data) {$/;"	f	class:cmudb::DiskManager
WriteRecord	src/include/concurrency/transaction.h	/^  WriteRecord(RID rid, WType wtype, const Tuple &tuple, TableHeap *table)$/;"	f	class:cmudb::WriteRecord
WriteRecord	src/include/concurrency/transaction.h	/^class WriteRecord {$/;"	c	namespace:cmudb
WriteToShardStatusFileIfNeeded	third_party/gmock/gmock-gtest-all.cc	/^void WriteToShardStatusFileIfNeeded() {$/;"	f	namespace:testing::internal
XN_EXPR	src/sqlite/sqlite3.c	15822;"	d	file:
XN_ROWID	src/sqlite/sqlite3.c	15821;"	d	file:
XmlUnitTestResultPrinter	third_party/gmock/gmock-gtest-all.cc	/^XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
XmlUnitTestResultPrinter	third_party/gmock/gmock-gtest-all.cc	/^class XmlUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
Y	src/sqlite/sqlite3.c	/^  int Y, M, D;        \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
YYACTIONTYPE	src/sqlite/sqlite3.c	136340;"	d	file:
YYCODETYPE	src/sqlite/sqlite3.c	136338;"	d	file:
YYFALLBACK	src/sqlite/sqlite3.c	136366;"	d	file:
YYMALLOCARGTYPE	src/sqlite/sqlite3.c	136109;"	d	file:
YYMALLOCARGTYPE	src/sqlite/sqlite3.c	137523;"	d	file:
YYMINORTYPE	src/sqlite/sqlite3.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon36	file:
YYNOCODE	src/sqlite/sqlite3.c	136339;"	d	file:
YYNOERRORRECOVERY	src/sqlite/sqlite3.c	136079;"	d	file:
YYNRULE	src/sqlite/sqlite3.c	136368;"	d	file:
YYNSTATE	src/sqlite/sqlite3.c	136367;"	d	file:
YYPARSEFREENEVERNULL	src/sqlite/sqlite3.c	136090;"	d	file:
YYSTACKDEPTH	src/sqlite/sqlite3.c	136360;"	d	file:
YYWILDCARD	src/sqlite/sqlite3.c	136341;"	d	file:
YY_ACCEPT_ACTION	src/sqlite/sqlite3.c	136375;"	d	file:
YY_ACTTAB_COUNT	src/sqlite/sqlite3.c	136448;"	d	file:
YY_ERROR_ACTION	src/sqlite/sqlite3.c	136374;"	d	file:
YY_MAX_REDUCE	src/sqlite/sqlite3.c	136373;"	d	file:
YY_MAX_SHIFT	src/sqlite/sqlite3.c	136369;"	d	file:
YY_MAX_SHIFTREDUCE	src/sqlite/sqlite3.c	136371;"	d	file:
YY_MIN_REDUCE	src/sqlite/sqlite3.c	136372;"	d	file:
YY_MIN_SHIFTREDUCE	src/sqlite/sqlite3.c	136370;"	d	file:
YY_NO_ACTION	src/sqlite/sqlite3.c	136376;"	d	file:
YY_REDUCE_COUNT	src/sqlite/sqlite3.c	136820;"	d	file:
YY_REDUCE_MAX	src/sqlite/sqlite3.c	136822;"	d	file:
YY_REDUCE_MIN	src/sqlite/sqlite3.c	136821;"	d	file:
YY_REDUCE_USE_DFLT	src/sqlite/sqlite3.c	136819;"	d	file:
YY_SHIFT_COUNT	src/sqlite/sqlite3.c	136768;"	d	file:
YY_SHIFT_MAX	src/sqlite/sqlite3.c	136770;"	d	file:
YY_SHIFT_MIN	src/sqlite/sqlite3.c	136769;"	d	file:
YY_SHIFT_USE_DFLT	src/sqlite/sqlite3.c	136767;"	d	file:
_	third_party/gmock/gmock/gmock.h	/^const internal::AnythingMatcher _ = {};$/;"	m	namespace:testing
_BSD_SOURCE	src/sqlite/sqlite3.c	992;"	d	file:
_CRT_RAND_S	src/sqlite/sqlite3.c	838;"	d	file:
_CRT_SECURE_NO_WARNINGS	src/sqlite/shell.c	17;"	d	file:
_FILE_OFFSET_BITS	src/sqlite/shell.c	54;"	d	file:
_FILE_OFFSET_BITS	src/sqlite/sqlite3.c	957;"	d	file:
_FTS3_HASH_H_	src/sqlite/sqlite3.c	146127;"	d	file:
_FTS3_TOKENIZER_H_	src/sqlite/sqlite3.c	145964;"	d	file:
_FTS5INT_H	src/sqlite/sqlite3.c	183154;"	d	file:
_FTS5_H	src/include/sqlite/sqlite3.h	10050;"	d
_FTS5_H	src/sqlite/sqlite3.c	11082;"	d	file:
_FTS5_H	src/sqlite/sqlite3.c	182581;"	d	file:
_FTSINT_H	src/sqlite/sqlite3.c	145912;"	d	file:
_GNU_SOURCE	src/sqlite/sqlite3.c	988;"	d	file:
_HAS_EXCEPTIONS	third_party/gmock/gtest/gtest.h	443;"	d
_LARGEFILE_SOURCE	src/sqlite/shell.c	56;"	d	file:
_LARGEFILE_SOURCE	src/sqlite/sqlite3.c	959;"	d	file:
_LARGE_FILE	src/sqlite/shell.c	52;"	d	file:
_LARGE_FILE	src/sqlite/sqlite3.c	955;"	d	file:
_OS_COMMON_H_	src/sqlite/sqlite3.c	23985;"	d	file:
_OS_COMMON_H_	src/sqlite/sqlite3.c	30411;"	d	file:
_OS_COMMON_H_	src/sqlite/sqlite3.c	37971;"	d	file:
_SQLITE3RBU_H	src/sqlite/sqlite3.c	169723;"	d	file:
_SQLITE3RTREE_H_	src/include/sqlite/sqlite3.h	8634;"	d
_SQLITE3RTREE_H_	src/sqlite/sqlite3.c	9666;"	d	file:
_SQLITE_OS_H_	src/sqlite/sqlite3.c	14428;"	d	file:
_USE_32BIT_TIME_T	src/sqlite/sqlite3.c	1024;"	d	file:
_XOPEN_SOURCE	src/sqlite/sqlite3.c	12040;"	d	file:
__FUNCTION__	src/include/common/logger.h	62;"	d
__SQLITESESSION_H_	src/include/sqlite/sqlite3.h	8741;"	d
__SQLITESESSION_H_	src/sqlite/sqlite3.c	9773;"	d	file:
__declspec	src/sqlite/sqlite3.c	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
__declspec	src/sqlite/sqlite3.c	/^__declspec(dllexport)$/;"	f
_all_whitespace	src/sqlite/shell.c	/^static int _all_whitespace(const char *z){$/;"	f	file:
_fts3ht	src/sqlite/sqlite3.c	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash	file:
_ht	src/sqlite/sqlite3.c	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash	file:
_sqliteZone_	src/sqlite/sqlite3.c	/^static malloc_zone_t* _sqliteZone_;$/;"	v	file:
_tmain	third_party/gmock/gmock_main.cc	/^GTEST_API_ int _tmain(int argc, TCHAR** argv) {$/;"	f
a	src/include/sqlite/sqlite3.h	/^const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	src/sqlite/sqlite3.c	/^  FuncDef *a[SQLITE_FUNC_HASH_SZ];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash	file:
a	src/sqlite/sqlite3.c	/^  Stat4Sample *a;           \/* Array of mxSample Stat4Sample objects *\/$/;"	m	struct:Stat4Accum	file:
a	src/sqlite/sqlite3.c	/^  WhereLevel a[1];          \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo	file:
a	src/sqlite/sqlite3.c	/^  WhereOrCost a[N_OR_COST];   \/* Set of best costs *\/$/;"	m	struct:WhereOrSet	file:
a	src/sqlite/sqlite3.c	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause	file:
a	src/sqlite/sqlite3.c	/^  char *a;                        \/* Pointer to allocation *\/$/;"	m	struct:Blob	file:
a	src/sqlite/sqlite3.c	/^  const u8 *a;                    \/* Buffer containing position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
a	src/sqlite/sqlite3.c	/^  const u8 *a;                    \/* Position list to iterate through *\/$/;"	m	struct:Fts5PoslistReader	file:
a	src/sqlite/sqlite3.c	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter	file:
a	src/sqlite/sqlite3.c	/^  unsigned char *a;   \/* Gather entropy into this buffer *\/$/;"	m	struct:EntropyGatherer	file:
a	src/sqlite/sqlite3.c	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item	file:
a	src/sqlite/sqlite3.c	/^  } a[1];                  \/* One slot for each expression in the list *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item	file:
a	src/sqlite/sqlite3.c	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item	file:
a	src/sqlite/sqlite3.c	/^  } a[1];$/;"	m	struct:With	typeref:struct:With::Cte	file:
a	src/sqlite/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
aAction	src/sqlite/sqlite3.c	/^  u8 aAction[2];        \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey	file:
aAll	src/sqlite/sqlite3.c	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist	file:
aAlloc	src/sqlite/sqlite3.c	/^  u8 *aAlloc;                 \/* Space for aKey if aBuffer and pMap wont work *\/$/;"	m	struct:PmaReader	file:
aAltMap	src/sqlite/sqlite3.c	/^  int *aAltMap;           \/* Mapping from table to index column numbers *\/$/;"	m	struct:VdbeCursor	file:
aAsciiTokenChar	src/sqlite/sqlite3.c	/^static unsigned char aAsciiTokenChar[128] = {$/;"	v	file:
aAvgEq	src/sqlite/sqlite3.c	/^  tRowcnt *aAvgEq;         \/* Average nEq values for keys not in aSample *\/$/;"	m	struct:Index	file:
aBest	src/sqlite/sqlite3.c	/^  Stat4Sample *aBest;       \/* Array of nCol best samples *\/$/;"	m	struct:Stat4Accum	file:
aBitmap	src/sqlite/sqlite3.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon27	file:
aBuf	src/sqlite/sqlite3.c	/^  char *aBuf;$/;"	m	struct:PorterContext	file:
aBuf	src/sqlite/sqlite3.c	/^  char aBuf[FTS5_PORTER_MAX_TOKEN + 64];$/;"	m	struct:PorterTokenizer	file:
aBuf	src/sqlite/sqlite3.c	/^  u8 *aBuf;                       \/* Pointer to changeset buffer *\/$/;"	m	struct:SessionBuffer	file:
aBuf	src/sqlite/sqlite3.c	/^  u8 *aBuf;$/;"	m	struct:sqlite3rbu	file:
aBuffer	src/sqlite/sqlite3.c	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader	file:
aBuffer	src/sqlite/sqlite3.c	/^  u8 *aBuffer;                    \/* Pointer to write buffer *\/$/;"	m	struct:PmaWriter	file:
aBuffer	src/sqlite/sqlite3.c	/^  u8 *aBuffer;                \/* Current read buffer *\/$/;"	m	struct:PmaReader	file:
aCell	src/sqlite/sqlite3.c	/^  StatCell *aCell;                \/* Array of parsed cells *\/$/;"	m	struct:StatPage	file:
aCellIdx	src/sqlite/sqlite3.c	/^  u8 *aCellIdx;        \/* The cell index area *\/$/;"	m	struct:MemPage	file:
aChar	src/sqlite/sqlite3.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aCksum	src/sqlite/sqlite3.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCnt	src/sqlite/sqlite3.c	/^  i64 *aCnt;$/;"	m	struct:Fts5VocabCursor	file:
aCol	src/sqlite/sqlite3.c	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table	file:
aCol	src/sqlite/sqlite3.c	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col	file:
aCol	src/sqlite/sqlite3.c	/^  } aCol[1];            \/* One entry for each of nCol columns *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap	file:
aColCache	src/sqlite/sqlite3.c	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache	file:
aColExpr	src/sqlite/sqlite3.c	/^  ExprList *aColExpr;      \/* Column expressions *\/$/;"	m	struct:Index	file:
aColName	src/sqlite/sqlite3.c	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe	file:
aColl	src/sqlite/sqlite3.c	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo	file:
aCollSeq	src/sqlite/sqlite3.c	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3	file:
aColmask	src/sqlite/sqlite3.c	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg	file:
aColumnSize	src/sqlite/sqlite3.c	/^  int *aColumnSize;               \/* Values for xColumnSize() *\/$/;"	m	struct:Fts5Cursor	file:
aConstraint	src/include/sqlite/sqlite3.h	/^} *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraint	src/sqlite/sqlite3.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	src/sqlite/sqlite3.c	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	file:
aConstraintUsage	src/include/sqlite/sqlite3.h	/^} *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aConstraintUsage	src/sqlite/sqlite3.c	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
aCoord	src/include/sqlite/sqlite3.h	/^sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aCoord	src/sqlite/sqlite3.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];  \/* Bounding box coordinates *\/$/;"	m	struct:RtreeCell	file:
aCoord	src/sqlite/sqlite3.c	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
aCounter	src/sqlite/sqlite3.c	/^  u32 aCounter[7];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe	file:
aCtrl	src/sqlite/sqlite3.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aData	src/sqlite/sqlite3.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	src/sqlite/sqlite3.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	src/sqlite/sqlite3.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	src/sqlite/sqlite3.c	/^  u8 *aData;                      \/* Pointer to buffer containing changeset *\/$/;"	m	struct:SessionInput	file:
aData	src/sqlite/sqlite3.c	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage	file:
aDataEnd	src/sqlite/sqlite3.c	/^  u8 *aDataEnd;        \/* One byte past the end of usable data *\/$/;"	m	struct:MemPage	file:
aDataOfst	src/sqlite/sqlite3.c	/^  u8 *aDataOfst;       \/* Same as aData for leaves.  aData+4 for interior *\/$/;"	m	struct:MemPage	file:
aDb	src/sqlite/sqlite3.c	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3	file:
aDbStatic	src/sqlite/sqlite3.c	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3	file:
aDigits	src/sqlite/sqlite3.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDlidx	src/sqlite/sqlite3.c	/^  Fts5DlidxWriter *aDlidx;        \/* Array of Fts5DlidxWriter objects *\/$/;"	m	struct:Fts5SegWriter	file:
aDoc	src/sqlite/sqlite3.c	/^  i64 *aDoc;$/;"	m	struct:Fts5VocabCursor	file:
aDoclist	src/sqlite/sqlite3.c	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor	file:
aDoclist	src/sqlite/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
aDoclist	src/sqlite/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aDoclist	src/sqlite/sqlite3.c	/^  const char *aDoclist;           \/* Pointer to doclist *\/$/;"	m	struct:NodeReader	file:
aEntry	src/sqlite/sqlite3.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aEof	src/sqlite/sqlite3.c	/^  u8 *aEof;                       \/* Pointer to 1 byte past end of doclist *\/$/;"	m	struct:Fts5DoclistIter	file:
aExt	src/sqlite/sqlite3.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExtension	src/sqlite/sqlite3.c	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3	file:
aFile	src/sqlite/sqlite3.c	/^  SorterFile aFile[2];            \/* aFile[0] for reading, [1] for writing *\/$/;"	m	struct:IncrMerger	file:
aFirst	src/sqlite/sqlite3.c	/^  Fts5CResult *aFirst;            \/* Current merge state (see above) *\/$/;"	m	struct:Fts5Iter	file:
aFirst	src/sqlite/sqlite3.c	/^  int *aFirst;                    \/* Array of first token in each sentence *\/$/;"	m	struct:Fts5SFinder	file:
aFold	src/sqlite/sqlite3.c	/^  char *aFold;                    \/* Buffer to fold text into *\/$/;"	m	struct:Unicode61Tokenizer	file:
aFrame	src/sqlite/sqlite3.c	/^  RbuFrame *aFrame;$/;"	m	struct:sqlite3rbu	file:
aFrameCksum	src/sqlite/sqlite3.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFreq	src/sqlite/sqlite3.c	/^  double *aFreq;                  \/* Array used to calculate phrase freq. *\/$/;"	m	struct:Fts5Bm25Data	file:
aFunc	src/sqlite/sqlite3.c	/^  Hash aFunc;                   \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3	file:
aFunc	src/sqlite/sqlite3.c	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func	file:
aHardLimit	src/sqlite/sqlite3.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHash	src/sqlite/sqlite3.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon27	file:
aHash	src/sqlite/sqlite3.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/$/;"	m	struct:Rtree	file:
aIDF	src/sqlite/sqlite3.c	/^  double *aIDF;                   \/* IDF for each phrase *\/$/;"	m	struct:Fts5Bm25Data	file:
aIdx	src/sqlite/sqlite3.c	/^  int aIdx[1];                    \/* Offsets into aPoslist for current row *\/$/;"	m	struct:Fts5Sorter	file:
aInLoop	src/sqlite/sqlite3.c	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon30::__anon31	typeref:struct:WhereLevel::__anon30::__anon31::InLoop	file:
aIndex	src/sqlite/sqlite3.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aIndex	src/sqlite/sqlite3.c	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index	file:
aInput	src/sqlite/sqlite3.c	/^  const unsigned char *aInput;    \/* Input text being tokenized *\/$/;"	m	struct:unicode_cursor	file:
aInst	src/sqlite/sqlite3.c	/^  int *aInst;                     \/* 3 integers per phrase instance *\/$/;"	m	struct:Fts5Cursor	file:
aInstIter	src/sqlite/sqlite3.c	/^  Fts5PoslistReader *aInstIter;   \/* One for each phrase *\/$/;"	m	struct:Fts5Cursor	file:
aJournalMagic	src/sqlite/sqlite3.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aKey	src/sqlite/sqlite3.c	/^  u8 *aKey;                   \/* Pointer to current key *\/$/;"	m	struct:PmaReader	file:
aLTerm	src/sqlite/sqlite3.c	/^  WhereTerm **aLTerm;   \/* WhereTerms used *\/$/;"	m	struct:WhereLoop	file:
aLTermSpace	src/sqlite/sqlite3.c	/^  WhereTerm *aLTermSpace[3];  \/* Initial aLTerm[] space *\/$/;"	m	struct:WhereLoop	file:
aLabel	src/sqlite/sqlite3.c	/^  int *aLabel;         \/* Space to hold the labels *\/$/;"	m	struct:Parse	file:
aLevel	src/sqlite/sqlite3.c	/^  Fts5StructureLevel aLevel[1];   \/* Array of nLevel level objects *\/$/;"	m	struct:Fts5Structure	file:
aLimit	src/sqlite/sqlite3.c	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3	file:
aLock	src/sqlite/sqlite3.c	/^  u8 aLock[SQLITE_SHM_NLOCK];     \/* Reserved space for locks *\/$/;"	m	struct:WalCkptInfo	file:
aLoop	src/sqlite/sqlite3.c	/^  WhereLoop **aLoop;    \/* Array of WhereLoop objects implementing this path *\/$/;"	m	struct:WherePath	file:
aLvl	src/sqlite/sqlite3.c	/^  Fts5DlidxLvl aLvl[1];$/;"	m	struct:Fts5DlidxIter	file:
aMI	src/sqlite/sqlite3.c	/^  u32 *aMI;                  \/* See above *\/$/;"	m	struct:Fts3Expr	file:
aMap	src/sqlite/sqlite3.c	/^  u8 *aMap;                   \/* Pointer to mapping of entire file *\/$/;"	m	struct:PmaReader	file:
aMatchinfo	src/sqlite/sqlite3.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMatchinfo	src/sqlite/sqlite3.c	/^  u32 aMatchinfo[1];$/;"	m	struct:MatchinfoBuffer	file:
aMem	src/sqlite/sqlite3.c	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aMem	src/sqlite/sqlite3.c	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe	file:
aMem	src/sqlite/sqlite3.c	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord	file:
aMem	src/sqlite/sqlite3.c	/^  sqlite3_value *aMem;    \/* First of nMem value in the unpacked pKey *\/$/;"	m	struct:BtreePayload	file:
aMemory	src/sqlite/sqlite3.c	/^  u8 *aMemory;                    \/* If non-NULL, bulk memory to hold pList *\/$/;"	m	struct:SorterList	file:
aModule	src/sqlite/sqlite3.c	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3	file:
aNew	src/sqlite/sqlite3.c	/^  Mem *aNew;                      \/* Array of new.* values *\/$/;"	m	struct:PreUpdate	file:
aNode	src/sqlite/sqlite3.c	/^  JsonNode *aNode;   \/* Array of nodes containing the parse *\/$/;"	m	struct:JsonParse	file:
aNode	src/sqlite/sqlite3.c	/^  RtreeNode *aNode[RTREE_CACHE_SZ]; \/* Rtree node cache *\/$/;"	m	struct:RtreeCursor	file:
aNode	src/sqlite/sqlite3.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aNode	src/sqlite/sqlite3.c	/^  const char *aNode;$/;"	m	struct:NodeReader	file:
aNodeWriter	src/sqlite/sqlite3.c	/^  NodeWriter aNodeWriter[FTS_MAX_APPENDABLE_HEIGHT];$/;"	m	struct:IncrmergeWriter	file:
aOffset	src/sqlite/sqlite3.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	src/sqlite/sqlite3.c	/^  u32 *aOffset;           \/* Pointer to aType[nField] *\/$/;"	m	struct:VdbeCursor	file:
aOnce	src/sqlite/sqlite3.c	/^  u8 *aOnce;                    \/* Array of OP_Once flags *\/$/;"	m	struct:SubProgram	file:
aOnce	src/sqlite/sqlite3.c	/^  u8 *aOnce;              \/* Bitmask used by OP_Once *\/$/;"	m	struct:VdbeFrame	file:
aOp	src/sqlite/sqlite3.c	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOp	src/sqlite/sqlite3.c	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe	file:
aOp	src/sqlite/sqlite3.c	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram	file:
aOrderBy	src/include/sqlite/sqlite3.h	/^} *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aOrderBy	src/sqlite/sqlite3.c	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	file:
aOverflow	src/sqlite/sqlite3.c	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor	file:
aOvfl	src/sqlite/sqlite3.c	/^  u32 *aOvfl;                     \/* Array of overflow page numbers *\/$/;"	m	struct:StatCell	file:
aPadding	src/sqlite/sqlite3.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aPage	src/sqlite/sqlite3.c	/^  StatPage aPage[32];$/;"	m	struct:StatCursor	file:
aParam	src/include/sqlite/sqlite3.h	/^sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	src/include/sqlite/sqlite3.h	/^sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aParam	src/sqlite/sqlite3.c	/^  RtreeDValue aParam[1];      \/* Values for parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
aParam	src/sqlite/sqlite3.c	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
aParam	src/sqlite/sqlite3.c	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
aPgRef	src/sqlite/sqlite3.c	/^  u8 *aPgRef;       \/* 1 bit per page in the db (see above) *\/$/;"	m	struct:IntegrityCk	file:
aPgno	src/sqlite/sqlite3.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPhrase	src/sqlite/sqlite3.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPoint	src/sqlite/sqlite3.c	/^  RtreeSearchPoint *aPoint;         \/* Priority queue for search points *\/$/;"	m	struct:RtreeCursor	file:
aPool	src/sqlite/sqlite3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPopulator	src/sqlite/sqlite3.c	/^  Fts5PoslistPopulator *aPopulator;$/;"	m	struct:Fts5ExprCtx	file:
aPoslist	src/sqlite/sqlite3.c	/^  const u8 *aPoslist;             \/* Position lists for current row *\/$/;"	m	struct:Fts5Sorter	file:
aPoslist	src/sqlite/sqlite3.c	/^  u8 *aPoslist;$/;"	m	struct:Fts5DoclistIter	file:
aPragmaName	src/sqlite/sqlite3.c	/^static const PragmaName aPragmaName[] = {$/;"	v	file:
aPrefix	src/sqlite/sqlite3.c	/^  int *aPrefix;                   \/* Sizes in bytes of nPrefix prefix indexes *\/$/;"	m	struct:Fts5Config	file:
aPrefix	src/sqlite/sqlite3.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aReadMark	src/sqlite/sqlite3.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aReadr	src/sqlite/sqlite3.c	/^  PmaReader *aReadr;         \/* Array of PmaReaders to merge data from *\/$/;"	m	struct:MergeEngine	file:
aRecord	src/sqlite/sqlite3.c	/^  u8 *aRecord;                    \/* Buffer containing old.* record *\/$/;"	m	struct:SessionChange	file:
aRecord	src/sqlite/sqlite3.c	/^  u8 *aRecord;                    \/* old.* database record *\/$/;"	m	struct:PreUpdate	file:
aRef	src/sqlite/sqlite3.c	/^  u8 aRef[3];$/;"	m	struct:MatchinfoBuffer	file:
aRegion	src/sqlite/sqlite3.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aRow	src/sqlite/sqlite3.c	/^  const u8 *aRow;         \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor	file:
aRowid	src/sqlite/sqlite3.c	/^    u8 *aRowid;                     \/* Key for WITHOUT ROWID tables *\/$/;"	m	union:Stat4Sample::__anon29	file:
aRowidOffset	src/sqlite/sqlite3.c	/^  int *aRowidOffset;              \/* Array of offset to rowid fields *\/$/;"	m	struct:Fts5SegIter	file:
aSalt	src/sqlite/sqlite3.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSample	src/sqlite/sqlite3.c	/^  IndexSample *aSample;    \/* Samples of the left-most key *\/$/;"	m	struct:Index	file:
aSavepoint	src/sqlite/sqlite3.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aScan	src/sqlite/sqlite3.c	/^  ScanStatus *aScan;      \/* Scan definitions for sqlite3_stmt_scanstatus() *\/$/;"	m	struct:Vdbe	file:
aSeg	src/sqlite/sqlite3.c	/^  Fts5SegIter aSeg[1];            \/* Array of segment iterators *\/$/;"	m	struct:Fts5Iter	file:
aSeg	src/sqlite/sqlite3.c	/^  Fts5StructureSegment *aSeg;     \/* Array of segments. aSeg[0] is oldest. *\/$/;"	m	struct:Fts5StructureLevel	file:
aSegment	src/sqlite/sqlite3.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSemName	src/sqlite/sqlite3.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSession	src/sqlite/shell.c	/^  OpenSession aSession[4];  \/* Array of sessions.  [0] is in focus. *\/$/;"	m	struct:ShellState	file:
aSlot	src/sqlite/sqlite3.c	/^  Fts5HashEntry **aSlot;          \/* Array of hash slots *\/$/;"	m	struct:Fts5Hash	file:
aSortOrder	src/sqlite/sqlite3.c	/^  u8 *aSortOrder;          \/* for each column: True==DESC, False==ASC *\/$/;"	m	struct:Index	file:
aSortOrder	src/sqlite/sqlite3.c	/^  u8 *aSortOrder;     \/* Sort order for each column. *\/$/;"	m	struct:KeyInfo	file:
aStat	src/sqlite/sqlite3.c	/^  int aStat[3];               \/* Total cache hits, misses and writes *\/$/;"	m	struct:Pager	file:
aStat	src/sqlite/sqlite3.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStatic	src/sqlite/sqlite3.c	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStatic	src/sqlite/sqlite3.c	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *aStmt[11];$/;"	m	struct:Fts5Storage	file:
aStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *aStmt[40];$/;"	m	struct:Fts3Table	file:
aSyscall	src/sqlite/sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aSyscall	src/sqlite/sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:win_syscall	file:
aTableLock	src/sqlite/sqlite3.c	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse	file:
aTask	src/sqlite/sqlite3.c	/^  SortSubtask aTask[1];           \/* One or more subtasks *\/$/;"	m	struct:VdbeSorter	file:
aTempReg	src/sqlite/sqlite3.c	/^  int aTempReg[8];        \/* Holding area for temporary registers *\/$/;"	m	struct:Parse	file:
aTerm	src/sqlite/sqlite3.c	/^  Fts5ExprTerm aTerm[1];          \/* Terms that make up this phrase *\/$/;"	m	struct:Fts5ExprPhrase	file:
aTerm	src/sqlite/sqlite3.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aToken	src/sqlite/sqlite3.c	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
aTokenChar	src/sqlite/sqlite3.c	/^  unsigned char aTokenChar[128];  \/* ASCII range token characters *\/$/;"	m	struct:Unicode61Tokenizer	file:
aTokenChar	src/sqlite/sqlite3.c	/^  unsigned char aTokenChar[128];$/;"	m	struct:AsciiTokenizer	file:
aTotalSize	src/sqlite/sqlite3.c	/^  i64 *aTotalSize;                \/* Total sizes of each column *\/$/;"	m	struct:Fts5Storage	file:
aTree	src/sqlite/sqlite3.c	/^  int *aTree;                \/* Current state of incremental merge *\/$/;"	m	struct:MergeEngine	file:
aType	src/sqlite/sqlite3.c	/^  u32 aType[1];           \/* Type values record decode.  MUST BE LAST *\/$/;"	m	struct:VdbeCursor	file:
aUp	src/sqlite/sqlite3.c	/^  u32 *aUp;          \/* Index of parent of each node *\/$/;"	m	struct:JsonParse	file:
aVTrans	src/sqlite/sqlite3.c	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3	file:
aVar	src/sqlite/sqlite3.c	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe	file:
aWalData	src/sqlite/sqlite3.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
aXformType	src/sqlite/sqlite3.c	/^} aXformType[] = {$/;"	v	typeref:struct:__anon22	file:
aaOutput	src/sqlite/sqlite3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
abIndexed	src/sqlite/sqlite3.c	/^  u8 *abIndexed;                  \/* Array of flags, set on indexed & PK cols *\/$/;"	m	struct:RbuObjIter	file:
abNotNull	src/sqlite/sqlite3.c	/^  u8 *abNotNull;                  \/* Array of flags, set on NOT NULL columns *\/$/;"	m	struct:RbuObjIter	file:
abNotindexed	src/sqlite/sqlite3.c	/^  u8 *abNotindexed;               \/* True for 'notindexed' columns *\/$/;"	m	struct:Fts3Table	file:
abPK	src/sqlite/sqlite3.c	/^  u8 *abPK;                       \/* Array of primary key flags *\/$/;"	m	struct:SessionTable	file:
abPK	src/sqlite/sqlite3.c	/^  u8 *abPK;                       \/* Boolean array - true if column is in PK *\/$/;"	m	struct:SessionApplyCtx	file:
abPK	src/sqlite/sqlite3.c	/^  u8 *abPK;                       \/* Primary key array *\/$/;"	m	struct:sqlite3_changeset_iter	file:
abTblPk	src/sqlite/sqlite3.c	/^  u8 *abTblPk;                    \/* Array of flags, set on target PK columns *\/$/;"	m	struct:RbuObjIter	file:
abUnindexed	src/sqlite/sqlite3.c	/^  u8 *abUnindexed;                \/* True for unindexed columns *\/$/;"	m	struct:Fts5Config	file:
absFunc	src/sqlite/sqlite3.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
accError	src/sqlite/sqlite3.c	/^  u8   accError;       \/* STRACCUM_NOMEM or STRACCUM_TOOBIG *\/$/;"	m	struct:StrAccum	file:
access	src/sqlite/shell.c	120;"	d	file:
accessPayload	src/sqlite/sqlite3.c	/^static int accessPayload($/;"	f	file:
accessPayloadChecked	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int accessPayloadChecked($/;"	f	file:
action1_	third_party/gmock/gmock/gmock.h	/^    const Action<VoidResult> action1_;$/;"	m	class:testing::internal::DoBothAction::Impl
action1_	third_party/gmock/gmock/gmock.h	/^  Action1 action1_;$/;"	m	class:testing::internal::DoBothAction
action2_	third_party/gmock/gmock/gmock.h	/^    const Action<F> action2_;$/;"	m	class:testing::internal::DoBothAction::Impl
action2_	third_party/gmock/gmock/gmock.h	/^  Action2 action2_;$/;"	m	class:testing::internal::DoBothAction
actionName	src/sqlite/sqlite3.c	/^static const char *actionName(u8 action){$/;"	f	file:
action_	third_party/gmock/gmock/gmock.h	/^    Action<InnerFunctionType> action_;$/;"	m	class:testing::internal::WithArgsAction::Impl
action_	third_party/gmock/gmock/gmock.h	/^    const Action<OriginalFunction> action_;$/;"	m	class:testing::internal::IgnoreResultAction::Impl
action_	third_party/gmock/gmock/gmock.h	/^  Action<F> action_;$/;"	m	class:testing::internal::OnCallSpec
action_	third_party/gmock/gmock/gmock.h	/^  const A action_;$/;"	m	class:testing::internal::IgnoreResultAction
action_	third_party/gmock/gmock/gmock.h	/^  const InnerAction action_;$/;"	m	class:testing::internal::WithArgsAction
action_count_checked_	third_party/gmock/gmock/gmock.h	/^  mutable bool action_count_checked_;  \/\/ Under mutex_.$/;"	m	class:testing::internal::ExpectationBase
actualWidth	src/sqlite/shell.c	/^  int actualWidth[100];  \/* Actual width of each column *\/$/;"	m	struct:ShellState	file:
ad_hoc_test_result	third_party/gmock/gmock-gtest-all.cc	/^  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }$/;"	f	class:testing::internal::UnitTestImpl
ad_hoc_test_result	third_party/gmock/gmock-gtest-all.cc	/^const TestResult& UnitTest::ad_hoc_test_result() const {$/;"	f	class:testing::UnitTest
ad_hoc_test_result	third_party/gmock/gtest/gtest.h	/^  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }$/;"	f	class:testing::TestCase
ad_hoc_test_result_	third_party/gmock/gmock-gtest-all.cc	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::internal::UnitTestImpl	file:
ad_hoc_test_result_	third_party/gmock/gtest/gtest.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::TestCase
addAggInfoColumn	src/sqlite/sqlite3.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	src/sqlite/sqlite3.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addArgumentToVtab	src/sqlite/sqlite3.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addColOffset	src/sqlite/sqlite3.c	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table	file:
addModuleArgument	src/sqlite/sqlite3.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addToBlockedList	src/sqlite/sqlite3.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToSavepointBitvecs	src/sqlite/sqlite3.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToVTrans	src/sqlite/sqlite3.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addWhereTerm	src/sqlite/sqlite3.c	/^static void addWhereTerm($/;"	f	file:
addrBody	src/sqlite/sqlite3.c	/^  int addrBody;         \/* Beginning of the body of this loop *\/$/;"	m	struct:WhereLevel	file:
addrBrk	src/sqlite/sqlite3.c	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel	file:
addrCont	src/sqlite/sqlite3.c	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel	file:
addrCrTab	src/sqlite/sqlite3.c	/^  int addrCrTab;       \/* Address of OP_CreateTable opcode on CREATE TABLE *\/$/;"	m	struct:Parse	file:
addrExplain	src/sqlite/sqlite3.c	/^  int addrExplain;                \/* OP_Explain for loop *\/$/;"	m	struct:ScanStatus	file:
addrFillSub	src/sqlite/sqlite3.c	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item	file:
addrFirst	src/sqlite/sqlite3.c	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel	file:
addrInTop	src/sqlite/sqlite3.c	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon30::__anon31::InLoop	file:
addrLikeRep	src/sqlite/sqlite3.c	/^  int addrLikeRep;      \/* LIKE range processing address *\/$/;"	m	struct:WhereLevel	file:
addrLoop	src/sqlite/sqlite3.c	/^  int addrLoop;                   \/* Address of "loops" counter *\/$/;"	m	struct:ScanStatus	file:
addrNxt	src/sqlite/sqlite3.c	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel	file:
addrOpenEphm	src/sqlite/sqlite3.c	/^  int addrOpenEphm[2];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select	file:
addrSkip	src/sqlite/sqlite3.c	/^  int addrSkip;         \/* Jump here for next iteration of skip-scan *\/$/;"	m	struct:WhereLevel	file:
addrSortIndex	src/sqlite/sqlite3.c	/^  int addrSortIndex;    \/* Address of the OP_SorterOpen or OP_OpenEphemeral *\/$/;"	m	struct:SortCtx	file:
addrTnct	src/sqlite/sqlite3.c	/^  int addrTnct;   \/* Address of OP_OpenEphemeral opcode for tabTnct *\/$/;"	m	struct:DistinctCtx	file:
addrVisit	src/sqlite/sqlite3.c	/^  int addrVisit;                  \/* Address of "rows visited" counter *\/$/;"	m	struct:ScanStatus	file:
addrVisit	src/sqlite/sqlite3.c	/^  int addrVisit;        \/* Address at which row is visited *\/$/;"	m	struct:WhereLevel	file:
address_	third_party/gmock/gmock/gmock.h	/^  static T* address_;$/;"	m	class:testing::DefaultValue
address_	third_party/gmock/gmock/gmock.h	/^T* DefaultValue<T&>::address_ = NULL;$/;"	m	class:testing::DefaultValue
adjustStats	src/sqlite/sqlite3.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
affinity	src/sqlite/sqlite3.c	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr	file:
affinity	src/sqlite/sqlite3.c	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column	file:
afpCheckReservedLock	src/sqlite/sqlite3.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpClose	src/sqlite/sqlite3.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpLock	src/sqlite/sqlite3.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLockingContext	src/sqlite/sqlite3.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	src/sqlite/sqlite3.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpSetLock	src/sqlite/sqlite3.c	/^static int afpSetLock($/;"	f	file:
afpUnlock	src/sqlite/sqlite3.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpfsByteRangeLock2FSCTL	src/sqlite/sqlite3.c	32940;"	d	file:
aggregate_context	src/include/sqlite/sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines
aggregate_context	src/sqlite/sqlite3.c	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_count	src/include/sqlite/sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
aggregate_count	src/sqlite/sqlite3.c	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
ai	src/sqlite/sqlite3.c	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::p4union	file:
aiClass	src/sqlite/sqlite3.c	/^static const unsigned char aiClass[] = {$/;"	v	file:
aiCol	src/sqlite/sqlite3.c	/^    int *aiCol;                               \/* array of column indexes *\/$/;"	m	union:Walker::__anon20	file:
aiCol	src/sqlite/sqlite3.c	/^  int aiCol[1];$/;"	m	struct:Fts5Colset	file:
aiColumn	src/sqlite/sqlite3.c	/^  i16 *aiColumn;           \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index	file:
aiColumn	src/sqlite/sqlite3.c	/^  i16 aiColumn[11];          \/* Corresponding column number in the eq-class *\/$/;"	m	struct:WhereScan	file:
aiCur	src/sqlite/sqlite3.c	/^  int aiCur[11];             \/* Cursors in the equivalence class *\/$/;"	m	struct:WhereScan	file:
aiCurOnePass	src/sqlite/sqlite3.c	/^  int aiCurOnePass[2];      \/* OP_OpenWrite cursors for the ONEPASS opt *\/$/;"	m	struct:WhereInfo	file:
aiException	src/sqlite/sqlite3.c	/^  int *aiException;$/;"	m	struct:Unicode61Tokenizer	file:
aiException	src/sqlite/sqlite3.c	/^  int *aiException;$/;"	m	struct:unicode_tokenizer	file:
aiFreelist	src/sqlite/sqlite3.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiHash	src/sqlite/sqlite3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiIdx	src/sqlite/sqlite3.c	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH-1];     \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor	file:
aiIndent	src/sqlite/shell.c	/^  int *aiIndent;         \/* Array of indents used in MODE_Explain *\/$/;"	m	struct:ShellState	file:
aiOvfl	src/sqlite/sqlite3.c	/^  u16 aiOvfl[4];       \/* Insert the i-th overflow cell before the aiOvfl-th$/;"	m	struct:MemPage	file:
aiRowEst	src/sqlite/sqlite3.c	/^  tRowcnt *aiRowEst;       \/* Non-logarithmic stat1 data for this index *\/$/;"	m	struct:Index	file:
aiRowLogEst	src/sqlite/sqlite3.c	/^  LogEst *aiRowLogEst;     \/* From ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index	file:
aiSmall	src/sqlite/sqlite3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
aiSrcOrder	src/sqlite/sqlite3.c	/^  int *aiSrcOrder;                \/* src table col -> target table col *\/$/;"	m	struct:RbuObjIter	file:
alarmBusy	src/sqlite/sqlite3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmThreshold	src/sqlite/sqlite3.c	/^  sqlite3_int64 alarmThreshold; \/* The soft heap limit *\/$/;"	m	struct:Mem0Global	file:
allSpaces	src/sqlite/sqlite3.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
allocSpace	src/sqlite/sqlite3.c	/^static void *allocSpace($/;"	f	file:
allocVdbe	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE Vdbe *allocVdbe(Parse *pParse){$/;"	f	file:
allocateBtreePage	src/sqlite/sqlite3.c	/^static int allocateBtreePage($/;"	f	file:
allocateCursor	src/sqlite/sqlite3.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateIndexInfo	src/sqlite/sqlite3.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateSpace	src/sqlite/sqlite3.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateTempSpace	src/sqlite/sqlite3.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
allocated_	src/include/table/tuple.h	/^  bool allocated_; \/\/ is allocated?$/;"	m	class:cmudb::Tuple
allowedOp	src/sqlite/sqlite3.c	/^static int allowedOp(int op){$/;"	f	file:
also_run_disabled_tests_	third_party/gmock/gmock-gtest-all.cc	/^  bool also_run_disabled_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
anDLt	src/sqlite/sqlite3.c	/^  tRowcnt *anDLt;                 \/* sqlite_stat4.nDLt *\/$/;"	m	struct:Stat4Sample	file:
anDLt	src/sqlite/sqlite3.c	/^  tRowcnt *anDLt;   \/* Est. number of distinct keys less than this sample *\/$/;"	m	struct:IndexSample	file:
anEq	src/sqlite/sqlite3.c	/^  tRowcnt *anEq;                  \/* sqlite_stat4.nEq *\/$/;"	m	struct:Stat4Sample	file:
anEq	src/sqlite/sqlite3.c	/^  tRowcnt *anEq;    \/* Est. number of rows where the key equals this sample *\/$/;"	m	struct:IndexSample	file:
anExec	src/sqlite/sqlite3.c	/^  i64 *anExec;            \/* Event counters from parent frame *\/$/;"	m	struct:VdbeFrame	file:
anExec	src/sqlite/sqlite3.c	/^  i64 *anExec;            \/* Number of times each op has been executed *\/$/;"	m	struct:Vdbe	file:
anLt	src/sqlite/sqlite3.c	/^  tRowcnt *anLt;                  \/* sqlite_stat4.nLt *\/$/;"	m	struct:Stat4Sample	file:
anLt	src/sqlite/sqlite3.c	/^  tRowcnt *anLt;    \/* Est. number of rows where key is less than this sample *\/$/;"	m	struct:IndexSample	file:
anOutput	src/sqlite/sqlite3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anQueue	src/include/sqlite/sqlite3.h	/^unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
anQueue	src/sqlite/sqlite3.c	/^  u32 anQueue[RTREE_MAX_DEPTH+1];   \/* Number of queued entries by iLevel *\/$/;"	m	struct:RtreeCursor	file:
anQueue	src/sqlite/sqlite3.c	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
anStat	src/sqlite/sqlite3.c	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside	file:
analysisInfo	src/sqlite/sqlite3.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	src/sqlite/sqlite3.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisLoader	src/sqlite/sqlite3.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analyzeAggregate	src/sqlite/sqlite3.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregatesInSelect	src/sqlite/sqlite3.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeAggregatesInSelectEnd	src/sqlite/sqlite3.c	/^static void analyzeAggregatesInSelectEnd(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeDatabase	src/sqlite/sqlite3.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeOneTable	src/sqlite/sqlite3.c	/^static void analyzeOneTable($/;"	f	file:
analyzeTable	src/sqlite/sqlite3.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
apArg	src/sqlite/sqlite3.c	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe	file:
apArg	src/sqlite/sqlite3.c	/^  sqlite3_value **apArg;   \/* The argument values *\/$/;"	m	struct:PrintfArguments	file:
apCell	src/sqlite/sqlite3.c	/^  u8 **apCell;            \/* All cells begin balanced *\/$/;"	m	struct:CellArray	file:
apChange	src/sqlite/sqlite3.c	/^  SessionChange **apChange;       \/* Hash table buckets *\/$/;"	m	struct:SessionTable	file:
apChild	src/sqlite/sqlite3.c	/^  Fts5ExprNode *apChild[1];       \/* Array of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
apCsr	src/sqlite/sqlite3.c	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame	file:
apCsr	src/sqlite/sqlite3.c	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe	file:
apExprPhrase	src/sqlite/sqlite3.c	/^  Fts5ExprPhrase **apExprPhrase;  \/* Pointers to phrase objects *\/$/;"	m	struct:Fts5Expr	file:
apHash	src/sqlite/sqlite3.c	/^  Fts5TermsetEntry *apHash[512];$/;"	m	struct:Fts5Termset	file:
apHash	src/sqlite/sqlite3.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apOvfl	src/sqlite/sqlite3.c	/^  u8 *apOvfl[4];       \/* Pointers to the body of overflow cells *\/$/;"	m	struct:MemPage	file:
apPage	src/sqlite/sqlite3.c	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH]; \/* Pages from root to current page *\/$/;"	m	struct:BtCursor	file:
apPhrase	src/sqlite/sqlite3.c	/^  Fts5ExprPhrase **apPhrase;      \/* Array of all phrases *\/$/;"	m	struct:Fts5Parse	file:
apPhrase	src/sqlite/sqlite3.c	/^  Fts5ExprPhrase *apPhrase[1];    \/* Array of phrase pointers *\/$/;"	m	struct:Fts5ExprNearset	file:
apRankArg	src/sqlite/sqlite3.c	/^  sqlite3_value **apRankArg;      \/* Array of trailing arguments *\/$/;"	m	struct:Fts5Cursor	file:
apRegion	src/sqlite/sqlite3.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apSegment	src/sqlite/sqlite3.c	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader	file:
apShm	src/sqlite/sqlite3.c	/^  char **apShm;                   \/* Array of mmap'd *-shm regions *\/$/;"	m	struct:rbu_file	file:
apSqlParam	src/include/sqlite/sqlite3.h	/^sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
apSqlParam	src/sqlite/sqlite3.c	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
apSqlParam	src/sqlite/sqlite3.c	/^  sqlite3_value **apSqlParam; \/* Original SQL parameter values *\/$/;"	m	struct:RtreeMatchArg	file:
apSub	src/sqlite/sqlite3.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon27	file:
apSub	src/sqlite/sqlite3.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apTrigger	src/sqlite/sqlite3.c	/^  Trigger *apTrigger[2];\/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey	file:
apValue	src/sqlite/sqlite3.c	/^  sqlite3_value **apValue;        \/* old.* and new.* values *\/$/;"	m	struct:sqlite3_changeset_iter	file:
apVtabLock	src/sqlite/sqlite3.c	/^  Table **apVtabLock;       \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse	file:
apWiData	src/sqlite/sqlite3.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
api	src/sqlite/sqlite3.c	/^  fts5_api api;                   \/* User visible part of object (see fts5.h) *\/$/;"	m	struct:Fts5Global	file:
apiOomError	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int apiOomError(sqlite3 *db){$/;"	f	file:
appendText	src/sqlite/shell.c	/^static void appendText(ShellText *p, char const *zAppend, char quote){$/;"	f	file:
applyAffinity	src/sqlite/sqlite3.c	/^static void applyAffinity($/;"	f	file:
applyNumericAffinity	src/sqlite/sqlite3.c	/^static void applyNumericAffinity(Mem *pRec, int bTryForInt){$/;"	f	file:
approx	src/sqlite/sqlite3.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
argc	src/sqlite/sqlite3.c	/^  u8 argc;                \/* Number of arguments *\/$/;"	m	struct:sqlite3_context	file:
args_	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<char*> args_;$/;"	m	class:testing::internal::Arguments	file:
argv	src/sqlite/sqlite3.c	/^  sqlite3_value *argv[1]; \/* Argument set *\/$/;"	m	struct:sqlite3_context	file:
argv	third_party/gmock/gmock-gtest-all.cc	/^  char* const* argv;  \/\/ Command-line arguments for the child's call to exec$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
argvIndex	src/include/sqlite/sqlite3.h	/^int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
argvIndex	src/sqlite/sqlite3.c	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
array	src/include/page/b_plus_tree_internal_page.h	/^  MappingType array[0];$/;"	m	class:cmudb::BPlusTreeInternalPage
array	src/include/page/b_plus_tree_leaf_page.h	/^  MappingType array[0];$/;"	m	class:cmudb::BPlusTreeLeafPage
array_	third_party/gmock/gtest/gtest.h	/^  const Element* array_;$/;"	m	class:testing::internal::NativeArray
array_	third_party/gmock/gtest/gtest.h	/^  std::vector<TestPartResult> array_;$/;"	m	class:testing::TestPartResultArray
asciiFold	src/sqlite/sqlite3.c	/^static void asciiFold(char *aOut, const char *aIn, int nByte){$/;"	f	file:
ascii_read_one_field	src/sqlite/shell.c	/^static char *SQLITE_CDECL ascii_read_one_field(ImportCtx *p){$/;"	f	file:
assertCellInfo	src/sqlite/sqlite3.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	src/sqlite/sqlite3.c	63776;"	d	file:
assertColumnName	src/sqlite/sqlite3.c	/^static void assertColumnName(sqlite3_stmt *pStmt, int iCol, const char *zName){$/;"	f	file:
assertColumnName	src/sqlite/sqlite3.c	172836;"	d	file:
assertMutexHeld	src/sqlite/sqlite3.c	145301;"	d	file:
assertParentIndex	src/sqlite/sqlite3.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	src/sqlite/sqlite3.c	64315;"	d	file:
assertTruncateConstraint	src/sqlite/sqlite3.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	src/sqlite/sqlite3.c	51280;"	d	file:
assertTruncateConstraintCb	src/sqlite/sqlite3.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assert_nc	src/sqlite/sqlite3.c	183224;"	d	file:
assert_nc	src/sqlite/sqlite3.c	183226;"	d	file:
assert_pager_state	src/sqlite/sqlite3.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
atEOF	src/sqlite/sqlite3.c	/^  u8 atEOF;                         \/* True if at end of search *\/$/;"	m	struct:RtreeCursor	file:
attachBackupObject	src/sqlite/sqlite3.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachFunc	src/sqlite/sqlite3.c	/^static void attachFunc($/;"	f	file:
auth	src/sqlite/sqlite3.c	/^  sqlite3_userauth auth;        \/* User authentication information *\/$/;"	m	struct:sqlite3	file:
authLevel	src/sqlite/sqlite3.c	/^  u8 authLevel;                 \/* Current authentication level *\/$/;"	m	struct:sqlite3_userauth	file:
autoCommit	src/sqlite/sqlite3.c	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3	file:
autoEQP	src/sqlite/shell.c	/^  int autoEQP;           \/* Run EXPLAIN QUERY PLAN prior to seach SQL stmt *\/$/;"	m	struct:ShellState	file:
autoExplain	src/sqlite/shell.c	/^  int autoExplain;       \/* Automatically turn on .explain mode *\/$/;"	m	struct:ShellState	file:
autoIncBegin	src/sqlite/sqlite3.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	src/sqlite/sqlite3.c	109713;"	d	file:
autoIncStep	src/sqlite/sqlite3.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	src/sqlite/sqlite3.c	109714;"	d	file:
autoIncrementEnd	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void autoIncrementEnd(Parse *pParse){$/;"	f	file:
autoVacuum	src/sqlite/sqlite3.c	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
autoVacuumCommit	src/sqlite/sqlite3.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
auto_extension	src/include/sqlite/sqlite3ext.h	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
auto_extension	src/sqlite/sqlite3.c	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines	file:
autolockIoFinder	src/sqlite/sqlite3.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinderImpl	src/sqlite/sqlite3.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
avgFinalize	src/sqlite/sqlite3.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
avgdl	src/sqlite/sqlite3.c	/^  double avgdl;                   \/* Average number of tokens in each row *\/$/;"	m	struct:Fts5Bm25Data	file:
azArg	src/sqlite/sqlite3.c	/^  char *azArg[2];           \/* Value of the argument and schema *\/$/;"	m	struct:PragmaVtabCursor	file:
azCol	src/sqlite/sqlite3.c	/^  char **azCol;                   \/* Column names *\/$/;"	m	struct:Fts5Config	file:
azCol	src/sqlite/sqlite3.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azCol	src/sqlite/sqlite3.c	/^  const char **azCol;             \/* Array of column names *\/$/;"	m	struct:SessionApplyCtx	file:
azCol	src/sqlite/sqlite3.c	/^  const char **azCol;             \/* Column names *\/$/;"	m	struct:SessionTable	file:
azColl	src/sqlite/sqlite3.c	/^  const char **azColl;     \/* Array of collation sequence names for index *\/$/;"	m	struct:Index	file:
azColumn	src/sqlite/sqlite3.c	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table	file:
azFileLock	src/sqlite/sqlite3.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azFilter	src/sqlite/shell.c	/^  char **azFilter;         \/* Array of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
azModuleArg	src/sqlite/sqlite3.c	/^  char **azModuleArg;  \/* 0: module 1: schema 2: vtab name 3...: args *\/$/;"	m	struct:Table	file:
azResult	src/sqlite/sqlite3.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azTblCol	src/sqlite/sqlite3.c	/^  char **azTblCol;                \/* Array of unquoted target column names *\/$/;"	m	struct:RbuObjIter	file:
azTblType	src/sqlite/sqlite3.c	/^  char **azTblType;               \/* Array of target column types *\/$/;"	m	struct:RbuObjIter	file:
b	src/include/sqlite/sqlite3.h	/^const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
b	src/sqlite/sqlite3.c	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter	file:
b	src/sqlite/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
bAutoAttach	src/sqlite/sqlite3.c	/^  int bAutoAttach;                \/* True to auto-attach tables *\/$/;"	m	struct:sqlite3_session	file:
bBenignMalloc	src/sqlite/sqlite3.c	/^  u8 bBenignMalloc;             \/* Do not require OOMs if true *\/$/;"	m	struct:sqlite3	file:
bBusy	src/sqlite/sqlite3.c	/^  u8 bBusy;            \/* Prevent endless loops on corrupt database files *\/$/;"	m	struct:MemPage	file:
bCleanup	src/sqlite/sqlite3.c	/^  int bCleanup;                   \/* True in "cleanup" state *\/$/;"	m	struct:RbuObjIter	file:
bColumnsize	src/sqlite/sqlite3.c	/^  int bColumnsize;                \/* "columnsize=" option value (dflt==1) *\/$/;"	m	struct:Fts5Config	file:
bConstraint	src/sqlite/sqlite3.c	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable	file:
bContent	src/sqlite/sqlite3.c	/^  u8 bContent;                    \/* Set content-flag (detail=none mode) *\/$/;"	m	struct:Fts5HashEntry	file:
bCoreMutex	src/sqlite/sqlite3.c	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bDeclared	src/sqlite/sqlite3.c	/^  int bDeclared;      \/* True after sqlite3_declare_vtab() is called *\/$/;"	m	struct:VtabCtx	file:
bDeferConstraints	src/sqlite/sqlite3.c	/^  int bDeferConstraints;          \/* True to defer constraints *\/$/;"	m	struct:SessionApplyCtx	file:
bDeferred	src/sqlite/sqlite3.c	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr	file:
bDel	src/sqlite/sqlite3.c	/^  u8 bDel;                        \/* Set delete-flag @ iSzPoslist *\/$/;"	m	struct:Fts5HashEntry	file:
bDel	src/sqlite/sqlite3.c	/^  u8 bDel;                        \/* True if the delete flag is set *\/$/;"	m	struct:Fts5SegIter	file:
bDelete	src/sqlite/sqlite3.c	/^  int bDelete;                    \/* Current write is a delete *\/$/;"	m	struct:Fts5Index	file:
bDesc	src/sqlite/sqlite3.c	/^  int bDesc;                      \/* Iterate in descending rowid order *\/$/;"	m	struct:Fts5Expr	file:
bDesc	src/sqlite/sqlite3.c	/^  int bDesc;                      \/* True for "ORDER BY rowid DESC" queries *\/$/;"	m	struct:Fts5Cursor	file:
bDesc	src/sqlite/sqlite3.c	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor	file:
bDescIdx	src/sqlite/sqlite3.c	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table	file:
bDestLocked	src/sqlite/sqlite3.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bDisable	src/sqlite/sqlite3.c	/^  u32 bDisable;           \/* Only operate the lookaside when zero *\/$/;"	m	struct:Lookaside	file:
bDoTruncate	src/sqlite/sqlite3.c	/^  u8 bDoTruncate;       \/* True to truncate db on commit *\/$/;"	m	struct:BtShared	file:
bDone	src/sqlite/sqlite3.c	/^  int bDone;                      \/* Set if thread is finished but not joined *\/$/;"	m	struct:SortSubtask	file:
bEnable	src/sqlite/sqlite3.c	/^  int bEnable;                    \/* True if currently recording *\/$/;"	m	struct:sqlite3_session	file:
bEof	src/sqlite/sqlite3.c	/^  int bEof;                       \/* Set to true after xInput finished *\/$/;"	m	struct:SessionInput	file:
bEof	src/sqlite/sqlite3.c	/^  int bEof;                       \/* Set to true when merge is finished *\/$/;"	m	struct:IncrMerger	file:
bEof	src/sqlite/sqlite3.c	/^  int bEof;                       \/* True at EOF *\/$/;"	m	struct:Fts5ExprNode	file:
bEof	src/sqlite/sqlite3.c	/^  int bEof;                       \/* True if this cursor is at EOF *\/$/;"	m	struct:Fts5VocabCursor	file:
bEof	src/sqlite/sqlite3.c	/^  int bEof;                     \/* At EOF already *\/$/;"	m	struct:Fts5DlidxLvl	file:
bEof	src/sqlite/sqlite3.c	/^  u8 bEof;                        \/* Set to true at EOF *\/$/;"	m	struct:Fts5PoslistReader	file:
bEof	src/sqlite/sqlite3.c	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr	file:
bEof	src/sqlite/sqlite3.c	/^  u8 bEof;$/;"	m	struct:Fts5IndexIter	file:
bErr	src/sqlite/sqlite3.c	/^  u8 bErr;                 \/* True if an error has been encountered *\/$/;"	m	struct:JsonString	file:
bExclusive	src/sqlite/sqlite3.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bFirst	src/sqlite/sqlite3.c	/^  int bFirst;                     \/* True if token must appear at position 0 *\/$/;"	m	struct:Fts3PhraseToken	file:
bFirstRowidInDoclist	src/sqlite/sqlite3.c	/^  u8 bFirstRowidInDoclist;        \/* True if next rowid is first in doclist *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInPage	src/sqlite/sqlite3.c	/^  u8 bFirstRowidInPage;           \/* True if next rowid is first in page *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstTermInPage	src/sqlite/sqlite3.c	/^  u8 bFirstTermInPage;            \/* True if next term will be first in leaf *\/$/;"	m	struct:Fts5SegWriter	file:
bFlag	src/sqlite/sqlite3.c	/^  u8 bFlag;                       \/* For client use (any custom purpose) *\/$/;"	m	struct:Fts5PoslistReader	file:
bFreeList	src/sqlite/sqlite3.c	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist	file:
bFts4	src/sqlite/sqlite3.c	/^  int bFts4;                          \/* True to allow FTS4-only syntax *\/$/;"	m	struct:ParseContext	file:
bFts4	src/sqlite/sqlite3.c	/^  u8 bFts4;                       \/* True for FTS4, false for FTS3 *\/$/;"	m	struct:Fts3Table	file:
bFullMutex	src/sqlite/sqlite3.c	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bGlobal	src/sqlite/sqlite3.c	/^  int bGlobal;                    \/* Set if global data is loaded *\/$/;"	m	struct:MatchinfoBuffer	file:
bHasDocsize	src/sqlite/sqlite3.c	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table	file:
bHasStat	src/sqlite/sqlite3.c	/^  u8 bHasStat;                    \/* True if %_stat table exists (2==unknown) *\/$/;"	m	struct:Fts3Table	file:
bIgnore	src/sqlite/sqlite3.c	/^  int bIgnore;$/;"	m	struct:TokenDoclist	file:
bIgnoreSavepoint	src/sqlite/sqlite3.c	/^  u8 bIgnoreSavepoint;            \/* True to ignore xSavepoint invocations *\/$/;"	m	struct:Fts3Table	file:
bIncr	src/sqlite/sqlite3.c	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase	file:
bIndirect	src/sqlite/sqlite3.c	/^  int bIndirect;                  \/* True if all changes are indirect *\/$/;"	m	struct:sqlite3_session	file:
bIndirect	src/sqlite/sqlite3.c	/^  int bIndirect;                  \/* True if current change was indirect *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bIndirect	src/sqlite/sqlite3.c	/^  int bIndirect;                  \/* True if this change is "indirect" *\/$/;"	m	struct:SessionChange	file:
bIsReader	src/sqlite/sqlite3.c	/^  bft bIsReader:1;        \/* True for statements that read *\/$/;"	m	struct:Vdbe	file:
bLine	src/sqlite/sqlite3.c	/^  u8  bLine[100];         \/* Draw vertical in column i if bLine[i] is true *\/$/;"	m	struct:TreeView	file:
bLocaltimeFault	src/sqlite/sqlite3.c	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config	file:
bLookup	src/sqlite/sqlite3.c	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader	file:
bLookup	src/sqlite/sqlite3.c	/^  u8 bLookup;                     \/* True for a lookup only *\/$/;"	m	struct:Fts3SegReader	file:
bMalloced	src/sqlite/sqlite3.c	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside	file:
bMemstat	src/sqlite/sqlite3.c	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config	file:
bMiss	src/sqlite/sqlite3.c	/^  int bMiss;$/;"	m	struct:Fts5PoslistPopulator	file:
bNoDiscard	src/sqlite/sqlite3.c	/^  int bNoDiscard;                 \/* If true, discard no data *\/$/;"	m	struct:SessionInput	file:
bNoIncrDoclist	src/sqlite/sqlite3.c	/^  int bNoIncrDoclist;$/;"	m	struct:Fts3Table	file:
bNoLeafData	src/sqlite/sqlite3.c	/^  u8 bNoLeafData;                 \/* If true, store 0 for segment size *\/$/;"	m	struct:IncrmergeWriter	file:
bNoLock	src/sqlite/sqlite3.c	/^  BOOL bNoLock;                      \/* Non-zero if locking is disabled. *\/$/;"	m	struct:winVfsAppData	file:
bNolock	src/sqlite/sqlite3.c	/^  u8 bNolock;                     \/* True to fail EXCLUSIVE locks *\/$/;"	m	struct:rbu_file	file:
bNomatch	src/sqlite/sqlite3.c	/^  int bNomatch;                   \/* True if entry is not a match *\/$/;"	m	struct:Fts5ExprNode	file:
bNotFirst	src/sqlite/shell.c	/^  int bNotFirst;      \/* True if one or more bytes already read *\/$/;"	m	struct:ImportCtx	file:
bOk	src/sqlite/sqlite3.c	/^  int bOk;                        \/* True if ok to populate *\/$/;"	m	struct:Fts5PoslistPopulator	file:
bOpenUri	src/sqlite/sqlite3.c	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config	file:
bOrderedInnerLoop	src/sqlite/sqlite3.c	/^  u8 bOrderedInnerLoop;     \/* True if only the inner-most loop is ordered *\/$/;"	m	struct:WhereInfo	file:
bOrderedInnerLoop	src/sqlite/sqlite3.c	/^  u8 bOrderedInnerLoop; \/* ORDER BY correctly sorts the inner loop *\/$/;"	m	struct:SortCtx	file:
bOwned	src/sqlite/sqlite3.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bPatch	src/sqlite/sqlite3.c	/^  int bPatch;                     \/* True to accumulate patchsets *\/$/;"	m	struct:sqlite3_changegroup	file:
bPatchset	src/sqlite/sqlite3.c	/^  int bPatchset;                  \/* True if this is a patchset *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bPending	src/sqlite/sqlite3.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPoint	src/sqlite/sqlite3.c	/^  u8 bPoint;                        \/* True if sPoint is valid *\/$/;"	m	struct:RtreeCursor	file:
bPrefix	src/sqlite/sqlite3.c	/^  int bPrefix;                    \/* True for a prefix term *\/$/;"	m	struct:Fts5ExprTerm	file:
bPrefixIndex	src/sqlite/sqlite3.c	/^  int bPrefixIndex;               \/* True to use prefix-indexes *\/$/;"	m	struct:Fts5Config	file:
bPrevDelete	src/sqlite/sqlite3.c	/^  int bPrevDelete;                \/* True if last operation was a delete *\/$/;"	m	struct:Fts3Table	file:
bPrevValid	src/sqlite/sqlite3.c	/^  int bPrevValid;                 \/* True if iPrev is valid *\/$/;"	m	struct:Fts5DlidxWriter	file:
bProcessLock	src/sqlite/sqlite3.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bPurgeable	src/sqlite/sqlite3.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bPurgeable	src/sqlite/sqlite3.c	/^  u8 bPurgeable;                      \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bRecursive	src/sqlite/sqlite3.c	/^  u8 bRecursive;             \/* True for json_tree().  False for json_each() *\/$/;"	m	struct:JsonEachCursor	file:
bRemoveDiacritic	src/sqlite/sqlite3.c	/^  int bRemoveDiacritic;           \/* True if remove_diacritics=1 is set *\/$/;"	m	struct:Unicode61Tokenizer	file:
bRemoveDiacritic	src/sqlite/sqlite3.c	/^  int bRemoveDiacritic;$/;"	m	struct:unicode_tokenizer	file:
bReserved	src/sqlite/sqlite3.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bRestart	src/sqlite/sqlite3.c	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader	file:
bRev	src/sqlite/sqlite3.c	/^  int bRev;                       \/* True to iterate in reverse order *\/$/;"	m	struct:Fts5Iter	file:
bSeekStmt	src/sqlite/sqlite3.c	/^  u8 bSeekStmt;                   \/* True if pStmt is a seek *\/$/;"	m	struct:Fts3Cursor	file:
bSkipEmpty	src/sqlite/sqlite3.c	/^  u8 bSkipEmpty;                  \/* True to skip deleted entries *\/$/;"	m	struct:Fts5Iter	file:
bSpanIsTab	src/sqlite/sqlite3.c	/^    unsigned bSpanIsTab :1; \/* zSpan holds DB.TABLE.COLUMN *\/$/;"	m	struct:ExprList::ExprList_item	file:
bStart	src/sqlite/sqlite3.c	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr	file:
bStatic	src/sqlite/sqlite3.c	/^  u8 bStatic;              \/* True if zBuf is static space *\/$/;"	m	struct:JsonString	file:
bSyncSet	src/sqlite/sqlite3.c	/^  u8 bSyncSet;         \/* True if "PRAGMA synchronous=N" has been run *\/$/;"	m	struct:Db	file:
bTermEq	src/sqlite/sqlite3.c	/^  u8 bTermEq;                     \/* True if the terms are equal *\/$/;"	m	struct:Fts5CResult	file:
bTotalsValid	src/sqlite/sqlite3.c	/^  int bTotalsValid;               \/* True if nTotalRow\/aTotalSize[] are valid *\/$/;"	m	struct:Fts5Storage	file:
bUnderPressure	src/sqlite/sqlite3.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnique	src/sqlite/sqlite3.c	/^  int bUnique;                    \/* Current index is unique *\/$/;"	m	struct:RbuObjIter	file:
bUnordered	src/sqlite/sqlite3.c	/^  unsigned bUnordered:1;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index	file:
bUseCis	src/sqlite/sqlite3.c	/^  int bUseCis;                      \/* Use covering indices for full-scans *\/$/;"	m	struct:Sqlite3Config	file:
bUseFetch	src/sqlite/sqlite3.c	/^  u8 bUseFetch;               \/* True to use xFetch() *\/$/;"	m	struct:Pager	file:
bUsePMA	src/sqlite/sqlite3.c	/^  u8 bUsePMA;                     \/* True if one or more PMAs created *\/$/;"	m	struct:VdbeSorter	file:
bUseThread	src/sqlite/sqlite3.c	/^  int bUseThread;                 \/* True to use a bg thread for this object *\/$/;"	m	struct:IncrMerger	file:
bUseThreads	src/sqlite/sqlite3.c	/^  u8 bUseThreads;                 \/* True to use background threads *\/$/;"	m	struct:VdbeSorter	file:
bVarOnly	src/sqlite/sqlite3.c	/^  int bVarOnly;       \/* Check for variable references only *\/$/;"	m	struct:DbFixer	file:
backtrace	src/sqlite/sqlite3.c	21400;"	d	file:
backtrace_symbols_fd	src/sqlite/sqlite3.c	21401;"	d	file:
backupOnePage	src/sqlite/sqlite3.c	/^static int backupOnePage($/;"	f	file:
backupTruncateFile	src/sqlite/sqlite3.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backupUpdate	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void backupUpdate($/;"	f	file:
backup_finish	src/include/sqlite/sqlite3ext.h	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_finish	src/sqlite/sqlite3.c	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_init	src/include/sqlite/sqlite3ext.h	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
backup_init	src/sqlite/sqlite3.c	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
backup_pagecount	src/include/sqlite/sqlite3ext.h	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_pagecount	src/sqlite/sqlite3.c	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_remaining	src/include/sqlite/sqlite3ext.h	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_remaining	src/sqlite/sqlite3.c	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_step	src/include/sqlite/sqlite3ext.h	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines
backup_step	src/sqlite/sqlite3.c	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines	file:
bail_on_error	src/sqlite/shell.c	/^static int bail_on_error = 0;$/;"	v	file:
balance	src/sqlite/sqlite3.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance_deeper	src/sqlite/sqlite3.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_nonroot	src/sqlite/sqlite3.c	/^static int balance_nonroot($/;"	f	file:
balance_quick	src/sqlite/sqlite3.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
base	src/sqlite/sqlite3.c	/^  Fts5IndexIter base;             \/* Base class containing output vars *\/$/;"	m	struct:Fts5Iter	file:
base	src/sqlite/sqlite3.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_file base;              \/* sqlite3_file methods *\/$/;"	m	struct:rbu_file	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:unicode_tokenizer	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:unicode_cursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vfs base;               \/* rbu VFS shim methods *\/$/;"	m	struct:rbu_vfs	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokTable	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Table	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;          \/* Base class.  Must be first *\/$/;"	m	struct:Rtree	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;        \/* Base class.  Must be first *\/$/;"	m	struct:PragmaVtab	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;  \/* Base class - must be first *\/$/;"	m	struct:stmt_vtab	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:Fts5VocabTable	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:StatTable	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;         \/* Base class.  Must be first *\/$/;"	m	struct:RtreeCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Cursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:JsonEachCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:stmt_cursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base; \/* Base class.  Must be first *\/$/;"	m	struct:PragmaVtabCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:Fts5VocabCursor	file:
base	src/sqlite/sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:StatCursor	file:
base_	src/include/vtable/virtual_table.h	/^  sqlite3_vtab base_;$/;"	m	class:cmudb::VirtualTable
base_	src/include/vtable/virtual_table.h	/^  sqlite3_vtab_cursor base_; \/* Base class - must be first *\/$/;"	m	class:cmudb::Cursor
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
base_	third_party/gmock/gtest/gtest.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
basic_manipulator	third_party/gmock/gtest/gtest.h	/^      ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) {$/;"	f	class:testing::AssertionResult
begin	src/include/vtable/virtual_table.h	/^  inline TableIterator begin() { return table_heap_->begin(GetTransaction()); }$/;"	f	class:cmudb::VirtualTable
begin	src/table/table_heap.cpp	/^TableIterator TableHeap::begin(Transaction *txn) {$/;"	f	class:cmudb::TableHeap
begin	third_party/gmock/gmock/gmock.h	/^  const_iterator begin() const { return expectations_.begin(); }$/;"	f	class:testing::ExpectationSet
begin	third_party/gmock/gtest/gtest.h	/^  const_iterator begin() const { return array_; }$/;"	f	class:testing::internal::NativeArray
begin	third_party/gmock/gtest/gtest.h	/^  iterator begin() const { return iterator(impl_->Begin()); }$/;"	f	class:testing::internal::ParamGenerator
begin10_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T10>::iterator begin10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin8_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin8_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin8_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin9_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin9_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
beginTimer	src/sqlite/shell.c	/^static void beginTimer(void){$/;"	f	file:
begin_	third_party/gmock/gtest/gtest.h	/^  const T begin_;$/;"	m	class:testing::internal::RangeGenerator
bft	src/sqlite/sqlite3.c	/^typedef unsigned bft;  \/* Bit Field Type *\/$/;"	t	file:
bigEndCksum	src/sqlite/sqlite3.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
bigint	src/include/type/value.h	/^    int64_t bigint;$/;"	m	union:cmudb::Value::Val
binCollFunc	src/sqlite/sqlite3.c	/^static int binCollFunc($/;"	f	file:
binaryCompareP5	src/sqlite/sqlite3.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryToUnaryIfNull	src/sqlite/sqlite3.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
bindText	src/sqlite/sqlite3.c	/^static int bindText($/;"	f	file:
bind_blob	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_blob	src/sqlite/sqlite3.c	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_blob64	src/include/sqlite/sqlite3ext.h	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_blob64	src/sqlite/sqlite3.c	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
bind_double	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines
bind_double	src/sqlite/sqlite3.c	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	file:
bind_int	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_int	src/sqlite/sqlite3.c	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_int64	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
bind_int64	src/sqlite/sqlite3.c	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
bind_null	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_null	src/sqlite/sqlite3.c	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_count	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
bind_parameter_count	src/sqlite/sqlite3.c	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_index	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines
bind_parameter_index	src/sqlite/sqlite3.c	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_name	src/include/sqlite/sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_parameter_name	src/sqlite/sqlite3.c	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_text	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text	src/sqlite/sqlite3.c	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text16	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text16	src/sqlite/sqlite3.c	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text64	src/include/sqlite/sqlite3ext.h	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_text64	src/sqlite/sqlite3.c	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
bind_value	src/include/sqlite/sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
bind_value	src/sqlite/sqlite3.c	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob	src/include/sqlite/sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob	src/sqlite/sqlite3.c	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob64	src/include/sqlite/sqlite3ext.h	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob64	src/sqlite/sqlite3.c	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
bits	third_party/gmock/gtest/gtest.h	/^  const Bits &bits() const { return u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
bits_	third_party/gmock/gtest/gtest.h	/^    Bits bits_;      \/\/ The bits that represent the number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
bkt_mutex	src/include/hash/extendible_hash.h	/^    mutable std::mutex bkt_mutex; \/\/Bucket lock$/;"	m	struct:cmudb::ExtendibleHash::bucket
bldFlags	src/sqlite/sqlite3.c	/^  unsigned int bldFlags;    \/* SQLITE_BLDF_* flags *\/$/;"	m	struct:WhereLoopBuilder	file:
blobGrowBuffer	src/sqlite/sqlite3.c	/^static void blobGrowBuffer(Blob *pBlob, int nMin, int *pRc){$/;"	f	file:
blobReadWrite	src/sqlite/sqlite3.c	/^static int blobReadWrite($/;"	f	file:
blobSeekToRow	src/sqlite/sqlite3.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blob_bytes	src/include/sqlite/sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_bytes	src/sqlite/sqlite3.c	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_close	src/include/sqlite/sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_close	src/sqlite/sqlite3.c	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_open	src/include/sqlite/sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines
blob_open	src/sqlite/sqlite3.c	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines	file:
blob_read	src/include/sqlite/sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_read	src/sqlite/sqlite3.c	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_reopen	src/include/sqlite/sqlite3ext.h	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
blob_reopen	src/sqlite/sqlite3.c	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
blob_write	src/include/sqlite/sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_write	src/sqlite/sqlite3.c	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
block	src/sqlite/sqlite3.c	/^  Blob block;                     \/* Current block image *\/$/;"	m	struct:NodeWriter	file:
bool_constant	third_party/gmock/gtest/gtest.h	/^struct bool_constant {$/;"	s	namespace:std::tr1
boolean	src/include/type/value.h	/^    int8_t boolean;$/;"	m	union:cmudb::Value::Val
booleanValue	src/sqlite/shell.c	/^static int booleanValue(const char *zArg){$/;"	f	file:
break_on_failure_	third_party/gmock/gmock-gtest-all.cc	/^  bool break_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
btree	src/sqlite/sqlite3.c	/^    } btree;$/;"	m	union:WhereLoop::__anon32	typeref:struct:WhereLoop::__anon32::__anon33	file:
btreeClearHasContent	src/sqlite/sqlite3.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeCreateTable	src/sqlite/sqlite3.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCursor	src/sqlite/sqlite3.c	/^static int btreeCursor($/;"	f	file:
btreeDropTable	src/sqlite/sqlite3.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeEndTransaction	src/sqlite/sqlite3.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeEnterAll	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE btreeEnterAll(sqlite3 *db){$/;"	f	file:
btreeGetHasContent	src/sqlite/sqlite3.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetPage	src/sqlite/sqlite3.c	/^static int btreeGetPage($/;"	f	file:
btreeGetUnusedPage	src/sqlite/sqlite3.c	/^static int btreeGetUnusedPage($/;"	f	file:
btreeHeapInsert	src/sqlite/sqlite3.c	/^static void btreeHeapInsert(u32 *aHeap, u32 x){$/;"	f	file:
btreeHeapPull	src/sqlite/sqlite3.c	/^static int btreeHeapPull(u32 *aHeap, u32 *pOut){$/;"	f	file:
btreeInitPage	src/sqlite/sqlite3.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeIntegrity	src/sqlite/sqlite3.c	59087;"	d	file:
btreeInvokeBusyHandler	src/sqlite/sqlite3.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeLeaveAll	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE btreeLeaveAll(sqlite3 *db){$/;"	f	file:
btreeLockCarefully	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE btreeLockCarefully(Btree *p){$/;"	f	file:
btreeMask	src/sqlite/sqlite3.c	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe	file:
btreeMoveto	src/sqlite/sqlite3.c	/^static int btreeMoveto($/;"	f	file:
btreeNext	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int btreeNext(BtCursor *pCur, int flags){$/;"	f	file:
btreePageFromDbPage	src/sqlite/sqlite3.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageLookup	src/sqlite/sqlite3.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePagecount	src/sqlite/sqlite3.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreeParseCell	src/sqlite/sqlite3.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCellAdjustSizeForOverflow	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void btreeParseCellAdjustSizeForOverflow($/;"	f	file:
btreeParseCellPtr	src/sqlite/sqlite3.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeParseCellPtrIndex	src/sqlite/sqlite3.c	/^static void btreeParseCellPtrIndex($/;"	f	file:
btreeParseCellPtrNoPayload	src/sqlite/sqlite3.c	/^static void btreeParseCellPtrNoPayload($/;"	f	file:
btreePrevious	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int btreePrevious(BtCursor *pCur, int flags){$/;"	f	file:
btreeReleaseAllCursorPages	src/sqlite/sqlite3.c	/^static void btreeReleaseAllCursorPages(BtCursor *pCur){$/;"	f	file:
btreeRestoreCursorPosition	src/sqlite/sqlite3.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeSetHasContent	src/sqlite/sqlite3.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btsFlags	src/sqlite/sqlite3.c	/^  u16 btsFlags;         \/* Boolean parameters.  See BTS_* macros below *\/$/;"	m	struct:BtShared	file:
btterm	src/sqlite/sqlite3.c	/^  Fts5Buffer btterm;              \/* Next term to insert into %_idx table *\/$/;"	m	struct:Fts5SegWriter	file:
bucket	src/include/hash/extendible_hash.h	/^  struct bucket {$/;"	s	class:cmudb::ExtendibleHash
bucket_size	src/include/hash/extendible_hash.h	/^  uint64_t bucket_size;  \/\/Maintains the local bucket size$/;"	m	class:cmudb::ExtendibleHash
buckets	src/include/hash/extendible_hash.h	/^  std::vector<bucket *> buckets;$/;"	m	class:cmudb::ExtendibleHash
buf	src/sqlite/sqlite3.c	/^  Fts5Buffer buf;                 \/* Buffer containing leaf data *\/$/;"	m	struct:Fts5PageWriter	file:
buf	src/sqlite/sqlite3.c	/^  Fts5Buffer buf;                 \/* Buffer containing page data *\/$/;"	m	struct:Fts5DlidxWriter	file:
buf	src/sqlite/sqlite3.c	/^  SessionBuffer buf;              \/* Current read buffer *\/$/;"	m	struct:SessionInput	file:
buffer_pool_manager	src/include/index/index_iterator.h	/^  BufferPoolManager *buffer_pool_manager;$/;"	m	class:cmudb::IndexIterator
buffer_pool_manager_	src/include/index/b_plus_tree.h	/^  BufferPoolManager *buffer_pool_manager_;$/;"	m	class:cmudb::BPlusTree
buffer_pool_manager_	src/include/table/table_heap.h	/^  BufferPoolManager *buffer_pool_manager_;$/;"	m	class:cmudb::TableHeap
buffer_pool_manager_	src/include/vtable/virtual_table.h	/^  BufferPoolManager *buffer_pool_manager_;$/;"	m	struct:cmudb::GlobalParameters
busy	src/sqlite/sqlite3.c	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
busyHandler	src/sqlite/sqlite3.c	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3	file:
busyTimeout	src/sqlite/sqlite3.c	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3	file:
busy_handler	src/include/sqlite/sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines
busy_handler	src/sqlite/sqlite3.c	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
busy_timeout	src/include/sqlite/sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines
busy_timeout	src/sqlite/sqlite3.c	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	file:
cColSep	src/sqlite/shell.c	/^  int cColSep;        \/* The column separator character.  (Usually ",") *\/$/;"	m	struct:ImportCtx	file:
cId	src/sqlite/sqlite3.c	/^  char cId;             \/* Symbolic ID of this loop for debugging use *\/$/;"	m	struct:WhereLoop	file:
cMode	src/sqlite/shell.c	/^  int cMode;             \/* temporary output mode for the current query *\/$/;"	m	struct:ShellState	file:
cRowSep	src/sqlite/shell.c	/^  int cRowSep;        \/* The row separator character.  (Usually "\\n") *\/$/;"	m	struct:ImportCtx	file:
cTerm	src/sqlite/shell.c	/^  int cTerm;          \/* Character that terminated the most recent field *\/$/;"	m	struct:ImportCtx	file:
cType	src/sqlite/sqlite3.c	/^static const char cType[] = {$/;"	v	file:
c_str	third_party/gmock/gtest/gtest.h	/^  const char* c_str() const { return pathname_.c_str(); }$/;"	f	class:testing::internal::FilePath
cacheCtr	src/sqlite/sqlite3.c	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe	file:
cacheEntryClear	src/sqlite/sqlite3.c	/^static void cacheEntryClear(Parse *pParse, int i){$/;"	f	file:
cacheStatus	src/sqlite/sqlite3.c	/^  u32 cacheStatus;        \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor	file:
cache_size	src/sqlite/sqlite3.c	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema	file:
cachedCellSize	src/sqlite/sqlite3.c	/^static u16 cachedCellSize(CellArray *p, int N){$/;"	f	file:
callCollNeeded	src/sqlite/sqlite3.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callFinaliser	src/sqlite/sqlite3.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
callStatGet	src/sqlite/sqlite3.c	/^static void callStatGet(Vdbe *v, int regStat4, int iParam, int regOut){$/;"	f	file:
call_count_	third_party/gmock/gmock/gmock.h	/^  int call_count_;  \/\/ How many times this expectation has been invoked.$/;"	m	class:testing::internal::ExpectationBase
callable_	third_party/gmock/gmock/gmock.h	/^    mutable CallableStorageType callable_;$/;"	m	class:testing::internal::ResultOfMatcher::Impl
callable_	third_party/gmock/gmock/gmock.h	/^  const CallableStorageType callable_;$/;"	m	class:testing::internal::ResultOfMatcher
callback	src/sqlite/shell.c	/^static int callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
caller_frame_	third_party/gmock/gmock-gtest-all.cc	/^  void* caller_frame_;$/;"	m	class:testing::internal::OsStackTraceGetter	file:
cancel_auto_extension	src/include/sqlite/sqlite3ext.h	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
cancel_auto_extension	src/sqlite/sqlite3.c	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines	file:
cannotBeFunction	src/sqlite/sqlite3.c	/^static int cannotBeFunction(Parse *pParse, struct SrcList_item *pFrom){$/;"	f	file:
capture	third_party/gmock/gtest/gtest.h	/^  void capture(T* ptr) {$/;"	f	class:testing::internal::linked_ptr
captureOutputCallback	src/sqlite/shell.c	/^static int captureOutputCallback(void *pArg, int nArg, char **azArg, char **az){$/;"	f	file:
cardinality	third_party/gmock/gmock/gmock.h	/^  const Cardinality& cardinality() const { return cardinality_; }$/;"	f	class:testing::internal::ExpectationBase
cardinality_	third_party/gmock/gmock/gmock.h	/^  Cardinality cardinality_;            \/\/ The cardinality of the expectation.$/;"	m	class:testing::internal::ExpectationBase
cardinality_specified	third_party/gmock/gmock/gmock.h	/^  bool cardinality_specified() const { return cardinality_specified_; }$/;"	f	class:testing::internal::ExpectationBase
cardinality_specified_	third_party/gmock/gmock/gmock.h	/^  bool cardinality_specified_;$/;"	m	class:testing::internal::ExpectationBase
case_sensitive_	third_party/gmock/gmock/gmock.h	/^  const bool case_sensitive_;$/;"	m	class:testing::internal::StrEqualityMatcher
catch_exceptions	third_party/gmock/gmock-gtest-all.cc	/^  bool catch_exceptions() const { return catch_exceptions_; }$/;"	f	class:testing::internal::UnitTestImpl
catch_exceptions_	third_party/gmock/gmock-gtest-all.cc	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
catch_exceptions_	third_party/gmock/gmock-gtest-all.cc	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::UnitTestImpl	file:
cb	src/sqlite/sqlite3.c	/^  RtreeGeomCallback cb;       \/* Info about the callback functions *\/$/;"	m	struct:RtreeMatchArg	file:
cdateFunc	src/sqlite/sqlite3.c	/^static void cdateFunc($/;"	f	file:
cellArea	src/sqlite/sqlite3.c	/^static RtreeDValue cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellContains	src/sqlite/sqlite3.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellGrowth	src/sqlite/sqlite3.c	/^static RtreeDValue cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellMargin	src/sqlite/sqlite3.c	/^static RtreeDValue cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellOffset	src/sqlite/sqlite3.c	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage	file:
cellOverlap	src/sqlite/sqlite3.c	/^static RtreeDValue cellOverlap($/;"	f	file:
cellSize	src/sqlite/sqlite3.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSizePtr	src/sqlite/sqlite3.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtrNoPayload	src/sqlite/sqlite3.c	/^static u16 cellSizePtrNoPayload(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellUnion	src/sqlite/sqlite3.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
chain	src/sqlite/sqlite3.c	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
chain	src/sqlite/sqlite3.c	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht	file:
changeCntOn	src/sqlite/sqlite3.c	/^  bft changeCntOn:1;      \/* True to update the change-counter *\/$/;"	m	struct:Vdbe	file:
changeCountDone	src/sqlite/sqlite3.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeTempStorage	src/sqlite/sqlite3.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changes	src/include/sqlite/sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
changes	src/sqlite/sqlite3.c	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
changes	src/sqlite/sqlite3.c	/^static void changes($/;"	f	file:
charFunc	src/sqlite/sqlite3.c	/^static void charFunc($/;"	f	file:
charMap	src/sqlite/sqlite3.c	139915;"	d	file:
charMap	src/sqlite/sqlite3.c	139918;"	d	file:
charset	src/sqlite/sqlite3.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
checkActiveVdbeCnt	src/sqlite/sqlite3.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	src/sqlite/sqlite3.c	74326;"	d	file:
checkAppendMsg	src/sqlite/sqlite3.c	/^static void checkAppendMsg($/;"	f	file:
checkColumnOverlap	src/sqlite/sqlite3.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkConstraintExprNode	src/sqlite/sqlite3.c	/^static int checkConstraintExprNode(Walker *pWalker, Expr *pExpr){$/;"	f	file:
checkConstraintUnchanged	src/sqlite/sqlite3.c	/^static int checkConstraintUnchanged(Expr *pExpr, int *aiChng, int chngRowid){$/;"	f	file:
checkList	src/sqlite/sqlite3.c	/^static void checkList($/;"	f	file:
checkListProperties	src/sqlite/sqlite3.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	src/sqlite/sqlite3.c	145346;"	d	file:
checkPage	src/sqlite/sqlite3.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkProfileCallback	src/sqlite/sqlite3.c	76599;"	d	file:
checkProfileCallback	src/sqlite/sqlite3.c	76602;"	d	file:
checkPtrmap	src/sqlite/sqlite3.c	/^static void checkPtrmap($/;"	f	file:
checkReadTransaction	src/sqlite/sqlite3.c	/^static int checkReadTransaction(sqlite3 *db, Btree *p){$/;"	f	file:
checkRef	src/sqlite/sqlite3.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage){$/;"	f	file:
checkSavepointCount	src/sqlite/sqlite3.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSchema	src/sqlite/sqlite3.c	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse	file:
checkTreePage	src/sqlite/sqlite3.c	/^static int checkTreePage($/;"	f	file:
childPtrSize	src/sqlite/sqlite3.c	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage	file:
child_handle_	third_party/gmock/gmock-gtest-all.cc	/^  AutoHandle child_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
child_pid_	third_party/gmock/gmock-gtest-all.cc	/^  pid_t child_pid_;$/;"	m	class:testing::internal::ForkingDeathTest	file:
ckBase	src/sqlite/sqlite3.c	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse	file:
ckptLock	src/sqlite/sqlite3.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptSyncFlags	src/sqlite/sqlite3.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
cksum	src/sqlite/sqlite3.c	/^  u64 cksum;$/;"	m	struct:Fts5IntegrityCtx	file:
cksumInit	src/sqlite/sqlite3.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
clearAllSharedCacheTableLocks	src/sqlite/sqlite3.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	src/sqlite/sqlite3.c	59557;"	d	file:
clearCell	src/sqlite/sqlite3.c	/^static int clearCell($/;"	f	file:
clearDatabasePage	src/sqlite/sqlite3.c	/^static int clearDatabasePage($/;"	f	file:
clearSelect	src/sqlite/sqlite3.c	/^static void clearSelect(sqlite3 *db, Select *p, int bFree){$/;"	f	file:
clearYMD_HMS_TZ	src/sqlite/sqlite3.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clear_bindings	src/include/sqlite/sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
clear_bindings	src/sqlite/sqlite3.c	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
close	src/include/sqlite/sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close	src/sqlite/sqlite3.c	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
closeAllCursors	src/sqlite/sqlite3.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closeCursorsInFrame	src/sqlite/sqlite3.c	/^static void closeCursorsInFrame(Vdbe *p){$/;"	f	file:
closePendingFds	src/sqlite/sqlite3.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closeUnixFile	src/sqlite/sqlite3.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
close_fd	third_party/gmock/gmock-gtest-all.cc	/^  int close_fd;       \/\/ File descriptor to close; the read end of a pipe$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
close_v2	src/include/sqlite/sqlite3ext.h	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close_v2	src/sqlite/sqlite3.c	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
cmdline_option_value	src/sqlite/shell.c	/^static char *cmdline_option_value(int argc, char **argv, int i){$/;"	f	file:
cmudb	src/buffer/buffer_pool_manager.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/buffer/lru_replacer.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/catalog/column.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/catalog/schema.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/concurrency/lock_manager.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/concurrency/transaction_manager.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/disk/disk_manager.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/hash/extendible_hash.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/include/buffer/buffer_pool_manager.h	/^namespace cmudb {$/;"	n
cmudb	src/include/buffer/lru_replacer.h	/^namespace cmudb {$/;"	n
cmudb	src/include/buffer/replacer.h	/^namespace cmudb {$/;"	n
cmudb	src/include/catalog/column.h	/^namespace cmudb {$/;"	n
cmudb	src/include/catalog/schema.h	/^namespace cmudb {$/;"	n
cmudb	src/include/common/config.h	/^namespace cmudb {$/;"	n
cmudb	src/include/common/exception.h	/^namespace cmudb {$/;"	n
cmudb	src/include/common/logger.h	/^namespace cmudb {$/;"	n
cmudb	src/include/common/rid.h	/^namespace cmudb {$/;"	n
cmudb	src/include/common/rwmutex.h	/^namespace cmudb {$/;"	n
cmudb	src/include/common/string_utility.h	/^namespace cmudb {$/;"	n
cmudb	src/include/concurrency/lock_manager.h	/^namespace cmudb {$/;"	n
cmudb	src/include/concurrency/transaction.h	/^namespace cmudb {$/;"	n
cmudb	src/include/concurrency/transaction_manager.h	/^namespace cmudb {$/;"	n
cmudb	src/include/disk/disk_manager.h	/^namespace cmudb {$/;"	n
cmudb	src/include/hash/extendible_hash.h	/^namespace cmudb {$/;"	n
cmudb	src/include/hash/hash_table.h	/^namespace cmudb {$/;"	n
cmudb	src/include/index/b_plus_tree.h	/^namespace cmudb {$/;"	n
cmudb	src/include/index/b_plus_tree_index.h	/^namespace cmudb {$/;"	n
cmudb	src/include/index/generic_key.h	/^namespace cmudb {$/;"	n
cmudb	src/include/index/index.h	/^namespace cmudb {$/;"	n
cmudb	src/include/index/index_iterator.h	/^namespace cmudb {$/;"	n
cmudb	src/include/page/b_plus_tree_internal_page.h	/^namespace cmudb {$/;"	n
cmudb	src/include/page/b_plus_tree_leaf_page.h	/^namespace cmudb {$/;"	n
cmudb	src/include/page/b_plus_tree_page.h	/^namespace cmudb {$/;"	n
cmudb	src/include/page/header_page.h	/^namespace cmudb {$/;"	n
cmudb	src/include/page/page.h	/^namespace cmudb {$/;"	n
cmudb	src/include/page/table_page.h	/^namespace cmudb {$/;"	n
cmudb	src/include/table/table_heap.h	/^namespace cmudb {$/;"	n
cmudb	src/include/table/table_iterator.h	/^namespace cmudb {$/;"	n
cmudb	src/include/table/tuple.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/bigint_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/boolean_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/decimal_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/integer_parent_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/integer_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/limits.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/numeric_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/smallint_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/tinyint_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/type_id.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/type_util.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/value.h	/^namespace cmudb {$/;"	n
cmudb	src/include/type/varlen_type.h	/^namespace cmudb {$/;"	n
cmudb	src/include/vtable/virtual_table.h	/^namespace cmudb {$/;"	n
cmudb	src/index/b_plus_tree.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/index/b_plus_tree_index.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/index/index_iterator.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/page/b_plus_tree_internal_page.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/page/b_plus_tree_leaf_page.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/page/b_plus_tree_page.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/page/header_page.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/page/table_page.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/table/table_heap.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/table/table_iterator.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/table/tuple.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/bigint_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/boolean_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/decimal_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/integer_parent_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/integer_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/smallint_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/tinyint_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/value.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/type/varlen_type.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	src/vtable/virtual_table.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/buffer/buffer_pool_manager_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/buffer/lru_replacer_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/common/rwmutex_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/concurrency/lock_manager_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/hash/extendible_hash_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/include/vtable/testing_vtable_util.h	/^namespace cmudb {$/;"	n
cmudb	test/index/b_plus_tree_concurrent_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/index/b_plus_tree_print_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/index/b_plus_tree_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/table/header_page_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/table/tuple_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/type/type_test.cpp	/^namespace cmudb {$/;"	n	file:
cmudb	test/vtable/virtual_table_test.cpp	/^namespace cmudb {$/;"	n	file:
cnt	src/sqlite/shell.c	/^  int cnt;               \/* Number of records displayed so far *\/$/;"	m	struct:ShellState	file:
cnt	src/sqlite/sqlite3.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	src/sqlite/sqlite3.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
cnt	src/sqlite/sqlite3.c	/^  u32 cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp	file:
codeAllEqualityTerms	src/sqlite/sqlite3.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeApplyAffinity	src/sqlite/sqlite3.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeAttach	src/sqlite/sqlite3.c	/^static void codeAttach($/;"	f	file:
codeCompare	src/sqlite/sqlite3.c	/^static int codeCompare($/;"	f	file:
codeCursorHint	src/sqlite/sqlite3.c	/^static void codeCursorHint($/;"	f	file:
codeCursorHint	src/sqlite/sqlite3.c	128325;"	d	file:
codeCursorHintCheckExpr	src/sqlite/sqlite3.c	/^static int codeCursorHintCheckExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintFixExpr	src/sqlite/sqlite3.c	/^static int codeCursorHintFixExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintIsOrFunction	src/sqlite/sqlite3.c	/^static int codeCursorHintIsOrFunction(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeDeferredSeek	src/sqlite/sqlite3.c	/^static void codeDeferredSeek($/;"	f	file:
codeDistinct	src/sqlite/sqlite3.c	/^static void codeDistinct($/;"	f	file:
codeEqualityTerm	src/sqlite/sqlite3.c	/^static int codeEqualityTerm($/;"	f	file:
codeExprOrVector	src/sqlite/sqlite3.c	/^static void codeExprOrVector(Parse *pParse, Expr *p, int iReg, int nReg){$/;"	f	file:
codeInteger	src/sqlite/sqlite3.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeOffset	src/sqlite/sqlite3.c	/^static void codeOffset($/;"	f	file:
codeReal	src/sqlite/sqlite3.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeRowTrigger	src/sqlite/sqlite3.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeTableLocks	src/sqlite/sqlite3.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	src/sqlite/sqlite3.c	100305;"	d	file:
codeTriggerProgram	src/sqlite/sqlite3.c	/^static int codeTriggerProgram($/;"	f	file:
codeVectorCompare	src/sqlite/sqlite3.c	/^static void codeVectorCompare($/;"	f	file:
colFlags	src/sqlite/sqlite3.c	/^  u8 colFlags;     \/* Boolean properties.  See COLFLAG_ defines below *\/$/;"	m	struct:Column	file:
colNamesSet	src/sqlite/sqlite3.c	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse	file:
colSeparator	src/sqlite/shell.c	/^  char colSeparator[20]; \/* Column separator character for several modes *\/$/;"	m	struct:ShellState	file:
colUsed	src/include/sqlite/sqlite3.h	/^sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info
colUsed	src/sqlite/sqlite3.c	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item	file:
colUsed	src/sqlite/sqlite3.c	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info	file:
colWidth	src/sqlite/shell.c	/^  int colWidth[100];     \/* Requested width of each column when in column mode*\/$/;"	m	struct:ShellState	file:
colWidth	src/sqlite/shell.c	/^  int colWidth[100];  \/* Column widths prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
collationMatch	src/sqlite/sqlite3.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collation_needed	src/include/sqlite/sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed	src/sqlite/sqlite3.c	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collation_needed16	src/include/sqlite/sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed16	src/sqlite/sqlite3.c	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
color_	third_party/gmock/gmock-gtest-all.cc	/^  std::string color_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
columnIndex	src/sqlite/sqlite3.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnMallocFailure	src/sqlite/sqlite3.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMem	src/sqlite/sqlite3.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnName	src/sqlite/sqlite3.c	/^static const void *columnName($/;"	f	file:
columnNullValue	src/sqlite/sqlite3.c	/^static const Mem *columnNullValue(void){$/;"	f	file:
columnType	src/sqlite/sqlite3.c	118435;"	d	file:
columnType	src/sqlite/sqlite3.c	118437;"	d	file:
columnTypeImpl	src/sqlite/sqlite3.c	/^static const char *columnTypeImpl($/;"	f	file:
column_blob	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_blob	src/sqlite/sqlite3.c	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes	src/include/sqlite/sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes	src/sqlite/sqlite3.c	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes16	src/include/sqlite/sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes16	src/sqlite/sqlite3.c	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_count	src/include/sqlite/sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
column_count	src/sqlite/sqlite3.c	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name	src/include/sqlite/sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name	src/sqlite/sqlite3.c	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name16	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name16	src/sqlite/sqlite3.c	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype	src/include/sqlite/sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines
column_decltype	src/sqlite/sqlite3.c	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype16	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_decltype16	src/sqlite/sqlite3.c	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_double	src/include/sqlite/sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_double	src/sqlite/sqlite3.c	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int	src/include/sqlite/sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int	src/sqlite/sqlite3.c	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int64	src/include/sqlite/sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int64	src/sqlite/sqlite3.c	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_name	src/include/catalog/column.h	/^  std::string column_name;$/;"	m	class:cmudb::Column
column_name	src/include/sqlite/sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name	src/sqlite/sqlite3.c	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name16	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name16	src/sqlite/sqlite3.c	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_offset	src/include/catalog/column.h	/^  int32_t column_offset = -1;$/;"	m	class:cmudb::Column
column_origin_name	src/include/sqlite/sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name	src/sqlite/sqlite3.c	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name16	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name16	src/sqlite/sqlite3.c	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name	src/include/sqlite/sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name	src/sqlite/sqlite3.c	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name16	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name16	src/sqlite/sqlite3.c	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_text	src/include/sqlite/sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text	src/sqlite/sqlite3.c	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text16	src/include/sqlite/sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text16	src/sqlite/sqlite3.c	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_type	src/include/catalog/column.h	/^  TypeId column_type; \/\/  = TypeId::INVALID;$/;"	m	class:cmudb::Column
column_type	src/include/sqlite/sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_type	src/sqlite/sqlite3.c	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_value	src/include/sqlite/sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_value	src/sqlite/sqlite3.c	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
columns	src/include/catalog/schema.h	/^  std::vector<Column> columns;$/;"	m	class:cmudb::Schema
columnsInIndex	src/sqlite/sqlite3.c	/^static Bitmask columnsInIndex(Index *pIdx){$/;"	f	file:
commit_hook	src/include/sqlite/sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
commit_hook	src/sqlite/sqlite3.c	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
comparator_	src/include/index/b_plus_tree.h	/^  KeyComparator comparator_;$/;"	m	class:cmudb::BPlusTree
comparator_	src/include/index/b_plus_tree_index.h	/^  KeyComparator comparator_;$/;"	m	class:cmudb::BPlusTreeIndex
comparator_	third_party/gmock/gmock/gmock.h	/^    const Comparator comparator_;$/;"	m	class:testing::internal::WhenSortedByMatcher::Impl
comparator_	third_party/gmock/gmock/gmock.h	/^  const Comparator comparator_;$/;"	m	class:testing::internal::WhenSortedByMatcher
compare2pow63	src/sqlite/sqlite3.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compareInfo	src/sqlite/sqlite3.c	/^struct compareInfo {$/;"	s	file:
comparisonAffinity	src/sqlite/sqlite3.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
compileoption_get	src/include/sqlite/sqlite3ext.h	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines
compileoption_get	src/sqlite/sqlite3.c	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_used	src/include/sqlite/sqlite3ext.h	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines
compileoption_used	src/sqlite/sqlite3.c	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
compileoptiongetFunc	src/sqlite/sqlite3.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptionusedFunc	src/sqlite/sqlite3.c	/^static void compileoptionusedFunc($/;"	f	file:
complete	src/include/sqlite/sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines
complete	src/sqlite/sqlite3.c	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete16	src/include/sqlite/sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines
complete16	src/sqlite/sqlite3.c	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	file:
computeCellSize	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE u16 computeCellSize(CellArray *p, int N){$/;"	f	file:
computeHMS	src/sqlite/sqlite3.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeJD	src/sqlite/sqlite3.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeLimitRegisters	src/sqlite/sqlite3.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeNumericType	src/sqlite/sqlite3.c	/^static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){$/;"	f	file:
computeYMD	src/sqlite/sqlite3.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD_HMS	src/sqlite/sqlite3.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
conchFile	src/sqlite/sqlite3.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	src/sqlite/sqlite3.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	src/sqlite/sqlite3.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
cond_t	src/include/common/rwmutex.h	/^  typedef std::condition_variable cond_t;$/;"	t	class:cmudb::RWMutex
connectionIsBusy	src/sqlite/sqlite3.c	/^static int connectionIsBusy(sqlite3 *db){$/;"	f	file:
const_iterator	third_party/gmock/gmock/gmock.h	/^  typedef Expectation::Set::const_iterator const_iterator;$/;"	t	class:testing::ExpectationSet
const_iterator	third_party/gmock/gtest/gtest.h	/^  typedef const Element* const_iterator;$/;"	t	class:testing::internal::NativeArray
const_reference	third_party/gmock/gmock/gmock.h	/^  typedef const type const_reference;$/;"	t	class:testing::internal::StlContainerView
const_reference	third_party/gmock/gmock/gmock.h	/^  typedef const type& const_reference;$/;"	t	class:testing::internal::StlContainerView
const_varlen	src/include/type/value.h	/^    const char *const_varlen;$/;"	m	union:cmudb::Value::Val
constraintName	src/sqlite/sqlite3.c	/^  Token constraintName;\/* Name of the constraint currently being parsed *\/$/;"	m	struct:Parse	file:
constraints	src/sqlite/sqlite3.c	/^  SessionBuffer constraints;      \/* Deferred constraints are stored here *\/$/;"	m	struct:SessionApplyCtx	file:
constructAutomaticIndex	src/sqlite/sqlite3.c	/^static void constructAutomaticIndex($/;"	f	file:
container_	src/include/index/b_plus_tree_index.h	/^  BPlusTree<KeyType, ValueType, KeyComparator> container_;$/;"	m	class:cmudb::BPlusTreeIndex
container_	third_party/gmock/gtest/gtest.h	/^  const ContainerType container_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator
contextMalloc	src/sqlite/sqlite3.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
context_db_handle	src/include/sqlite/sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
context_db_handle	src/sqlite/sqlite3.c	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
continuePrompt	src/sqlite/shell.c	/^static char continuePrompt[20]; \/* Continuation prompt. default: "   ...> " *\/$/;"	v	file:
convertCompoundSelectToSubquery	src/sqlite/sqlite3.c	/^static int convertCompoundSelectToSubquery(Walker *pWalker, Select *p){$/;"	f	file:
convertToWithoutRowidTable	src/sqlite/sqlite3.c	/^static void convertToWithoutRowidTable(Parse *pParse, Table *pTab){$/;"	f	file:
cookieMask	src/sqlite/sqlite3.c	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse	file:
copy	third_party/gmock/gtest/gtest.h	/^  template <typename U> void copy(linked_ptr<U> const* ptr) {$/;"	f	class:testing::internal::linked_ptr
copyKey	src/sqlite/sqlite3.c	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash	file:
copyNodeContent	src/sqlite/sqlite3.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyPayload	src/sqlite/sqlite3.c	/^static int copyPayload($/;"	f	file:
copy_stemmer	src/sqlite/sqlite3.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
corruptSchema	src/sqlite/sqlite3.c	/^static void corruptSchema($/;"	f	file:
costMult	src/sqlite/sqlite3.c	/^  LogEst costMult;     \/* Cost multiplier for using this table *\/$/;"	m	struct:Table	file:
count	src/sqlite/sqlite3.c	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht	file:
count	src/sqlite/sqlite3.c	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
count	src/sqlite/sqlite3.c	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash	file:
count	src/sqlite/sqlite3.c	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash	file:
count	third_party/gmock/gmock/gmock.h	/^  size_t count() const { return matchers_.size(); }$/;"	f	class:testing::internal::ElementsAreMatcherImpl
countFinalize	src/sqlite/sqlite3.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countStep	src/sqlite/sqlite3.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countValidCursors	src/sqlite/sqlite3.c	/^static int countValidCursors(BtShared *pBt, int wrOnly){$/;"	f	file:
count_	test/common/rwmutex_test.cpp	/^  int count_;$/;"	m	class:cmudb::Counter	file:
covered	src/sqlite/sqlite3.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
createAggContext	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void *createAggContext(sqlite3_context *p, int nByte){$/;"	f	file:
createCollation	src/sqlite/sqlite3.c	/^static int createCollation($/;"	f	file:
createMask	src/sqlite/sqlite3.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createModule	src/sqlite/sqlite3.c	/^static int createModule($/;"	f	file:
createSelftestTable	src/sqlite/shell.c	/^static void createSelftestTable(ShellState *p){$/;"	f	file:
createTableStmt	src/sqlite/sqlite3.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
create_collation	src/include/sqlite/sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation	src/sqlite/sqlite3.c	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation16	src/include/sqlite/sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation16	src/sqlite/sqlite3.c	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation_v2	src/include/sqlite/sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation_v2	src/sqlite/sqlite3.c	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function	src/include/sqlite/sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function	src/sqlite/sqlite3.c	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function16	src/include/sqlite/sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function16	src/sqlite/sqlite3.c	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function_v2	src/include/sqlite/sqlite3ext.h	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function_v2	src/sqlite/sqlite3.c	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_module	src/include/sqlite/sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines
create_module	src/sqlite/sqlite3.c	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	file:
create_module_v2	src/include/sqlite/sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines
create_module_v2	src/sqlite/sqlite3.c	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines	file:
csr	src/sqlite/sqlite3.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
csrflags	src/sqlite/sqlite3.c	/^  int csrflags;                   \/* Mask of cursor flags (see below) *\/$/;"	m	struct:Fts5Cursor	file:
csv_read_one_field	src/sqlite/shell.c	/^static char *SQLITE_CDECL csv_read_one_field(ImportCtx *p){$/;"	f	file:
ctimeFunc	src/sqlite/sqlite3.c	/^static void ctimeFunc($/;"	f	file:
ctimestampFunc	src/sqlite/sqlite3.c	/^static void ctimestampFunc($/;"	f	file:
ctrlFlags	src/sqlite/sqlite3.c	/^  u8 ctrlFlags;           \/* Flags.  See WINFILE_* below *\/$/;"	m	struct:winFile	file:
ctrlFlags	src/sqlite/sqlite3.c	/^  unsigned short int ctrlFlags;       \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
curFlags	src/sqlite/sqlite3.c	/^  u8 curFlags;              \/* zero or more BTCF_* flags defined below *\/$/;"	m	struct:BtCursor	file:
curIntKey	src/sqlite/sqlite3.c	/^  u8 curIntKey;             \/* Value of apPage[0]->intKey *\/$/;"	m	struct:BtCursor	file:
curPagerFlags	src/sqlite/sqlite3.c	/^  u8 curPagerFlags;         \/* Flags to send to sqlite3PagerGet() *\/$/;"	m	struct:BtCursor	file:
current	src/sqlite/sqlite3.c	/^  Stat4Sample current;      \/* Current row as a Stat4Sample *\/$/;"	m	struct:Stat4Accum	file:
current10_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T10>::iterator current10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current1_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current2_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current3_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current4_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current5_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current5_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current5_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current5_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current5_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current5_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current6_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current6_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current6_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current6_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current6_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current7_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current7_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current7_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current7_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current8_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current8_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current8_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current9_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current9_	third_party/gmock/gtest/gtest.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
currentCount	src/sqlite/sqlite3.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentOut	src/sqlite/sqlite3.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentTimeFunc	src/sqlite/sqlite3.c	/^static void currentTimeFunc($/;"	f	file:
current_index	src/include/index/index_iterator.h	/^  int current_index;$/;"	m	class:cmudb::IndexIterator
current_page	src/include/index/index_iterator.h	/^  B_PLUS_TREE_LEAF_PAGE_TYPE *current_page;$/;"	m	class:cmudb::IndexIterator
current_spec	third_party/gmock/gmock/gmock.h	/^  MockSpec<F>& current_spec() { return current_spec_; }$/;"	f	class:testing::internal::FunctionMockerBase
current_spec_	third_party/gmock/gmock/gmock.h	/^  MockSpec<F> current_spec_;$/;"	m	class:testing::internal::FunctionMockerBase
current_test_case	third_party/gmock/gmock-gtest-all.cc	/^  const TestCase* current_test_case() const { return current_test_case_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_case_	third_party/gmock/gmock-gtest-all.cc	/^  TestCase* current_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	file:
current_test_info	third_party/gmock/gmock-gtest-all.cc	/^  TestInfo* current_test_info() { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info	third_party/gmock/gmock-gtest-all.cc	/^  const TestInfo* current_test_info() const { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info_	third_party/gmock/gmock-gtest-all.cc	/^  TestInfo* current_test_info_;$/;"	m	class:testing::internal::UnitTestImpl	file:
current_test_result	third_party/gmock/gmock-gtest-all.cc	/^TestResult* UnitTestImpl::current_test_result() {$/;"	f	class:testing::internal::UnitTestImpl
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current_value_	third_party/gmock/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
cursorHoldsMutex	src/sqlite/sqlite3.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cursorOwnsBtShared	src/sqlite/sqlite3.c	/^static int cursorOwnsBtShared(BtCursor *p){$/;"	f	file:
cycles	src/sqlite/sqlite3.c	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp	file:
data	src/include/index/generic_key.h	/^  char data[KeySize];$/;"	m	class:cmudb::GenericKey
data	src/sqlite/sqlite3.c	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem	file:
data	src/sqlite/sqlite3.c	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
data_	src/include/page/page.h	/^  char data_[PAGE_SIZE]; \/\/ actual data$/;"	m	class:cmudb::Page
data_	src/include/table/tuple.h	/^  char *data_;$/;"	m	class:cmudb::Tuple
data_	third_party/gmock/gtest/gtest.h	/^  AssertHelperData* const data_;$/;"	m	class:testing::internal::AssertHelper
data_count	src/include/sqlite/sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
data_count	src/sqlite/sqlite3.c	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
databaseIsUnmoved	src/sqlite/sqlite3.c	/^static int databaseIsUnmoved(Pager *pPager){$/;"	f	file:
dateFunc	src/sqlite/sqlite3.c	/^static void dateFunc($/;"	f	file:
datetimeError	src/sqlite/sqlite3.c	/^static void datetimeError(DateTime *p){$/;"	f	file:
datetimeFunc	src/sqlite/sqlite3.c	/^static void datetimeFunc($/;"	f	file:
db	src/sqlite/shell.c	/^  sqlite3 *db;           \/* The database *\/$/;"	m	struct:ShellState	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                    \/* Associated database connection *\/$/;"	m	struct:Fts5Global	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                    \/* Database connection *\/$/;"	m	struct:VdbeSorter	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5Config	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5VocabTable	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                    \/* Database handle session is attached to *\/$/;"	m	struct:sqlite3_session	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;               \/* Database connection for this cursor *\/$/;"	m	struct:stmt_cursor	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;              \/* Database connection, for malloc() *\/$/;"	m	struct:Stat4Accum	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;              \/* The database connection to which it belongs *\/$/;"	m	struct:PragmaVtab	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;        \/* Database connection for this stmt vtab *\/$/;"	m	struct:stmt_vtab	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:sqlite3_value	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon19	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:SessionApplyCtx	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:StatTable	file:
db	src/sqlite/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
dbFileSize	src/sqlite/sqlite3.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileVers	src/sqlite/sqlite3.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbHintSize	src/sqlite/sqlite3.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbMain	src/sqlite/sqlite3.c	/^  sqlite3 *dbMain;                \/* target database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbMallocRawFinish	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n){$/;"	f	file:
dbOptFlags	src/sqlite/sqlite3.c	/^  u16 dbOptFlags;               \/* Flags to enable\/disable optimizations *\/$/;"	m	struct:sqlite3	file:
dbOrigSize	src/sqlite/sqlite3.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbPath	src/sqlite/sqlite3.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	src/sqlite/sqlite3.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbRbu	src/sqlite/sqlite3.c	/^  sqlite3 *dbRbu;                 \/* rbu database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbReallocFinish	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void *dbReallocFinish(sqlite3 *db, void *p, u64 n){$/;"	f	file:
dbSize	src/sqlite/sqlite3.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbUpdate	src/sqlite/sqlite3.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
db_cacheflush	src/include/sqlite/sqlite3ext.h	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_cacheflush	src/sqlite/sqlite3.c	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_config	src/include/sqlite/sqlite3ext.h	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines
db_config	src/sqlite/sqlite3.c	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines	file:
db_filename	src/include/sqlite/sqlite3ext.h	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_filename	src/sqlite/sqlite3.c	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
db_handle	src/include/sqlite/sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
db_handle	src/sqlite/sqlite3.c	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
db_int	src/sqlite/shell.c	/^static int db_int(ShellState *p, const char *zSql){$/;"	f	file:
db_io_	src/include/disk/disk_manager.h	/^  std::fstream db_io_;$/;"	m	class:cmudb::DiskManager
db_mutex	src/include/sqlite/sqlite3ext.h	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_readonly	src/include/sqlite/sqlite3ext.h	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_readonly	src/sqlite/sqlite3.c	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
db_release_memory	src/include/sqlite/sqlite3ext.h	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_release_memory	src/sqlite/sqlite3.c	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_status	src/include/sqlite/sqlite3ext.h	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
db_status	src/sqlite/sqlite3.c	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
death_test_count	third_party/gmock/gtest/gtest.h	/^  int death_test_count() const { return death_test_count_; }$/;"	f	class:testing::TestResult
death_test_count_	third_party/gmock/gtest/gtest.h	/^  int death_test_count_;$/;"	m	class:testing::TestResult
death_test_factory	third_party/gmock/gmock-gtest-all.cc	/^  internal::DeathTestFactory* death_test_factory() {$/;"	f	class:testing::internal::UnitTestImpl
death_test_factory_	third_party/gmock/gmock-gtest-all.cc	/^  internal::scoped_ptr<internal::DeathTestFactory> death_test_factory_;$/;"	m	class:testing::internal::UnitTestImpl	file:
death_test_style_	third_party/gmock/gmock-gtest-all.cc	/^  std::string death_test_style_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
death_test_use_fork_	third_party/gmock/gmock-gtest-all.cc	/^  bool death_test_use_fork_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
debugMutexAlloc	src/sqlite/sqlite3.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexEnd	src/sqlite/sqlite3.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnter	src/sqlite/sqlite3.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	src/sqlite/sqlite3.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	src/sqlite/sqlite3.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexInit	src/sqlite/sqlite3.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexLeave	src/sqlite/sqlite3.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	src/sqlite/sqlite3.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	src/sqlite/sqlite3.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
decimal	src/include/type/value.h	/^    double decimal;$/;"	m	union:cmudb::Value::Val
declareVtab	src/sqlite/sqlite3.c	/^  u8 declareVtab;           \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse	file:
declare_vtab	src/include/sqlite/sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
declare_vtab	src/sqlite/sqlite3.c	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
decodeFlags	src/sqlite/sqlite3.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
decodeIntArray	src/sqlite/sqlite3.c	/^static void decodeIntArray($/;"	f	file:
default_	third_party/gmock/gtest/gtest.h	/^  const T default_;  \/\/ The default value for each thread.$/;"	m	class:std::tr1::ThreadLocal
default_global_test_part_result_reporter_	third_party/gmock/gmock-gtest-all.cc	/^  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
default_per_thread_test_part_result_reporter_	third_party/gmock/gmock-gtest-all.cc	/^      default_per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
default_rc	src/sqlite/sqlite3.c	/^  i8 default_rc;      \/* Comparison result if keys are equal *\/$/;"	m	struct:UnpackedRecord	file:
default_result_printer	third_party/gmock/gtest/gtest.h	/^  TestEventListener* default_result_printer() const {$/;"	f	class:testing::TestEventListeners
default_result_printer_	third_party/gmock/gtest/gtest.h	/^  TestEventListener* default_result_printer_;$/;"	m	class:testing::TestEventListeners
default_xml_generator	third_party/gmock/gtest/gtest.h	/^  TestEventListener* default_xml_generator() const {$/;"	f	class:testing::TestEventListeners
default_xml_generator_	third_party/gmock/gtest/gtest.h	/^  TestEventListener* default_xml_generator_;$/;"	m	class:testing::TestEventListeners
deferredMoveto	src/sqlite/sqlite3.c	/^  u8 deferredMoveto;      \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor	file:
defined_test_names_	third_party/gmock/gtest/gtest.h	/^  ::std::set<const char*> defined_test_names_;$/;"	m	class:testing::internal::TypedTestCasePState
defragmentPage	src/sqlite/sqlite3.c	/^static int defragmentPage(MemPage *pPage, int nMaxFrag){$/;"	f	file:
deleteCell	src/sqlite/sqlite3.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
deleteTable	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE deleteTable(sqlite3 *db, Table *pTable){$/;"	f	file:
deleted_page_set_	src/include/concurrency/transaction.h	/^  std::shared_ptr<std::unordered_set<page_id_t>> deleted_page_set_;$/;"	m	class:cmudb::Transaction
delim	src/sqlite/sqlite3.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
depart	third_party/gmock/gtest/gtest.h	/^  void depart() {$/;"	f	class:testing::internal::linked_ptr
desc	src/include/sqlite/sqlite3.h	/^unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
desc	src/sqlite/sqlite3.c	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
deserializeGeometry	src/sqlite/sqlite3.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
destroyRootPage	src/sqlite/sqlite3.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyTable	src/sqlite/sqlite3.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
detachFunc	src/sqlite/sqlite3.c	/^static void detachFunc($/;"	f	file:
dev	src/sqlite/sqlite3.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
deviceCharacteristics	src/sqlite/sqlite3.c	/^  int deviceCharacteristics;          \/* Precomputed device characteristics *\/$/;"	m	struct:unixFile	file:
dfltLockMode	src/sqlite/sqlite3.c	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3	file:
difference_type	third_party/gmock/gtest/gtest.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:testing::internal::ParamIterator
dir_mutex	src/include/hash/extendible_hash.h	/^  mutable std::mutex dir_mutex;$/;"	m	class:cmudb::ExtendibleHash
directMode	src/sqlite/sqlite3.c	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo	file:
disableLookaside	src/sqlite/sqlite3.c	/^  u8 disableLookaside; \/* Number of times lookaside has been disabled *\/$/;"	m	struct:Parse	file:
disableLookaside	src/sqlite/sqlite3.c	/^static void disableLookaside(Parse *pParse){$/;"	f	file:
disableTerm	src/sqlite/sqlite3.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTriggers	src/sqlite/sqlite3.c	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse	file:
disable_debug_trace_modes	src/sqlite/shell.c	/^static void disable_debug_trace_modes(void){$/;"	f	file:
disable_simulated_io_errors	src/sqlite/sqlite3.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	src/sqlite/sqlite3.c	14209;"	d	file:
disable_simulated_io_errors	src/sqlite/sqlite3.c	51163;"	d	file:
disabled_test_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::disabled_test_count() const {$/;"	f	class:testing::TestCase
disabled_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::disabled_test_count() const {$/;"	f	class:testing::UnitTest
disabled_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
disallow	src/sqlite/sqlite3.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon23	file:
disconnectAllVtab	src/sqlite/sqlite3.c	/^static void disconnectAllVtab(sqlite3 *db){$/;"	f	file:
disk_manager_	src/include/buffer/buffer_pool_manager.h	/^  DiskManager disk_manager_;$/;"	m	class:cmudb::BufferPoolManager
displayComment	src/sqlite/sqlite3.c	/^static int displayComment($/;"	f	file:
displayLinuxIoStats	src/sqlite/shell.c	/^static void displayLinuxIoStats(FILE *out){$/;"	f	file:
displayP4	src/sqlite/sqlite3.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
displayP4Expr	src/sqlite/sqlite3.c	/^static void displayP4Expr(StrAccum *p, Expr *pExpr){$/;"	f	file:
displayStatLine	src/sqlite/shell.c	/^static void displayStatLine($/;"	f	file:
display_scanstats	src/sqlite/shell.c	/^static void display_scanstats($/;"	f	file:
display_stats	src/sqlite/shell.c	/^static int display_stats($/;"	f	file:
doNotSpill	src/sqlite/sqlite3.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doWalCallbacks	src/sqlite/sqlite3.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
do_meta_command	src/sqlite/shell.c	/^static int do_meta_command(char *zLine, ShellState *p){$/;"	f	file:
doclist	src/sqlite/sqlite3.c	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase	file:
doingRerun	src/sqlite/sqlite3.c	/^  bft doingRerun:1;       \/* True if rerunning after an auto-reprepare *\/$/;"	m	struct:Vdbe	file:
done	src/sqlite/sqlite3.c	/^    unsigned done :1;       \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item	file:
done	src/sqlite/sqlite3.c	/^  int done;                      \/* Set to true when thread finishes *\/$/;"	m	struct:SQLiteThread	file:
dotlockCheckReservedLock	src/sqlite/sqlite3.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockClose	src/sqlite/sqlite3.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockLock	src/sqlite/sqlite3.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	src/sqlite/sqlite3.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
double	src/include/sqlite/sqlite3.h	282;"	d
double	src/include/sqlite/sqlite3.h	8611;"	d
double	src/sqlite/sqlite3.c	12505;"	d	file:
double	src/sqlite/sqlite3.c	1314;"	d	file:
double	src/sqlite/sqlite3.c	9643;"	d	file:
doubleConsonant	src/sqlite/sqlite3.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleToInt64	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE i64 doubleToInt64(double r){$/;"	f	file:
downgradeAllSharedCacheTableLocks	src/sqlite/sqlite3.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	src/sqlite/sqlite3.c	59558;"	d	file:
dropCell	src/sqlite/sqlite3.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
dummy_	third_party/gmock/gtest/gtest.h	/^  static bool dummy_;$/;"	m	class:testing::internal::TypeIdHelper
dummy_	third_party/gmock/gtest/gtest.h	/^bool TypeIdHelper<T>::dummy_ = false;$/;"	m	class:testing::internal::TypeIdHelper
dump_callback	src/sqlite/shell.c	/^static int dump_callback(void *pArg, int nArg, char **azArg, char **azNotUsed){$/;"	f	file:
dupedExprNodeSize	src/sqlite/sqlite3.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	src/sqlite/sqlite3.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	src/sqlite/sqlite3.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
eCode	src/sqlite/sqlite3.c	/^  u8 eCode;                                 \/* A small processing code *\/$/;"	m	struct:Walker	file:
eContent	src/sqlite/sqlite3.c	/^  int eContent;                   \/* An FTS5_CONTENT value *\/$/;"	m	struct:Fts5Config	file:
eCoordType	src/sqlite/sqlite3.c	/^  u8 eCoordType;              \/* RTREE_COORD_REAL32 or RTREE_COORD_INT32 *\/$/;"	m	struct:Rtree	file:
eCreate	src/sqlite/sqlite3.c	/^  u8 eCreate;                         \/* eCreate value for for xFetch() *\/$/;"	m	struct:PCache	file:
eCurType	src/sqlite/sqlite3.c	/^  u8 eCurType;            \/* One of the CURTYPE_* values above *\/$/;"	m	struct:VdbeCursor	file:
eDest	src/sqlite/sqlite3.c	/^  u8 eDest;            \/* How to dispose of the results.  On of SRT_* above. *\/$/;"	m	struct:SelectDest	file:
eDetail	src/sqlite/sqlite3.c	/^  int eDetail;                    \/* Copy of Fts5Config.eDetail *\/$/;"	m	struct:Fts5Hash	file:
eDetail	src/sqlite/sqlite3.c	/^  int eDetail;                    \/* FTS5_DETAIL_XXX value *\/$/;"	m	struct:Fts5Config	file:
eDistinct	src/sqlite/sqlite3.c	/^  u8 eDistinct;             \/* One of the WHERE_DISTINCT_* values *\/$/;"	m	struct:WhereInfo	file:
eEndLoopOp	src/sqlite/sqlite3.c	/^        u8 eEndLoopOp;         \/* IN Loop terminator. OP_Next or OP_Prev *\/$/;"	m	struct:WhereLevel::__anon30::__anon31::InLoop	file:
eEvalmode	src/sqlite/sqlite3.c	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor	file:
eFWErr	src/sqlite/sqlite3.c	/^  int eFWErr;                     \/* Non-zero if in an error state *\/$/;"	m	struct:PmaWriter	file:
eFileLock	src/sqlite/sqlite3.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	src/sqlite/sqlite3.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eLock	src/sqlite/sqlite3.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eLock	src/sqlite/sqlite3.c	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock	file:
eMatchOp	src/sqlite/sqlite3.c	/^  u8 eMatchOp;            \/* Op for vtab MATCH\/LIKE\/GLOB\/REGEXP terms *\/$/;"	m	struct:WhereTerm	file:
eOnePass	src/sqlite/sqlite3.c	/^  u8 eOnePass;              \/* ONEPASS_OFF, or _SINGLE, or _MULTI *\/$/;"	m	struct:WhereInfo	file:
eOperator	src/sqlite/sqlite3.c	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm	file:
eOrconf	src/sqlite/sqlite3.c	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse	file:
eParentWithin	src/include/sqlite/sqlite3.h	/^int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
eParentWithin	src/sqlite/sqlite3.c	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
ePlan	src/sqlite/sqlite3.c	/^  int ePlan;                      \/* FTS5_PLAN_XXX value *\/$/;"	m	struct:Fts5Cursor	file:
ePragTyp	src/sqlite/sqlite3.c	/^  u8 ePragTyp;             \/* PragTyp_XXX value *\/$/;"	m	struct:PragmaName	file:
eSearch	src/sqlite/sqlite3.c	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor	file:
eStage	src/sqlite/sqlite3.c	/^  int eStage;                     \/* Value of RBU_STATE_STAGE field *\/$/;"	m	struct:sqlite3rbu	file:
eStage	src/sqlite/sqlite3.c	/^  int eStage;$/;"	m	struct:RbuState	file:
eState	src/sqlite/sqlite3.c	/^  int eState;                     \/* 0==closed, 1==open, 2==synced *\/$/;"	m	struct:Fts5TransactionState	file:
eState	src/sqlite/sqlite3.c	/^  int eState;                     \/* See above *\/$/;"	m	struct:PoslistCallbackCtx	file:
eState	src/sqlite/sqlite3.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eState	src/sqlite/sqlite3.c	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor	file:
eSubtype	src/sqlite/sqlite3.c	/^  u8  eSubtype;       \/* Subtype for this value *\/$/;"	m	struct:sqlite3_value	file:
eTnctType	src/sqlite/sqlite3.c	/^  u8 eTnctType;   \/* One of the WHERE_DISTINCT_* operators *\/$/;"	m	struct:DistinctCtx	file:
eTriggerOp	src/sqlite/sqlite3.c	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse	file:
eType	src/sqlite/sqlite3.c	/^  int eType;                      \/* FTS5_VOCAB_COL or ROW *\/$/;"	m	struct:Fts5VocabTable	file:
eType	src/sqlite/sqlite3.c	/^  int eType;                      \/* Node type *\/$/;"	m	struct:Fts5ExprNode	file:
eType	src/sqlite/sqlite3.c	/^  int eType;                      \/* Table type - an RBU_PK_XXX value *\/$/;"	m	struct:RbuObjIter	file:
eType	src/sqlite/sqlite3.c	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr	file:
eType	src/sqlite/sqlite3.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	src/sqlite/sqlite3.c	/^  u8 eType;                  \/* Type of top-level element *\/$/;"	m	struct:JsonEachCursor	file:
eType	src/sqlite/sqlite3.c	/^  u8 eType;              \/* One of the JSON_ type values *\/$/;"	m	struct:JsonNode	file:
eType	src/sqlite/sqlite3.c	/^  u8 eType;           \/* Transformation type code *\/$/;"	m	struct:__anon22	file:
eVal	src/sqlite/sqlite3.c	/^  int eVal;$/;"	m	struct:Fts5Enum	file:
eWithin	src/include/sqlite/sqlite3.h	/^int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
eWithin	src/sqlite/sqlite3.c	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
eWithin	src/sqlite/sqlite3.c	/^  u8 eWithin;            \/* PARTLY_WITHIN or FULLY_WITHIN *\/$/;"	m	struct:RtreeSearchPoint	file:
ebcdicToAscii	src/sqlite/sqlite3.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
editPage	src/sqlite/sqlite3.c	/^static int editPage($/;"	f	file:
elapsed_time	third_party/gmock/gmock-gtest-all.cc	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::internal::UnitTestImpl
elapsed_time	third_party/gmock/gmock-gtest-all.cc	/^internal::TimeInMillis UnitTest::elapsed_time() const {$/;"	f	class:testing::UnitTest
elapsed_time	third_party/gmock/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestCase
elapsed_time	third_party/gmock/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestResult
elapsed_time_	third_party/gmock/gmock-gtest-all.cc	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::internal::UnitTestImpl	file:
elapsed_time_	third_party/gmock/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestCase
elapsed_time_	third_party/gmock/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestResult
elem_type_id	src/include/type/value.h	/^    TypeId elem_type_id;$/;"	m	union:cmudb::Value::__anon9
element_type	third_party/gmock/gtest/gtest.h	/^  typedef T element_type;$/;"	t	class:testing::internal::linked_ptr
enableTimer	src/sqlite/shell.c	/^static int enableTimer = 0;$/;"	v	file:
enable_shared_cache	src/include/sqlite/sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines
enable_shared_cache	src/sqlite/sqlite3.c	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	file:
enable_simulated_io_errors	src/sqlite/sqlite3.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	src/sqlite/sqlite3.c	14210;"	d	file:
enable_simulated_io_errors	src/sqlite/sqlite3.c	51164;"	d	file:
enc	src/sqlite/sqlite3.c	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:sqlite3_value	file:
enc	src/sqlite/sqlite3.c	/^  u8 enc;                       \/* Text encoding *\/$/;"	m	struct:sqlite3	file:
enc	src/sqlite/sqlite3.c	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq	file:
enc	src/sqlite/sqlite3.c	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema	file:
enc	src/sqlite/sqlite3.c	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo	file:
end	src/include/vtable/virtual_table.h	/^  inline TableIterator end() { return table_heap_->end(); }$/;"	f	class:cmudb::VirtualTable
end	src/table/table_heap.cpp	/^TableIterator TableHeap::end() {$/;"	f	class:cmudb::TableHeap
end	third_party/gmock/gmock/gmock.h	/^  const_iterator end() const { return expectations_.end(); }$/;"	f	class:testing::ExpectationSet
end	third_party/gmock/gtest/gtest.h	/^  const_iterator end() const { return array_ + size_; }$/;"	f	class:testing::internal::NativeArray
end	third_party/gmock/gtest/gtest.h	/^  iterator end() const { return iterator(impl_->End()); }$/;"	f	class:testing::internal::ParamGenerator
end10_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T10>::iterator end10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end1_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end2_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end3_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end4_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end5_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end6_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end7_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end8_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end8_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end8_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end9_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end9_	third_party/gmock/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
endTimer	src/sqlite/shell.c	/^static void endTimer(void){$/;"	f	file:
end_	third_party/gmock/gtest/gtest.h	/^  const T end_;$/;"	m	class:testing::internal::RangeGenerator
end_index_	third_party/gmock/gtest/gtest.h	/^  const int end_index_;$/;"	m	class:testing::internal::RangeGenerator
end_page	src/include/index/index_iterator.h	/^  B_PLUS_TREE_LEAF_PAGE_TYPE *end_page;$/;"	m	class:cmudb::IndexIterator
endpoint	src/sqlite/sqlite3.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
enlargeAndAppend	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE enlargeAndAppend(StrAccum *p, const char *z, int N){$/;"	f	file:
enterMutex	src/sqlite/sqlite3.c	/^static void enterMutex(void){$/;"	f	file:
environ	third_party/gmock/gmock-gtest-all.cc	/^extern "C" char** environ;$/;"	m	namespace:testing::internal	file:
environments	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<Environment*>& environments() { return environments_; }$/;"	f	class:testing::internal::UnitTestImpl
environments_	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<Environment*> environments_;$/;"	m	class:testing::internal::UnitTestImpl	file:
eqSeen	src/sqlite/sqlite3.c	/^  u8 eqSeen;          \/* True if an equality comparison has been seen *\/$/;"	m	struct:UnpackedRecord	file:
errCode	src/sqlite/sqlite3.c	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3	file:
errCode	src/sqlite/sqlite3.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errCode	src/sqlite/sqlite3.c	/^  u8 errCode;         \/* Error detected by xRecordCompare (CORRUPT or NOMEM) *\/$/;"	m	struct:UnpackedRecord	file:
errMask	src/sqlite/sqlite3.c	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3	file:
errMsg	src/sqlite/sqlite3.c	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk	file:
errcode	src/include/sqlite/sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines
errcode	src/sqlite/sqlite3.c	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	file:
errlogFunc	src/sqlite/sqlite3.c	/^static void errlogFunc($/;"	f	file:
errmsg	src/include/sqlite/sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg	src/sqlite/sqlite3.c	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg16	src/include/sqlite/sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg16	src/sqlite/sqlite3.c	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errno_	third_party/gmock/gmock/gmock.h	/^  const int errno_;$/;"	m	class:testing::internal::SetErrnoAndReturnAction
errorAction	src/sqlite/sqlite3.c	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe	file:
errstr	src/include/sqlite/sqlite3ext.h	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines
errstr	src/sqlite/sqlite3.c	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines	file:
estLog	src/sqlite/sqlite3.c	/^static LogEst estLog(LogEst N){$/;"	f	file:
estimateIndexWidth	src/sqlite/sqlite3.c	/^static void estimateIndexWidth(Index *pIdx){$/;"	f	file:
estimateTableWidth	src/sqlite/sqlite3.c	/^static void estimateTableWidth(Table *pTab){$/;"	f	file:
estimatedCost	src/include/sqlite/sqlite3.h	/^double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
estimatedCost	src/sqlite/sqlite3.c	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedRows	src/include/sqlite/sqlite3.h	/^sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info
estimatedRows	src/sqlite/sqlite3.c	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info	file:
etBUFSIZE	src/sqlite/sqlite3.c	25646;"	d	file:
etByte	src/sqlite/sqlite3.c	/^typedef unsigned char etByte;$/;"	t	file:
etCHARX	src/sqlite/sqlite3.c	25506;"	d	file:
etDECIMAL	src/sqlite/sqlite3.c	25516;"	d	file:
etDYNSTRING	src/sqlite/sqlite3.c	25504;"	d	file:
etEXP	src/sqlite/sqlite3.c	25500;"	d	file:
etFLOAT	src/sqlite/sqlite3.c	25499;"	d	file:
etGENERIC	src/sqlite/sqlite3.c	25501;"	d	file:
etINVALID	src/sqlite/sqlite3.c	25518;"	d	file:
etORDINAL	src/sqlite/sqlite3.c	25515;"	d	file:
etPERCENT	src/sqlite/sqlite3.c	25505;"	d	file:
etPOINTER	src/sqlite/sqlite3.c	25513;"	d	file:
etRADIX	src/sqlite/sqlite3.c	25498;"	d	file:
etSIZE	src/sqlite/sqlite3.c	25502;"	d	file:
etSQLESCAPE	src/sqlite/sqlite3.c	25508;"	d	file:
etSQLESCAPE2	src/sqlite/sqlite3.c	25509;"	d	file:
etSQLESCAPE3	src/sqlite/sqlite3.c	25514;"	d	file:
etSRCLIST	src/sqlite/sqlite3.c	25512;"	d	file:
etSTRING	src/sqlite/sqlite3.c	25503;"	d	file:
etTOKEN	src/sqlite/sqlite3.c	25511;"	d	file:
et_getdigit	src/sqlite/sqlite3.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_info	src/sqlite/sqlite3.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	src/sqlite/sqlite3.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
event_handle_	third_party/gmock/gmock-gtest-all.cc	/^  AutoHandle event_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
exclMask	src/sqlite/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	src/sqlite/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
exclMask	src/sqlite/sqlite3.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclusiveMode	src/sqlite/sqlite3.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	src/sqlite/sqlite3.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exclusive_lock_set_	src/include/concurrency/transaction.h	/^  std::shared_ptr<std::unordered_set<RID>> exclusive_lock_set_;$/;"	m	class:cmudb::Transaction
exec	src/include/sqlite/sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines
exec	src/sqlite/sqlite3.c	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	file:
execSql	src/sqlite/sqlite3.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execSqlF	src/sqlite/sqlite3.c	/^static int execSqlF(sqlite3 *db, char **pzErrMsg, const char *zSql, ...){$/;"	f	file:
exec_prepared_stmt	src/sqlite/shell.c	/^static void exec_prepared_stmt($/;"	f	file:
exit_code_	third_party/gmock/gtest/gtest.h	/^  const int exit_code_;$/;"	m	class:testing::ExitedWithCode
expanded_sql	src/include/sqlite/sqlite3ext.h	/^  char *(*expanded_sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expanded_sql	src/sqlite/sqlite3.c	/^  char *(*expanded_sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
expect_eq_	third_party/gmock/gmock/gmock.h	/^  const bool expect_eq_;$/;"	m	class:testing::internal::StrEqualityMatcher
expectation_base	third_party/gmock/gmock/gmock.h	/^  expectation_base() const {$/;"	f	class:testing::Expectation
expectation_base_	third_party/gmock/gmock/gmock.h	/^  internal::linked_ptr<internal::ExpectationBase> expectation_base_;$/;"	m	class:testing::Expectation
expectations_	third_party/gmock/gmock/gmock.h	/^  Expectation::Set expectations_;$/;"	m	class:testing::ExpectationSet
expired	src/include/sqlite/sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expired	src/sqlite/sqlite3.c	/^  bft expired:1;          \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe	file:
expired	src/sqlite/sqlite3.c	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
explain	src/sqlite/sqlite3.c	/^  bft explain:2;          \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe	file:
explain	src/sqlite/sqlite3.c	/^  u8 explain;               \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse	file:
explainAppendTerm	src/sqlite/sqlite3.c	/^static void explainAppendTerm($/;"	f	file:
explainComposite	src/sqlite/sqlite3.c	/^static void explainComposite($/;"	f	file:
explainComposite	src/sqlite/sqlite3.c	118274;"	d	file:
explainIndexColumnName	src/sqlite/sqlite3.c	/^static const char *explainIndexColumnName(Index *pIdx, int i){$/;"	f	file:
explainIndexRange	src/sqlite/sqlite3.c	/^static void explainIndexRange(StrAccum *pStr, WhereLoop *pLoop){$/;"	f	file:
explainSetInteger	src/sqlite/sqlite3.c	118232;"	d	file:
explainSetInteger	src/sqlite/sqlite3.c	118237;"	d	file:
explainSimpleCount	src/sqlite/sqlite3.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	src/sqlite/sqlite3.c	121987;"	d	file:
explainTempTable	src/sqlite/sqlite3.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	src/sqlite/sqlite3.c	118236;"	d	file:
explain_data_delete	src/sqlite/shell.c	/^static void explain_data_delete(ShellState *p){$/;"	f	file:
explain_data_prepare	src/sqlite/shell.c	/^static void explain_data_prepare(ShellState *p, sqlite3_stmt *pSql){$/;"	f	file:
expmask	src/sqlite/sqlite3.c	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe	file:
exponent_bits	third_party/gmock/gtest/gtest.h	/^  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
exprAlwaysFalse	src/sqlite/sqlite3.c	/^static int exprAlwaysFalse(Expr *p){$/;"	f	file:
exprAlwaysTrue	src/sqlite/sqlite3.c	/^static int exprAlwaysTrue(Expr *p){$/;"	f	file:
exprAnalyze	src/sqlite/sqlite3.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyzeOrTerm	src/sqlite/sqlite3.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprCodeBetween	src/sqlite/sqlite3.c	/^static void exprCodeBetween($/;"	f	file:
exprCodeSubselect	src/sqlite/sqlite3.c	/^static int exprCodeSubselect(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprCodeVector	src/sqlite/sqlite3.c	/^static int exprCodeVector(Parse *pParse, Expr *p, int *piFreeable){$/;"	f	file:
exprCommute	src/sqlite/sqlite3.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprCompareVariable	src/sqlite/sqlite3.c	/^static int exprCompareVariable(Parse *pParse, Expr *pVar, Expr *pExpr){$/;"	f	file:
exprDup	src/sqlite/sqlite3.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int dupFlags, u8 **pzBuffer){$/;"	f	file:
exprINAffinity	src/sqlite/sqlite3.c	/^static char *exprINAffinity(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprIdxCover	src/sqlite/sqlite3.c	/^static int exprIdxCover(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprIsConst	src/sqlite/sqlite3.c	/^static int exprIsConst(Expr *p, int initFlag, int iCur){$/;"	f	file:
exprIsDeterministic	src/sqlite/sqlite3.c	/^static int exprIsDeterministic(Expr *p){$/;"	f	file:
exprListDeleteNN	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void exprListDeleteNN(sqlite3 *db, ExprList *pList){$/;"	f	file:
exprMightBeIndexed	src/sqlite/sqlite3.c	/^static int exprMightBeIndexed($/;"	f	file:
exprMightBeIndexed2	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int exprMightBeIndexed2($/;"	f	file:
exprNodeIsConstant	src/sqlite/sqlite3.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNodeIsConstantOrGroupBy	src/sqlite/sqlite3.c	/^static int exprNodeIsConstantOrGroupBy(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNodeIsDeterministic	src/sqlite/sqlite3.c	/^static int exprNodeIsDeterministic(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNot	src/sqlite/sqlite3.c	/^  static void exprNot(Parse *pParse, int doNot, ExprSpan *pSpan){$/;"	f	file:
exprProbability	src/sqlite/sqlite3.c	/^static int exprProbability(Expr *p){$/;"	f	file:
exprSelectUsage	src/sqlite/sqlite3.c	/^static Bitmask exprSelectUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSetHeight	src/sqlite/sqlite3.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	src/sqlite/sqlite3.c	92038;"	d	file:
exprSrcCount	src/sqlite/sqlite3.c	/^static int exprSrcCount(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprStructSize	src/sqlite/sqlite3.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprTableColumn	src/sqlite/sqlite3.c	/^static Expr *exprTableColumn($/;"	f	file:
exprTableRegister	src/sqlite/sqlite3.c	/^static Expr *exprTableRegister($/;"	f	file:
exprToRegister	src/sqlite/sqlite3.c	/^static void exprToRegister(Expr *p, int iReg){$/;"	f	file:
exprToString	src/sqlite/sqlite3.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
exprVectorRegister	src/sqlite/sqlite3.c	/^static int exprVectorRegister($/;"	f	file:
extended_errcode	src/include/sqlite/sqlite3ext.h	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
extended_errcode	src/sqlite/sqlite3.c	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
extended_result_codes	src/include/sqlite/sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
extended_result_codes	src/sqlite/sqlite3.c	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
exthash	src/include/buffer/lru_replacer.h	/^  ExtendibleHash<T, typename std::list<T>::iterator> *exthash;$/;"	m	class:cmudb::LRUReplacer
extraSync	src/sqlite/sqlite3.c	/^  u8 extraSync;               \/* sync directory after journal delete *\/$/;"	m	struct:Pager	file:
extra_matcher	third_party/gmock/gmock/gmock.h	/^  const Matcher<const ArgumentTuple&>& extra_matcher() const {$/;"	f	class:testing::internal::TypedExpectation
extra_matcher_	third_party/gmock/gmock/gmock.h	/^  Matcher<const ArgumentTuple&> extra_matcher_;$/;"	m	class:testing::internal::OnCallSpec
extra_matcher_	third_party/gmock/gmock/gmock.h	/^  Matcher<const ArgumentTuple&> extra_matcher_;$/;"	m	class:testing::internal::TypedExpectation
extra_matcher_specified_	third_party/gmock/gmock/gmock.h	/^  bool extra_matcher_specified_;$/;"	m	class:testing::internal::ExpectationBase
f	src/sqlite/sqlite3.c	/^  RtreeValue f;      \/* Floating point value *\/$/;"	m	union:RtreeCoord	file:
f0	third_party/gmock/gtest/gtest.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f0_	third_party/gmock/gtest/gtest.h	/^  T0 f0_;$/;"	m	class:std::tr1::tuple
f1	third_party/gmock/gtest/gtest.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f1_	third_party/gmock/gtest/gtest.h	/^  T1 f1_;$/;"	m	class:std::tr1::tuple
f2	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f2_	third_party/gmock/gtest/gtest.h	/^  T2 f2_;$/;"	m	class:std::tr1::tuple
f3	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f3_	third_party/gmock/gtest/gtest.h	/^  T3 f3_;$/;"	m	class:std::tr1::tuple
f4	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f4_	third_party/gmock/gtest/gtest.h	/^  T4 f4_;$/;"	m	class:std::tr1::tuple
f5	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f5_	third_party/gmock/gtest/gtest.h	/^  T5 f5_;$/;"	m	class:std::tr1::tuple
f6	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f6_	third_party/gmock/gtest/gtest.h	/^  T6 f6_;$/;"	m	class:std::tr1::tuple
f7	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f7_	third_party/gmock/gtest/gtest.h	/^  T7 f7_;$/;"	m	class:std::tr1::tuple
f8	third_party/gmock/gtest/gtest.h	/^      GTEST_BY_REF_(T8) f8, GTEST_BY_REF_(T9) f9) : f0_(f0), f1_(f1), f2_(f2),$/;"	m	class:std::tr1::tuple
f8_	third_party/gmock/gtest/gtest.h	/^  T8 f8_;$/;"	m	class:std::tr1::tuple
f9_	third_party/gmock/gtest/gtest.h	/^      f3_(f3), f4_(f4), f5_(f5), f6_(f6), f7_(f7), f8_(f8), f9_(f9) {}$/;"	f	class:std::tr1::tuple
f9_	third_party/gmock/gtest/gtest.h	/^      f9_(t.f9_) {}$/;"	f	class:std::tr1::tuple
f9_	third_party/gmock/gtest/gtest.h	/^  T9 f9_;$/;"	m	class:std::tr1::tuple
fErrorOrAux	src/sqlite/sqlite3.c	/^  u8 fErrorOrAux;         \/* isError!=0 or pVdbe->pAuxData modified *\/$/;"	m	struct:sqlite3_context	file:
factory_	third_party/gmock/gtest/gtest.h	/^  internal::TestFactoryBase* const factory_;  \/\/ The factory that creates$/;"	m	class:testing::TestInfo::internal
failed	third_party/gmock/gtest/gtest.h	/^  bool failed() const { return type_ != kSuccess; }$/;"	f	class:testing::TestPartResult
failed_test_case_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::failed_test_case_count() const {$/;"	f	class:testing::UnitTest
failed_test_case_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::failed_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failed_test_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::failed_test_count() const {$/;"	f	class:testing::TestCase
failed_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }$/;"	f	class:testing::UnitTest
failed_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::failed_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failure_message	third_party/gmock/gtest/gtest.h	/^  const char* failure_message() const { return message(); }$/;"	f	class:testing::AssertionResult
false_type	third_party/gmock/gtest/gtest.h	/^typedef bool_constant<false> false_type;$/;"	t	namespace:std::tr1
fatally_failed	third_party/gmock/gtest/gtest.h	/^  bool fatally_failed() const { return type_ == kFatalFailure; }$/;"	f	class:testing::TestPartResult
fcntlSizeHint	src/sqlite/sqlite3.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fd	src/sqlite/sqlite3.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	src/sqlite/sqlite3.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	src/sqlite/sqlite3.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fd_	third_party/gmock/gmock-gtest-all.cc	/^  const int fd_;  \/\/ A stream to capture.$/;"	m	class:testing::internal::CapturedStream	file:
fdatasync	src/sqlite/sqlite3.c	33686;"	d	file:
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fetchPayload	src/sqlite/sqlite3.c	/^static const void *fetchPayload($/;"	f	file:
fg	src/sqlite/sqlite3.c	/^    } fg;$/;"	m	struct:SrcList::SrcList_item	typeref:struct:SrcList::SrcList_item::__anon17	file:
field_	third_party/gmock/gmock/gmock.h	/^  const FieldType Class::*field_;$/;"	m	class:testing::internal::FieldMatcher::Class
file	src/sqlite/sqlite3.c	/^  SorterFile file;                \/* Temp file for level-0 PMAs *\/$/;"	m	struct:SortSubtask	file:
file	third_party/gmock/gmock-gtest-all.cc	/^  const char* file;$/;"	m	struct:testing::internal::TraceInfo	file:
file	third_party/gmock/gmock/gmock.h	/^  const char* file() const { return file_; }$/;"	f	class:testing::internal::ExpectationBase
file	third_party/gmock/gmock/gmock.h	/^  const char* file() const { return file_; }$/;"	f	class:testing::internal::UntypedOnCallSpecBase
file	third_party/gmock/gtest/gtest.h	/^    const char* const file;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
file	third_party/gmock/gtest/gtest.h	/^  const std::string& file() const { return file_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
file2	src/sqlite/sqlite3.c	/^  SorterFile file2;               \/* Space for other PMAs *\/$/;"	m	struct:SortSubtask	file:
fileChunkSize	src/sqlite/sqlite3.c	89274;"	d	file:
fileHasMoved	src/sqlite/sqlite3.c	/^static int fileHasMoved(unixFile *pFile){$/;"	f	file:
fileId	src/sqlite/sqlite3.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
file_	third_party/gmock/gmock-gtest-all.cc	/^  const char* const file_;$/;"	m	class:testing::internal::ExecDeathTest	file:
file_	third_party/gmock/gmock-gtest-all.cc	/^  const char* const file_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
file_	third_party/gmock/gmock/gmock.h	/^  const char* file_;          \/\/ The file that contains the expectation.$/;"	m	class:testing::internal::ExpectationBase
file_	third_party/gmock/gmock/gmock.h	/^  const char* file_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase
file_	third_party/gmock/gtest/gtest.h	/^  std::string file_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
file_control	src/include/sqlite/sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines
file_control	src/sqlite/sqlite3.c	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	file:
file_format	src/sqlite/sqlite3.c	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema	file:
file_name	third_party/gmock/gtest/gtest.h	/^  const char* file_name() const {$/;"	f	class:testing::TestPartResult
file_name_	src/include/disk/disk_manager.h	/^  std::string file_name_;$/;"	m	class:cmudb::DiskManager
file_name_	third_party/gmock/gtest/gtest.h	/^  std::string file_name_;$/;"	m	class:testing::TestPartResult
filename_	third_party/gmock/gmock-gtest-all.cc	/^  ::std::string filename_;$/;"	m	class:testing::internal::CapturedStream	file:
fillInCell	src/sqlite/sqlite3.c	/^static int fillInCell($/;"	f	file:
fillInUnixFile	src/sqlite/sqlite3.c	/^static int fillInUnixFile($/;"	f	file:
filter	src/sqlite/sqlite3.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
filter_	third_party/gmock/gmock-gtest-all.cc	/^  std::string filter_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
finalDbSize	src/sqlite/sqlite3.c	/^static Pgno finalDbSize(BtShared *pBt, Pgno nOrig, Pgno nFree){$/;"	f	file:
finalize	src/include/sqlite/sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
finalize	src/sqlite/sqlite3.c	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
finalizeAggFunctions	src/sqlite/sqlite3.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
findBtree	src/sqlite/sqlite3.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findCell	src/sqlite/sqlite3.c	60471;"	d	file:
findCellPastPtr	src/sqlite/sqlite3.c	60473;"	d	file:
findCollSeqEntry	src/sqlite/sqlite3.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCreateFileMode	src/sqlite/sqlite3.c	/^static int findCreateFileMode($/;"	f	file:
findElementWithHash	src/sqlite/sqlite3.c	/^static HashElem *findElementWithHash($/;"	f	file:
findIndexCol	src/sqlite/sqlite3.c	/^static int findIndexCol($/;"	f	file:
findIndexOrPrimaryKey	src/sqlite/sqlite3.c	/^static Index *findIndexOrPrimaryKey($/;"	f	file:
findInodeInfo	src/sqlite/sqlite3.c	/^static int findInodeInfo($/;"	f	file:
findLeafNode	src/sqlite/sqlite3.c	/^static int findLeafNode($/;"	f	file:
findNextHostParameter	src/sqlite/sqlite3.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findReusableFd	src/sqlite/sqlite3.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findRightmost	src/sqlite/sqlite3.c	/^static Select *findRightmost(Select *p){$/;"	f	file:
find_home_dir	src/sqlite/shell.c	/^static char *find_home_dir(int clearFlag){$/;"	f	file:
finder_type	src/sqlite/sqlite3.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
finished_	third_party/gmock/gtest/gtest.h	/^  bool finished_;  \/\/ true iff we know that the thread function has finished.$/;"	m	class:std::tr1::ThreadWithParam
first	src/sqlite/sqlite3.c	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash	file:
first	src/sqlite/sqlite3.c	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash	file:
first_matcher_	third_party/gmock/gmock/gmock.h	/^  const FirstMatcher first_matcher_;$/;"	m	class:testing::internal::PairMatcher
first_matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<const FirstType&> first_matcher_;$/;"	m	class:testing::internal::PairMatcherImpl
first_page_id_	src/include/table/table_heap.h	/^  page_id_t first_page_id_;$/;"	m	class:cmudb::TableHeap
first_used_file	third_party/gmock/gmock-gtest-all.cc	/^  const char* first_used_file;$/;"	m	struct:testing::__anon8::MockObjectState	file:
first_used_line	third_party/gmock/gmock-gtest-all.cc	/^  int first_used_line;$/;"	m	struct:testing::__anon8::MockObjectState	file:
first_used_test	third_party/gmock/gmock-gtest-all.cc	/^  ::std::string first_used_test;$/;"	m	struct:testing::__anon8::MockObjectState	file:
first_used_test_case	third_party/gmock/gmock-gtest-all.cc	/^  ::std::string first_used_test_case;$/;"	m	struct:testing::__anon8::MockObjectState	file:
fixBoundingBox	src/sqlite/sqlite3.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixLeafParent	src/sqlite/sqlite3.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fixed_length	src/include/catalog/column.h	/^  int32_t fixed_length;$/;"	m	class:cmudb::Column
fixture_class_id_	third_party/gmock/gtest/gtest.h	/^  const internal::TypeId fixture_class_id_;   \/\/ ID of the test fixture class$/;"	m	class:testing::TestInfo
fkActionTrigger	src/sqlite/sqlite3.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkChildIsModified	src/sqlite/sqlite3.c	/^static int fkChildIsModified($/;"	f	file:
fkLookupParent	src/sqlite/sqlite3.c	/^static void fkLookupParent($/;"	f	file:
fkParentIsModified	src/sqlite/sqlite3.c	/^static int fkParentIsModified($/;"	f	file:
fkScanChildren	src/sqlite/sqlite3.c	/^static void fkScanChildren($/;"	f	file:
fkTriggerDelete	src/sqlite/sqlite3.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkeyHash	src/sqlite/sqlite3.c	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema	file:
flag	src/sqlite/sqlite3.c	/^  char flag;$/;"	m	struct:MatchInfo	file:
flags	src/sqlite/sqlite3.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	src/sqlite/sqlite3.c	/^  int flags;                      \/* Mask of configuration flags *\/$/;"	m	struct:Fts5SegIter	file:
flags	src/sqlite/sqlite3.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:MemJournal	file:
flags	src/sqlite/sqlite3.c	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3	file:
flags	src/sqlite/sqlite3.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	src/sqlite/sqlite3.c	/^  int flags;$/;"	m	struct:Fts3SegFilter	file:
flags	src/sqlite/sqlite3.c	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr	file:
flags	src/sqlite/sqlite3.c	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:sqlite3_value	file:
flags	src/sqlite/sqlite3.c	/^  u32 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr	file:
flags	src/sqlite/sqlite3.c	/^  u8 flags;                       \/* Copy of flags byte *\/$/;"	m	struct:StatPage	file:
flattenSubquery	src/sqlite/sqlite3.c	/^static int flattenSubquery($/;"	f	file:
float	src/sqlite/sqlite3.c	12506;"	d	file:
floatSwap	src/sqlite/sqlite3.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
flockCheckReservedLock	src/sqlite/sqlite3.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockClose	src/sqlite/sqlite3.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockLock	src/sqlite/sqlite3.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	src/sqlite/sqlite3.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
fmtinfo	src/sqlite/sqlite3.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmttype	src/sqlite/sqlite3.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
forwarding_enabled	third_party/gmock/gmock-gtest-all.cc	/^  bool forwarding_enabled() const { return forwarding_enabled_; }$/;"	f	class:testing::internal::TestEventRepeater
forwarding_enabled_	third_party/gmock/gmock-gtest-all.cc	/^  bool forwarding_enabled_;$/;"	m	class:testing::internal::TestEventRepeater	file:
fraction_bits	third_party/gmock/gtest/gtest.h	/^  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
free	src/include/sqlite/sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines
free	src/sqlite/sqlite3.c	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	file:
freeColumnList	src/sqlite/shell.c	/^static void freeColumnList(char **azCol){$/;"	f	file:
freeCursorConstraints	src/sqlite/sqlite3.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeEphemeralFunction	src/sqlite/sqlite3.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeIndex	src/sqlite/sqlite3.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeP4	src/sqlite/sqlite3.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freeP4FuncCtx	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void freeP4FuncCtx(sqlite3 *db, sqlite3_context *p){$/;"	f	file:
freeP4Mem	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void freeP4Mem(sqlite3 *db, Mem *p){$/;"	f	file:
freePage	src/sqlite/sqlite3.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage2	src/sqlite/sqlite3.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freeSpace	src/sqlite/sqlite3.c	/^static int freeSpace(MemPage *pPage, u16 iStart, u16 iSize){$/;"	f	file:
freeTempSpace	src/sqlite/sqlite3.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
freeText	src/sqlite/shell.c	/^static void freeText(ShellText *p){$/;"	f	file:
free_list_	src/include/buffer/buffer_pool_manager.h	/^  std::list<Page *> *free_list_;$/;"	m	class:cmudb::BufferPoolManager
free_table	src/include/sqlite/sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines
free_table	src/sqlite/sqlite3.c	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	file:
fsFlags	src/sqlite/sqlite3.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
ftKernelBegin	src/sqlite/shell.c	/^static FILETIME ftKernelBegin;$/;"	v	file:
ftUserBegin	src/sqlite/shell.c	/^static FILETIME ftUserBegin;$/;"	v	file:
ftWallBegin	src/sqlite/shell.c	/^static sqlite3_int64 ftWallBegin;$/;"	v	file:
fts3AllocateSegdirIdx	src/sqlite/sqlite3.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3AppendToNode	src/sqlite/sqlite3.c	/^static int fts3AppendToNode($/;"	f	file:
fts3Appendf	src/sqlite/sqlite3.c	/^static void fts3Appendf($/;"	f	file:
fts3BeginMethod	src/sqlite/sqlite3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BestIndexMethod	src/sqlite/sqlite3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestSnippet	src/sqlite/sqlite3.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BinCompare	src/sqlite/sqlite3.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinHash	src/sqlite/sqlite3.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3ChecksumEntry	src/sqlite/sqlite3.c	/^static u64 fts3ChecksumEntry($/;"	f	file:
fts3ChecksumIndex	src/sqlite/sqlite3.c	/^static u64 fts3ChecksumIndex($/;"	f	file:
fts3CloseMethod	src/sqlite/sqlite3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3ColumnFilter	src/sqlite/sqlite3.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnMethod	src/sqlite/sqlite3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnlistCopy	src/sqlite/sqlite3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCount	src/sqlite/sqlite3.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3CommitMethod	src/sqlite/sqlite3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CompareElemByTerm	src/sqlite/sqlite3.c	/^static int SQLITE_CDECL fts3CompareElemByTerm($/;"	f	file:
fts3ConnectMethod	src/sqlite/sqlite3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3ContentColumns	src/sqlite/sqlite3.c	/^static int fts3ContentColumns($/;"	f	file:
fts3CreateMethod	src/sqlite/sqlite3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateTables	src/sqlite/sqlite3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CursorFinalizeStmt	src/sqlite/sqlite3.c	/^static void fts3CursorFinalizeStmt(Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeek	src/sqlite/sqlite3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeekStmt	src/sqlite/sqlite3.c	/^static int fts3CursorSeekStmt(Fts3Cursor *pCsr){$/;"	f	file:
fts3DatabasePageSize	src/sqlite/sqlite3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DbExec	src/sqlite/sqlite3.c	/^static void fts3DbExec($/;"	f	file:
fts3DeclareVtab	src/sqlite/sqlite3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DecodeIntArray	src/sqlite/sqlite3.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DeleteAll	src/sqlite/sqlite3.c	/^static int fts3DeleteAll(Fts3Table *p, int bContent){$/;"	f	file:
fts3DeleteByRowid	src/sqlite/sqlite3.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteSegdir	src/sqlite/sqlite3.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteSegment	src/sqlite/sqlite3.c	/^static int fts3DeleteSegment($/;"	f	file:
fts3DeleteTerms	src/sqlite/sqlite3.c	/^static void fts3DeleteTerms($/;"	f	file:
fts3DestroyMethod	src/sqlite/sqlite3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	src/sqlite/sqlite3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DoAutoincrmerge	src/sqlite/sqlite3.c	/^static int fts3DoAutoincrmerge($/;"	f	file:
fts3DoIncrmerge	src/sqlite/sqlite3.c	/^static int fts3DoIncrmerge($/;"	f	file:
fts3DoIntegrityCheck	src/sqlite/sqlite3.c	/^static int fts3DoIntegrityCheck($/;"	f	file:
fts3DoOptimize	src/sqlite/sqlite3.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoRebuild	src/sqlite/sqlite3.c	/^static int fts3DoRebuild(Fts3Table *p){$/;"	f	file:
fts3DocidRange	src/sqlite/sqlite3.c	/^static sqlite3_int64 fts3DocidRange(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts3DoclistCountDocids	src/sqlite/sqlite3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistOrMerge	src/sqlite/sqlite3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistPhraseMerge	src/sqlite/sqlite3.c	/^static int fts3DoclistPhraseMerge($/;"	f	file:
fts3EncodeIntArray	src/sqlite/sqlite3.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EofMethod	src/sqlite/sqlite3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EvalAllocateReaders	src/sqlite/sqlite3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAverageDocsize	src/sqlite/sqlite3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalDeferredPhrase	src/sqlite/sqlite3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalDlPhraseNext	src/sqlite/sqlite3.c	/^static void fts3EvalDlPhraseNext($/;"	f	file:
fts3EvalGatherStats	src/sqlite/sqlite3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalIncrPhraseNext	src/sqlite/sqlite3.c	/^static int fts3EvalIncrPhraseNext($/;"	f	file:
fts3EvalInvalidatePoslist	src/sqlite/sqlite3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalNearTest	src/sqlite/sqlite3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTrim	src/sqlite/sqlite3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNext	src/sqlite/sqlite3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNextRow	src/sqlite/sqlite3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalPhraseLoad	src/sqlite/sqlite3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseMergeToken	src/sqlite/sqlite3.c	/^static int fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseNext	src/sqlite/sqlite3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseStart	src/sqlite/sqlite3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalRestart	src/sqlite/sqlite3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalSelectDeferred	src/sqlite/sqlite3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalStart	src/sqlite/sqlite3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStartReaders	src/sqlite/sqlite3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalTestExpr	src/sqlite/sqlite3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTokenCosts	src/sqlite/sqlite3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalUpdateCounts	src/sqlite/sqlite3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprBalance	src/sqlite/sqlite3.c	/^static int fts3ExprBalance(Fts3Expr **pp, int nMaxDepth){$/;"	f	file:
fts3ExprCheckDepth	src/sqlite/sqlite3.c	/^static int fts3ExprCheckDepth(Fts3Expr *p, int nMaxDepth){$/;"	f	file:
fts3ExprGlobalHitsCb	src/sqlite/sqlite3.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprIterate	src/sqlite/sqlite3.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate2	src/sqlite/sqlite3.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprLHitGather	src/sqlite/sqlite3.c	/^static void fts3ExprLHitGather($/;"	f	file:
fts3ExprLHits	src/sqlite/sqlite3.c	/^static void fts3ExprLHits($/;"	f	file:
fts3ExprLoadDoclists	src/sqlite/sqlite3.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclistsCb	src/sqlite/sqlite3.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLocalHitsCb	src/sqlite/sqlite3.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprParse	src/sqlite/sqlite3.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprParseUnbalanced	src/sqlite/sqlite3.c	/^static int fts3ExprParseUnbalanced($/;"	f	file:
fts3ExprPhraseCount	src/sqlite/sqlite3.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCountCb	src/sqlite/sqlite3.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	src/sqlite/sqlite3.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTest	src/sqlite/sqlite3.c	/^static void fts3ExprTest($/;"	f	file:
fts3FilterMethod	src/sqlite/sqlite3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FindElementByHash	src/sqlite/sqlite3.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindFunctionMethod	src/sqlite/sqlite3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FreeExprNode	src/sqlite/sqlite3.c	/^static void fts3FreeExprNode(Fts3Expr *p){$/;"	f	file:
fts3FunctionArg	src/sqlite/sqlite3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3GetDeltaPosition	src/sqlite/sqlite3.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaVarint	src/sqlite/sqlite3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint3	src/sqlite/sqlite3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetMatchinfo	src/sqlite/sqlite3.c	/^static void fts3GetMatchinfo($/;"	f	file:
fts3GetReverseVarint	src/sqlite/sqlite3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GetVarint32	src/sqlite/sqlite3.c	146726;"	d	file:
fts3Getint	src/sqlite/sqlite3.c	/^static int fts3Getint(const char **pz){$/;"	f	file:
fts3GobbleInt	src/sqlite/sqlite3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3HashClear	src/sqlite/sqlite3.c	146195;"	d	file:
fts3HashCount	src/sqlite/sqlite3.c	146219;"	d	file:
fts3HashData	src/sqlite/sqlite3.c	146212;"	d	file:
fts3HashFind	src/sqlite/sqlite3.c	146194;"	d	file:
fts3HashFindElem	src/sqlite/sqlite3.c	146196;"	d	file:
fts3HashFirst	src/sqlite/sqlite3.c	146210;"	d	file:
fts3HashFree	src/sqlite/sqlite3.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashInit	src/sqlite/sqlite3.c	146192;"	d	file:
fts3HashInsert	src/sqlite/sqlite3.c	146193;"	d	file:
fts3HashInsertElement	src/sqlite/sqlite3.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashKey	src/sqlite/sqlite3.c	146213;"	d	file:
fts3HashKeysize	src/sqlite/sqlite3.c	146214;"	d	file:
fts3HashMalloc	src/sqlite/sqlite3.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashNext	src/sqlite/sqlite3.c	146211;"	d	file:
fts3IncrmergeAppend	src/sqlite/sqlite3.c	/^static int fts3IncrmergeAppend($/;"	f	file:
fts3IncrmergeChomp	src/sqlite/sqlite3.c	/^static int fts3IncrmergeChomp($/;"	f	file:
fts3IncrmergeCsr	src/sqlite/sqlite3.c	/^static int fts3IncrmergeCsr($/;"	f	file:
fts3IncrmergeHintLoad	src/sqlite/sqlite3.c	/^static int fts3IncrmergeHintLoad(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintPop	src/sqlite/sqlite3.c	/^static int fts3IncrmergeHintPop(Blob *pHint, i64 *piAbsLevel, int *pnInput){$/;"	f	file:
fts3IncrmergeHintPush	src/sqlite/sqlite3.c	/^static void fts3IncrmergeHintPush($/;"	f	file:
fts3IncrmergeHintStore	src/sqlite/sqlite3.c	/^static int fts3IncrmergeHintStore(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeLoad	src/sqlite/sqlite3.c	/^static int fts3IncrmergeLoad($/;"	f	file:
fts3IncrmergeOutputIdx	src/sqlite/sqlite3.c	/^static int fts3IncrmergeOutputIdx($/;"	f	file:
fts3IncrmergePush	src/sqlite/sqlite3.c	/^static int fts3IncrmergePush($/;"	f	file:
fts3IncrmergeRelease	src/sqlite/sqlite3.c	/^static void fts3IncrmergeRelease($/;"	f	file:
fts3IncrmergeWriter	src/sqlite/sqlite3.c	/^static int fts3IncrmergeWriter($/;"	f	file:
fts3InitVtab	src/sqlite/sqlite3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InsertData	src/sqlite/sqlite3.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertDocsize	src/sqlite/sqlite3.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertTerms	src/sqlite/sqlite3.c	/^static int fts3InsertTerms($/;"	f	file:
fts3IntegrityCheck	src/sqlite/sqlite3.c	/^static int fts3IntegrityCheck(Fts3Table *p, int *pbOk){$/;"	f	file:
fts3IsAppendable	src/sqlite/sqlite3.c	/^static int fts3IsAppendable(Fts3Table *p, sqlite3_int64 iEnd, int *pbRes){$/;"	f	file:
fts3IsEmpty	src/sqlite/sqlite3.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsSpecialColumn	src/sqlite/sqlite3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3LcsIteratorAdvance	src/sqlite/sqlite3.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3LogMerge	src/sqlite/sqlite3.c	/^static void fts3LogMerge(int nMerge, sqlite3_int64 iAbsLevel){$/;"	f	file:
fts3LogMerge	src/sqlite/sqlite3.c	156678;"	d	file:
fts3MIBufferAlloc	src/sqlite/sqlite3.c	/^static void (*fts3MIBufferAlloc(MatchinfoBuffer *p, u32 **paOut))(void*){$/;"	f	file:
fts3MIBufferFree	src/sqlite/sqlite3.c	/^static void fts3MIBufferFree(void *p){$/;"	f	file:
fts3MIBufferNew	src/sqlite/sqlite3.c	/^static MatchinfoBuffer *fts3MIBufferNew(int nElem, const char *zMatchinfo){$/;"	f	file:
fts3MIBufferSetGlobal	src/sqlite/sqlite3.c	/^static void fts3MIBufferSetGlobal(MatchinfoBuffer *p){$/;"	f	file:
fts3MallocZero	src/sqlite/sqlite3.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MatchinfoCheck	src/sqlite/sqlite3.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoFunc	src/sqlite/sqlite3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoLcs	src/sqlite/sqlite3.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcsCb	src/sqlite/sqlite3.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoSelectDoctotal	src/sqlite/sqlite3.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSize	src/sqlite/sqlite3.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoValues	src/sqlite/sqlite3.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3Module	src/sqlite/sqlite3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3MsrBufferData	src/sqlite/sqlite3.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3NextMethod	src/sqlite/sqlite3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NodeAddTerm	src/sqlite/sqlite3.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeFree	src/sqlite/sqlite3.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeWrite	src/sqlite/sqlite3.c	/^static int fts3NodeWrite($/;"	f	file:
fts3OffsetsFunc	src/sqlite/sqlite3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OpenMethod	src/sqlite/sqlite3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OptimizeFunc	src/sqlite/sqlite3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3PendingListAppend	src/sqlite/sqlite3.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppendVarint	src/sqlite/sqlite3.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListDelete	src/sqlite/sqlite3.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingTermsAdd	src/sqlite/sqlite3.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAddOne	src/sqlite/sqlite3.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsDocid	src/sqlite/sqlite3.c	/^static int fts3PendingTermsDocid($/;"	f	file:
fts3PoslistCopy	src/sqlite/sqlite3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistMerge	src/sqlite/sqlite3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistNearMerge	src/sqlite/sqlite3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistPhraseMerge	src/sqlite/sqlite3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PrefixCompress	src/sqlite/sqlite3.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixParameter	src/sqlite/sqlite3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PromoteSegments	src/sqlite/sqlite3.c	/^static int fts3PromoteSegments($/;"	f	file:
fts3PutColNumber	src/sqlite/sqlite3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutDeltaVarint	src/sqlite/sqlite3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint3	src/sqlite/sqlite3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3QuoteId	src/sqlite/sqlite3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3ReadEndBlockField	src/sqlite/sqlite3.c	/^static void fts3ReadEndBlockField($/;"	f	file:
fts3ReadExprList	src/sqlite/sqlite3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadNextPos	src/sqlite/sqlite3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReallocOrFree	src/sqlite/sqlite3.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3Rehash	src/sqlite/sqlite3.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3ReleaseMethod	src/sqlite/sqlite3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RemoveElementByHash	src/sqlite/sqlite3.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RemoveSegdirEntry	src/sqlite/sqlite3.c	/^static int fts3RemoveSegdirEntry($/;"	f	file:
fts3RenameMethod	src/sqlite/sqlite3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3RepackSegdirLevel	src/sqlite/sqlite3.c	/^static int fts3RepackSegdirLevel($/;"	f	file:
fts3ReversePoslist	src/sqlite/sqlite3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3RollbackMethod	src/sqlite/sqlite3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackToMethod	src/sqlite/sqlite3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RowidMethod	src/sqlite/sqlite3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3SavepointMethod	src/sqlite/sqlite3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ScanInteriorNode	src/sqlite/sqlite3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3SegReaderCmp	src/sqlite/sqlite3.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCursor	src/sqlite/sqlite3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursorAddZero	src/sqlite/sqlite3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAppend	src/sqlite/sqlite3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorFree	src/sqlite/sqlite3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderDoclistCmp	src/sqlite/sqlite3.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	src/sqlite/sqlite3.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderFirstDocid	src/sqlite/sqlite3.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	src/sqlite/sqlite3.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIsPending	src/sqlite/sqlite3.c	156763;"	d	file:
fts3SegReaderIsRootOnly	src/sqlite/sqlite3.c	156764;"	d	file:
fts3SegReaderNext	src/sqlite/sqlite3.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNextDocid	src/sqlite/sqlite3.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderRequire	src/sqlite/sqlite3.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderSetEof	src/sqlite/sqlite3.c	/^static void fts3SegReaderSetEof(Fts3SegReader *pSeg){$/;"	f	file:
fts3SegReaderSort	src/sqlite/sqlite3.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderStart	src/sqlite/sqlite3.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderTermCmp	src/sqlite/sqlite3.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegWriterAdd	src/sqlite/sqlite3.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterFlush	src/sqlite/sqlite3.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFree	src/sqlite/sqlite3.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegmentIsMaxLevel	src/sqlite/sqlite3.c	/^static int fts3SegmentIsMaxLevel(Fts3Table *p, i64 iAbsLevel, int *pbMax){$/;"	f	file:
fts3SegmentMaxLevel	src/sqlite/sqlite3.c	/^static int fts3SegmentMaxLevel($/;"	f	file:
fts3SegmentMerge	src/sqlite/sqlite3.c	/^static int fts3SegmentMerge($/;"	f	file:
fts3SelectDocsize	src/sqlite/sqlite3.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectLeaf	src/sqlite/sqlite3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SetEstimatedRows	src/sqlite/sqlite3.c	/^static void fts3SetEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
fts3SetHasStat	src/sqlite/sqlite3.c	/^static int fts3SetHasStat(Fts3Table *p){$/;"	f	file:
fts3SetUniqueFlag	src/sqlite/sqlite3.c	/^static void fts3SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts3SnippetAdvance	src/sqlite/sqlite3.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetDetails	src/sqlite/sqlite3.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetFindPositions	src/sqlite/sqlite3.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFunc	src/sqlite/sqlite3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetNextCandidate	src/sqlite/sqlite3.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetShift	src/sqlite/sqlite3.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetText	src/sqlite/sqlite3.c	/^static int fts3SnippetText($/;"	f	file:
fts3SpecialInsert	src/sqlite/sqlite3.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SqlExec	src/sqlite/sqlite3.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlStmt	src/sqlite/sqlite3.c	/^static int fts3SqlStmt($/;"	f	file:
fts3StartNode	src/sqlite/sqlite3.c	/^static void fts3StartNode(Blob *pNode, int iHeight, sqlite3_int64 iChild){$/;"	f	file:
fts3StrCompare	src/sqlite/sqlite3.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrHash	src/sqlite/sqlite3.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StringAppend	src/sqlite/sqlite3.c	/^static int fts3StringAppend($/;"	f	file:
fts3SyncMethod	src/sqlite/sqlite3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3TermCmp	src/sqlite/sqlite3.c	/^static int fts3TermCmp($/;"	f	file:
fts3TermSegReaderCursor	src/sqlite/sqlite3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSelect	src/sqlite/sqlite3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelectFinishMerge	src/sqlite/sqlite3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectMerge	src/sqlite/sqlite3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TokenizerEnabled	src/sqlite/sqlite3.c	/^static int fts3TokenizerEnabled(sqlite3_context *context){$/;"	f	file:
fts3TokenizerFunc	src/sqlite/sqlite3.c	/^static void fts3TokenizerFunc($/;"	f	file:
fts3TreeFinishNode	src/sqlite/sqlite3.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3TruncateNode	src/sqlite/sqlite3.c	/^static int fts3TruncateNode($/;"	f	file:
fts3TruncateSegment	src/sqlite/sqlite3.c	/^static int fts3TruncateSegment($/;"	f	file:
fts3UpdateDocTotals	src/sqlite/sqlite3.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateMethod	src/sqlite/sqlite3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3WriteExprList	src/sqlite/sqlite3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteSegdir	src/sqlite/sqlite3.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegment	src/sqlite/sqlite3.c	/^static int fts3WriteSegment($/;"	f	file:
fts3Writelock	src/sqlite/sqlite3.c	/^static int fts3Writelock(Fts3Table *p){$/;"	f	file:
fts3_isalnum	src/sqlite/sqlite3.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3auxBestIndexMethod	src/sqlite/sqlite3.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxCloseMethod	src/sqlite/sqlite3.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxColumnMethod	src/sqlite/sqlite3.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxConnectMethod	src/sqlite/sqlite3.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxDisconnectMethod	src/sqlite/sqlite3.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxEofMethod	src/sqlite/sqlite3.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxFilterMethod	src/sqlite/sqlite3.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxGrowStatArray	src/sqlite/sqlite3.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxNextMethod	src/sqlite/sqlite3.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxOpenMethod	src/sqlite/sqlite3.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxRowidMethod	src/sqlite/sqlite3.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3isspace	src/sqlite/sqlite3.c	/^static int fts3isspace(char c){$/;"	f	file:
fts3tokBestIndexMethod	src/sqlite/sqlite3.c	/^static int fts3tokBestIndexMethod($/;"	f	file:
fts3tokCloseMethod	src/sqlite/sqlite3.c	/^static int fts3tokCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokColumnMethod	src/sqlite/sqlite3.c	/^static int fts3tokColumnMethod($/;"	f	file:
fts3tokConnectMethod	src/sqlite/sqlite3.c	/^static int fts3tokConnectMethod($/;"	f	file:
fts3tokDequoteArray	src/sqlite/sqlite3.c	/^static int fts3tokDequoteArray($/;"	f	file:
fts3tokDisconnectMethod	src/sqlite/sqlite3.c	/^static int fts3tokDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3tokEofMethod	src/sqlite/sqlite3.c	/^static int fts3tokEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokFilterMethod	src/sqlite/sqlite3.c	/^static int fts3tokFilterMethod($/;"	f	file:
fts3tokNextMethod	src/sqlite/sqlite3.c	/^static int fts3tokNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokOpenMethod	src/sqlite/sqlite3.c	/^static int fts3tokOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3tokQueryTokenizer	src/sqlite/sqlite3.c	/^static int fts3tokQueryTokenizer($/;"	f	file:
fts3tokResetCursor	src/sqlite/sqlite3.c	/^static void fts3tokResetCursor(Fts3tokCursor *pCsr){$/;"	f	file:
fts3tokRowidMethod	src/sqlite/sqlite3.c	/^static int fts3tokRowidMethod($/;"	f	file:
fts5AllocateSegid	src/sqlite/sqlite3.c	/^static int fts5AllocateSegid(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5ApiCallback	src/sqlite/sqlite3.c	/^static void fts5ApiCallback($/;"	f	file:
fts5ApiColumnCount	src/sqlite/sqlite3.c	/^static int fts5ApiColumnCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiColumnSize	src/sqlite/sqlite3.c	/^static int fts5ApiColumnSize(Fts5Context *pCtx, int iCol, int *pnToken){$/;"	f	file:
fts5ApiColumnText	src/sqlite/sqlite3.c	/^static int fts5ApiColumnText($/;"	f	file:
fts5ApiColumnTotalSize	src/sqlite/sqlite3.c	/^static int fts5ApiColumnTotalSize($/;"	f	file:
fts5ApiGetAuxdata	src/sqlite/sqlite3.c	/^static void *fts5ApiGetAuxdata(Fts5Context *pCtx, int bClear){$/;"	f	file:
fts5ApiInst	src/sqlite/sqlite3.c	/^static int fts5ApiInst($/;"	f	file:
fts5ApiInstCount	src/sqlite/sqlite3.c	/^static int fts5ApiInstCount(Fts5Context *pCtx, int *pnInst){$/;"	f	file:
fts5ApiInvoke	src/sqlite/sqlite3.c	/^static void fts5ApiInvoke($/;"	f	file:
fts5ApiPhraseCount	src/sqlite/sqlite3.c	/^static int fts5ApiPhraseCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiPhraseFirst	src/sqlite/sqlite3.c	/^static int fts5ApiPhraseFirst($/;"	f	file:
fts5ApiPhraseFirstColumn	src/sqlite/sqlite3.c	/^static int fts5ApiPhraseFirstColumn($/;"	f	file:
fts5ApiPhraseNext	src/sqlite/sqlite3.c	/^static void fts5ApiPhraseNext($/;"	f	file:
fts5ApiPhraseNextColumn	src/sqlite/sqlite3.c	/^static void fts5ApiPhraseNextColumn($/;"	f	file:
fts5ApiPhraseSize	src/sqlite/sqlite3.c	/^static int fts5ApiPhraseSize(Fts5Context *pCtx, int iPhrase){$/;"	f	file:
fts5ApiQueryPhrase	src/sqlite/sqlite3.c	/^static int fts5ApiQueryPhrase($/;"	f	file:
fts5ApiRowCount	src/sqlite/sqlite3.c	/^static int fts5ApiRowCount(Fts5Context *pCtx, i64 *pnRow){$/;"	f	file:
fts5ApiRowid	src/sqlite/sqlite3.c	/^static sqlite3_int64 fts5ApiRowid(Fts5Context *pCtx){$/;"	f	file:
fts5ApiSetAuxdata	src/sqlite/sqlite3.c	/^static int fts5ApiSetAuxdata($/;"	f	file:
fts5ApiTokenize	src/sqlite/sqlite3.c	/^static int fts5ApiTokenize($/;"	f	file:
fts5ApiUserData	src/sqlite/sqlite3.c	/^static void *fts5ApiUserData(Fts5Context *pCtx){$/;"	f	file:
fts5AppendPoslist	src/sqlite/sqlite3.c	/^static void fts5AppendPoslist($/;"	f	file:
fts5AppendRowid	src/sqlite/sqlite3.c	/^static void fts5AppendRowid($/;"	f	file:
fts5AsciiAddExceptions	src/sqlite/sqlite3.c	/^static void fts5AsciiAddExceptions($/;"	f	file:
fts5AsciiCreate	src/sqlite/sqlite3.c	/^static int fts5AsciiCreate($/;"	f	file:
fts5AsciiDelete	src/sqlite/sqlite3.c	/^static void fts5AsciiDelete(Fts5Tokenizer *p){$/;"	f	file:
fts5AsciiTokenize	src/sqlite/sqlite3.c	/^static int fts5AsciiTokenize($/;"	f	file:
fts5AssertComparisonResult	src/sqlite/sqlite3.c	/^static void fts5AssertComparisonResult($/;"	f	file:
fts5AssertMultiIterSetup	src/sqlite/sqlite3.c	/^static void fts5AssertMultiIterSetup(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5AssertMultiIterSetup	src/sqlite/sqlite3.c	193246;"	d	file:
fts5BeginMethod	src/sqlite/sqlite3.c	/^static int fts5BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5BestIndexMethod	src/sqlite/sqlite3.c	/^static int fts5BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts5Bm25Function	src/sqlite/sqlite3.c	/^static void fts5Bm25Function($/;"	f	file:
fts5Bm25GetData	src/sqlite/sqlite3.c	/^static int fts5Bm25GetData($/;"	f	file:
fts5BufferAppendBlob	src/sqlite/sqlite3.c	183403;"	d	file:
fts5BufferAppendVarint	src/sqlite/sqlite3.c	183401;"	d	file:
fts5BufferCompare	src/sqlite/sqlite3.c	/^static int fts5BufferCompare(Fts5Buffer *pLeft, Fts5Buffer *pRight){$/;"	f	file:
fts5BufferCompareBlob	src/sqlite/sqlite3.c	/^static int fts5BufferCompareBlob($/;"	f	file:
fts5BufferFree	src/sqlite/sqlite3.c	183402;"	d	file:
fts5BufferGrow	src/sqlite/sqlite3.c	183406;"	d	file:
fts5BufferSafeAppendBlob	src/sqlite/sqlite3.c	191758;"	d	file:
fts5BufferSafeAppendVarint	src/sqlite/sqlite3.c	191764;"	d	file:
fts5BufferSet	src/sqlite/sqlite3.c	183404;"	d	file:
fts5BufferSwap	src/sqlite/sqlite3.c	/^static void fts5BufferSwap(Fts5Buffer *p1, Fts5Buffer *p2){$/;"	f	file:
fts5BufferZero	src/sqlite/sqlite3.c	183400;"	d	file:
fts5CInstIterInit	src/sqlite/sqlite3.c	/^static int fts5CInstIterInit($/;"	f	file:
fts5CInstIterNext	src/sqlite/sqlite3.c	/^static int fts5CInstIterNext(CInstIter *pIter){$/;"	f	file:
fts5CacheInstArray	src/sqlite/sqlite3.c	/^static int fts5CacheInstArray(Fts5Cursor *pCsr){$/;"	f	file:
fts5CheckTransactionState	src/sqlite/sqlite3.c	/^static void fts5CheckTransactionState(Fts5Table *p, int op, int iSavepoint){$/;"	f	file:
fts5CheckTransactionState	src/sqlite/sqlite3.c	197459;"	d	file:
fts5ChunkIterate	src/sqlite/sqlite3.c	/^static void fts5ChunkIterate($/;"	f	file:
fts5CloneColset	src/sqlite/sqlite3.c	/^static Fts5Colset *fts5CloneColset(int *pRc, Fts5Colset *pOrig){$/;"	f	file:
fts5CloseMethod	src/sqlite/sqlite3.c	/^static int fts5CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5CloseReader	src/sqlite/sqlite3.c	/^static void fts5CloseReader(Fts5Index *p){$/;"	f	file:
fts5ColumnMethod	src/sqlite/sqlite3.c	/^static int fts5ColumnMethod($/;"	f	file:
fts5ColumnSizeCb	src/sqlite/sqlite3.c	/^static int fts5ColumnSizeCb($/;"	f	file:
fts5CommitMethod	src/sqlite/sqlite3.c	/^static int fts5CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5ConfigDefaultTokenizer	src/sqlite/sqlite3.c	/^static int fts5ConfigDefaultTokenizer(Fts5Global *pGlobal, Fts5Config *pConfig){$/;"	f	file:
fts5ConfigGobbleWord	src/sqlite/sqlite3.c	/^static const char *fts5ConfigGobbleWord($/;"	f	file:
fts5ConfigMakeExprlist	src/sqlite/sqlite3.c	/^static int fts5ConfigMakeExprlist(Fts5Config *p){$/;"	f	file:
fts5ConfigParseColumn	src/sqlite/sqlite3.c	/^static int fts5ConfigParseColumn($/;"	f	file:
fts5ConfigParseSpecial	src/sqlite/sqlite3.c	/^static int fts5ConfigParseSpecial($/;"	f	file:
fts5ConfigSetEnum	src/sqlite/sqlite3.c	/^static int fts5ConfigSetEnum($/;"	f	file:
fts5ConfigSkipArgs	src/sqlite/sqlite3.c	/^static const char *fts5ConfigSkipArgs(const char *pIn){$/;"	f	file:
fts5ConfigSkipBareword	src/sqlite/sqlite3.c	/^static const char *fts5ConfigSkipBareword(const char *pIn){$/;"	f	file:
fts5ConfigSkipLiteral	src/sqlite/sqlite3.c	/^static const char *fts5ConfigSkipLiteral(const char *pIn){$/;"	f	file:
fts5ConfigSkipWhitespace	src/sqlite/sqlite3.c	/^static const char *fts5ConfigSkipWhitespace(const char *pIn){$/;"	f	file:
fts5ConnectMethod	src/sqlite/sqlite3.c	/^static int fts5ConnectMethod($/;"	f	file:
fts5CountCb	src/sqlite/sqlite3.c	/^static int fts5CountCb($/;"	f	file:
fts5CreateAux	src/sqlite/sqlite3.c	/^static int fts5CreateAux($/;"	f	file:
fts5CreateMethod	src/sqlite/sqlite3.c	/^static int fts5CreateMethod($/;"	f	file:
fts5CreateTokenizer	src/sqlite/sqlite3.c	/^static int fts5CreateTokenizer($/;"	f	file:
fts5CsrNewrow	src/sqlite/sqlite3.c	/^static void fts5CsrNewrow(Fts5Cursor *pCsr){$/;"	f	file:
fts5CsrPoslist	src/sqlite/sqlite3.c	/^static int fts5CsrPoslist($/;"	f	file:
fts5CursorFirst	src/sqlite/sqlite3.c	/^static int fts5CursorFirst(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirstSorted	src/sqlite/sqlite3.c	/^static int fts5CursorFirstSorted(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFromCsrid	src/sqlite/sqlite3.c	/^static Fts5Cursor *fts5CursorFromCsrid(Fts5Global *pGlobal, i64 iCsrId){$/;"	f	file:
fts5CursorParseRank	src/sqlite/sqlite3.c	/^static int fts5CursorParseRank($/;"	f	file:
fts5CursorReseek	src/sqlite/sqlite3.c	/^static int fts5CursorReseek(Fts5Cursor *pCsr, int *pbSkip){$/;"	f	file:
fts5CursorRowid	src/sqlite/sqlite3.c	/^static i64 fts5CursorRowid(Fts5Cursor *pCsr){$/;"	f	file:
fts5DataDelete	src/sqlite/sqlite3.c	/^static void fts5DataDelete(Fts5Index *p, i64 iFirst, i64 iLast){$/;"	f	file:
fts5DataRead	src/sqlite/sqlite3.c	/^static Fts5Data *fts5DataRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5DataRelease	src/sqlite/sqlite3.c	/^static void fts5DataRelease(Fts5Data *pData){$/;"	f	file:
fts5DataRemoveSegment	src/sqlite/sqlite3.c	/^static void fts5DataRemoveSegment(Fts5Index *p, int iSegid){$/;"	f	file:
fts5DataWrite	src/sqlite/sqlite3.c	/^static void fts5DataWrite(Fts5Index *p, i64 iRowid, const u8 *pData, int nData){$/;"	f	file:
fts5DebugRowid	src/sqlite/sqlite3.c	/^static void fts5DebugRowid(int *pRc, Fts5Buffer *pBuf, i64 iKey){$/;"	f	file:
fts5DebugStructure	src/sqlite/sqlite3.c	/^static void fts5DebugStructure($/;"	f	file:
fts5DecodeAverages	src/sqlite/sqlite3.c	/^static void fts5DecodeAverages($/;"	f	file:
fts5DecodeDoclist	src/sqlite/sqlite3.c	/^static int fts5DecodeDoclist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeFunction	src/sqlite/sqlite3.c	/^static void fts5DecodeFunction($/;"	f	file:
fts5DecodePoslist	src/sqlite/sqlite3.c	/^static int fts5DecodePoslist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeRowid	src/sqlite/sqlite3.c	/^static void fts5DecodeRowid($/;"	f	file:
fts5DecodeRowidList	src/sqlite/sqlite3.c	/^static void fts5DecodeRowidList($/;"	f	file:
fts5DecodeStructure	src/sqlite/sqlite3.c	/^static void fts5DecodeStructure($/;"	f	file:
fts5Dequote	src/sqlite/sqlite3.c	/^static int fts5Dequote(char *z){$/;"	f	file:
fts5DestroyMethod	src/sqlite/sqlite3.c	/^static int fts5DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DisconnectMethod	src/sqlite/sqlite3.c	/^static int fts5DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DlidxExtractFirstRowid	src/sqlite/sqlite3.c	/^static i64 fts5DlidxExtractFirstRowid(Fts5Buffer *pBuf){$/;"	f	file:
fts5DlidxIterEof	src/sqlite/sqlite3.c	/^static int fts5DlidxIterEof(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFirst	src/sqlite/sqlite3.c	/^static int fts5DlidxIterFirst(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFree	src/sqlite/sqlite3.c	/^static void fts5DlidxIterFree(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterInit	src/sqlite/sqlite3.c	/^static Fts5DlidxIter *fts5DlidxIterInit($/;"	f	file:
fts5DlidxIterLast	src/sqlite/sqlite3.c	/^static void fts5DlidxIterLast(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNext	src/sqlite/sqlite3.c	/^static int fts5DlidxIterNext(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNextR	src/sqlite/sqlite3.c	/^static int fts5DlidxIterNextR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterPgno	src/sqlite/sqlite3.c	/^static int fts5DlidxIterPgno(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrev	src/sqlite/sqlite3.c	/^static int fts5DlidxIterPrev(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrevR	src/sqlite/sqlite3.c	/^static int fts5DlidxIterPrevR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterRowid	src/sqlite/sqlite3.c	/^static i64 fts5DlidxIterRowid(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxLvlNext	src/sqlite/sqlite3.c	/^static int fts5DlidxLvlNext(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlPrev	src/sqlite/sqlite3.c	/^static int fts5DlidxLvlPrev(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DoclistIterInit	src/sqlite/sqlite3.c	/^static void fts5DoclistIterInit($/;"	f	file:
fts5DoclistIterNext	src/sqlite/sqlite3.c	/^static void fts5DoclistIterNext(Fts5DoclistIter *pIter){$/;"	f	file:
fts5EntryKey	src/sqlite/sqlite3.c	190202;"	d	file:
fts5EofMethod	src/sqlite/sqlite3.c	/^static int fts5EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5ExecPrintf	src/sqlite/sqlite3.c	/^static int fts5ExecPrintf($/;"	f	file:
fts5ExprAddChildren	src/sqlite/sqlite3.c	/^static void fts5ExprAddChildren(Fts5ExprNode *p, Fts5ExprNode *pSub){$/;"	f	file:
fts5ExprAdvanceto	src/sqlite/sqlite3.c	/^static int fts5ExprAdvanceto($/;"	f	file:
fts5ExprAssignXNext	src/sqlite/sqlite3.c	/^static void fts5ExprAssignXNext(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprCheckPoslists	src/sqlite/sqlite3.c	/^static int fts5ExprCheckPoslists(Fts5ExprNode *pNode, i64 iRowid){$/;"	f	file:
fts5ExprClearPoslists	src/sqlite/sqlite3.c	/^static void fts5ExprClearPoslists(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprColsetTest	src/sqlite/sqlite3.c	/^static int fts5ExprColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5ExprFold	src/sqlite/sqlite3.c	/^static void fts5ExprFold($/;"	f	file:
fts5ExprFunction	src/sqlite/sqlite3.c	/^static void fts5ExprFunction($/;"	f	file:
fts5ExprFunctionHr	src/sqlite/sqlite3.c	/^static void fts5ExprFunctionHr($/;"	f	file:
fts5ExprFunctionTcl	src/sqlite/sqlite3.c	/^static void fts5ExprFunctionTcl($/;"	f	file:
fts5ExprGetToken	src/sqlite/sqlite3.c	/^static int fts5ExprGetToken($/;"	f	file:
fts5ExprIsAlnum	src/sqlite/sqlite3.c	/^static void fts5ExprIsAlnum($/;"	f	file:
fts5ExprIsspace	src/sqlite/sqlite3.c	/^static int fts5ExprIsspace(char t){$/;"	f	file:
fts5ExprNearInitAll	src/sqlite/sqlite3.c	/^static int fts5ExprNearInitAll($/;"	f	file:
fts5ExprNearIsMatch	src/sqlite/sqlite3.c	/^static int fts5ExprNearIsMatch(int *pRc, Fts5ExprNearset *pNear){$/;"	f	file:
fts5ExprNearTest	src/sqlite/sqlite3.c	/^static int fts5ExprNearTest($/;"	f	file:
fts5ExprNodeFirst	src/sqlite/sqlite3.c	/^static int fts5ExprNodeFirst(Fts5Expr *pExpr, Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeNext	src/sqlite/sqlite3.c	187389;"	d	file:
fts5ExprNodeNext_AND	src/sqlite/sqlite3.c	/^static int fts5ExprNodeNext_AND($/;"	f	file:
fts5ExprNodeNext_NOT	src/sqlite/sqlite3.c	/^static int fts5ExprNodeNext_NOT($/;"	f	file:
fts5ExprNodeNext_OR	src/sqlite/sqlite3.c	/^static int fts5ExprNodeNext_OR($/;"	f	file:
fts5ExprNodeNext_STRING	src/sqlite/sqlite3.c	/^static int fts5ExprNodeNext_STRING($/;"	f	file:
fts5ExprNodeNext_TERM	src/sqlite/sqlite3.c	/^static int fts5ExprNodeNext_TERM($/;"	f	file:
fts5ExprNodeTest	src/sqlite/sqlite3.c	/^static int fts5ExprNodeTest($/;"	f	file:
fts5ExprNodeTest_AND	src/sqlite/sqlite3.c	/^static int fts5ExprNodeTest_AND($/;"	f	file:
fts5ExprNodeTest_NOT	src/sqlite/sqlite3.c	/^static int fts5ExprNodeTest_NOT($/;"	f	file:
fts5ExprNodeTest_OR	src/sqlite/sqlite3.c	/^static void fts5ExprNodeTest_OR($/;"	f	file:
fts5ExprNodeTest_STRING	src/sqlite/sqlite3.c	/^static int fts5ExprNodeTest_STRING($/;"	f	file:
fts5ExprNodeTest_TERM	src/sqlite/sqlite3.c	/^static int fts5ExprNodeTest_TERM($/;"	f	file:
fts5ExprNodeZeroPoslist	src/sqlite/sqlite3.c	/^static void fts5ExprNodeZeroPoslist(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprPhraseFree	src/sqlite/sqlite3.c	/^static void fts5ExprPhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
fts5ExprPhraseIsMatch	src/sqlite/sqlite3.c	/^static int fts5ExprPhraseIsMatch($/;"	f	file:
fts5ExprPopulatePoslistsCb	src/sqlite/sqlite3.c	/^static int fts5ExprPopulatePoslistsCb($/;"	f	file:
fts5ExprPrint	src/sqlite/sqlite3.c	/^static char *fts5ExprPrint(Fts5Config *pConfig, Fts5ExprNode *pExpr){$/;"	f	file:
fts5ExprPrintTcl	src/sqlite/sqlite3.c	/^static char *fts5ExprPrintTcl($/;"	f	file:
fts5ExprSetEof	src/sqlite/sqlite3.c	/^static void fts5ExprSetEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprSynonymAdvanceto	src/sqlite/sqlite3.c	/^static int fts5ExprSynonymAdvanceto($/;"	f	file:
fts5ExprSynonymList	src/sqlite/sqlite3.c	/^static int fts5ExprSynonymList($/;"	f	file:
fts5ExprSynonymRowid	src/sqlite/sqlite3.c	/^static i64 fts5ExprSynonymRowid(Fts5ExprTerm *pTerm, int bDesc, int *pbEof){$/;"	f	file:
fts5ExprTermPrint	src/sqlite/sqlite3.c	/^static char *fts5ExprTermPrint(Fts5ExprTerm *pTerm){$/;"	f	file:
fts5FastGetVarint32	src/sqlite/sqlite3.c	183647;"	d	file:
fts5FilterMethod	src/sqlite/sqlite3.c	/^static int fts5FilterMethod($/;"	f	file:
fts5FindAuxiliary	src/sqlite/sqlite3.c	/^static Fts5Auxiliary *fts5FindAuxiliary(Fts5Table *pTab, const char *zName){$/;"	f	file:
fts5FindFunctionMethod	src/sqlite/sqlite3.c	/^static int fts5FindFunctionMethod($/;"	f	file:
fts5FindRankFunction	src/sqlite/sqlite3.c	/^static int fts5FindRankFunction(Fts5Cursor *pCsr){$/;"	f	file:
fts5FindTokenizer	src/sqlite/sqlite3.c	/^static int fts5FindTokenizer($/;"	f	file:
fts5FlushOneHash	src/sqlite/sqlite3.c	/^static void fts5FlushOneHash(Fts5Index *p){$/;"	f	file:
fts5FreeCursorComponents	src/sqlite/sqlite3.c	/^static void fts5FreeCursorComponents(Fts5Cursor *pCsr){$/;"	f	file:
fts5FreeVtab	src/sqlite/sqlite3.c	/^static void fts5FreeVtab(Fts5Table *pTab){$/;"	f	file:
fts5Fts5Func	src/sqlite/sqlite3.c	/^static void fts5Fts5Func($/;"	f	file:
fts5GetPoslistSize	src/sqlite/sqlite3.c	/^static int fts5GetPoslistSize(const u8 *p, int *pnSz, int *pbDel){$/;"	f	file:
fts5GetRowidLimit	src/sqlite/sqlite3.c	/^static i64 fts5GetRowidLimit(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts5GetU16	src/sqlite/sqlite3.c	/^static u16 fts5GetU16(const u8 *aIn){$/;"	f	file:
fts5GetVarint	src/sqlite/sqlite3.c	183645;"	d	file:
fts5GetVarint32	src/sqlite/sqlite3.c	183644;"	d	file:
fts5HashAddPoslistSize	src/sqlite/sqlite3.c	/^static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){$/;"	f	file:
fts5HashEntryMerge	src/sqlite/sqlite3.c	/^static Fts5HashEntry *fts5HashEntryMerge($/;"	f	file:
fts5HashEntrySort	src/sqlite/sqlite3.c	/^static int fts5HashEntrySort($/;"	f	file:
fts5HashKey	src/sqlite/sqlite3.c	/^static unsigned int fts5HashKey(int nSlot, const u8 *p, int n){$/;"	f	file:
fts5HashKey2	src/sqlite/sqlite3.c	/^static unsigned int fts5HashKey2(int nSlot, u8 b, const u8 *p, int n){$/;"	f	file:
fts5HashResize	src/sqlite/sqlite3.c	/^static int fts5HashResize(Fts5Hash *pHash){$/;"	f	file:
fts5HighlightAppend	src/sqlite/sqlite3.c	/^static void fts5HighlightAppend($/;"	f	file:
fts5HighlightCb	src/sqlite/sqlite3.c	/^static int fts5HighlightCb($/;"	f	file:
fts5HighlightFunction	src/sqlite/sqlite3.c	/^static void fts5HighlightFunction($/;"	f	file:
fts5IdxMalloc	src/sqlite/sqlite3.c	/^static void *fts5IdxMalloc(Fts5Index *p, int nByte){$/;"	f	file:
fts5IdxSelectStmt	src/sqlite/sqlite3.c	/^static sqlite3_stmt *fts5IdxSelectStmt(Fts5Index *p){$/;"	f	file:
fts5IndexAutomerge	src/sqlite/sqlite3.c	/^static void fts5IndexAutomerge($/;"	f	file:
fts5IndexCharlen	src/sqlite/sqlite3.c	/^static int fts5IndexCharlen(const char *pIn, int nIn){$/;"	f	file:
fts5IndexColsetTest	src/sqlite/sqlite3.c	/^static int fts5IndexColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5IndexCrisismerge	src/sqlite/sqlite3.c	/^static void fts5IndexCrisismerge($/;"	f	file:
fts5IndexDataVersion	src/sqlite/sqlite3.c	/^static i64 fts5IndexDataVersion(Fts5Index *p){$/;"	f	file:
fts5IndexDiscardData	src/sqlite/sqlite3.c	/^static void fts5IndexDiscardData(Fts5Index *p){$/;"	f	file:
fts5IndexExtractCol	src/sqlite/sqlite3.c	/^static int fts5IndexExtractCol($/;"	f	file:
fts5IndexExtractColset	src/sqlite/sqlite3.c	/^static void fts5IndexExtractColset($/;"	f	file:
fts5IndexFlush	src/sqlite/sqlite3.c	/^static void fts5IndexFlush(Fts5Index *p){$/;"	f	file:
fts5IndexIntegrityCheckEmpty	src/sqlite/sqlite3.c	/^static void fts5IndexIntegrityCheckEmpty($/;"	f	file:
fts5IndexIntegrityCheckSegment	src/sqlite/sqlite3.c	/^static void fts5IndexIntegrityCheckSegment($/;"	f	file:
fts5IndexMerge	src/sqlite/sqlite3.c	/^static int fts5IndexMerge($/;"	f	file:
fts5IndexMergeLevel	src/sqlite/sqlite3.c	/^static void fts5IndexMergeLevel($/;"	f	file:
fts5IndexOptimizeStruct	src/sqlite/sqlite3.c	/^static Fts5Structure *fts5IndexOptimizeStruct($/;"	f	file:
fts5IndexPrepareStmt	src/sqlite/sqlite3.c	/^static int fts5IndexPrepareStmt($/;"	f	file:
fts5IndexReturn	src/sqlite/sqlite3.c	/^static int fts5IndexReturn(Fts5Index *p){$/;"	f	file:
fts5IndexSkipVarint	src/sqlite/sqlite3.c	192749;"	d	file:
fts5Init	src/sqlite/sqlite3.c	/^static int fts5Init(sqlite3 *db){$/;"	f	file:
fts5InitVtab	src/sqlite/sqlite3.c	/^static int fts5InitVtab($/;"	f	file:
fts5IntegrityCheckPgidx	src/sqlite/sqlite3.c	/^static void fts5IntegrityCheckPgidx(Fts5Index *p, Fts5Data *pLeaf){$/;"	f	file:
fts5IsContentless	src/sqlite/sqlite3.c	/^static int fts5IsContentless(Fts5Table *pTab){$/;"	f	file:
fts5IterSetOutputCb	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputCb(int *pRc, Fts5Iter *pIter){$/;"	f	file:
fts5IterSetOutputs_Col	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_Col(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col100	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_Col100(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Full	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_Full(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Nocolset	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_Nocolset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_None	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_None(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Noop	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_Noop(Fts5Iter *pUnused1, Fts5SegIter *pUnused2){$/;"	f	file:
fts5IterSetOutputs_ZeroColset	src/sqlite/sqlite3.c	/^static void fts5IterSetOutputs_ZeroColset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5LeafFirstRowidOff	src/sqlite/sqlite3.c	191147;"	d	file:
fts5LeafFirstTermOff	src/sqlite/sqlite3.c	/^static int fts5LeafFirstTermOff(Fts5Data *pLeaf){$/;"	f	file:
fts5LeafIsTermless	src/sqlite/sqlite3.c	191143;"	d	file:
fts5LeafRead	src/sqlite/sqlite3.c	/^static Fts5Data *fts5LeafRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5LeafSeek	src/sqlite/sqlite3.c	/^static void fts5LeafSeek($/;"	f	file:
fts5LeafTermOff	src/sqlite/sqlite3.c	191145;"	d	file:
fts5LocateTokenizer	src/sqlite/sqlite3.c	/^static Fts5TokenizerModule *fts5LocateTokenizer($/;"	f	file:
fts5LookaheadReaderInit	src/sqlite/sqlite3.c	/^static int fts5LookaheadReaderInit($/;"	f	file:
fts5LookaheadReaderNext	src/sqlite/sqlite3.c	/^static int fts5LookaheadReaderNext(Fts5LookaheadReader *p){$/;"	f	file:
fts5MergeAppendDocid	src/sqlite/sqlite3.c	195484;"	d	file:
fts5MergeChunkCallback	src/sqlite/sqlite3.c	/^static void fts5MergeChunkCallback($/;"	f	file:
fts5MergeColset	src/sqlite/sqlite3.c	/^static void fts5MergeColset(Fts5Colset *pColset, Fts5Colset *pMerge){$/;"	f	file:
fts5MergePrefixLists	src/sqlite/sqlite3.c	/^static void fts5MergePrefixLists($/;"	f	file:
fts5MergeRowidLists	src/sqlite/sqlite3.c	/^static void fts5MergeRowidLists($/;"	f	file:
fts5ModuleDestroy	src/sqlite/sqlite3.c	/^static void fts5ModuleDestroy(void *pCtx){$/;"	f	file:
fts5MultiIterAdvanceRowid	src/sqlite/sqlite3.c	/^static int fts5MultiIterAdvanceRowid($/;"	f	file:
fts5MultiIterAdvanced	src/sqlite/sqlite3.c	/^static void fts5MultiIterAdvanced($/;"	f	file:
fts5MultiIterAlloc	src/sqlite/sqlite3.c	/^static Fts5Iter *fts5MultiIterAlloc($/;"	f	file:
fts5MultiIterDoCompare	src/sqlite/sqlite3.c	/^static int fts5MultiIterDoCompare(Fts5Iter *pIter, int iOut){$/;"	f	file:
fts5MultiIterEof	src/sqlite/sqlite3.c	/^static int fts5MultiIterEof(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterFree	src/sqlite/sqlite3.c	/^static void fts5MultiIterFree(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterIsEmpty	src/sqlite/sqlite3.c	/^static int fts5MultiIterIsEmpty(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterNew	src/sqlite/sqlite3.c	/^static void fts5MultiIterNew($/;"	f	file:
fts5MultiIterNew2	src/sqlite/sqlite3.c	/^static void fts5MultiIterNew2($/;"	f	file:
fts5MultiIterNext	src/sqlite/sqlite3.c	/^static void fts5MultiIterNext($/;"	f	file:
fts5MultiIterNext2	src/sqlite/sqlite3.c	/^static void fts5MultiIterNext2($/;"	f	file:
fts5MultiIterNextFrom	src/sqlite/sqlite3.c	/^static void fts5MultiIterNextFrom($/;"	f	file:
fts5MultiIterRowid	src/sqlite/sqlite3.c	/^static i64 fts5MultiIterRowid(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterSetEof	src/sqlite/sqlite3.c	/^static void fts5MultiIterSetEof(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterTerm	src/sqlite/sqlite3.c	/^static const u8 *fts5MultiIterTerm(Fts5Iter *pIter, int *pn){$/;"	f	file:
fts5NewTransaction	src/sqlite/sqlite3.c	/^static int fts5NewTransaction(Fts5Table *pTab){$/;"	f	file:
fts5NextMethod	src/sqlite/sqlite3.c	/^static int fts5NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5NextRowid	src/sqlite/sqlite3.c	/^static void fts5NextRowid(Fts5Buffer *pBuf, int *piOff, i64 *piRowid){$/;"	f	file:
fts5NodeCompare	src/sqlite/sqlite3.c	/^static int fts5NodeCompare($/;"	f	file:
fts5OpenMethod	src/sqlite/sqlite3.c	/^static int fts5OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5ParseAlloc	src/sqlite/sqlite3.c	/^static void *fts5ParseAlloc(u64 t){ return sqlite3_malloc((int)t); }$/;"	f	file:
fts5ParseColset	src/sqlite/sqlite3.c	/^static Fts5Colset *fts5ParseColset($/;"	f	file:
fts5ParseFree	src/sqlite/sqlite3.c	/^static void fts5ParseFree(void *p){ sqlite3_free(p); }$/;"	f	file:
fts5ParseSetColset	src/sqlite/sqlite3.c	/^static void fts5ParseSetColset($/;"	f	file:
fts5ParseStringFromToken	src/sqlite/sqlite3.c	/^static int fts5ParseStringFromToken(Fts5Token *pToken, char **pz){$/;"	f	file:
fts5ParseTokenize	src/sqlite/sqlite3.c	/^static int fts5ParseTokenize($/;"	f	file:
fts5PorterCb	src/sqlite/sqlite3.c	/^static int fts5PorterCb($/;"	f	file:
fts5PorterCreate	src/sqlite/sqlite3.c	/^static int fts5PorterCreate($/;"	f	file:
fts5PorterDelete	src/sqlite/sqlite3.c	/^static void fts5PorterDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5PorterGobbleVC	src/sqlite/sqlite3.c	/^static int fts5PorterGobbleVC(char *zStem, int nStem, int bPrevCons){$/;"	f	file:
fts5PorterIsVowel	src/sqlite/sqlite3.c	/^static int fts5PorterIsVowel(char c, int bYIsVowel){$/;"	f	file:
fts5PorterStep1A	src/sqlite/sqlite3.c	/^static void fts5PorterStep1A(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B	src/sqlite/sqlite3.c	/^static int fts5PorterStep1B(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B2	src/sqlite/sqlite3.c	/^static int fts5PorterStep1B2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep2	src/sqlite/sqlite3.c	/^static int fts5PorterStep2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep3	src/sqlite/sqlite3.c	/^static int fts5PorterStep3(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep4	src/sqlite/sqlite3.c	/^static int fts5PorterStep4(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterTokenize	src/sqlite/sqlite3.c	/^static int fts5PorterTokenize($/;"	f	file:
fts5Porter_MEq1	src/sqlite/sqlite3.c	/^static int fts5Porter_MEq1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt0	src/sqlite/sqlite3.c	/^static int fts5Porter_MGt0(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1	src/sqlite/sqlite3.c	/^static int fts5Porter_MGt1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1_and_S_or_T	src/sqlite/sqlite3.c	/^static int fts5Porter_MGt1_and_S_or_T(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Ostar	src/sqlite/sqlite3.c	/^static int fts5Porter_Ostar(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Vowel	src/sqlite/sqlite3.c	/^static int fts5Porter_Vowel(char *zStem, int nStem){$/;"	f	file:
fts5PoslistBlob	src/sqlite/sqlite3.c	/^static int fts5PoslistBlob(sqlite3_context *pCtx, Fts5Cursor *pCsr){$/;"	f	file:
fts5PoslistCallback	src/sqlite/sqlite3.c	/^static void fts5PoslistCallback($/;"	f	file:
fts5PoslistFilterCallback	src/sqlite/sqlite3.c	/^static void fts5PoslistFilterCallback($/;"	f	file:
fts5PoslistOffsetsCallback	src/sqlite/sqlite3.c	/^static void fts5PoslistOffsetsCallback($/;"	f	file:
fts5PoslistPrefix	src/sqlite/sqlite3.c	/^static int fts5PoslistPrefix(const u8 *aBuf, int nMax){$/;"	f	file:
fts5PrefixCompress	src/sqlite/sqlite3.c	/^static int fts5PrefixCompress(int nOld, const u8 *pOld, const u8 *pNew){$/;"	f	file:
fts5PrepareStatement	src/sqlite/sqlite3.c	/^static int fts5PrepareStatement($/;"	f	file:
fts5PrintStructure	src/sqlite/sqlite3.c	191828;"	d	file:
fts5PrintfAppend	src/sqlite/sqlite3.c	/^static char *fts5PrintfAppend(char *zApp, const char *zFmt, ...){$/;"	f	file:
fts5PutU16	src/sqlite/sqlite3.c	/^static void fts5PutU16(u8 *aOut, u16 iVal){$/;"	f	file:
fts5PutVarint64	src/sqlite/sqlite3.c	/^static int FTS5_NOINLINE fts5PutVarint64(unsigned char *p, u64 v){$/;"	f	file:
fts5QueryCksum	src/sqlite/sqlite3.c	/^static int fts5QueryCksum($/;"	f	file:
fts5ReleaseMethod	src/sqlite/sqlite3.c	/^static int fts5ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RenameMethod	src/sqlite/sqlite3.c	/^static int fts5RenameMethod($/;"	f	file:
fts5RollbackMethod	src/sqlite/sqlite3.c	/^static int fts5RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5RollbackToMethod	src/sqlite/sqlite3.c	/^static int fts5RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RowidCmp	src/sqlite/sqlite3.c	/^static int fts5RowidCmp($/;"	f	file:
fts5RowidFunction	src/sqlite/sqlite3.c	/^static void fts5RowidFunction($/;"	f	file:
fts5RowidMethod	src/sqlite/sqlite3.c	/^static int fts5RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts5SavepointMethod	src/sqlite/sqlite3.c	/^static int fts5SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5SeekCursor	src/sqlite/sqlite3.c	/^static int fts5SeekCursor(Fts5Cursor *pCsr, int bErrormsg){$/;"	f	file:
fts5SegIterClear	src/sqlite/sqlite3.c	/^static void fts5SegIterClear(Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterGotoPage	src/sqlite/sqlite3.c	/^static void fts5SegIterGotoPage($/;"	f	file:
fts5SegIterHashInit	src/sqlite/sqlite3.c	/^static void fts5SegIterHashInit($/;"	f	file:
fts5SegIterInit	src/sqlite/sqlite3.c	/^static void fts5SegIterInit($/;"	f	file:
fts5SegIterLoadDlidx	src/sqlite/sqlite3.c	/^static void fts5SegIterLoadDlidx(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadNPos	src/sqlite/sqlite3.c	/^static void fts5SegIterLoadNPos(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadRowid	src/sqlite/sqlite3.c	/^static void fts5SegIterLoadRowid(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadTerm	src/sqlite/sqlite3.c	/^static void fts5SegIterLoadTerm(Fts5Index *p, Fts5SegIter *pIter, int nKeep){$/;"	f	file:
fts5SegIterNext	src/sqlite/sqlite3.c	/^static void fts5SegIterNext($/;"	f	file:
fts5SegIterNextFrom	src/sqlite/sqlite3.c	/^static void fts5SegIterNextFrom($/;"	f	file:
fts5SegIterNextPage	src/sqlite/sqlite3.c	/^static void fts5SegIterNextPage($/;"	f	file:
fts5SegIterNext_None	src/sqlite/sqlite3.c	/^static void fts5SegIterNext_None($/;"	f	file:
fts5SegIterNext_Reverse	src/sqlite/sqlite3.c	/^static void fts5SegIterNext_Reverse($/;"	f	file:
fts5SegIterReverse	src/sqlite/sqlite3.c	/^static void fts5SegIterReverse(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseInitPage	src/sqlite/sqlite3.c	/^static void fts5SegIterReverseInitPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseNewPage	src/sqlite/sqlite3.c	/^static void fts5SegIterReverseNewPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterSeekInit	src/sqlite/sqlite3.c	/^static void fts5SegIterSeekInit($/;"	f	file:
fts5SegIterSetNext	src/sqlite/sqlite3.c	/^static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegiterPoslist	src/sqlite/sqlite3.c	/^static void fts5SegiterPoslist($/;"	f	file:
fts5SegmentSize	src/sqlite/sqlite3.c	/^static int fts5SegmentSize(Fts5StructureSegment *pSeg){$/;"	f	file:
fts5SentenceFinderAdd	src/sqlite/sqlite3.c	/^static int fts5SentenceFinderAdd(Fts5SFinder *p, int iAdd){$/;"	f	file:
fts5SentenceFinderCb	src/sqlite/sqlite3.c	/^static int fts5SentenceFinderCb($/;"	f	file:
fts5SetUniqueFlag	src/sqlite/sqlite3.c	/^static void fts5SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts5SetVtabError	src/sqlite/sqlite3.c	/^static void fts5SetVtabError(Fts5Table *p, const char *zFormat, ...){$/;"	f	file:
fts5SetupPrefixIter	src/sqlite/sqlite3.c	/^static void fts5SetupPrefixIter($/;"	f	file:
fts5SnippetFunction	src/sqlite/sqlite3.c	/^static void fts5SnippetFunction($/;"	f	file:
fts5SnippetScore	src/sqlite/sqlite3.c	/^static int fts5SnippetScore($/;"	f	file:
fts5SorterNext	src/sqlite/sqlite3.c	/^static int fts5SorterNext(Fts5Cursor *pCsr){$/;"	f	file:
fts5SourceIdFunc	src/sqlite/sqlite3.c	/^static void fts5SourceIdFunc($/;"	f	file:
fts5SpecialDelete	src/sqlite/sqlite3.c	/^static int fts5SpecialDelete($/;"	f	file:
fts5SpecialInsert	src/sqlite/sqlite3.c	/^static int fts5SpecialInsert($/;"	f	file:
fts5SpecialMatch	src/sqlite/sqlite3.c	/^static int fts5SpecialMatch($/;"	f	file:
fts5StmtType	src/sqlite/sqlite3.c	/^static int fts5StmtType(Fts5Cursor *pCsr){$/;"	f	file:
fts5StorageCount	src/sqlite/sqlite3.c	/^static int fts5StorageCount(Fts5Storage *p, const char *zSuffix, i64 *pnRow){$/;"	f	file:
fts5StorageDecodeSizeArray	src/sqlite/sqlite3.c	/^static int fts5StorageDecodeSizeArray($/;"	f	file:
fts5StorageDeleteFromIndex	src/sqlite/sqlite3.c	/^static int fts5StorageDeleteFromIndex($/;"	f	file:
fts5StorageGetStmt	src/sqlite/sqlite3.c	/^static int fts5StorageGetStmt($/;"	f	file:
fts5StorageInsert	src/sqlite/sqlite3.c	/^static void fts5StorageInsert($/;"	f	file:
fts5StorageInsertCallback	src/sqlite/sqlite3.c	/^static int fts5StorageInsertCallback($/;"	f	file:
fts5StorageInsertDocsize	src/sqlite/sqlite3.c	/^static int fts5StorageInsertDocsize($/;"	f	file:
fts5StorageIntegrityCallback	src/sqlite/sqlite3.c	/^static int fts5StorageIntegrityCallback($/;"	f	file:
fts5StorageLoadTotals	src/sqlite/sqlite3.c	/^static int fts5StorageLoadTotals(Fts5Storage *p, int bCache){$/;"	f	file:
fts5StorageNewRowid	src/sqlite/sqlite3.c	/^static int fts5StorageNewRowid(Fts5Storage *p, i64 *piRowid){$/;"	f	file:
fts5StorageRenameOne	src/sqlite/sqlite3.c	/^static void fts5StorageRenameOne($/;"	f	file:
fts5StorageSaveTotals	src/sqlite/sqlite3.c	/^static int fts5StorageSaveTotals(Fts5Storage *p){$/;"	f	file:
fts5StructureAddLevel	src/sqlite/sqlite3.c	/^static void fts5StructureAddLevel(int *pRc, Fts5Structure **ppStruct){$/;"	f	file:
fts5StructureCountSegments	src/sqlite/sqlite3.c	/^static int fts5StructureCountSegments(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureDecode	src/sqlite/sqlite3.c	/^static int fts5StructureDecode($/;"	f	file:
fts5StructureExtendLevel	src/sqlite/sqlite3.c	/^static void fts5StructureExtendLevel($/;"	f	file:
fts5StructureInvalidate	src/sqlite/sqlite3.c	/^static void fts5StructureInvalidate(Fts5Index *p){$/;"	f	file:
fts5StructurePromote	src/sqlite/sqlite3.c	/^static void fts5StructurePromote($/;"	f	file:
fts5StructurePromoteTo	src/sqlite/sqlite3.c	/^static void fts5StructurePromoteTo($/;"	f	file:
fts5StructureRead	src/sqlite/sqlite3.c	/^static Fts5Structure *fts5StructureRead(Fts5Index *p){$/;"	f	file:
fts5StructureReadUncached	src/sqlite/sqlite3.c	/^static Fts5Structure *fts5StructureReadUncached(Fts5Index *p){$/;"	f	file:
fts5StructureRef	src/sqlite/sqlite3.c	/^static void fts5StructureRef(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRelease	src/sqlite/sqlite3.c	/^static void fts5StructureRelease(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureWrite	src/sqlite/sqlite3.c	/^static void fts5StructureWrite(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5SyncMethod	src/sqlite/sqlite3.c	/^static int fts5SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5TestDlidxReverse	src/sqlite/sqlite3.c	/^static void fts5TestDlidxReverse($/;"	f	file:
fts5TestDlidxReverse	src/sqlite/sqlite3.c	196383;"	d	file:
fts5TestTerm	src/sqlite/sqlite3.c	/^static void fts5TestTerm($/;"	f	file:
fts5TestTerm	src/sqlite/sqlite3.c	196384;"	d	file:
fts5TrimSegments	src/sqlite/sqlite3.c	/^static void fts5TrimSegments(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5TripCursors	src/sqlite/sqlite3.c	/^static void fts5TripCursors(Fts5Table *pTab){$/;"	f	file:
fts5UnicodeAddExceptions	src/sqlite/sqlite3.c	/^static int fts5UnicodeAddExceptions($/;"	f	file:
fts5UnicodeCreate	src/sqlite/sqlite3.c	/^static int fts5UnicodeCreate($/;"	f	file:
fts5UnicodeDelete	src/sqlite/sqlite3.c	/^static void fts5UnicodeDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5UnicodeIsAlnum	src/sqlite/sqlite3.c	/^static int fts5UnicodeIsAlnum(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsException	src/sqlite/sqlite3.c	/^static int fts5UnicodeIsException(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeTokenize	src/sqlite/sqlite3.c	/^static int fts5UnicodeTokenize($/;"	f	file:
fts5UpdateMethod	src/sqlite/sqlite3.c	/^static int fts5UpdateMethod($/;"	f	file:
fts5VocabBestIndexMethod	src/sqlite/sqlite3.c	/^static int fts5VocabBestIndexMethod($/;"	f	file:
fts5VocabCloseMethod	src/sqlite/sqlite3.c	/^static int fts5VocabCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabColumnMethod	src/sqlite/sqlite3.c	/^static int fts5VocabColumnMethod($/;"	f	file:
fts5VocabConnectMethod	src/sqlite/sqlite3.c	/^static int fts5VocabConnectMethod($/;"	f	file:
fts5VocabCreateMethod	src/sqlite/sqlite3.c	/^static int fts5VocabCreateMethod($/;"	f	file:
fts5VocabDestroyMethod	src/sqlite/sqlite3.c	/^static int fts5VocabDestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDisconnectMethod	src/sqlite/sqlite3.c	/^static int fts5VocabDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabEofMethod	src/sqlite/sqlite3.c	/^static int fts5VocabEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabFilterMethod	src/sqlite/sqlite3.c	/^static int fts5VocabFilterMethod($/;"	f	file:
fts5VocabInitVtab	src/sqlite/sqlite3.c	/^static int fts5VocabInitVtab($/;"	f	file:
fts5VocabNextMethod	src/sqlite/sqlite3.c	/^static int fts5VocabNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabOpenMethod	src/sqlite/sqlite3.c	/^static int fts5VocabOpenMethod($/;"	f	file:
fts5VocabResetCursor	src/sqlite/sqlite3.c	/^static void fts5VocabResetCursor(Fts5VocabCursor *pCsr){$/;"	f	file:
fts5VocabRowidMethod	src/sqlite/sqlite3.c	/^static int fts5VocabRowidMethod($/;"	f	file:
fts5VocabTableType	src/sqlite/sqlite3.c	/^static int fts5VocabTableType(const char *zType, char **pzErr, int *peType){$/;"	f	file:
fts5WriteAppendPoslistData	src/sqlite/sqlite3.c	/^static void fts5WriteAppendPoslistData($/;"	f	file:
fts5WriteAppendRowid	src/sqlite/sqlite3.c	/^static void fts5WriteAppendRowid($/;"	f	file:
fts5WriteAppendTerm	src/sqlite/sqlite3.c	/^static void fts5WriteAppendTerm($/;"	f	file:
fts5WriteBtreeNoTerm	src/sqlite/sqlite3.c	/^static void fts5WriteBtreeNoTerm($/;"	f	file:
fts5WriteBtreeTerm	src/sqlite/sqlite3.c	/^static void fts5WriteBtreeTerm($/;"	f	file:
fts5WriteDlidxAppend	src/sqlite/sqlite3.c	/^static void fts5WriteDlidxAppend($/;"	f	file:
fts5WriteDlidxClear	src/sqlite/sqlite3.c	/^static void fts5WriteDlidxClear($/;"	f	file:
fts5WriteDlidxGrow	src/sqlite/sqlite3.c	/^static int fts5WriteDlidxGrow($/;"	f	file:
fts5WriteFinish	src/sqlite/sqlite3.c	/^static void fts5WriteFinish($/;"	f	file:
fts5WriteFlushBtree	src/sqlite/sqlite3.c	/^static void fts5WriteFlushBtree(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushDlidx	src/sqlite/sqlite3.c	/^static int fts5WriteFlushDlidx(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushLeaf	src/sqlite/sqlite3.c	/^static void fts5WriteFlushLeaf(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteInit	src/sqlite/sqlite3.c	/^static void fts5WriteInit($/;"	f	file:
fts5YYACTIONTYPE	src/sqlite/sqlite3.c	184061;"	d	file:
fts5YYCODETYPE	src/sqlite/sqlite3.c	184059;"	d	file:
fts5YYMALLOCARGTYPE	src/sqlite/sqlite3.c	183999;"	d	file:
fts5YYMALLOCARGTYPE	src/sqlite/sqlite3.c	184397;"	d	file:
fts5YYMINORTYPE	src/sqlite/sqlite3.c	/^} fts5YYMINORTYPE;$/;"	t	typeref:union:__anon41	file:
fts5YYNOCODE	src/sqlite/sqlite3.c	184060;"	d	file:
fts5YYNOERRORRECOVERY	src/sqlite/sqlite3.c	183982;"	d	file:
fts5YYNRULE	src/sqlite/sqlite3.c	184080;"	d	file:
fts5YYNSTATE	src/sqlite/sqlite3.c	184079;"	d	file:
fts5YYPARSEFREENOTNULL	src/sqlite/sqlite3.c	183993;"	d	file:
fts5YYSTACKDEPTH	src/sqlite/sqlite3.c	184073;"	d	file:
fts5YY_ACCEPT_ACTION	src/sqlite/sqlite3.c	184087;"	d	file:
fts5YY_ACTTAB_COUNT	src/sqlite/sqlite3.c	184160;"	d	file:
fts5YY_ERROR_ACTION	src/sqlite/sqlite3.c	184086;"	d	file:
fts5YY_MAX_REDUCE	src/sqlite/sqlite3.c	184085;"	d	file:
fts5YY_MAX_SHIFT	src/sqlite/sqlite3.c	184081;"	d	file:
fts5YY_MAX_SHIFTREDUCE	src/sqlite/sqlite3.c	184083;"	d	file:
fts5YY_MIN_REDUCE	src/sqlite/sqlite3.c	184084;"	d	file:
fts5YY_MIN_SHIFTREDUCE	src/sqlite/sqlite3.c	184082;"	d	file:
fts5YY_NO_ACTION	src/sqlite/sqlite3.c	184088;"	d	file:
fts5YY_REDUCE_COUNT	src/sqlite/sqlite3.c	184196;"	d	file:
fts5YY_REDUCE_MAX	src/sqlite/sqlite3.c	184198;"	d	file:
fts5YY_REDUCE_MIN	src/sqlite/sqlite3.c	184197;"	d	file:
fts5YY_REDUCE_USE_DFLT	src/sqlite/sqlite3.c	184195;"	d	file:
fts5YY_SHIFT_COUNT	src/sqlite/sqlite3.c	184186;"	d	file:
fts5YY_SHIFT_MAX	src/sqlite/sqlite3.c	184188;"	d	file:
fts5YY_SHIFT_MIN	src/sqlite/sqlite3.c	184187;"	d	file:
fts5YY_SHIFT_USE_DFLT	src/sqlite/sqlite3.c	184185;"	d	file:
fts5_api	src/include/sqlite/sqlite3.h	/^struct fts5_api {$/;"	s
fts5_api	src/include/sqlite/sqlite3.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_api	src/sqlite/sqlite3.c	/^struct fts5_api {$/;"	s	file:
fts5_api	src/sqlite/sqlite3.c	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api	file:
fts5_dri	src/sqlite/sqlite3.c	190893;"	d	file:
fts5_extension_function	src/include/sqlite/sqlite3.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_extension_function	src/sqlite/sqlite3.c	/^typedef void (*fts5_extension_function)($/;"	t	file:
fts5_isdigit	src/sqlite/sqlite3.c	/^static int fts5_isdigit(char a){$/;"	f	file:
fts5_isopenquote	src/sqlite/sqlite3.c	/^static int fts5_isopenquote(char x){$/;"	f	file:
fts5_iswhitespace	src/sqlite/sqlite3.c	/^static int fts5_iswhitespace(char x){$/;"	f	file:
fts5_remove_diacritic	src/sqlite/sqlite3.c	/^static int fts5_remove_diacritic(int c){$/;"	f	file:
fts5_tokenizer	src/include/sqlite/sqlite3.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	src/include/sqlite/sqlite3.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5_tokenizer	src/sqlite/sqlite3.c	/^struct fts5_tokenizer {$/;"	s	file:
fts5_tokenizer	src/sqlite/sqlite3.c	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer	file:
fts5yy0	src/sqlite/sqlite3.c	/^  sqlite3Fts5ParserFTS5TOKENTYPE fts5yy0;$/;"	m	union:__anon41	file:
fts5yy11	src/sqlite/sqlite3.c	/^  Fts5Colset* fts5yy11;$/;"	m	union:__anon41	file:
fts5yy24	src/sqlite/sqlite3.c	/^  Fts5ExprNode* fts5yy24;$/;"	m	union:__anon41	file:
fts5yy4	src/sqlite/sqlite3.c	/^  int fts5yy4;$/;"	m	union:__anon41	file:
fts5yy46	src/sqlite/sqlite3.c	/^  Fts5ExprNearset* fts5yy46;$/;"	m	union:__anon41	file:
fts5yy53	src/sqlite/sqlite3.c	/^  Fts5ExprPhrase* fts5yy53;$/;"	m	union:__anon41	file:
fts5yyFallback	src/sqlite/sqlite3.c	/^static const fts5YYCODETYPE fts5yyFallback[] = {$/;"	v	file:
fts5yyGrowStack	src/sqlite/sqlite3.c	/^static int fts5yyGrowStack(fts5yyParser *p){$/;"	f	file:
fts5yyParser	src/sqlite/sqlite3.c	/^struct fts5yyParser {$/;"	s	file:
fts5yyParser	src/sqlite/sqlite3.c	/^typedef struct fts5yyParser fts5yyParser;$/;"	t	typeref:struct:fts5yyParser	file:
fts5yyRuleInfo	src/sqlite/sqlite3.c	/^} fts5yyRuleInfo[] = {$/;"	v	typeref:struct:__anon42	file:
fts5yyRuleName	src/sqlite/sqlite3.c	/^static const char *const fts5yyRuleName[] = {$/;"	v	file:
fts5yyStackEntry	src/sqlite/sqlite3.c	/^struct fts5yyStackEntry {$/;"	s	file:
fts5yyStackEntry	src/sqlite/sqlite3.c	/^typedef struct fts5yyStackEntry fts5yyStackEntry;$/;"	t	typeref:struct:fts5yyStackEntry	file:
fts5yyStackOverflow	src/sqlite/sqlite3.c	/^static void fts5yyStackOverflow(fts5yyParser *fts5yypParser){$/;"	f	file:
fts5yyTokenName	src/sqlite/sqlite3.c	/^static const char *const fts5yyTokenName[] = {$/;"	v	file:
fts5yyTraceFILE	src/sqlite/sqlite3.c	/^static FILE *fts5yyTraceFILE = 0;$/;"	v	file:
fts5yyTracePrompt	src/sqlite/sqlite3.c	/^static char *fts5yyTracePrompt = 0;$/;"	v	file:
fts5yyTraceShift	src/sqlite/sqlite3.c	/^static void fts5yyTraceShift(fts5yyParser *fts5yypParser, int fts5yyNewState){$/;"	f	file:
fts5yyTraceShift	src/sqlite/sqlite3.c	184700;"	d	file:
fts5yy_accept	src/sqlite/sqlite3.c	/^static void fts5yy_accept($/;"	f	file:
fts5yy_action	src/sqlite/sqlite3.c	/^static const fts5YYACTIONTYPE fts5yy_action[] = {$/;"	v	file:
fts5yy_default	src/sqlite/sqlite3.c	/^static const fts5YYACTIONTYPE fts5yy_default[] = {$/;"	v	file:
fts5yy_destructor	src/sqlite/sqlite3.c	/^static void fts5yy_destructor($/;"	f	file:
fts5yy_find_reduce_action	src/sqlite/sqlite3.c	/^static int fts5yy_find_reduce_action($/;"	f	file:
fts5yy_find_shift_action	src/sqlite/sqlite3.c	/^static unsigned int fts5yy_find_shift_action($/;"	f	file:
fts5yy_lookahead	src/sqlite/sqlite3.c	/^static const fts5YYCODETYPE fts5yy_lookahead[] = {$/;"	v	file:
fts5yy_parse_failed	src/sqlite/sqlite3.c	/^static void fts5yy_parse_failed($/;"	f	file:
fts5yy_pop_parser_stack	src/sqlite/sqlite3.c	/^static void fts5yy_pop_parser_stack(fts5yyParser *pParser){$/;"	f	file:
fts5yy_reduce	src/sqlite/sqlite3.c	/^static void fts5yy_reduce($/;"	f	file:
fts5yy_reduce_ofst	src/sqlite/sqlite3.c	/^static const signed char fts5yy_reduce_ofst[] = {$/;"	v	file:
fts5yy_shift	src/sqlite/sqlite3.c	/^static void fts5yy_shift($/;"	f	file:
fts5yy_shift_ofst	src/sqlite/sqlite3.c	/^static const unsigned char fts5yy_shift_ofst[] = {$/;"	v	file:
fts5yy_syntax_error	src/sqlite/sqlite3.c	/^static void fts5yy_syntax_error($/;"	f	file:
fts5yyerrcnt	src/sqlite/sqlite3.c	/^  int fts5yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:fts5yyParser	file:
fts5yyhwm	src/sqlite/sqlite3.c	/^  int fts5yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yyinit	src/sqlite/sqlite3.c	/^  int fts5yyinit;$/;"	m	union:__anon41	file:
fts5yystack	src/sqlite/sqlite3.c	/^  fts5yyStackEntry *fts5yystack;        \/* The parser's stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystk0	src/sqlite/sqlite3.c	/^  fts5yyStackEntry fts5yystk0;          \/* First stack entry *\/$/;"	m	struct:fts5yyParser	file:
fts5yystksz	src/sqlite/sqlite3.c	/^  int fts5yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yytestcase	src/sqlite/sqlite3.c	183987;"	d	file:
fts5yytestcase	src/sqlite/sqlite3.c	184100;"	d	file:
fts5yytos	src/sqlite/sqlite3.c	/^  fts5yyStackEntry *fts5yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:fts5yyParser	file:
ftsCompareFunction	src/sqlite/sqlite3.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsHashFunction	src/sqlite/sqlite3.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
fullSync	src/sqlite/sqlite3.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
full_fsync	src/sqlite/sqlite3.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
full_match_	third_party/gmock/gmock/gmock.h	/^  const bool full_match_;$/;"	m	class:testing::internal::MatchesRegexMatcher
full_pattern_	third_party/gmock/gtest/gtest.h	/^  const char* full_pattern_;  \/\/ For FullMatch();$/;"	m	class:std::tr1::RE
full_regex_	third_party/gmock/gtest/gtest.h	/^  regex_t full_regex_;     \/\/ For FullMatch().$/;"	m	class:std::tr1::RE
funcFlags	src/sqlite/sqlite3.c	/^  u16 funcFlags;       \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef	file:
func_	third_party/gmock/gtest/gtest.h	/^  const UserThreadFunc func_;  \/\/ User-supplied thread function.$/;"	m	class:std::tr1::ThreadWithParam
functionDestroy	src/sqlite/sqlite3.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionSearch	src/sqlite/sqlite3.c	/^static FuncDef *functionSearch($/;"	f	file:
function_impl_	third_party/gmock/gmock/gmock.h	/^  FunctionImpl function_impl_;$/;"	m	class:testing::internal::InvokeAction
function_impl_	third_party/gmock/gmock/gmock.h	/^  FunctionImpl function_impl_;$/;"	m	class:testing::internal::InvokeWithoutArgsAction
function_mocker_	third_party/gmock/gmock/gmock.h	/^  internal::FunctionMockerBase<F>* const function_mocker_;$/;"	m	class:testing::internal::MockSpec::internal
function_mockers	third_party/gmock/gmock-gtest-all.cc	/^  FunctionMockers function_mockers;  \/\/ All registered methods of the object.$/;"	m	struct:testing::__anon8::MockObjectState	file:
g10_	third_party/gmock/gtest/gtest.h	/^  const Generator10 g10_;$/;"	m	class:testing::internal::CartesianProductHolder10
g10_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T10> g10_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder10
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder2
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder3
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder4
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder5
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder6
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder7
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder8
g1_	third_party/gmock/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder9
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g1_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder10
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder2
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder3
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder4
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder5
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder6
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder7
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder8
g2_	third_party/gmock/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder9
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g2_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder10
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder3
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder4
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder5
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder6
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder7
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder8
g3_	third_party/gmock/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder9
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g3_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder10
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder4
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder5
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder6
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder7
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder8
g4_	third_party/gmock/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder9
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g4_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g5_	third_party/gmock/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder10
g5_	third_party/gmock/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder5
g5_	third_party/gmock/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder6
g5_	third_party/gmock/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder7
g5_	third_party/gmock/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder8
g5_	third_party/gmock/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder9
g5_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g5_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g5_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g5_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g5_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g5_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g6_	third_party/gmock/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder10
g6_	third_party/gmock/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder6
g6_	third_party/gmock/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder7
g6_	third_party/gmock/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder8
g6_	third_party/gmock/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder9
g6_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g6_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g6_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g6_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g6_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g7_	third_party/gmock/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder10
g7_	third_party/gmock/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder7
g7_	third_party/gmock/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder8
g7_	third_party/gmock/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder9
g7_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g7_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g7_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g7_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g8_	third_party/gmock/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder10
g8_	third_party/gmock/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder8
g8_	third_party/gmock/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder9
g8_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g8_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g8_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g9_	third_party/gmock/gtest/gtest.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder10
g9_	third_party/gmock/gtest/gtest.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder9
g9_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g9_	third_party/gmock/gtest/gtest.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g_argvs	third_party/gmock/gmock-gtest-all.cc	/^::std::vector<testing::internal::string> g_argvs;$/;"	m	namespace:testing::internal	file:
g_captured_stderr	third_party/gmock/gmock-gtest-all.cc	/^static CapturedStream* g_captured_stderr = NULL;$/;"	m	namespace:testing::internal	file:
g_captured_stdout	third_party/gmock/gmock-gtest-all.cc	/^static CapturedStream* g_captured_stdout = NULL;$/;"	m	namespace:testing::internal	file:
g_elapsed	src/sqlite/sqlite3.c	/^static sqlite_uint64 g_elapsed;$/;"	v	file:
g_executable_path	third_party/gmock/gmock-gtest-all.cc	/^std::string g_executable_path;$/;"	m	namespace:testing::internal	file:
g_gmock_implicit_sequence	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ ThreadLocal<Sequence*> g_gmock_implicit_sequence;$/;"	m	namespace:testing::internal	file:
g_gmock_mutex	third_party/gmock/gmock/gmock.h	/^          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) = 0;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
g_gmock_mutex	third_party/gmock/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) = 0;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
g_help_flag	third_party/gmock/gmock-gtest-all.cc	/^bool g_help_flag = false;$/;"	m	namespace:testing::internal	file:
g_in_fast_death_test_child	third_party/gmock/gmock-gtest-all.cc	/^static bool g_in_fast_death_test_child = false;$/;"	m	namespace:testing::internal	file:
g_init_gtest_count	third_party/gmock/gmock-gtest-all.cc	/^GTEST_API_ int g_init_gtest_count = 0;$/;"	m	namespace:testing::internal	file:
g_injected_test_argvs	third_party/gmock/gmock-gtest-all.cc	/^static const ::std::vector<testing::internal::string>* g_injected_test_argvs =$/;"	m	namespace:testing::internal	file:
g_mock_object_registry	third_party/gmock/gmock-gtest-all.cc	/^MockObjectRegistry g_mock_object_registry;$/;"	m	namespace:testing::__anon8	file:
g_start	src/sqlite/sqlite3.c	/^static sqlite_uint64 g_start;$/;"	v	file:
g_uninteresting_call_reaction	third_party/gmock/gmock-gtest-all.cc	/^std::map<const void*, internal::CallReaction> g_uninteresting_call_reaction;$/;"	m	namespace:testing::__anon8	file:
generateColumnNames	src/sqlite/sqlite3.c	/^static void generateColumnNames($/;"	f	file:
generateColumnTypes	src/sqlite/sqlite3.c	/^static void generateColumnTypes($/;"	f	file:
generateOutputSubroutine	src/sqlite/sqlite3.c	/^static int generateOutputSubroutine($/;"	f	file:
generateSortTail	src/sqlite/sqlite3.c	/^static void generateSortTail($/;"	f	file:
generateWithRecursiveQuery	src/sqlite/sqlite3.c	/^static void generateWithRecursiveQuery($/;"	f	file:
geomCallback	src/sqlite/sqlite3.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
get	third_party/gmock/gtest/gtest.h	/^  T* get() const { return ptr_; }$/;"	f	struct:std::tr1::tuple_element
get	third_party/gmock/gtest/gtest.h	/^  T* get() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
get	third_party/gmock/gtest/gtest.h	/^  const T& get() const { return *pointer(); }$/;"	f	class:std::tr1::ThreadLocal
get	third_party/gmock/gtest/gtest.h	/^  const T& get() const { return value_; }$/;"	f	class:std::tr1::ThreadLocal
get2byte	src/sqlite/sqlite3.c	174889;"	d	file:
get2byte	src/sqlite/sqlite3.c	59134;"	d	file:
get2byteAligned	src/sqlite/sqlite3.c	59145;"	d	file:
get2byteAligned	src/sqlite/sqlite3.c	59147;"	d	file:
get2byteAligned	src/sqlite/sqlite3.c	59149;"	d	file:
get2byteAligned	src/sqlite/sqlite3.c	59151;"	d	file:
get2byteInt	src/sqlite/shell.c	/^static unsigned int get2byteInt(unsigned char *a){$/;"	f	file:
get2byteNotZero	src/sqlite/sqlite3.c	59492;"	d	file:
get4byte	src/sqlite/sqlite3.c	59136;"	d	file:
get4byteInt	src/sqlite/shell.c	/^static unsigned int get4byteInt(unsigned char *a){$/;"	f	file:
getAbsoluteLevel	src/sqlite/sqlite3.c	/^static sqlite3_int64 getAbsoluteLevel($/;"	f	file:
getAndInitPage	src/sqlite/sqlite3.c	/^static int getAndInitPage($/;"	f	file:
getAutoVacuum	src/sqlite/sqlite3.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getCellInfo	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void getCellInfo(BtCursor *pCur){$/;"	f	file:
getDigits	src/sqlite/sqlite3.c	/^static int getDigits(const char *zDate, const char *zFormat, ...){$/;"	f	file:
getDoubleArg	src/sqlite/sqlite3.c	/^static double getDoubleArg(PrintfArguments *p){$/;"	f	file:
getFileMode	src/sqlite/sqlite3.c	/^static int getFileMode($/;"	f	file:
getIntArg	src/sqlite/sqlite3.c	/^static sqlite3_int64 getIntArg(PrintfArguments *p){$/;"	f	file:
getIntFromStmt	src/sqlite/sqlite3.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getLocalPayload	src/sqlite/sqlite3.c	/^static void getLocalPayload($/;"	f	file:
getLockingMode	src/sqlite/sqlite3.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getNextNode	src/sqlite/sqlite3.c	/^static int getNextNode($/;"	f	file:
getNextString	src/sqlite/sqlite3.c	/^static int getNextString($/;"	f	file:
getNextToken	src/sqlite/sqlite3.c	/^static int getNextToken($/;"	f	file:
getNodeSize	src/sqlite/sqlite3.c	/^static int getNodeSize($/;"	f	file:
getOverflowPage	src/sqlite/sqlite3.c	/^static int getOverflowPage($/;"	f	file:
getPageError	src/sqlite/sqlite3.c	/^static int getPageError($/;"	f	file:
getPageMMap	src/sqlite/sqlite3.c	/^static int getPageMMap($/;"	f	file:
getPageNormal	src/sqlite/sqlite3.c	/^static int getPageNormal($/;"	f	file:
getPageReferenced	src/sqlite/sqlite3.c	/^static int getPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
getProcessTimesAddr	src/sqlite/shell.c	/^static GETPROCTIMES getProcessTimesAddr = NULL;$/;"	v	file:
getRowTrigger	src/sqlite/sqlite3.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getSafetyLevel	src/sqlite/sqlite3.c	/^static u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){$/;"	f	file:
getTempStore	src/sqlite/sqlite3.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTextArg	src/sqlite/sqlite3.c	/^static char *getTextArg(PrintfArguments *p){$/;"	f	file:
getVarint	src/sqlite/sqlite3.c	17615;"	d	file:
getVarint32	src/sqlite/sqlite3.c	17610;"	d	file:
get_autocommit	src/include/sqlite/sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
get_autocommit	src/sqlite/sqlite3.c	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
get_auxdata	src/include/sqlite/sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
get_auxdata	src/sqlite/sqlite3.c	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
get_table	src/include/sqlite/sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines
get_table	src/sqlite/sqlite3.c	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	file:
getrusage	src/sqlite/shell.c	212;"	d	file:
globInfo	src/sqlite/sqlite3.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
globalDb	src/sqlite/shell.c	/^static sqlite3 *globalDb = 0;$/;"	v	file:
global_depth	src/include/hash/extendible_hash.h	/^  uint64_t global_depth; \/\/Maintains the global_depth$/;"	m	class:cmudb::ExtendibleHash
global_parameters	src/include/vtable/virtual_table.h	/^GlobalParameters *global_parameters;$/;"	m	namespace:cmudb
global_recover	src/include/sqlite/sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines
global_recover	src/sqlite/sqlite3.c	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	file:
global_test_part_result_reporter_mutex_	third_party/gmock/gmock-gtest-all.cc	/^  internal::Mutex global_test_part_result_reporter_mutex_;$/;"	m	class:testing::internal::UnitTestImpl	file:
global_test_part_result_repoter_	third_party/gmock/gmock-gtest-all.cc	/^  TestPartResultReporterInterface* global_test_part_result_repoter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
graph_	third_party/gmock/gmock-gtest-all.cc	/^  const MatchMatrix* graph_;  \/\/ not owned$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
groupConcatFinalize	src/sqlite/sqlite3.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatStep	src/sqlite/sqlite3.c	/^static void groupConcatStep($/;"	f	file:
growOp3	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int growOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f	file:
growOpArray	src/sqlite/sqlite3.c	/^static int growOpArray(Vdbe *v, int nOp){$/;"	f	file:
growVTrans	src/sqlite/sqlite3.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
grp	src/sqlite/sqlite3.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
gtest_flag_saver_	third_party/gmock/gtest/gtest.h	/^  const internal::GTestFlagSaver* const gtest_flag_saver_;$/;"	m	class:testing::Test::internal
gtest_internal	third_party/gmock/gtest/gtest.h	/^namespace gtest_internal {$/;"	n	namespace:std::tr1
gtest_trace_stack	third_party/gmock/gmock-gtest-all.cc	/^  const std::vector<TraceInfo>& gtest_trace_stack() const {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<TraceInfo>& gtest_trace_stack() {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack_	third_party/gmock/gmock-gtest-all.cc	/^  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;$/;"	m	class:testing::internal::UnitTestImpl	file:
h	src/sqlite/sqlite3.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
h	src/sqlite/sqlite3.c	/^  int h, m;           \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	src/sqlite/sqlite3.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	src/sqlite/sqlite3.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
hFile	src/sqlite/sqlite3.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hHeap	src/sqlite/sqlite3.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hMap	src/sqlite/sqlite3.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMap	src/sqlite/sqlite3.c	/^  HANDLE hMap;                  \/* Handle for accessing memory mapping *\/$/;"	m	struct:winFile	file:
hMutex	src/sqlite/sqlite3.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/$/;"	m	struct:winFile	file:
hPending	src/sqlite/sqlite3.c	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
hProcess	src/sqlite/shell.c	/^static HANDLE hProcess;$/;"	v	file:
hShared	src/sqlite/sqlite3.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
handleDeferredMoveto	src/sqlite/sqlite3.c	/^static int SQLITE_NOINLINE handleDeferredMoveto(VdbeCursor *p){$/;"	f	file:
handleMovedCursor	src/sqlite/sqlite3.c	/^static int SQLITE_NOINLINE handleMovedCursor(VdbeCursor *p){$/;"	f	file:
handle_	third_party/gmock/gmock-gtest-all.cc	/^  HANDLE handle_;$/;"	m	class:testing::internal::AutoHandle	file:
hasColumn	src/sqlite/sqlite3.c	/^static int hasColumn(const i16 *aiCol, int nCol, int x){$/;"	f	file:
hasCompound	src/sqlite/sqlite3.c	/^  u8 hasCompound;      \/* Need to invoke convertCompoundSelectToSubquery() *\/$/;"	m	struct:Parse	file:
hasHeldSharedLock	src/sqlite/sqlite3.c	/^  u8 hasHeldSharedLock;       \/* True if a shared lock has ever been held *\/$/;"	m	struct:Pager	file:
hasHotJournal	src/sqlite/sqlite3.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasIncrblobCur	src/sqlite/sqlite3.c	/^  u8 hasIncrblobCur; \/* True if there are one or more Incrblob cursors *\/$/;"	m	struct:Btree	file:
hasMutex	src/sqlite/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	src/sqlite/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasReadConflicts	src/sqlite/sqlite3.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	src/sqlite/sqlite3.c	59560;"	d	file:
hasSharedCacheTableLock	src/sqlite/sqlite3.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	src/sqlite/sqlite3.c	59559;"	d	file:
hasStat1	src/sqlite/sqlite3.c	/^  unsigned hasStat1:1;     \/* aiRowLogEst values come from sqlite_stat1 *\/$/;"	m	struct:Index	file:
hasTimer	src/sqlite/shell.c	/^static int hasTimer(void){$/;"	f	file:
hasVowel	src/sqlite/sqlite3.c	/^static int hasVowel(const char *z){$/;"	f	file:
has_new_fatal_failure	third_party/gmock/gtest/gtest.h	/^  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }$/;"	f	class:testing::internal::HasNewFatalFailureHelper
has_new_fatal_failure_	third_party/gmock/gtest/gtest.h	/^  bool has_new_fatal_failure_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
has_owner_	third_party/gmock/gtest/gtest.h	/^  bool has_owner_;$/;"	m	class:std::tr1::MutexBase
hash	src/include/common/rid.h	/^template <> struct hash<cmudb::RID> {$/;"	s	namespace:std
hashDestroy	src/sqlite/sqlite3.c	/^static void hashDestroy(void *p){$/;"	f	file:
hash_dir	src/include/hash/extendible_hash.h	/^  std::vector<uint64_t> hash_dir;$/;"	m	class:cmudb::ExtendibleHash
hash_step_vformat	src/sqlite/shell.c	/^static void hash_step_vformat($/;"	f	file:
havingToWhere	src/sqlite/sqlite3.c	/^static void havingToWhere($/;"	f	file:
havingToWhereExprCb	src/sqlite/sqlite3.c	/^static int havingToWhereExprCb(Walker *pWalker, Expr *pExpr){$/;"	f	file:
hdr	src/sqlite/sqlite3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon24	typeref:struct:Mem3Block::__anon24::__anon25	file:
hdr	src/sqlite/sqlite3.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdrOffset	src/sqlite/sqlite3.c	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage	file:
heap	src/sqlite/sqlite3.c	/^  u32 *heap;        \/* Min-heap used for analyzing cell coverage *\/$/;"	m	struct:IntegrityCk	file:
heightOfExpr	src/sqlite/sqlite3.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExprList	src/sqlite/sqlite3.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfSelect	src/sqlite/sqlite3.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
hexDigitValue	src/sqlite/shell.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexFunc	src/sqlite/sqlite3.c	/^static void hexFunc($/;"	f	file:
hexdigits	src/sqlite/sqlite3.c	/^static const char hexdigits[] = {$/;"	v	file:
hidden	src/include/sqlite/sqlite3.h	/^unsigned char hidden[48];$/;"	m	struct:sqlite3_snapshot
hidden	src/sqlite/sqlite3.c	/^  unsigned char hidden[48];$/;"	m	struct:sqlite3_snapshot	file:
hints	src/sqlite/sqlite3.c	/^  u8 hints;                 \/* As configured by CursorSetHints() *\/$/;"	m	struct:BtCursor	file:
hlmask	src/sqlite/sqlite3.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
hook	src/sqlite/sqlite3.c	/^  SessionHook hook;               \/* APIs to grab new and old data with *\/$/;"	m	struct:sqlite3_session	file:
host_name_	third_party/gmock/gmock-gtest-all.cc	/^    const string host_name_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
ht	src/sqlite/sqlite3.c	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht	file:
ht	src/sqlite/sqlite3.c	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht	file:
ht_slot	src/sqlite/sqlite3.c	/^typedef u16 ht_slot;$/;"	t	file:
htsize	src/sqlite/sqlite3.c	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash	file:
htsize	src/sqlite/sqlite3.c	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash	file:
i	src/sqlite/sqlite3.c	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:sqlite3_value::MemValue	file:
i	src/sqlite/sqlite3.c	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::p4union	file:
i	src/sqlite/sqlite3.c	/^  int i;                          \/* Current offset in a[] *\/$/;"	m	struct:Fts5PoslistReader	file:
i	src/sqlite/sqlite3.c	/^  int i;                          \/* Current offset in position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
i	src/sqlite/sqlite3.c	/^  int i;              \/* XOR next input into a[i] *\/$/;"	m	struct:EntropyGatherer	file:
i	src/sqlite/sqlite3.c	/^  int i;             \/* Integer value *\/$/;"	m	union:RtreeCoord	file:
i	src/sqlite/sqlite3.c	/^  u32 i;                     \/* Index in sParse.aNode[] of current row *\/$/;"	m	struct:JsonEachCursor	file:
i	src/sqlite/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i16	src/sqlite/sqlite3.c	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t	file:
i16	src/sqlite/sqlite3.c	/^typedef short i16;$/;"	t	file:
i16	src/sqlite/sqlite3.c	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t	file:
i64	src/sqlite/sqlite3.c	/^typedef sqlite3_int64 i64;        \/* 8-byte signed integer *\/$/;"	t	file:
i64	src/sqlite/sqlite3.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	src/sqlite/sqlite3.c	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t	file:
i8	src/sqlite/sqlite3.c	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t	file:
iAbsLevel	src/sqlite/sqlite3.c	/^  sqlite3_int64 iAbsLevel;        \/* Absolute level of input segments *\/$/;"	m	struct:IncrmergeWriter	file:
iAddr	src/sqlite/sqlite3.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAgg	src/sqlite/sqlite3.c	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr	file:
iAlias	src/sqlite/sqlite3.c	/^        u16 iAlias;           \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item::__anon15::__anon16	file:
iAppend	src/sqlite/sqlite3.c	/^    u32 iAppend;           \/* More terms for ARRAY and OBJECT *\/$/;"	m	union:JsonNode::__anon40	file:
iArg	src/sqlite/sqlite3.c	/^  u32 iArg;                \/* Extra argument *\/$/;"	m	struct:PragmaName	file:
iAuxArg	src/sqlite/sqlite3.c	/^  int iAuxArg;                    \/* Index of function argument. *\/$/;"	m	struct:AuxData	file:
iAuxOp	src/sqlite/sqlite3.c	/^  int iAuxOp;                     \/* Instruction number of OP_Function opcode *\/$/;"	m	struct:AuxData	file:
iBatch	src/sqlite/sqlite3.c	/^  int iBatch;                    \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBegin	src/sqlite/shell.c	/^static sqlite3_int64 iBegin;  \/* Wall-clock time at start *\/$/;"	v	file:
iBegin	src/sqlite/sqlite3.c	/^  u32 iBegin;                \/* The first node of the scan *\/$/;"	m	struct:JsonEachCursor	file:
iBlock	src/sqlite/sqlite3.c	/^  sqlite3_int64 iBlock;           \/* Current block id *\/$/;"	m	struct:NodeWriter	file:
iBreak	src/sqlite/sqlite3.c	/^  int iBreak;               \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo	file:
iBtPage	src/sqlite/sqlite3.c	/^  int iBtPage;                    \/* Page number corresponding to btterm *\/$/;"	m	struct:Fts5SegWriter	file:
iBufEnd	src/sqlite/sqlite3.c	/^  int iBufEnd;                    \/* Last byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufStart	src/sqlite/sqlite3.c	/^  int iBufStart;                  \/* First byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iCacheCnt	src/sqlite/sqlite3.c	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse	file:
iCacheLevel	src/sqlite/sqlite3.c	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse	file:
iCallback	src/sqlite/sqlite3.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCell	src/sqlite/sqlite3.c	/^  int iCell;$/;"	m	struct:StatPage	file:
iCell	src/sqlite/sqlite3.c	/^  u8 iCell;              \/* Cell index within the node *\/$/;"	m	struct:RtreeSearchPoint	file:
iChange	src/sqlite/sqlite3.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iChild	src/sqlite/sqlite3.c	/^  sqlite3_int64 iChild;           \/* Pointer to child node *\/$/;"	m	struct:NodeReader	file:
iChildPg	src/sqlite/sqlite3.c	/^  u32 iChildPg;                   \/* Child node (or 0 if this is a leaf) *\/$/;"	m	struct:StatCell	file:
iCol	src/sqlite/sqlite3.c	/^  i16 iCol;                       \/* Column of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* Column to search *\/$/;"	m	struct:CInstIter	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* If !isPSample, the reason for inclusion *\/$/;"	m	struct:Stat4Sample	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts3SegFilter	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5InsertCtx	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5IntegrityCtx	file:
iCol	src/sqlite/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5VocabCursor	file:
iCol	src/sqlite/sqlite3.c	/^  u16 iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iColFilter	src/sqlite/sqlite3.c	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader	file:
iColumn	src/include/sqlite/sqlite3.h	/^int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iColumn	src/include/sqlite/sqlite3.h	/^int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	src/sqlite/sqlite3.c	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iColumn	src/sqlite/sqlite3.c	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
iColumn	src/sqlite/sqlite3.c	/^    i16 iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache	file:
iColumn	src/sqlite/sqlite3.c	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iColumn	src/sqlite/sqlite3.c	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase	file:
iColumn	src/sqlite/sqlite3.c	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr	file:
iConstExprReg	src/sqlite/sqlite3.c	/^      int iConstExprReg;      \/* Register in which Expr value is cached *\/$/;"	m	union:ExprList::ExprList_item::__anon15	file:
iContinue	src/sqlite/sqlite3.c	/^  int iContinue;            \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo	file:
iCookie	src/sqlite/sqlite3.c	/^  int iCookie;                    \/* Incremented when %_config is modified *\/$/;"	m	struct:Fts5Config	file:
iCookie	src/sqlite/sqlite3.c	/^  u32 iCookie;                    \/* Cookie value for main db files *\/$/;"	m	struct:rbu_file	file:
iCookie	src/sqlite/sqlite3.c	/^  u32 iCookie;$/;"	m	struct:RbuState	file:
iCoord	src/sqlite/sqlite3.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCsrId	src/sqlite/sqlite3.c	/^  i64 iCsrId;                     \/* Cursor id *\/$/;"	m	struct:Fts5Cursor	file:
iCur	src/sqlite/sqlite3.c	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon30::__anon31::InLoop	file:
iCur	src/sqlite/sqlite3.c	/^    int iCur;                                 \/* A cursor number *\/$/;"	m	union:Walker::__anon20	file:
iCur	src/sqlite/sqlite3.c	/^  int iCur;        \/* Cursor number for the table corresponding to the index *\/$/;"	m	struct:IdxCover	file:
iCurrent	src/sqlite/sqlite3.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrent	src/sqlite/sqlite3.c	/^  int iCurrent;                   \/* Offset in aData[] of current change *\/$/;"	m	struct:SessionInput	file:
iCurrentBlock	src/sqlite/sqlite3.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCurrentTime	src/sqlite/sqlite3.c	/^  i64 iCurrentTime;       \/* Value of julianday('now') for this statement *\/$/;"	m	struct:Vdbe	file:
iCursor	src/sqlite/sqlite3.c	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
iDataVersion	src/sqlite/sqlite3.c	/^  u32 iDataVersion;           \/* Changes whenever database content changes *\/$/;"	m	struct:Pager	file:
iDataVersion	src/sqlite/sqlite3.c	/^  u32 iDataVersion;  \/* Combines with pBt->pPager->iDataVersion *\/$/;"	m	struct:Btree	file:
iDb	src/sqlite/sqlite3.c	/^    u8 iDb;                     \/* Which db file is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
iDb	src/sqlite/sqlite3.c	/^  i8 iDb;                 \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor	file:
iDb	src/sqlite/sqlite3.c	/^  int iDb;                        \/* Index of database to analyze *\/$/;"	m	struct:StatTable	file:
iDb	src/sqlite/sqlite3.c	/^  int iDb;                        \/* Schema used for this query *\/$/;"	m	struct:StatCursor	file:
iDb	src/sqlite/sqlite3.c	/^  int iDb;               \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	src/sqlite/sqlite3.c	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo	file:
iDb	src/sqlite/sqlite3.c	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon19	file:
iDbPage	src/sqlite/sqlite3.c	/^  u32 iDbPage;$/;"	m	struct:RbuFrame	file:
iDefaultCol	src/sqlite/sqlite3.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDepth	src/sqlite/sqlite3.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDepth	src/sqlite/sqlite3.c	/^  u16 iDepth;        \/* Nesting depth *\/$/;"	m	struct:JsonParse	file:
iDestSchema	src/sqlite/sqlite3.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDistinct	src/sqlite/sqlite3.c	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iDivisor	src/sqlite/sqlite3.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDocid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist	file:
iDocid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr	file:
iDocid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDocid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDocid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TokenDoclist	file:
iDoclistToken	src/sqlite/sqlite3.c	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase	file:
iECursor	src/sqlite/sqlite3.c	/^  int iECursor;         \/* Cursor number for the sorter *\/$/;"	m	struct:SortCtx	file:
iEnd	src/sqlite/sqlite3.c	/^  int iEnd;                       \/* Current 'end' value *\/$/;"	m	struct:Fts3tokCursor	file:
iEnd	src/sqlite/sqlite3.c	/^  int iEnd;                       \/* Last token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iEnd	src/sqlite/sqlite3.c	/^  sqlite3_int64 iEnd;             \/* Block number of last allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iEnd	src/sqlite/sqlite3.c	/^  u32 iEnd;                  \/* EOF when i equals or exceeds this value *\/$/;"	m	struct:JsonEachCursor	file:
iEndBlock	src/sqlite/sqlite3.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEndofDoclist	src/sqlite/sqlite3.c	/^  int iEndofDoclist;$/;"	m	struct:Fts5SegIter	file:
iEof	src/sqlite/sqlite3.c	/^  i64 iEof;                       \/* Bytes of data stored in pFd *\/$/;"	m	struct:SorterFile	file:
iEof	src/sqlite/sqlite3.c	/^  i64 iEof;                   \/* 1 byte past EOF for this PmaReader *\/$/;"	m	struct:PmaReader	file:
iEquiv	src/sqlite/sqlite3.c	/^  unsigned char iEquiv;      \/* Next unused slot in aEquiv[] *\/$/;"	m	struct:WhereScan	file:
iField	src/sqlite/sqlite3.c	/^  int iField;             \/* Field in (?,?,?) IN (SELECT...) vector *\/$/;"	m	struct:WhereTerm	file:
iFirst	src/sqlite/sqlite3.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iFirst	src/sqlite/sqlite3.c	/^  u16 iFirst;                     \/* aSeg[] index of firstest iterator *\/$/;"	m	struct:Fts5CResult	file:
iFirstOff	src/sqlite/sqlite3.c	/^  int iFirstOff;                \/* Used by reverse iterators *\/$/;"	m	struct:Fts5DlidxLvl	file:
iFirstRowid	src/sqlite/sqlite3.c	/^  i64 iFirstRowid;                \/* Return no rowids earlier than this *\/$/;"	m	struct:Fts5Cursor	file:
iForeGuard	src/sqlite/sqlite3.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iFree	src/sqlite/sqlite3.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFrom	src/sqlite/sqlite3.c	/^    int iFrom;            \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap	file:
iFrom	src/sqlite/sqlite3.c	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel	file:
iGeneration	src/sqlite/sqlite3.c	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema	file:
iGet	src/sqlite/sqlite3.c	/^  int iGet;                 \/* Index of current sample accessed by stat_get() *\/$/;"	m	struct:Stat4Accum	file:
iHash	src/sqlite/sqlite3.c	/^  u32 iHash;                      \/* Tiebreaker hash *\/$/;"	m	struct:Stat4Sample	file:
iHdrOffset	src/sqlite/sqlite3.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHdrOffset	src/sqlite/sqlite3.c	/^  u32 iHdrOffset;         \/* Offset to next unparsed byte of the header *\/$/;"	m	struct:VdbeCursor	file:
iHead	src/sqlite/sqlite3.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iHidden	src/sqlite/sqlite3.c	/^  u8 iHidden;               \/* Index of the first hidden column *\/$/;"	m	struct:PragmaVtab	file:
iIdx	src/sqlite/sqlite3.c	/^  int iIdx;                       \/* Index (main or aPrefix[] entry) *\/$/;"	m	struct:Fts5TermsetEntry	file:
iIdx	src/sqlite/sqlite3.c	/^  int iIdx;                       \/* Index of *output* segment in iAbsLevel+1 *\/$/;"	m	struct:IncrmergeWriter	file:
iIdx	src/sqlite/sqlite3.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdxCol	src/sqlite/sqlite3.c	/^  int iIdxCol;       \/* The column for the index *\/$/;"	m	struct:IdxExprTrans	file:
iIdxCur	src/sqlite/sqlite3.c	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel	file:
iIdxCur	src/sqlite/sqlite3.c	/^  int iIdxCur;       \/* The cursor for the index *\/$/;"	m	struct:IdxExprTrans	file:
iIdxCur	src/sqlite/sqlite3.c	/^  int iIdxCur;    \/* Cursor for the index, if pIdx!=0.  Unused otherwise *\/$/;"	m	struct:CCurHint	file:
iIndent	src/sqlite/shell.c	/^  int iIndent;           \/* Index of current op in aiIndent[] *\/$/;"	m	struct:ShellState	file:
iInst	src/sqlite/sqlite3.c	/^  int iInst;                      \/* Next phrase instance index *\/$/;"	m	struct:CInstIter	file:
iJD	src/sqlite/sqlite3.c	/^  sqlite3_int64 iJD;  \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iKey	src/sqlite/sqlite3.c	/^    u32 iKey;              \/* Key for ARRAY objects in json_tree() *\/$/;"	m	union:JsonNode::__anon40	file:
iKey	src/sqlite/sqlite3.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iKey1	src/sqlite/sqlite3.c	/^  i64 iKey1;                      \/* First key value passed to hook *\/$/;"	m	struct:PreUpdate	file:
iKey2	src/sqlite/sqlite3.c	/^  i64 iKey2;                      \/* Second key value passed to hook *\/$/;"	m	struct:PreUpdate	file:
iLangid	src/sqlite/sqlite3.c	/^  int iLangid;                        \/* Language id used with tokenizer *\/$/;"	m	struct:ParseContext	file:
iLangid	src/sqlite/sqlite3.c	/^  int iLangid;                    \/* Language being queried for *\/$/;"	m	struct:Fts3Cursor	file:
iLangid	src/sqlite/sqlite3.c	/^  int iLangid;                    \/* Language id to query *\/$/;"	m	struct:Fts3auxCursor	file:
iLastCol	src/sqlite/sqlite3.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastDocid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastPos	src/sqlite/sqlite3.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLastRowid	src/sqlite/sqlite3.c	/^  i64 iLastRowid;                 \/* Return no rowids later than this *\/$/;"	m	struct:Fts5Cursor	file:
iLeafEndBlock	src/sqlite/sqlite3.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeafOffset	src/sqlite/sqlite3.c	/^  int iLeafOffset;                \/* Byte offset within current leaf *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	src/sqlite/sqlite3.c	/^  int iLeafPgno;                  \/* Current leaf page number *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	src/sqlite/sqlite3.c	/^  int iLeafPgno;                \/* Page number of current leaf page *\/$/;"	m	struct:Fts5DlidxLvl	file:
iLeftJoin	src/sqlite/sqlite3.c	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel	file:
iLevel	src/include/sqlite/sqlite3.h	/^int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iLevel	src/sqlite/sqlite3.c	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache	file:
iLevel	src/sqlite/sqlite3.c	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
iLevel	src/sqlite/sqlite3.c	/^  int iLevel;             \/* Which level of the tree we are on *\/$/;"	m	struct:TreeView	file:
iLevel	src/sqlite/sqlite3.c	/^  u8 iLevel;             \/* 0=entries.  1=leaf node.  2+ for higher *\/$/;"	m	struct:RtreeSearchPoint	file:
iLikeRepCntr	src/sqlite/sqlite3.c	/^  u32 iLikeRepCntr;     \/* LIKE range processing counter register (times 2) *\/$/;"	m	struct:WhereLevel	file:
iLimit	src/sqlite/sqlite3.c	/^  LogEst iLimit;            \/* LIMIT if wctrlFlags has WHERE_USE_LIMIT *\/$/;"	m	struct:WhereInfo	file:
iLimit	src/sqlite/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iLookahead	src/sqlite/sqlite3.c	/^  i64 iLookahead;                 \/* Next position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iMaster	src/sqlite/sqlite3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMaxDocid	src/sqlite/sqlite3.c	/^  i64 iMaxDocid;                  \/* Maximum docid to return *\/$/;"	m	struct:Fts3Cursor	file:
iMaxFrame	src/sqlite/sqlite3.c	/^  u32 iMaxFrame;                  \/* Largest iWalFrame value in aFrame[] *\/$/;"	m	struct:sqlite3rbu	file:
iMaxKey	src/sqlite/sqlite3.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMem	src/sqlite/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iMem	src/sqlite/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iMemory	src/sqlite/sqlite3.c	/^  int iMemory;                    \/* Offset of free space in list.aMemory *\/$/;"	m	struct:VdbeSorter	file:
iMin	src/sqlite/sqlite3.c	/^  int iMin;                 \/* Index in a[] of entry with minimum score *\/$/;"	m	struct:Stat4Accum	file:
iMinDocid	src/sqlite/sqlite3.c	/^  i64 iMinDocid;                  \/* Minimum docid to return *\/$/;"	m	struct:Fts3Cursor	file:
iNewReg	src/sqlite/sqlite3.c	/^  int iNewReg;                    \/* Register for new.* values *\/$/;"	m	struct:PreUpdate	file:
iNewTable	src/sqlite/sqlite3.c	/^  int iNewTable;            \/* New table number *\/$/;"	m	struct:SubstContext	file:
iNext	src/sqlite/sqlite3.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNext	src/sqlite/sqlite3.c	/^    int iNext;                    \/* Offset within aMemory of next record *\/$/;"	m	union:SorterRecord::__anon28	file:
iNext	src/sqlite/sqlite3.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNext	src/sqlite/sqlite3.c	/^  int iNext;                      \/* Offset in aData[] of next change *\/$/;"	m	struct:SessionInput	file:
iNextId	src/sqlite/sqlite3.c	/^  i64 iNextId;                    \/* Used to allocate unique cursor ids *\/$/;"	m	struct:Fts5Global	file:
iNextSelectId	src/sqlite/sqlite3.c	/^  int iNextSelectId;        \/* Next available select ID for EXPLAIN output *\/$/;"	m	struct:Parse	file:
iNode	src/sqlite/sqlite3.c	/^  i64 iNode;                  \/* The node number *\/$/;"	m	struct:RtreeNode	file:
iNodeSize	src/sqlite/sqlite3.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iOalSz	src/sqlite/sqlite3.c	/^  i64 iOalSz;$/;"	m	struct:RbuState	file:
iOalSz	src/sqlite/sqlite3.c	/^  i64 iOalSz;$/;"	m	struct:sqlite3rbu	file:
iOff	src/sqlite/sqlite3.c	/^  i64 iOff;$/;"	m	struct:Fts5ExprCtx	file:
iOff	src/sqlite/sqlite3.c	/^  int iOff;                       \/* Current offset within aInput[] *\/$/;"	m	struct:unicode_cursor	file:
iOff	src/sqlite/sqlite3.c	/^  int iOff;                       \/* Current offset within aNode[] *\/$/;"	m	struct:NodeReader	file:
iOff	src/sqlite/sqlite3.c	/^  int iOff;                       \/* Current offset within zIn[] *\/$/;"	m	struct:HighlightContext	file:
iOff	src/sqlite/sqlite3.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOff	src/sqlite/sqlite3.c	/^  int iOff;                     \/* Current offset into pData *\/$/;"	m	struct:Fts5DlidxLvl	file:
iOffset	src/sqlite/sqlite3.c	/^  i64 iOffset;                    \/* Value of 'pgOffset' column *\/$/;"	m	struct:StatCursor	file:
iOffset	src/sqlite/sqlite3.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	src/sqlite/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iOffset	src/sqlite/sqlite3.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	src/sqlite/sqlite3.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	src/sqlite/sqlite3.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOffset	src/sqlite/sqlite3.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOnceResetThreshold	src/sqlite/sqlite3.c	/^  int iOnceResetThreshold;          \/* When to reset OP_Once counters *\/$/;"	m	struct:Sqlite3Config	file:
iOp	src/sqlite/sqlite3.c	/^  int iOp;                \/* Instruction number of OP_Function *\/$/;"	m	struct:sqlite3_context	file:
iOrDocid	src/sqlite/sqlite3.c	/^  i64 iOrDocid;$/;"	m	struct:Fts3Phrase	file:
iOrderByCol	src/sqlite/sqlite3.c	/^        u16 iOrderByCol;      \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item::__anon15::__anon16	file:
iOvfl	src/sqlite/sqlite3.c	/^  int iOvfl;                      \/* Iterates through aOvfl[] *\/$/;"	m	struct:StatCell	file:
iPKey	src/sqlite/sqlite3.c	/^  i16 iPKey;           \/* If not negative, use aCol[iPKey] as the rowid *\/$/;"	m	struct:Table	file:
iPage	src/sqlite/sqlite3.c	/^  i8 iPage;                 \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor	file:
iPage	src/sqlite/sqlite3.c	/^  int iPage;                      \/* Current entry in aPage[] *\/$/;"	m	struct:StatCursor	file:
iPageno	src/sqlite/sqlite3.c	/^  u32 iPageno;                    \/* Value of 'pageno' column *\/$/;"	m	struct:StatCursor	file:
iParent	src/sqlite/sqlite3.c	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm	file:
iPgidxOff	src/sqlite/sqlite3.c	/^  int iPgidxOff;                  \/* Next offset in pgidx *\/$/;"	m	struct:Fts5SegIter	file:
iPgno	src/sqlite/sqlite3.c	/^  u32 iPgno;$/;"	m	struct:StatPage	file:
iPhrase	src/sqlite/sqlite3.c	/^  int iPhrase;               \/* Index of this phrase in matchinfo() results *\/$/;"	m	struct:Fts3Expr	file:
iPkSortOrder	src/sqlite/sqlite3.c	/^  u8 iPkSortOrder;          \/* ASC or DESC for INTEGER PRIMARY KEY *\/$/;"	m	struct:Parse	file:
iPkTnum	src/sqlite/sqlite3.c	/^  int iPkTnum;                    \/* If eType==EXTERNAL, root of PK index *\/$/;"	m	struct:RbuObjIter	file:
iPos	src/sqlite/sqlite3.c	/^  i64 iPos;                       \/* (iCol<<32) + iPos *\/$/;"	m	struct:Fts5PoslistReader	file:
iPos	src/sqlite/sqlite3.c	/^  i64 iPos;                       \/* Current position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Current 'pos' value *\/$/;"	m	struct:Fts3tokCursor	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Current token offset in zIn[] *\/$/;"	m	struct:HighlightContext	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Current token position *\/$/;"	m	struct:Fts5SFinder	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPos	src/sqlite/sqlite3.c	/^  int iPos;                       \/* Position of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iPosOffset	src/sqlite/sqlite3.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPragCName	src/sqlite/sqlite3.c	/^  u8 iPragCName;           \/* Start of column names in pragCName[] *\/$/;"	m	struct:PragmaName	file:
iPrev	src/sqlite/sqlite3.c	/^  i64 iPrev;                      \/* Previous rowid value written to page *\/$/;"	m	struct:Fts5DlidxWriter	file:
iPrev	src/sqlite/sqlite3.c	/^  i64 iPrev;$/;"	m	struct:Fts5PoslistWriter	file:
iPrev	src/sqlite/sqlite3.c	/^  u8 iPrev;                       \/* Previous thread used to flush PMA *\/$/;"	m	struct:VdbeSorter	file:
iPrevDocid	src/sqlite/sqlite3.c	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevId	src/sqlite/sqlite3.c	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
iPrevLangid	src/sqlite/sqlite3.c	/^  int iPrevLangid;                \/* Langid of recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevPgidx	src/sqlite/sqlite3.c	/^  int iPrevPgidx;                 \/* Previous value written into pgidx *\/$/;"	m	struct:Fts5PageWriter	file:
iPrevRowid	src/sqlite/sqlite3.c	/^  i64 iPrevRowid;                 \/* Previous rowid written to current leaf *\/$/;"	m	struct:Fts5SegWriter	file:
iPrior	src/sqlite/sqlite3.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iPrn	src/sqlite/sqlite3.c	/^  u32 iPrn;                 \/* Pseudo-random number used for sampling *\/$/;"	m	struct:Stat4Accum	file:
iRangeEnd	src/sqlite/sqlite3.c	/^  int iRangeEnd;                  \/* If non-zero, last token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeReg	src/sqlite/sqlite3.c	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse	file:
iRangeStart	src/sqlite/sqlite3.c	/^  int iRangeStart;                \/* First token to include *\/$/;"	m	struct:HighlightContext	file:
iReCksum	src/sqlite/sqlite3.c	/^  u32 iReCksum;              \/* On commit, recalculate checksums from here *\/$/;"	m	struct:Wal	file:
iRead	src/sqlite/sqlite3.c	/^  int iRead;$/;"	m	struct:PoslistOffsetsCtx	file:
iReadOff	src/sqlite/sqlite3.c	/^  i64 iReadOff;               \/* Current read offset *\/$/;"	m	struct:PmaReader	file:
iReg	src/sqlite/sqlite3.c	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache	file:
iReinsertHeight	src/sqlite/sqlite3.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iReplace	src/sqlite/sqlite3.c	/^    u32 iReplace;          \/* Replacement content for JNODE_REPLACE *\/$/;"	m	union:JsonNode::__anon40	file:
iRightChildPg	src/sqlite/sqlite3.c	/^  u32 iRightChildPg;              \/* Right-child page number (or 0) *\/$/;"	m	struct:StatPage	file:
iRightJoinTable	src/sqlite/sqlite3.c	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr	file:
iRowid	src/include/sqlite/sqlite3.h	/^sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowid	src/sqlite/sqlite3.c	/^    i64 iRowid;                     \/* Rowid in main table of the key *\/$/;"	m	union:Stat4Sample::__anon29	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;                                 \/* Node or entry ID *\/$/;"	m	struct:RtreeCell	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5ExprNode	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5SegIter	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5Sorter	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;                     \/* Rowid of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;                   \/* First rowid on leaf iLeafPgno *\/$/;"	m	struct:Fts5DlidxLvl	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5DoclistIter	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5IndexIter	file:
iRowid	src/sqlite/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5IntegrityCtx	file:
iRowid	src/sqlite/sqlite3.c	/^  int iRowid;                     \/* Current 'rowid' value *\/$/;"	m	struct:Fts3tokCursor	file:
iRowid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
iRowid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iRowid	src/sqlite/sqlite3.c	/^  sqlite3_int64 iRowid;      \/* The rowid *\/$/;"	m	struct:stmt_cursor	file:
iRowid	src/sqlite/sqlite3.c	/^  sqlite_int64 iRowid;      \/* Current rowid *\/$/;"	m	struct:PragmaVtabCursor	file:
iRowid	src/sqlite/sqlite3.c	/^  u32 iRowid;                \/* The rowid *\/$/;"	m	struct:JsonEachCursor	file:
iRowidOffset	src/sqlite/sqlite3.c	/^  int iRowidOffset;               \/* Current entry in aRowidOffset[] *\/$/;"	m	struct:Fts5SegIter	file:
iSDParm	src/sqlite/sqlite3.c	/^  int iSDParm;         \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest	file:
iSavepoint	src/sqlite/sqlite3.c	/^  int iSavepoint;                 \/* Number of open savepoints (0 -> none) *\/$/;"	m	struct:Fts5TransactionState	file:
iSavepoint	src/sqlite/sqlite3.c	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable	file:
iSdst	src/sqlite/sqlite3.c	/^  int iSdst;           \/* Base register where results are written *\/$/;"	m	struct:SelectDest	file:
iSegid	src/sqlite/sqlite3.c	/^  int iSegid;                     \/* Segid to write to *\/$/;"	m	struct:Fts5SegWriter	file:
iSegid	src/sqlite/sqlite3.c	/^  int iSegid;                     \/* Segment id *\/$/;"	m	struct:Fts5StructureSegment	file:
iSegid	src/sqlite/sqlite3.c	/^  int iSegid;$/;"	m	struct:Fts5DlidxIter	file:
iSelectID	src/sqlite/sqlite3.c	/^  int iSelectID;                  \/* The "Select-ID" for this loop *\/$/;"	m	struct:ScanStatus	file:
iSelectId	src/sqlite/sqlite3.c	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item	file:
iSelectId	src/sqlite/sqlite3.c	/^  int iSelectId;            \/* ID of current select for EXPLAIN output *\/$/;"	m	struct:Parse	file:
iSelfTab	src/sqlite/sqlite3.c	/^  int iSelfTab;        \/* Table of an index whose exprs are being coded *\/$/;"	m	struct:Parse	file:
iSize	src/sqlite/sqlite3.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSize	src/sqlite/sqlite3.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSortIdx	src/sqlite/sqlite3.c	/^  u8 iSortIdx;          \/* Sorting index number.  0==None *\/$/;"	m	struct:WhereLoop	file:
iSorterColumn	src/sqlite/sqlite3.c	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iSpecial	src/sqlite/sqlite3.c	/^  i64 iSpecial;                   \/* Result of special query *\/$/;"	m	struct:Fts5Cursor	file:
iSrcLine	src/sqlite/sqlite3.c	/^  int iSrcLine;            \/* Source-code line that generated this opcode *\/$/;"	m	struct:VdbeOp	file:
iStart	src/sqlite/sqlite3.c	/^  int iStart;                     \/* Current 'start' value *\/$/;"	m	struct:Fts3tokCursor	file:
iStart	src/sqlite/sqlite3.c	/^  int iStart;                     \/* First token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iStart	src/sqlite/sqlite3.c	/^  sqlite3_int64 iStart;           \/* Block number of first allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iStartBlock	src/sqlite/sqlite3.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStartOff	src/sqlite/sqlite3.c	/^  i64 iStartOff;                  \/* Offset to start writing file at *\/$/;"	m	struct:IncrMerger	file:
iStatement	src/sqlite/sqlite3.c	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe	file:
iStrategy	src/sqlite/sqlite3.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iStructVersion	src/sqlite/sqlite3.c	/^  i64 iStructVersion;             \/* data_version when pStruct read *\/$/;"	m	struct:Fts5Index	file:
iSub	src/sqlite/sqlite3.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSubRec	src/sqlite/sqlite3.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSum	src/sqlite/sqlite3.c	/^  i64 iSum;         \/* Integer sum *\/$/;"	m	struct:SumCtx	file:
iSwitchRowid	src/sqlite/sqlite3.c	/^  i64 iSwitchRowid;               \/* Firstest rowid of other than aFirst[1] *\/$/;"	m	struct:Fts5Iter	file:
iSyncPoint	src/sqlite/sqlite3.c	/^  sqlite3_int64 iSyncPoint;    \/* Fsync at this offset *\/$/;"	m	struct:WalWriter	file:
iSysErrno	src/sqlite/sqlite3.c	/^  int iSysErrno;                \/* Errno value from last system error *\/$/;"	m	struct:sqlite3	file:
iSzPoslist	src/sqlite/sqlite3.c	/^  int iSzPoslist;                 \/* Offset of space for 4-byte poslist size *\/$/;"	m	struct:Fts5HashEntry	file:
iTab	src/sqlite/sqlite3.c	/^  int iTab;              \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTab	src/sqlite/sqlite3.c	/^  u8 iTab;              \/* Position in FROM clause of table for this loop *\/$/;"	m	struct:WhereLoop	file:
iTabCur	src/sqlite/sqlite3.c	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel	file:
iTabCur	src/sqlite/sqlite3.c	/^  int iTabCur;       \/* The cursor of the corresponding table *\/$/;"	m	struct:IdxExprTrans	file:
iTabCur	src/sqlite/sqlite3.c	/^  int iTabCur;    \/* Cursor for the main table *\/$/;"	m	struct:CCurHint	file:
iTable	src/sqlite/sqlite3.c	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iTable	src/sqlite/sqlite3.c	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache	file:
iTable	src/sqlite/sqlite3.c	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock	file:
iTable	src/sqlite/sqlite3.c	/^  int iTable;               \/* Replace references to this table *\/$/;"	m	struct:SubstContext	file:
iTable	src/sqlite/sqlite3.c	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr	file:
iTail	src/sqlite/sqlite3.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTerm	src/sqlite/sqlite3.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTermLeafOffset	src/sqlite/sqlite3.c	/^  int iTermLeafOffset;$/;"	m	struct:Fts5SegIter	file:
iTermLeafPgno	src/sqlite/sqlite3.c	/^  int iTermLeafPgno;$/;"	m	struct:Fts5SegIter	file:
iTermOffset	src/include/sqlite/sqlite3.h	/^int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iTermOffset	src/sqlite/sqlite3.c	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iTnum	src/sqlite/sqlite3.c	/^  int iTnum;                      \/* Root page of current object *\/$/;"	m	struct:RbuObjIter	file:
iToken	src/sqlite/sqlite3.c	/^  int iToken;                     \/* Index of next token to be returned *\/$/;"	m	struct:unicode_cursor	file:
iToken	src/sqlite/sqlite3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	src/sqlite/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	src/sqlite/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	src/sqlite/sqlite3.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iTop	src/sqlite/sqlite3.c	/^  int iTop;                 \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
iVal	src/sqlite/sqlite3.c	/^  int iVal;$/;"	m	struct:ValueNewStat4Ctx	file:
iValue	src/sqlite/sqlite3.c	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon13	file:
iVersion	src/include/sqlite/sqlite3.h	/^int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	src/include/sqlite/sqlite3.h	/^int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	src/include/sqlite/sqlite3.h	/^int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	src/include/sqlite/sqlite3.h	/^int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	src/include/sqlite/sqlite3.h	/^int iVersion;$/;"	m	struct:sqlite3_module
iVersion	src/include/sqlite/sqlite3.h	/^int iVersion;$/;"	m	struct:sqlite3_pcache_methods2
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api	file:
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi	file:
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs	file:
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	file:
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_module	file:
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2	file:
iVersion	src/sqlite/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module	file:
iVersion	src/sqlite/sqlite3.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iWalCksum	src/sqlite/sqlite3.c	/^  i64 iWalCksum;$/;"	m	struct:RbuState	file:
iWalCksum	src/sqlite/sqlite3.c	/^  i64 iWalCksum;$/;"	m	struct:sqlite3rbu	file:
iWalFrame	src/sqlite/sqlite3.c	/^  u32 iWalFrame;$/;"	m	struct:RbuFrame	file:
iWrite	src/sqlite/sqlite3.c	/^  int iWrite;$/;"	m	struct:PoslistOffsetsCtx	file:
iWriteOff	src/sqlite/sqlite3.c	/^  i64 iWriteOff;                  \/* Offset of start of buffer in file *\/$/;"	m	struct:PmaWriter	file:
iWriteRowid	src/sqlite/sqlite3.c	/^  i64 iWriteRowid;                \/* Rowid for current doc being written *\/$/;"	m	struct:Fts5Index	file:
iWriteVer	src/sqlite/sqlite3.c	/^  u8 iWriteVer;                   \/* "write-version" value for main db files *\/$/;"	m	struct:rbu_file	file:
iZero	src/sqlite/sqlite3.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
icuCaseFunc16	src/sqlite/sqlite3.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuClose	src/sqlite/sqlite3.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuCollationColl	src/sqlite/sqlite3.c	/^static int icuCollationColl($/;"	f	file:
icuCollationDel	src/sqlite/sqlite3.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCreate	src/sqlite/sqlite3.c	/^static int icuCreate($/;"	f	file:
icuDestroy	src/sqlite/sqlite3.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuFunctionError	src/sqlite/sqlite3.c	/^static void icuFunctionError($/;"	f	file:
icuLikeCompare	src/sqlite/sqlite3.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeFunc	src/sqlite/sqlite3.c	/^static void icuLikeFunc($/;"	f	file:
icuLoadCollation	src/sqlite/sqlite3.c	/^static void icuLoadCollation($/;"	f	file:
icuNext	src/sqlite/sqlite3.c	/^static int icuNext($/;"	f	file:
icuOpen	src/sqlite/sqlite3.c	/^static int icuOpen($/;"	f	file:
icuRegexpDelete	src/sqlite/sqlite3.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpFunc	src/sqlite/sqlite3.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuTokenizerModule	src/sqlite/sqlite3.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuUtf8Trans1	src/sqlite/sqlite3.c	/^static const unsigned char icuUtf8Trans1[] = {$/;"	v	file:
id	src/sqlite/sqlite3.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	src/sqlite/sqlite3.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	src/sqlite/sqlite3.c	/^  sqlite3_int64 id;      \/* Node ID *\/$/;"	m	struct:RtreeSearchPoint	file:
id	src/sqlite/sqlite3.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	src/sqlite/sqlite3.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
id	src/sqlite/sqlite3.c	/^  unsigned id;             \/* The thread identifier *\/$/;"	m	struct:SQLiteThread	file:
identLength	src/sqlite/sqlite3.c	/^static int identLength(const char *z){$/;"	f	file:
identPut	src/sqlite/sqlite3.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
idx	src/sqlite/sqlite3.c	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item	file:
idxFlags	src/include/sqlite/sqlite3.h	/^int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info
idxFlags	src/sqlite/sqlite3.c	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info	file:
idxHash	src/sqlite/sqlite3.c	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema	file:
idxNum	src/include/sqlite/sqlite3.h	/^int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxNum	src/sqlite/sqlite3.c	/^      int idxNum;            \/* Index number *\/$/;"	m	struct:WhereLoop::__anon32::__anon34	file:
idxNum	src/sqlite/sqlite3.c	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	file:
idxStr	src/include/sqlite/sqlite3.h	/^char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
idxStr	src/sqlite/sqlite3.c	/^      char *idxStr;          \/* Index identifier string *\/$/;"	m	struct:WhereLoop::__anon32::__anon34	file:
idxStr	src/sqlite/sqlite3.c	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	file:
idxType	src/sqlite/sqlite3.c	/^  unsigned idxType:2;      \/* 1==UNIQUE, 2==PRIMARY KEY, 0==CREATE INDEX *\/$/;"	m	struct:Index	file:
idxaff	src/sqlite/sqlite3.c	/^  char idxaff;               \/* Must match this affinity, if zCollName!=NULL *\/$/;"	m	struct:WhereScan	file:
immediate_prerequisites_	third_party/gmock/gmock/gmock.h	/^  ExpectationSet immediate_prerequisites_;$/;"	m	class:testing::internal::ExpectationBase
impl	third_party/gmock/gmock/gmock.h	/^  const Impl& impl() const { return impl_; }$/;"	f	class:testing::PolymorphicMatcher
impl	third_party/gmock/gtest/gtest.h	/^  const internal::UnitTestImpl* impl() const { return impl_; }$/;"	f	class:testing::UnitTest
impl	third_party/gmock/gtest/gtest.h	/^  internal::UnitTestImpl* impl() { return impl_; }$/;"	f	class:testing::UnitTest
impl_	third_party/gmock/gmock/gmock.h	/^    Impl impl_;$/;"	m	class:testing::PolymorphicAction::MonomorphicImpl
impl_	third_party/gmock/gmock/gmock.h	/^    const Impl impl_;$/;"	m	class:testing::PolymorphicMatcher::MonomorphicImpl
impl_	third_party/gmock/gmock/gmock.h	/^  ::testing::internal::linked_ptr<const MatcherInterface<T> > impl_;$/;"	m	class:testing::internal::MatcherBase
impl_	third_party/gmock/gmock/gmock.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicAction
impl_	third_party/gmock/gmock/gmock.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicMatcher
impl_	third_party/gmock/gmock/gmock.h	/^  const internal::linked_ptr<ActionInterface<F2> > impl_;$/;"	m	class:testing::internal::ActionAdaptor
impl_	third_party/gmock/gmock/gmock.h	/^  internal::linked_ptr<ActionInterface<F> > impl_;$/;"	m	class:testing::Action
impl_	third_party/gmock/gmock/gmock.h	/^  internal::linked_ptr<const CardinalityInterface> impl_;$/;"	m	class:testing::Cardinality
impl_	third_party/gmock/gtest/gtest.h	/^  internal::UnitTestImpl* impl_;$/;"	m	class:testing::UnitTest
impl_	third_party/gmock/gtest/gtest.h	/^  linked_ptr<const ParamGeneratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamGenerator
impl_	third_party/gmock/gtest/gtest.h	/^  scoped_ptr<ParamIteratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamIterator
import_append_char	src/sqlite/shell.c	/^static void import_append_char(ImportCtx *p, int c){$/;"	f	file:
imposterTable	src/sqlite/sqlite3.c	/^    u8 imposterTable;           \/* Building an imposter table *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
in	src/sqlite/shell.c	/^  FILE *in;           \/* Read the CSV text from this input stream *\/$/;"	m	struct:ImportCtx	file:
in	src/sqlite/sqlite3.c	/^    } in;                 \/* Used when pWLoop->wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon30	typeref:struct:WhereLevel::__anon30::__anon31	file:
in	src/sqlite/sqlite3.c	/^  SessionInput in;                \/* Input buffer or stream *\/$/;"	m	struct:sqlite3_changeset_iter	file:
inNormalWrite	src/sqlite/sqlite3.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inProgress	src/sqlite/sqlite3.c	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config	file:
inTrans	src/sqlite/sqlite3.c	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree	file:
inTransaction	src/sqlite/sqlite3.c	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table	file:
inTransaction	src/sqlite/sqlite3.c	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared	file:
inWrTrans	src/sqlite/sqlite3.c	/^  u8 inWrTrans;               \/* True if inside write transaction *\/$/;"	m	struct:Rtree	file:
incrAggDepth	src/sqlite/sqlite3.c	/^static int incrAggDepth(Walker *pWalker, Expr *pExpr){$/;"	f	file:
incrAggFunctionDepth	src/sqlite/sqlite3.c	/^static void incrAggFunctionDepth(Expr *pExpr, int N){$/;"	f	file:
incrPhraseTokenNext	src/sqlite/sqlite3.c	/^static int incrPhraseTokenNext($/;"	f	file:
incrVacuum	src/sqlite/sqlite3.c	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
incrVacuumStep	src/sqlite/sqlite3.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg, int bCommit){$/;"	f	file:
increment_death_test_count	third_party/gmock/gtest/gtest.h	/^  int increment_death_test_count() { return ++death_test_count_; }$/;"	f	class:testing::TestResult
increment_death_test_count	third_party/gmock/gtest/gtest.h	/^  int increment_death_test_count() {$/;"	f	class:testing::TestInfo
index	third_party/gmock/gtest/gtest.h	/^  int index() const { return index_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
indexColumnNotNull	src/sqlite/sqlite3.c	/^static int indexColumnNotNull(Index *pIdx, int iCol){$/;"	f	file:
indexMightHelpWithOrderBy	src/sqlite/sqlite3.c	/^static int indexMightHelpWithOrderBy($/;"	f	file:
index_	src/include/vtable/virtual_table.h	/^  Index *index_ = nullptr;$/;"	m	class:cmudb::VirtualTable
index_	third_party/gmock/gtest/gtest.h	/^    int index_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
index_	third_party/gmock/gtest/gtest.h	/^  int index_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
index_name_	src/include/index/b_plus_tree.h	/^  std::string index_name_;$/;"	m	class:cmudb::BPlusTree
indexable	src/sqlite/sqlite3.c	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo	file:
info	src/sqlite/sqlite3.c	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor	file:
info_arch	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	src/sqlite/sqlite3.c	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo	file:
initAvgEq	src/sqlite/sqlite3.c	/^static void initAvgEq(Index *pIdx){$/;"	f	file:
initMaskSet	src/sqlite/sqlite3.c	127210;"	d	file:
initMemArray	src/sqlite/sqlite3.c	/^static void initMemArray(Mem *p, int N, sqlite3 *db, u16 flags){$/;"	f	file:
initText	src/sqlite/shell.c	/^static void initText(ShellText *p){$/;"	f	file:
inner_matcher_	third_party/gmock/gmock/gmock.h	/^  const InnerMatcher inner_matcher_;$/;"	m	class:testing::internal::ArgsMatcher
inner_matcher_	third_party/gmock/gmock/gmock.h	/^  const M inner_matcher_;$/;"	m	class:testing::internal::ContainsMatcher
inner_matcher_	third_party/gmock/gmock/gmock.h	/^  const M inner_matcher_;$/;"	m	class:testing::internal::EachMatcher
inner_matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<const Element&> inner_matcher_;$/;"	m	class:testing::internal::QuantifierMatcherImpl
inner_matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<const KeyType&> inner_matcher_;$/;"	m	class:testing::internal::KeyMatcherImpl
inner_matcher_	third_party/gmock/gmock/gmock.h	/^  const MonomorphicInnerMatcher inner_matcher_;$/;"	m	class:testing::internal::ArgsMatcherImpl
ino	src/sqlite/sqlite3.c	/^  u64 ino;                   \/* Inode number *\/$/;"	m	struct:unixFileId	file:
inodeList	src/sqlite/sqlite3.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
insertBinaryOperator	src/sqlite/sqlite3.c	/^static void insertBinaryOperator($/;"	f	file:
insertCell	src/sqlite/sqlite3.c	/^static void insertCell($/;"	f	file:
insertElement	src/sqlite/sqlite3.c	/^static void insertElement($/;"	f	file:
instantiations_	third_party/gmock/gtest/gtest.h	/^  InstantiationContainer instantiations_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
instrFunc	src/sqlite/sqlite3.c	/^static void instrFunc($/;"	f	file:
intKey	src/sqlite/sqlite3.c	/^  u8 intKey;           \/* True if table b-trees.  False for index b-trees *\/$/;"	m	struct:MemPage	file:
intKeyLeaf	src/sqlite/sqlite3.c	/^  u8 intKeyLeaf;       \/* True if the leaf of an intKey table *\/$/;"	m	struct:MemPage	file:
intTestFunc	src/sqlite/sqlite3.c	/^static void intTestFunc($/;"	f	file:
integer	src/include/type/value.h	/^    int32_t integer;$/;"	m	union:cmudb::Value::Val
integerValue	src/sqlite/shell.c	/^static sqlite3_int64 integerValue(const char *zArg){$/;"	f	file:
integrityCheckResultRow	src/sqlite/sqlite3.c	/^static int integrityCheckResultRow(Vdbe *v, int regResult){$/;"	f	file:
intercept_mode_	third_party/gmock/gmock-gtest-all.cc	/^  const InterceptMode intercept_mode_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
internal	third_party/gmock/gmock-gtest-all.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	third_party/gmock/gmock/gmock.h	/^namespace internal {$/;"	n	namespace:testing
internal	third_party/gmock/gtest/gtest.h	/^namespace internal {$/;"	n	namespace:testing
internal2	third_party/gmock/gmock-gtest-all.cc	/^namespace internal2 {$/;"	n	namespace:testing	file:
internal2	third_party/gmock/gtest/gtest.h	/^namespace internal2 {$/;"	n	namespace:testing
internal_run_death_test_	third_party/gmock/gmock-gtest-all.cc	/^  std::string internal_run_death_test_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
internal_run_death_test_flag	third_party/gmock/gmock-gtest-all.cc	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;"	f	class:testing::internal::UnitTestImpl
internal_run_death_test_flag_	third_party/gmock/gmock-gtest-all.cc	/^  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;"	m	class:testing::internal::UnitTestImpl	file:
interrupt_handler	src/sqlite/shell.c	/^static void interrupt_handler(int NotUsed){$/;"	f	file:
interruptx	src/include/sqlite/sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
interruptx	src/sqlite/sqlite3.c	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
invalidateAllOverflowCache	src/sqlite/sqlite3.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateIncrblobCursors	src/sqlite/sqlite3.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	src/sqlite/sqlite3.c	59970;"	d	file:
invalidateOverflowCache	src/sqlite/sqlite3.c	59920;"	d	file:
invalidateTempStorage	src/sqlite/sqlite3.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
invokeProfileCallback	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void invokeProfileCallback(sqlite3 *db, Vdbe *p){$/;"	f	file:
invokeValueDestructor	src/sqlite/sqlite3.c	/^static int invokeValueDestructor($/;"	f	file:
iotrace	src/sqlite/shell.c	/^static FILE *iotrace = 0;$/;"	v	file:
iotracePrintf	src/sqlite/shell.c	/^static void SQLITE_CDECL iotracePrintf(const char *zFormat, ...){$/;"	f	file:
isAllZero	src/sqlite/sqlite3.c	/^static int isAllZero(const char *z, int n){$/;"	f	file:
isAnchor	src/sqlite/sqlite3.c	/^  u8 isAnchor;                   \/* This is the PGroup.lru element *\/$/;"	m	struct:PgHdr1	file:
isAttached	src/sqlite/sqlite3.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isBulkLocal	src/sqlite/sqlite3.c	/^  u8 isBulkLocal;                \/* This page from bulk local storage *\/$/;"	m	struct:PgHdr1	file:
isCandidateForInOpt	src/sqlite/sqlite3.c	/^static Select *isCandidateForInOpt(Expr *pX){$/;"	f	file:
isConsonant	src/sqlite/sqlite3.c	/^static int isConsonant(const char *z){$/;"	f	file:
isCorrelated	src/sqlite/sqlite3.c	/^      unsigned isCorrelated :1;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
isCovering	src/sqlite/sqlite3.c	/^  unsigned isCovering:1;   \/* True if this is a covering index *\/$/;"	m	struct:Index	file:
isDate	src/sqlite/sqlite3.c	/^static int isDate($/;"	f	file:
isDeferred	src/sqlite/sqlite3.c	/^  u8 isDeferred;       \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey	file:
isDelim	src/sqlite/sqlite3.c	155300;"	d	file:
isDirty	src/sqlite/sqlite3.c	/^  int isDirty;                \/* True if the node needs to be written to disk *\/$/;"	m	struct:RtreeNode	file:
isDistinctRedundant	src/sqlite/sqlite3.c	/^static int isDistinctRedundant($/;"	f	file:
isEnd	src/index/index_iterator.cpp	/^bool INDEXITERATOR_TYPE::isEnd() $/;"	f	class:cmudb::INDEXITERATOR_TYPE
isEof	src/include/vtable/virtual_table.h	/^  inline bool isEof() {$/;"	f	class:cmudb::Cursor
isEof	src/sqlite/sqlite3.c	/^  int isEof;                      \/* After pStmt has returned SQLITE_DONE *\/$/;"	m	struct:StatCursor	file:
isEof	src/sqlite/sqlite3.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEof	src/sqlite/sqlite3.c	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor	file:
isEphemeral	src/sqlite/sqlite3.c	/^  Bool isEphemeral:1;     \/* True for an ephemeral table *\/$/;"	m	struct:VdbeCursor	file:
isError	src/sqlite/sqlite3.c	/^  char isError;       \/* An overflow has occurred *\/$/;"	m	struct:DateTime	file:
isError	src/sqlite/sqlite3.c	/^  int isError;            \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context	file:
isFatalError	src/sqlite/sqlite3.c	/^static int isFatalError(int rc){$/;"	f	file:
isIndexedBy	src/sqlite/sqlite3.c	/^      unsigned isIndexedBy :1;   \/* True if there is an INDEXED BY clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
isInit	src/sqlite/sqlite3.c	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config	file:
isInit	src/sqlite/sqlite3.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	src/sqlite/sqlite3.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInit	src/sqlite/sqlite3.c	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage	file:
isInit	src/sqlite/sqlite3.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInterrupted	src/sqlite/sqlite3.c	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon11	file:
isLeftJoin	src/sqlite/sqlite3.c	/^  int isLeftJoin;           \/* Add TK_IF_NULL_ROW opcodes on each replacement *\/$/;"	m	struct:SubstContext	file:
isLikeOrGlob	src/sqlite/sqlite3.c	/^static int isLikeOrGlob($/;"	f	file:
isLookaside	src/sqlite/sqlite3.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	src/sqlite/sqlite3.c	25049;"	d	file:
isMallocInit	src/sqlite/sqlite3.c	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isMalloced	src/sqlite/sqlite3.c	16872;"	d	file:
isMatchOfColumn	src/sqlite/sqlite3.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchinfoNeeded	src/sqlite/sqlite3.c	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor	file:
isMultiWrite	src/sqlite/sqlite3.c	/^  u8 isMultiWrite;     \/* True if statement may modify\/insert multiple rows *\/$/;"	m	struct:Parse	file:
isMutexInit	src/sqlite/sqlite3.c	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config	file:
isNot	src/sqlite/sqlite3.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isNumber	src/sqlite/shell.c	/^static int isNumber(const char *z, int *realnum){$/;"	f	file:
isOpen	src/sqlite/sqlite3.c	48152;"	d	file:
isOrdered	src/sqlite/sqlite3.c	/^      i8 isOrdered;          \/* True if satisfies ORDER BY *\/$/;"	m	struct:WhereLoop::__anon32::__anon34	file:
isOrdered	src/sqlite/sqlite3.c	/^  Bool isOrdered:1;       \/* True if the table is not BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor	file:
isOrdered	src/sqlite/sqlite3.c	/^  i8 isOrdered;         \/* No. of ORDER BY terms satisfied. -1 for unknown *\/$/;"	m	struct:WherePath	file:
isPCacheInit	src/sqlite/sqlite3.c	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isPSample	src/sqlite/sqlite3.c	/^  u8 isPSample;                   \/* True if a periodic sample *\/$/;"	m	struct:Stat4Sample	file:
isPinned	src/sqlite/sqlite3.c	/^  u8 isPinned;                   \/* Page in use, not on the LRU list *\/$/;"	m	struct:PgHdr1	file:
isPrefix	src/sqlite/sqlite3.c	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken	file:
isReadonly	src/sqlite/sqlite3.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isRecursive	src/sqlite/sqlite3.c	/^      unsigned isRecursive :1;   \/* True for recursive reference in WITH *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
isRequireSeek	src/sqlite/sqlite3.c	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor	file:
isResized	src/sqlite/sqlite3.c	/^  unsigned isResized:1;    \/* True if resizeIndexObject() has been called *\/$/;"	m	struct:Index	file:
isSelfJoinView	src/sqlite/sqlite3.c	/^static struct SrcList_item *isSelfJoinView($/;"	f	file:
isSetNullAction	src/sqlite/sqlite3.c	/^static int isSetNullAction(Parse *pParse, FKey *pFKey){$/;"	f	file:
isSimpleCount	src/sqlite/sqlite3.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSorter	src/sqlite/sqlite3.c	78816;"	d	file:
isSystemTable	src/sqlite/sqlite3.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isTabFunc	src/sqlite/sqlite3.c	/^      unsigned isTabFunc :1;     \/* True if table-valued-function syntax *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
isTable	src/sqlite/sqlite3.c	/^  u8 isTable;             \/* True for rowid tables.  False for indexes *\/$/;"	m	struct:VdbeCursor	file:
isTnct	src/sqlite/sqlite3.c	/^  u8 isTnct;      \/* True if the DISTINCT keyword is present *\/$/;"	m	struct:DistinctCtx	file:
isTransactionSavepoint	src/sqlite/sqlite3.c	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3	file:
isView	src/sqlite/sqlite3.c	105418;"	d	file:
isView	src/sqlite/sqlite3.c	105419;"	d	file:
isView	src/sqlite/sqlite3.c	105717;"	d	file:
isView	src/sqlite/sqlite3.c	109915;"	d	file:
isView	src/sqlite/sqlite3.c	109916;"	d	file:
isView	src/sqlite/sqlite3.c	110426;"	d	file:
isView	src/sqlite/sqlite3.c	124497;"	d	file:
isView	src/sqlite/sqlite3.c	124498;"	d	file:
isView	src/sqlite/sqlite3.c	125059;"	d	file:
isVowel	src/sqlite/sqlite3.c	/^static int isVowel(const char *z){$/;"	f	file:
isWriteLock	src/sqlite/sqlite3.c	/^  u8 isWriteLock;        \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
is_dirty_	src/include/page/page.h	/^  bool is_dirty_ = false;$/;"	m	class:cmudb::Page
is_disabled_	third_party/gmock/gtest/gtest.h	/^  bool is_disabled_;                \/\/ True iff this test is disabled$/;"	m	class:testing::TestInfo
is_index_scan_	src/include/vtable/virtual_table.h	/^  bool is_index_scan_ = false;$/;"	m	class:cmudb::Cursor
is_inlined	src/include/catalog/column.h	/^  bool is_inlined = false;$/;"	m	class:cmudb::Column
is_nan	third_party/gmock/gtest/gtest.h	/^  bool is_nan() const {$/;"	f	class:testing::internal::FloatingPoint
is_pointer	third_party/gmock/gtest/gtest.h	/^struct is_pointer : public false_type {};$/;"	s	namespace:std::tr1
is_pointer	third_party/gmock/gtest/gtest.h	/^struct is_pointer<T*> : public true_type {};$/;"	s	namespace:std::tr1
is_reference	third_party/gmock/gmock/gmock.h	/^template <typename T> struct is_reference : public false_type {};$/;"	s	namespace:testing::internal
is_reference	third_party/gmock/gmock/gmock.h	/^template <typename T> struct is_reference<T&> : public true_type {};$/;"	s	namespace:testing::internal
is_reportable	third_party/gmock/gtest/gtest.h	/^  bool is_reportable() const {$/;"	f	class:testing::TestInfo
is_valid_	third_party/gmock/gtest/gtest.h	/^  bool is_valid_;$/;"	m	class:std::tr1::RE
isatty	src/sqlite/shell.c	118;"	d	file:
isatty	src/sqlite/shell.c	145;"	d	file:
iter	src/include/index/b_plus_tree.h	/^  INDEXITERATOR_TYPE iter;$/;"	m	class:cmudb::BPlusTree
iter	src/sqlite/sqlite3.c	/^  CInstIter iter;                 \/* Coalesced Instance Iterator *\/$/;"	m	struct:HighlightContext	file:
iterator	third_party/gmock/gtest/gtest.h	/^  typedef Element* iterator;$/;"	t	class:testing::internal::NativeArray
iterator	third_party/gmock/gtest/gtest.h	/^  typedef ParamIterator<T> iterator;$/;"	t	class:testing::internal::ParamGenerator
iterator_	third_party/gmock/gtest/gtest.h	/^    typename ContainerType::const_iterator iterator_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
ix	src/sqlite/sqlite3.c	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet	file:
ix	src/sqlite/sqlite3.c	/^  u16 ix;                   \/* Current index for apPage[iPage] *\/$/;"	m	struct:BtCursor	file:
ixMask	src/sqlite/shell.c	/^  unsigned ixMask;       \/* Insert next input into u.x[nLoaded^ixMask]. *\/$/;"	m	struct:SHA3Context	file:
j	src/sqlite/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
jfd	src/sqlite/sqlite3.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jnFlags	src/sqlite/sqlite3.c	/^  u8 jnFlags;            \/* JNODE flags *\/$/;"	m	struct:JsonNode	file:
join_new	third_party/gmock/gtest/gtest.h	/^  void join_new() {$/;"	f	class:testing::internal::linked_ptr_internal
jointype	src/sqlite/sqlite3.c	/^      u8 jointype;      \/* Type of join between this table and the previous *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
journalHdr	src/sqlite/sqlite3.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdrOffset	src/sqlite/sqlite3.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalMode	src/sqlite/sqlite3.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalOff	src/sqlite/sqlite3.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalSizeLimit	src/sqlite/sqlite3.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
jrnlBufferSize	src/sqlite/sqlite3.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jrnlBufferSize	src/sqlite/sqlite3.c	48548;"	d	file:
jsonAppendChar	src/sqlite/sqlite3.c	/^static void jsonAppendChar(JsonString *p, char c){$/;"	f	file:
jsonAppendRaw	src/sqlite/sqlite3.c	/^static void jsonAppendRaw(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendSeparator	src/sqlite/sqlite3.c	/^static void jsonAppendSeparator(JsonString *p){$/;"	f	file:
jsonAppendString	src/sqlite/sqlite3.c	/^static void jsonAppendString(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendValue	src/sqlite/sqlite3.c	/^static void jsonAppendValue($/;"	f	file:
jsonArrayFinal	src/sqlite/sqlite3.c	/^static void jsonArrayFinal(sqlite3_context *ctx){$/;"	f	file:
jsonArrayFunc	src/sqlite/sqlite3.c	/^static void jsonArrayFunc($/;"	f	file:
jsonArrayLengthFunc	src/sqlite/sqlite3.c	/^static void jsonArrayLengthFunc($/;"	f	file:
jsonArrayStep	src/sqlite/sqlite3.c	/^static void jsonArrayStep($/;"	f	file:
jsonEachBestIndex	src/sqlite/sqlite3.c	/^static int jsonEachBestIndex($/;"	f	file:
jsonEachClose	src/sqlite/sqlite3.c	/^static int jsonEachClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachColumn	src/sqlite/sqlite3.c	/^static int jsonEachColumn($/;"	f	file:
jsonEachComputePath	src/sqlite/sqlite3.c	/^static void jsonEachComputePath($/;"	f	file:
jsonEachConnect	src/sqlite/sqlite3.c	/^static int jsonEachConnect($/;"	f	file:
jsonEachCursorReset	src/sqlite/sqlite3.c	/^static void jsonEachCursorReset(JsonEachCursor *p){$/;"	f	file:
jsonEachDisconnect	src/sqlite/sqlite3.c	/^static int jsonEachDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
jsonEachEof	src/sqlite/sqlite3.c	/^static int jsonEachEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachFilter	src/sqlite/sqlite3.c	/^static int jsonEachFilter($/;"	f	file:
jsonEachModule	src/sqlite/sqlite3.c	/^static sqlite3_module jsonEachModule = {$/;"	v	file:
jsonEachNext	src/sqlite/sqlite3.c	/^static int jsonEachNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachOpenEach	src/sqlite/sqlite3.c	/^static int jsonEachOpenEach(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenTree	src/sqlite/sqlite3.c	/^static int jsonEachOpenTree(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachRowid	src/sqlite/sqlite3.c	/^static int jsonEachRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
jsonExtractFunc	src/sqlite/sqlite3.c	/^static void jsonExtractFunc($/;"	f	file:
jsonGrow	src/sqlite/sqlite3.c	/^static int jsonGrow(JsonString *p, u32 N){$/;"	f	file:
jsonInit	src/sqlite/sqlite3.c	/^static void jsonInit(JsonString *p, sqlite3_context *pCtx){$/;"	f	file:
jsonIs4Hex	src/sqlite/sqlite3.c	/^static int jsonIs4Hex(const char *z){$/;"	f	file:
jsonIsSpace	src/sqlite/sqlite3.c	/^static const char jsonIsSpace[] = {$/;"	v	file:
jsonLabelCompare	src/sqlite/sqlite3.c	/^static int jsonLabelCompare(JsonNode *pNode, const char *zKey, u32 nKey){$/;"	f	file:
jsonLookup	src/sqlite/sqlite3.c	/^static JsonNode *jsonLookup($/;"	f	file:
jsonLookupAppend	src/sqlite/sqlite3.c	/^static JsonNode *jsonLookupAppend($/;"	f	file:
jsonLookupStep	src/sqlite/sqlite3.c	/^static JsonNode *jsonLookupStep($/;"	f	file:
jsonMergePatch	src/sqlite/sqlite3.c	/^static JsonNode *jsonMergePatch($/;"	f	file:
jsonNodeSize	src/sqlite/sqlite3.c	/^static u32 jsonNodeSize(JsonNode *pNode){$/;"	f	file:
jsonObjectFinal	src/sqlite/sqlite3.c	/^static void jsonObjectFinal(sqlite3_context *ctx){$/;"	f	file:
jsonObjectFunc	src/sqlite/sqlite3.c	/^static void jsonObjectFunc($/;"	f	file:
jsonObjectStep	src/sqlite/sqlite3.c	/^static void jsonObjectStep($/;"	f	file:
jsonOom	src/sqlite/sqlite3.c	/^static void jsonOom(JsonString *p){$/;"	f	file:
jsonParse	src/sqlite/sqlite3.c	/^static int jsonParse($/;"	f	file:
jsonParseAddNode	src/sqlite/sqlite3.c	/^static int jsonParseAddNode($/;"	f	file:
jsonParseAddNodeExpand	src/sqlite/sqlite3.c	/^static JSON_NOINLINE int jsonParseAddNodeExpand($/;"	f	file:
jsonParseCached	src/sqlite/sqlite3.c	/^static JsonParse *jsonParseCached($/;"	f	file:
jsonParseFillInParentage	src/sqlite/sqlite3.c	/^static void jsonParseFillInParentage(JsonParse *pParse, u32 i, u32 iParent){$/;"	f	file:
jsonParseFindParents	src/sqlite/sqlite3.c	/^static int jsonParseFindParents(JsonParse *pParse){$/;"	f	file:
jsonParseFree	src/sqlite/sqlite3.c	/^static void jsonParseFree(JsonParse *pParse){$/;"	f	file:
jsonParseFunc	src/sqlite/sqlite3.c	/^static void jsonParseFunc($/;"	f	file:
jsonParseReset	src/sqlite/sqlite3.c	/^static void jsonParseReset(JsonParse *pParse){$/;"	f	file:
jsonParseValue	src/sqlite/sqlite3.c	/^static int jsonParseValue(JsonParse *pParse, u32 i){$/;"	f	file:
jsonPatchFunc	src/sqlite/sqlite3.c	/^static void jsonPatchFunc($/;"	f	file:
jsonPathSyntaxError	src/sqlite/sqlite3.c	/^static char *jsonPathSyntaxError(const char *zErr){$/;"	f	file:
jsonPrintf	src/sqlite/sqlite3.c	/^static void jsonPrintf(int N, JsonString *p, const char *zFormat, ...){$/;"	f	file:
jsonQuoteFunc	src/sqlite/sqlite3.c	/^static void jsonQuoteFunc($/;"	f	file:
jsonRemoveAllNulls	src/sqlite/sqlite3.c	/^static void jsonRemoveAllNulls(JsonNode *pNode){$/;"	f	file:
jsonRemoveFunc	src/sqlite/sqlite3.c	/^static void jsonRemoveFunc($/;"	f	file:
jsonRenderNode	src/sqlite/sqlite3.c	/^static void jsonRenderNode($/;"	f	file:
jsonReplaceFunc	src/sqlite/sqlite3.c	/^static void jsonReplaceFunc($/;"	f	file:
jsonReset	src/sqlite/sqlite3.c	/^static void jsonReset(JsonString *p){$/;"	f	file:
jsonResult	src/sqlite/sqlite3.c	/^static void jsonResult(JsonString *p){$/;"	f	file:
jsonReturn	src/sqlite/sqlite3.c	/^static void jsonReturn($/;"	f	file:
jsonReturnJson	src/sqlite/sqlite3.c	/^static void jsonReturnJson($/;"	f	file:
jsonSetFunc	src/sqlite/sqlite3.c	/^static void jsonSetFunc($/;"	f	file:
jsonTest1Func	src/sqlite/sqlite3.c	/^static void jsonTest1Func($/;"	f	file:
jsonTreeModule	src/sqlite/sqlite3.c	/^static sqlite3_module jsonTreeModule = {$/;"	v	file:
jsonType	src/sqlite/sqlite3.c	/^static const char * const jsonType[] = {$/;"	v	file:
jsonTypeFunc	src/sqlite/sqlite3.c	/^static void jsonTypeFunc($/;"	f	file:
jsonValidFunc	src/sqlite/sqlite3.c	/^static void jsonValidFunc($/;"	f	file:
jsonWrongNumArgs	src/sqlite/sqlite3.c	/^static void jsonWrongNumArgs($/;"	f	file:
jsonZero	src/sqlite/sqlite3.c	/^static void jsonZero(JsonString *p){$/;"	f	file:
juliandayFunc	src/sqlite/sqlite3.c	/^static void juliandayFunc($/;"	f	file:
k	src/sqlite/sqlite3.c	/^  int k;                     \/* Resume scanning at this->pWC->a[this->k] *\/$/;"	m	struct:WhereScan	file:
kAfter	third_party/gmock/gmock/gmock.h	/^    kAfter,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kAllow	third_party/gmock/gmock/gmock.h	/^  kAllow,$/;"	e	enum:testing::internal::CallReaction
kAlsoRunDisabledTestsFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparator	third_party/gmock/gmock-gtest-all.cc	/^const char kAlternatePathSeparator = '\/';$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparatorString	third_party/gmock/gmock-gtest-all.cc	/^const char kAlternatePathSeparatorString[] = "\/";$/;"	m	namespace:testing::internal	file:
kAsIs	third_party/gmock/gmock-gtest-all.cc	/^  kAsIs,$/;"	e	enum:testing::internal::CharFormat	file:
kBitCount	third_party/gmock/gtest/gtest.h	/^  static const size_t kBitCount = 8*sizeof(RawType);$/;"	m	class:testing::internal::FloatingPoint
kBool	third_party/gmock/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kBreakOnFailureFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kBreakOnFailureFlag[] = "break_on_failure";$/;"	m	namespace:testing::internal	file:
kCatchExceptionsFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kCatchExceptionsFlag[] = "catch_exceptions";$/;"	m	namespace:testing::internal	file:
kColorEncodedHelpMessage	third_party/gmock/gmock-gtest-all.cc	/^static const char kColorEncodedHelpMessage[] =$/;"	m	namespace:testing::internal	file:
kColorFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kColorFlag[] = "color";$/;"	m	namespace:testing::internal	file:
kConvertibleToInteger	third_party/gmock/gtest/gtest.h	/^  kConvertibleToInteger,  \/\/ a type implicitly convertible to BiggestInt$/;"	e	enum:testing::internal2::TypeKind
kCopy	third_party/gmock/gtest/gtest.h	/^  kCopy        \/\/ The NativeArray makes a copy of the native array and$/;"	e	enum:testing::internal::RelationToSource
kCurrentDirectoryString	third_party/gmock/gmock-gtest-all.cc	/^const char kCurrentDirectoryString[] = ".\\\\";$/;"	m	namespace:testing::internal	file:
kCurrentDirectoryString	third_party/gmock/gmock-gtest-all.cc	/^const char kCurrentDirectoryString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kDeathTestCaseFilter	third_party/gmock/gmock-gtest-all.cc	/^static const char kDeathTestCaseFilter[] = "*DeathTest:*DeathTest\/*";$/;"	m	namespace:testing	file:
kDeathTestInternalError	third_party/gmock/gmock-gtest-all.cc	/^static const char kDeathTestInternalError = 'I';$/;"	m	namespace:testing::internal	file:
kDeathTestLived	third_party/gmock/gmock-gtest-all.cc	/^static const char kDeathTestLived = 'L';$/;"	m	namespace:testing::internal	file:
kDeathTestReturned	third_party/gmock/gmock-gtest-all.cc	/^static const char kDeathTestReturned = 'R';$/;"	m	namespace:testing::internal	file:
kDeathTestStyleFlag	third_party/gmock/gtest/gtest.h	/^const char kDeathTestStyleFlag[] = "death_test_style";$/;"	m	namespace:testing::internal
kDeathTestThrew	third_party/gmock/gmock-gtest-all.cc	/^static const char kDeathTestThrew = 'T';$/;"	m	namespace:testing::internal	file:
kDeathTestUseFork	third_party/gmock/gtest/gtest.h	/^const char kDeathTestUseFork[] = "death_test_use_fork";$/;"	m	namespace:testing::internal
kDefault	third_party/gmock/gmock/gmock.h	/^  kDefault = kWarn  \/\/ By default, warn about uninteresting calls.$/;"	e	enum:testing::internal::CallReaction
kDefaultDeathTestStyle	third_party/gmock/gmock-gtest-all.cc	/^static const char kDefaultDeathTestStyle[] = "fast";$/;"	m	namespace:testing	file:
kDefaultOutputFile	third_party/gmock/gmock-gtest-all.cc	/^static const char kDefaultOutputFile[] = "test_detail.xml";$/;"	m	namespace:testing	file:
kDisableTestFilter	third_party/gmock/gmock-gtest-all.cc	/^static const char kDisableTestFilter[] = "DISABLED_*:*\/DISABLED_*";$/;"	m	namespace:testing	file:
kElidedFramesMarker	third_party/gmock/gmock-gtest-all.cc	/^  static const char* const kElidedFramesMarker;$/;"	m	class:testing::internal::OsStackTraceGetter	file:
kElidedFramesMarker	third_party/gmock/gmock-gtest-all.cc	/^OsStackTraceGetter::kElidedFramesMarker =$/;"	m	class:testing::internal::OsStackTraceGetter	file:
kErrorVerbosity	third_party/gmock/gmock/gmock.h	/^const char kErrorVerbosity[] = "error";$/;"	m	namespace:testing::internal
kExponentBitCount	third_party/gmock/gtest/gtest.h	/^  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;$/;"	m	class:testing::internal::FloatingPoint
kExponentBitMask	third_party/gmock/gtest/gtest.h	/^  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);$/;"	m	class:testing::internal::FloatingPoint
kFail	third_party/gmock/gmock/gmock.h	/^  kFail,$/;"	e	enum:testing::internal::CallReaction
kFatalFailure	third_party/gmock/gtest/gtest.h	/^    kFatalFailure      \/\/ Failed and the test should be terminated.$/;"	e	enum:testing::TestPartResult::Type
kFilterFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kFilterFlag[] = "filter";$/;"	m	namespace:testing::internal	file:
kFloatingPoint	third_party/gmock/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kFractionBitCount	third_party/gmock/gtest/gtest.h	/^  static const size_t kFractionBitCount =$/;"	m	class:testing::internal::FloatingPoint
kFractionBitMask	third_party/gmock/gtest/gtest.h	/^  static const Bits kFractionBitMask =$/;"	m	class:testing::internal::FloatingPoint
kHexEscape	third_party/gmock/gmock-gtest-all.cc	/^  kHexEscape,$/;"	e	enum:testing::internal::CharFormat	file:
kInSequence	third_party/gmock/gmock/gmock.h	/^    kInSequence,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kInfo	third_party/gmock/gmock/gmock.h	/^  kInfo = 0,$/;"	e	enum:testing::internal::LogSeverity
kInfoVerbosity	third_party/gmock/gmock/gmock.h	/^const char kInfoVerbosity[] = "info";$/;"	m	namespace:testing::internal
kInteger	third_party/gmock/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kInternalRunDeathTestFlag	third_party/gmock/gtest/gtest.h	/^const char kInternalRunDeathTestFlag[] = "internal_run_death_test";$/;"	m	namespace:testing::internal
kInvalidFileAttributes	third_party/gmock/gmock-gtest-all.cc	/^const DWORD kInvalidFileAttributes = 0xffffffff;$/;"	m	namespace:testing::internal	file:
kListTestsFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kListTestsFlag[] = "list_tests";$/;"	m	namespace:testing::internal	file:
kMaxBiggestInt	third_party/gmock/gtest/gtest.h	/^const BiggestInt kMaxBiggestInt =$/;"	m	namespace:std::tr1
kMaxCodePoint1	third_party/gmock/gmock-gtest-all.cc	/^const UInt32 kMaxCodePoint1 = (static_cast<UInt32>(1) <<  7) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint2	third_party/gmock/gmock-gtest-all.cc	/^const UInt32 kMaxCodePoint2 = (static_cast<UInt32>(1) << (5 + 6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint3	third_party/gmock/gmock-gtest-all.cc	/^const UInt32 kMaxCodePoint3 = (static_cast<UInt32>(1) << (4 + 2*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint4	third_party/gmock/gmock-gtest-all.cc	/^const UInt32 kMaxCodePoint4 = (static_cast<UInt32>(1) << (3 + 3*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxRandomSeed	third_party/gmock/gmock-gtest-all.cc	/^const int kMaxRandomSeed = 99999;$/;"	m	namespace:testing::internal	file:
kMaxRange	third_party/gmock/gtest/gtest.h	/^  static const UInt32 kMaxRange = 1u << 31;$/;"	m	class:testing::internal::Random
kMaxStackTraceDepth	third_party/gmock/gtest/gtest.h	/^const int kMaxStackTraceDepth = 100;$/;"	m	namespace:testing
kMaxUlps	third_party/gmock/gtest/gtest.h	/^  static const size_t kMaxUlps = 4;$/;"	m	class:testing::internal::FloatingPoint
kNonFatalFailure	third_party/gmock/gtest/gtest.h	/^    kNonFatalFailure,  \/\/ Failed but the test can continue.$/;"	e	enum:testing::TestPartResult::Type
kNone	third_party/gmock/gmock/gmock.h	/^    kNone,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kNone	third_party/gmock/gmock/gmock.h	/^    kNone,$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kOther	third_party/gmock/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kOtherType	third_party/gmock/gtest/gtest.h	/^  kOtherType              \/\/ anything else$/;"	e	enum:testing::internal2::TypeKind
kOutputFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kOutputFlag[] = "output";$/;"	m	namespace:testing::internal	file:
kPathSeparator	third_party/gmock/gmock-gtest-all.cc	/^const char kPathSeparator = '\\\\';$/;"	m	namespace:testing::internal	file:
kPathSeparatorString	third_party/gmock/gmock-gtest-all.cc	/^const char kPathSeparatorString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kPrintTimeFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kPrintTimeFlag[] = "print_time";$/;"	m	namespace:testing::internal	file:
kProtobuf	third_party/gmock/gtest/gtest.h	/^  kProtobuf,              \/\/ a protobuf type$/;"	e	enum:testing::internal2::TypeKind
kProtobufOneLinerMaxLength	third_party/gmock/gtest/gtest.h	/^const size_t kProtobufOneLinerMaxLength = 50;$/;"	m	namespace:testing::internal2
kRandomSeedFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kRandomSeedFlag[] = "random_seed";$/;"	m	namespace:testing::internal	file:
kReference	third_party/gmock/gtest/gtest.h	/^  kReference,  \/\/ The NativeArray references the native array.$/;"	e	enum:testing::internal::RelationToSource
kRepeatFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kRepeatFlag[] = "repeat";$/;"	m	namespace:testing::internal	file:
kReservedTestCaseAttributes	third_party/gmock/gmock-gtest-all.cc	/^static const char* const kReservedTestCaseAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuiteAttributes	third_party/gmock/gmock-gtest-all.cc	/^static const char* const kReservedTestSuiteAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuitesAttributes	third_party/gmock/gmock-gtest-all.cc	/^static const char* const kReservedTestSuitesAttributes[] = {$/;"	m	namespace:testing	file:
kRetiresOnSaturation	third_party/gmock/gmock/gmock.h	/^    kRetiresOnSaturation$/;"	e	enum:testing::internal::ExpectationBase::Clause
kShuffleFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kShuffleFlag[] = "shuffle";$/;"	m	namespace:testing::internal	file:
kSignBitMask	third_party/gmock/gtest/gtest.h	/^  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);$/;"	m	class:testing::internal::FloatingPoint
kSpecialEscape	third_party/gmock/gmock-gtest-all.cc	/^  kSpecialEscape$/;"	e	enum:testing::internal::CharFormat	file:
kStackTraceDepthFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kStackTraceDepthFlag[] = "stack_trace_depth";$/;"	m	namespace:testing::internal	file:
kStackTraceMarker	third_party/gmock/gmock-gtest-all.cc	/^const char kStackTraceMarker[] = "\\nStack trace:\\n";$/;"	m	namespace:testing::internal	file:
kStdErrFileno	third_party/gmock/gmock-gtest-all.cc	/^const int kStdErrFileno = 2;$/;"	m	namespace:testing::internal	file:
kStdOutFileno	third_party/gmock/gmock-gtest-all.cc	/^const int kStdOutFileno = 1;$/;"	m	namespace:testing::internal	file:
kStreamResultToFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kStreamResultToFlag[] = "stream_result_to";$/;"	m	namespace:testing::internal	file:
kSuccess	third_party/gmock/gtest/gtest.h	/^    kSuccess,          \/\/ Succeeded.$/;"	e	enum:testing::TestPartResult::Type
kTestShardIndex	third_party/gmock/gmock-gtest-all.cc	/^static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";$/;"	m	namespace:testing	file:
kTestShardStatusFile	third_party/gmock/gmock-gtest-all.cc	/^static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";$/;"	m	namespace:testing	file:
kTestTotalShards	third_party/gmock/gmock-gtest-all.cc	/^static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";$/;"	m	namespace:testing	file:
kTestTypeIdInGoogleTest	third_party/gmock/gmock-gtest-all.cc	/^extern const TypeId kTestTypeIdInGoogleTest = GetTestTypeId();$/;"	m	namespace:testing::internal	file:
kThrowOnFailureFlag	third_party/gmock/gmock-gtest-all.cc	/^const char kThrowOnFailureFlag[] = "throw_on_failure";$/;"	m	namespace:testing::internal	file:
kTimes	third_party/gmock/gmock/gmock.h	/^    kTimes,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kTypeParamLabel	third_party/gmock/gmock-gtest-all.cc	/^static const char kTypeParamLabel[] = "TypeParam";$/;"	m	namespace:testing::internal	file:
kTypes	src/include/type/type.h	/^  static Type *kTypes[14];$/;"	m	class:cmudb::Type
kTypes	src/type/type.cpp	/^Type *Type::kTypes[] = {$/;"	m	class:cmudb::Type	file:
kUniversalFilter	third_party/gmock/gmock-gtest-all.cc	/^static const char kUniversalFilter[] = "*";$/;"	m	namespace:testing	file:
kUnknownFile	third_party/gmock/gmock-gtest-all.cc	/^const char kUnknownFile[] = "unknown file";$/;"	m	namespace:testing::internal	file:
kUnused	third_party/gmock/gmock-gtest-all.cc	/^  static const size_t kUnused = static_cast<size_t>(-1);$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
kUnused	third_party/gmock/gmock-gtest-all.cc	/^const size_t MaxBipartiteMatchState::kUnused;$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
kValueParamLabel	third_party/gmock/gmock-gtest-all.cc	/^static const char kValueParamLabel[] = "GetParam()";$/;"	m	namespace:testing::internal	file:
kWarn	third_party/gmock/gmock/gmock.h	/^  kWarn,$/;"	e	enum:testing::internal::CallReaction
kWarning	third_party/gmock/gmock/gmock.h	/^  kWarning = 1$/;"	e	enum:testing::internal::LogSeverity
kWarningVerbosity	third_party/gmock/gmock/gmock.h	/^const char kWarningVerbosity[] = "warning";$/;"	m	namespace:testing::internal
kWillByDefault	third_party/gmock/gmock/gmock.h	/^    kWillByDefault$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kWillOnce	third_party/gmock/gmock/gmock.h	/^    kWillOnce,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWillRepeatedly	third_party/gmock/gmock/gmock.h	/^    kWillRepeatedly,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWith	third_party/gmock/gmock/gmock.h	/^    kWith,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWith	third_party/gmock/gmock/gmock.h	/^    kWith,$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
key	src/sqlite/sqlite3.c	/^  Blob key;                       \/* Last key written to the current block *\/$/;"	m	struct:NodeWriter	file:
key	third_party/gmock/gtest/gtest.h	/^  const char* key() const {$/;"	f	class:testing::TestProperty
keyClass	src/sqlite/sqlite3.c	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash	file:
keyConf	src/sqlite/sqlite3.c	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table	file:
keyInfoFromExprList	src/sqlite/sqlite3.c	/^static KeyInfo *keyInfoFromExprList($/;"	f	file:
key_	third_party/gmock/gmock-gtest-all.cc	/^  std::string key_;$/;"	m	class:testing::internal::TestPropertyKeyIs	file:
key_	third_party/gmock/gtest/gtest.h	/^  const pthread_key_t key_;$/;"	m	class:std::tr1::ThreadLocal
key_	third_party/gmock/gtest/gtest.h	/^  std::string key_;$/;"	m	class:testing::TestProperty
key_attrs_	src/include/index/index.h	/^  const std::vector<int> key_attrs_;$/;"	m	class:cmudb::IndexMetadata
key_schema_	src/include/index/generic_key.h	/^  Schema *key_schema_;$/;"	m	class:cmudb::GenericComparator
key_schema_	src/include/index/index.h	/^  Schema *key_schema_;$/;"	m	class:cmudb::IndexMetadata
keyinfo	src/sqlite/sqlite3.c	/^  KeyInfo keyinfo;$/;"	m	struct:PreUpdate	file:
keywordCode	src/sqlite/sqlite3.c	/^static int keywordCode(const char *z, int n, int *pType){$/;"	f	file:
kv_pairs	src/include/hash/extendible_hash.h	/^    std::vector<std::pair<K, V>> kv_pairs; \/\/Key Value pairs$/;"	m	struct:cmudb::ExtendibleHash::bucket
labelBkOut	src/sqlite/sqlite3.c	/^  int labelBkOut;       \/* Start label for the block-output subroutine *\/$/;"	m	struct:SortCtx	file:
labelDone	src/sqlite/sqlite3.c	/^  int labelDone;        \/* Jump here when done, ex: LIMIT reached *\/$/;"	m	struct:SortCtx	file:
langidFromSelect	src/sqlite/sqlite3.c	/^static int langidFromSelect(Fts3Table *p, sqlite3_stmt *pSelect){$/;"	f	file:
lastErrno	src/sqlite/sqlite3.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	src/sqlite/sqlite3.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastErrno	src/sqlite/sqlite3.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastRowid	src/sqlite/sqlite3.c	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3	file:
lastRowid	src/sqlite/sqlite3.c	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame	file:
last_clause_	third_party/gmock/gmock/gmock.h	/^  Clause last_clause_;$/;"	m	class:testing::internal::ExpectationBase
last_clause_	third_party/gmock/gmock/gmock.h	/^  Clause last_clause_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase
last_death_test_case_	third_party/gmock/gmock-gtest-all.cc	/^  int last_death_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	file:
last_death_test_message_	third_party/gmock/gmock-gtest-all.cc	/^std::string DeathTest::last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	file:
last_death_test_message_	third_party/gmock/gtest/gtest.h	/^  static std::string last_death_test_message_;$/;"	m	class:testing::internal::DeathTest
last_expectation_	third_party/gmock/gmock/gmock.h	/^  internal::linked_ptr<Expectation> last_expectation_;$/;"	m	class:testing::Sequence
last_index	src/include/index/index_iterator.h	/^  int last_index;$/;"	m	class:cmudb::IndexIterator
last_insert_rowid	src/include/sqlite/sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
last_insert_rowid	src/sqlite/sqlite3.c	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
last_insert_rowid	src/sqlite/sqlite3.c	/^static void last_insert_rowid($/;"	f	file:
latch_	src/include/buffer/buffer_pool_manager.h	/^  std::mutex latch_;$/;"	m	class:cmudb::BufferPoolManager
leaf	src/sqlite/sqlite3.c	/^  u8 leaf;             \/* True if a leaf page *\/$/;"	m	struct:MemPage	file:
leakable	third_party/gmock/gmock-gtest-all.cc	/^  bool leakable;  \/\/ true iff it's OK to leak the object.$/;"	m	struct:testing::__anon8::MockObjectState	file:
leaveMutex	src/sqlite/sqlite3.c	/^static void leaveMutex(void){$/;"	f	file:
leftColumn	src/sqlite/sqlite3.c	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon35	file:
leftCursor	src/sqlite/sqlite3.c	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm	file:
left_	third_party/gmock/gmock-gtest-all.cc	/^  ::std::vector<size_t> left_;$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
len	src/include/type/value.h	/^    uint32_t len;$/;"	m	union:cmudb::Value::__anon9
length	src/include/catalog/schema.h	/^  int32_t length;$/;"	m	class:cmudb::Schema
length	src/sqlite/sqlite3.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
lengthFunc	src/sqlite/sqlite3.c	/^static void lengthFunc($/;"	f	file:
lhs	src/sqlite/sqlite3.c	/^  YYCODETYPE lhs;       \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon38	file:
lhs	src/sqlite/sqlite3.c	/^  fts5YYCODETYPE lhs;       \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon42	file:
libversion	src/include/sqlite/sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines
libversion	src/sqlite/sqlite3.c	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion_number	src/include/sqlite/sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines
libversion_number	src/sqlite/sqlite3.c	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	file:
likeFunc	src/sqlite/sqlite3.c	/^static void likeFunc($/;"	f	file:
likeInfoAlt	src/sqlite/sqlite3.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	src/sqlite/sqlite3.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likely	src/sqlite/sqlite3.c	12202;"	d	file:
limit	src/include/sqlite/sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines
limit	src/sqlite/sqlite3.c	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
line	third_party/gmock/gmock-gtest-all.cc	/^  int line;$/;"	m	struct:testing::internal::TraceInfo	file:
line	third_party/gmock/gmock/gmock.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::ExpectationBase
line	third_party/gmock/gmock/gmock.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::UntypedOnCallSpecBase
line	third_party/gmock/gtest/gtest.h	/^    int const line;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
line	third_party/gmock/gtest/gtest.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
line_	third_party/gmock/gmock-gtest-all.cc	/^  const int line_;$/;"	m	class:testing::internal::ExecDeathTest	file:
line_	third_party/gmock/gmock-gtest-all.cc	/^  const int line_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
line_	third_party/gmock/gmock/gmock.h	/^  int line_;                  \/\/ The line number of the expectation.$/;"	m	class:testing::internal::ExpectationBase
line_	third_party/gmock/gmock/gmock.h	/^  int line_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase
line_	third_party/gmock/gtest/gtest.h	/^  int line_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
line_contains_semicolon	src/sqlite/shell.c	/^static int line_contains_semicolon(const char *z, int N){$/;"	f	file:
line_is_command_terminator	src/sqlite/shell.c	/^static int line_is_command_terminator(const char *zLine){$/;"	f	file:
line_is_complete	src/sqlite/shell.c	/^static int line_is_complete(char *zSql, int nSql){$/;"	f	file:
line_number	third_party/gmock/gtest/gtest.h	/^  int line_number() const { return line_number_; }$/;"	f	class:testing::TestPartResult
line_number_	third_party/gmock/gtest/gtest.h	/^  int line_number_;$/;"	m	class:testing::TestPartResult
link_	third_party/gmock/gtest/gtest.h	/^  linked_ptr_internal link_;$/;"	m	class:testing::internal::linked_ptr
linked_ptr	third_party/gmock/gtest/gtest.h	/^  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	third_party/gmock/gtest/gtest.h	/^  linked_ptr(linked_ptr const& ptr) {  \/\/ NOLINT$/;"	f	class:testing::internal::linked_ptr
linked_ptr	third_party/gmock/gtest/gtest.h	/^  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	third_party/gmock/gtest/gtest.h	/^class linked_ptr {$/;"	c	namespace:testing::internal
linked_ptr_internal	third_party/gmock/gtest/gtest.h	/^class linked_ptr_internal {$/;"	c	namespace:testing::internal
lintDotCommand	src/sqlite/shell.c	/^static int lintDotCommand($/;"	f	file:
lintFkeyIndexes	src/sqlite/shell.c	/^static int lintFkeyIndexes($/;"	f	file:
list	src/sqlite/sqlite3.c	/^    } list;$/;"	m	union:Mem3Block::__anon24	typeref:struct:Mem3Block::__anon24::__anon26	file:
list	src/sqlite/sqlite3.c	/^  SorterList list;                \/* List for thread to write to a PMA *\/$/;"	m	struct:SortSubtask	file:
list	src/sqlite/sqlite3.c	/^  SorterList list;                \/* List of in-memory records *\/$/;"	m	struct:VdbeSorter	file:
list_mutex	src/include/buffer/lru_replacer.h	/^  std::mutex list_mutex;$/;"	m	class:cmudb::LRUReplacer
list_tests_	third_party/gmock/gmock-gtest-all.cc	/^  bool list_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
listeners	third_party/gmock/gmock-gtest-all.cc	/^  TestEventListeners* listeners() { return &listeners_; }$/;"	f	class:testing::internal::UnitTestImpl
listeners	third_party/gmock/gmock-gtest-all.cc	/^TestEventListeners& UnitTest::listeners() {$/;"	f	class:testing::UnitTest
listeners_	third_party/gmock/gmock-gtest-all.cc	/^  TestEventListeners listeners_;$/;"	m	class:testing::internal::UnitTestImpl	file:
listeners_	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<TestEventListener*> listeners_;$/;"	m	class:testing::internal::TestEventRepeater	file:
loadAnalysis	src/sqlite/sqlite3.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadExt	src/sqlite/sqlite3.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
loadStat4	src/sqlite/sqlite3.c	/^static int loadStat4(sqlite3 *db, const char *zDb){$/;"	f	file:
loadStatTbl	src/sqlite/sqlite3.c	/^static int loadStatTbl($/;"	f	file:
load_extension	src/include/sqlite/sqlite3ext.h	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines
load_extension	src/sqlite/sqlite3.c	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines	file:
local	src/sqlite/sqlite3.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
local_depth	src/include/hash/extendible_hash.h	/^    uint64_t local_depth; \/\/Local depth of the each bucket$/;"	m	struct:cmudb::ExtendibleHash::bucket
local_getline	src/sqlite/shell.c	/^static char *local_getline(char *zLine, FILE *in){$/;"	f	file:
local_ioerr	src/sqlite/sqlite3.c	/^static void local_ioerr(){$/;"	f	file:
localtime	src/sqlite/sqlite3.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtimeOffset	src/sqlite/sqlite3.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
lock	src/sqlite/sqlite3.c	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree	file:
lockBtree	src/sqlite/sqlite3.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtreeMutex	src/sqlite/sqlite3.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockError	src/sqlite/sqlite3.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockMask	src/sqlite/sqlite3.c	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe	file:
lockProxy	src/sqlite/sqlite3.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	src/sqlite/sqlite3.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockTrace	src/sqlite/sqlite3.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
lock_manager_	src/include/concurrency/transaction_manager.h	/^  LockManager *lock_manager_;$/;"	m	class:cmudb::TransactionManager
lock_manager_	src/include/table/table_heap.h	/^  LockManager *lock_manager_;$/;"	m	class:cmudb::TableHeap
lock_manager_	src/include/vtable/virtual_table.h	/^  LockManager *lock_manager_;$/;"	m	struct:cmudb::GlobalParameters
locked	src/sqlite/sqlite3.c	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree	file:
lockingContext	src/sqlite/sqlite3.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
locktype	src/sqlite/sqlite3.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
log	src/include/sqlite/sqlite3ext.h	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines
log	src/sqlite/sqlite3.c	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
logBadConnection	src/sqlite/sqlite3.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logical_idx	src/include/hash/extendible_hash.h	/^    uint64_t logical_idx; \/\/Logical index used for reverse lookup$/;"	m	struct:cmudb::ExtendibleHash::bucket
lookaside	src/sqlite/sqlite3.c	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3	file:
lookupName	src/sqlite/sqlite3.c	/^static int lookupName($/;"	f	file:
lowerFunc	src/sqlite/sqlite3.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lru	src/include/buffer/lru_replacer.h	/^  std::list<T> lru; \/\/Maintains the LRU$/;"	m	class:cmudb::LRUReplacer
lru	src/sqlite/sqlite3.c	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache	file:
lru	src/sqlite/sqlite3.c	/^  PgHdr1 lru;                    \/* The beginning and end of the LRU list *\/$/;"	m	struct:PGroup	file:
lseek	src/sqlite/sqlite3.c	30632;"	d	file:
m	src/sqlite/sqlite3.c	/^  int h, m;           \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	src/sqlite/sqlite3.c	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config	file:
mLock	src/sqlite/sqlite3.c	/^  u32 mLock;$/;"	m	struct:sqlite3rbu	file:
mPragFlg	src/sqlite/sqlite3.c	/^  u8 mPragFlg;             \/* Zero or more PragFlg_XXX values *\/$/;"	m	struct:PragmaName	file:
mTrace	src/sqlite/sqlite3.c	/^  u8 mTrace;                    \/* zero or more SQLITE_TRACE flags *\/$/;"	m	struct:sqlite3	file:
m_eq_1	src/sqlite/sqlite3.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_gt_0	src/sqlite/sqlite3.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_1	src/sqlite/sqlite3.c	/^static int m_gt_1(const char *z){$/;"	f	file:
magic	src/sqlite/sqlite3.c	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3	file:
magic	src/sqlite/sqlite3.c	/^  u32 magic;                  \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	src/sqlite/sqlite3.c	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe	file:
magic1	src/sqlite/sqlite3.c	/^  u32 magic1;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic2	src/sqlite/sqlite3.c	/^  u32 magic2;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
main	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	src/sqlite/shell.c	/^int SQLITE_CDECL main(int argc, char **argv){$/;"	f
main	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	test/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	test/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
mainPrompt	src/sqlite/shell.c	/^static char mainPrompt[20];     \/* First line prompt. default: "sqlite> "*\/$/;"	v	file:
main_init	src/sqlite/shell.c	/^static void main_init(ShellState *data) {$/;"	f	file:
major	src/sqlite/sqlite3.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	src/sqlite/sqlite3.c	/^  fts5YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:fts5yyStackEntry	file:
make_linked_ptr	third_party/gmock/gtest/gtest.h	/^linked_ptr<T> make_linked_ptr(T* ptr) {$/;"	f	namespace:testing::internal
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_10_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_1_TUPLE_(T) make_tuple(const T0& f0) {$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_2_TUPLE_(T) make_tuple(const T0& f0, const T1& f1) {$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_3_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2) {$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_4_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_5_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_6_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_7_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_8_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline GTEST_9_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	third_party/gmock/gtest/gtest.h	/^inline tuple<> make_tuple() { return tuple<>(); }$/;"	f	namespace:std::tr1
malloc	src/include/sqlite/sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines
malloc	src/sqlite/sqlite3.c	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
malloc64	src/include/sqlite/sqlite3ext.h	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
malloc64	src/sqlite/sqlite3.c	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
mallocFailed	src/sqlite/sqlite3.c	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk	file:
mallocFailed	src/sqlite/sqlite3.c	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3	file:
mallocWithAlarm	src/sqlite/sqlite3.c	/^static void mallocWithAlarm(int n, void **pp){$/;"	f	file:
manage_data_	src/include/type/value.h	/^  bool manage_data_;$/;"	m	class:cmudb::Value
markTermAsChild	src/sqlite/sqlite3.c	/^static void markTermAsChild(WhereClause *pWC, int iChild, int iParent){$/;"	f	file:
mask	src/sqlite/sqlite3.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon36::__anon37	file:
maskLoop	src/sqlite/sqlite3.c	/^  Bitmask maskLoop;     \/* Bitmask of all WhereLoop objects in this path *\/$/;"	m	struct:WherePath	file:
maskPage	src/sqlite/sqlite3.c	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage	file:
maskSelf	src/sqlite/sqlite3.c	/^  Bitmask maskSelf;     \/* Bitmask identifying table iTab *\/$/;"	m	struct:WhereLoop	file:
maskUsed	src/sqlite/sqlite3.c	/^  u64 maskUsed;           \/* Mask of columns used by this cursor *\/$/;"	m	struct:VdbeCursor	file:
matchAll	src/sqlite/sqlite3.c	/^  u8 matchAll;          \/* "*" or "%" *\/$/;"	m	struct:compareInfo	file:
matchOne	src/sqlite/sqlite3.c	/^  u8 matchOne;          \/* "?" or "_" *\/$/;"	m	struct:compareInfo	file:
matchQuality	src/sqlite/sqlite3.c	/^static int matchQuality($/;"	f	file:
matchSet	src/sqlite/sqlite3.c	/^  u8 matchSet;          \/* "[" or 0 *\/$/;"	m	struct:compareInfo	file:
matched_	third_party/gmock/gmock/gmock.h	/^  ::std::vector<char> matched_;$/;"	m	class:testing::internal::MatchMatrix
matcher1_	third_party/gmock/gmock/gmock.h	/^  Matcher1 matcher1_;$/;"	m	class:testing::internal::BothOfMatcher
matcher1_	third_party/gmock/gmock/gmock.h	/^  Matcher1 matcher1_;$/;"	m	class:testing::internal::EitherOfMatcher
matcher1_	third_party/gmock/gmock/gmock.h	/^  const Matcher<T> matcher1_;$/;"	m	class:testing::internal::BothOfMatcherImpl
matcher1_	third_party/gmock/gmock/gmock.h	/^  const Matcher<T> matcher1_;$/;"	m	class:testing::internal::EitherOfMatcherImpl
matcher2_	third_party/gmock/gmock/gmock.h	/^  Matcher2 matcher2_;$/;"	m	class:testing::internal::BothOfMatcher
matcher2_	third_party/gmock/gmock/gmock.h	/^  Matcher2 matcher2_;$/;"	m	class:testing::internal::EitherOfMatcher
matcher2_	third_party/gmock/gmock/gmock.h	/^  const Matcher<T> matcher2_;$/;"	m	class:testing::internal::BothOfMatcherImpl
matcher2_	third_party/gmock/gmock/gmock.h	/^  const Matcher<T> matcher2_;$/;"	m	class:testing::internal::EitherOfMatcherImpl
matcher_	third_party/gmock/gmock/gmock.h	/^      : property_(property), matcher_(matcher) {}$/;"	f	class:testing::internal::PropertyMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^    const Matcher<ResultType> matcher_;$/;"	m	class:testing::internal::ResultOfMatcher::Impl
matcher_	third_party/gmock/gmock/gmock.h	/^    const Matcher<const ::std::vector<LhsValue>&> matcher_;$/;"	m	class:testing::internal::WhenSortedByMatcher::Impl
matcher_	third_party/gmock/gmock/gmock.h	/^    const Matcher<const Pointee&> matcher_;$/;"	m	class:testing::internal::PointeeMatcher::Impl
matcher_	third_party/gmock/gmock/gmock.h	/^  InnerMatcher matcher_;$/;"	m	class:testing::internal::NotMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^  M matcher_;$/;"	m	class:testing::internal::MatcherAsPredicate
matcher_	third_party/gmock/gmock/gmock.h	/^  const ContainerMatcher matcher_;$/;"	m	class:testing::internal::WhenSortedByMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^  const InnerMatcher matcher_;$/;"	m	class:testing::internal::PointeeMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^  const M matcher_;$/;"	m	class:testing::internal::PredicateFormatterFromMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<RefToConstProperty> matcher_;$/;"	m	class:testing::internal::PropertyMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<ResultType> matcher_;$/;"	m	class:testing::internal::ResultOfMatcher
matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<T> matcher_;$/;"	m	class:testing::internal::NotMatcherImpl
matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<const FieldType&> matcher_;$/;"	m	class:testing::internal::FieldMatcher
matcher_describers	third_party/gmock/gmock/gmock.h	/^  MatcherDescriberVec& matcher_describers() {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
matcher_describers_	third_party/gmock/gmock/gmock.h	/^  MatcherDescriberVec matcher_describers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcherImplBase
matcher_for_key_	third_party/gmock/gmock/gmock.h	/^  const M matcher_for_key_;$/;"	m	class:testing::internal::KeyMatcher
matchers	third_party/gmock/gmock/gmock.h	/^  const ArgumentMatcherTuple& matchers() const {$/;"	f	class:testing::internal::TypedExpectation
matchers_	third_party/gmock/gmock/gmock.h	/^  ::std::vector<Matcher<const Element&> > matchers_;$/;"	m	class:testing::internal::ElementsAreMatcherImpl
matchers_	third_party/gmock/gmock/gmock.h	/^  ::std::vector<T> matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreArrayMatcher
matchers_	third_party/gmock/gmock/gmock.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::MockSpec
matchers_	third_party/gmock/gmock/gmock.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::OnCallSpec
matchers_	third_party/gmock/gmock/gmock.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::TypedExpectation
matchers_	third_party/gmock/gmock/gmock.h	/^  MatcherVec matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcherImpl
matchers_	third_party/gmock/gmock/gmock.h	/^  const ::std::vector<T> matchers_;$/;"	m	class:testing::internal::ElementsAreArrayMatcher
matchers_	third_party/gmock/gmock/gmock.h	/^  const MatcherTuple matchers_;$/;"	m	class:testing::internal::ElementsAreMatcher
matchers_	third_party/gmock/gmock/gmock.h	/^  const MatcherTuple matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcher
matchers_	third_party/gmock/gmock/gmock.h	/^  const typename MatcherListType::ListType matchers_;$/;"	m	class:testing::internal::VariadicMatcher
matches_filter_	third_party/gmock/gtest/gtest.h	/^  bool matches_filter_;             \/\/ True if this test matches the$/;"	m	class:testing::TestInfo
max1bytePayload	src/sqlite/sqlite3.c	/^  u8 max1bytePayload;   \/* Maximum first byte of cell for a 1-byte payload *\/$/;"	m	struct:BtShared	file:
max1bytePayload	src/sqlite/sqlite3.c	/^  u8 max1bytePayload;  \/* min(maxLocal,127) *\/$/;"	m	struct:MemPage	file:
maxCount	src/sqlite/sqlite3.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxLeaf	src/sqlite/sqlite3.c	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
maxLocal	src/sqlite/sqlite3.c	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
maxLocal	src/sqlite/sqlite3.c	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage	file:
maxOut	src/sqlite/sqlite3.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxRequest	src/sqlite/sqlite3.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
max_	third_party/gmock/gmock-gtest-all.cc	/^  const int max_;$/;"	m	class:testing::__anon7::BetweenCardinalityImpl	file:
max_abs_error_	third_party/gmock/gmock/gmock.h	/^    const FloatType max_abs_error_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl
max_abs_error_	third_party/gmock/gmock/gmock.h	/^  const FloatType max_abs_error_;$/;"	m	class:testing::internal::FloatingEqMatcher
max_readers_	src/include/common/rwmutex.h	/^  static const uint32_t max_readers_ = UINT_MAX;$/;"	m	class:cmudb::RWMutex
max_size_	src/include/page/b_plus_tree_page.h	/^  int max_size_;$/;"	m	class:cmudb::BPlusTreePage
mayAbort	src/sqlite/sqlite3.c	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse	file:
measureAllocationSize	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void measureAllocationSize(sqlite3 *db, void *p){$/;"	f	file:
mem	src/sqlite/sqlite3.c	/^} mem;$/;"	v	typeref:struct:__anon23	file:
mem0	src/sqlite/sqlite3.c	/^} mem0 = { 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	src/sqlite/sqlite3.c	24702;"	d	file:
mem3	src/sqlite/sqlite3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	src/sqlite/sqlite3.c	22035;"	d	file:
mem5	src/sqlite/sqlite3.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	src/sqlite/sqlite3.c	22721;"	d	file:
memAboutToChange	src/sqlite/sqlite3.c	78672;"	d	file:
memAboutToChange	src/sqlite/sqlite3.c	78674;"	d	file:
memDb	src/sqlite/sqlite3.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memIntValue	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE i64 memIntValue(Mem *pMem){$/;"	f	file:
memIsValid	src/sqlite/sqlite3.c	18634;"	d	file:
memRealValue	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE double memRealValue(Mem *pMem){$/;"	f	file:
memTracePrint	src/sqlite/sqlite3.c	/^static void memTracePrint(Mem *p){$/;"	f	file:
memcpy	src/sqlite/sqlite3.c	12496;"	d	file:
memjrnlClose	src/sqlite/sqlite3.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlCreateFile	src/sqlite/sqlite3.c	/^static int memjrnlCreateFile(MemJournal *p){$/;"	f	file:
memjrnlFileSize	src/sqlite/sqlite3.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlFreeChunks	src/sqlite/sqlite3.c	/^static void memjrnlFreeChunks(MemJournal *p){$/;"	f	file:
memjrnlRead	src/sqlite/sqlite3.c	/^static int memjrnlRead($/;"	f	file:
memjrnlSync	src/sqlite/sqlite3.c	/^static int memjrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
memjrnlTruncate	src/sqlite/sqlite3.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlWrite	src/sqlite/sqlite3.c	/^static int memjrnlWrite($/;"	f	file:
memory_highwater	src/include/sqlite/sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines
memory_highwater	src/sqlite/sqlite3.c	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	file:
memory_used	src/include/sqlite/sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines
memory_used	src/sqlite/sqlite3.c	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	file:
memsys3Checkout	src/sqlite/sqlite3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Enter	src/sqlite/sqlite3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Free	src/sqlite/sqlite3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3FreeUnsafe	src/sqlite/sqlite3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FromMaster	src/sqlite/sqlite3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3Init	src/sqlite/sqlite3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Leave	src/sqlite/sqlite3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Link	src/sqlite/sqlite3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3LinkIntoList	src/sqlite/sqlite3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3Malloc	src/sqlite/sqlite3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3MallocUnsafe	src/sqlite/sqlite3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3Merge	src/sqlite/sqlite3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3OutOfMemory	src/sqlite/sqlite3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3Realloc	src/sqlite/sqlite3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Roundup	src/sqlite/sqlite3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Shutdown	src/sqlite/sqlite3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Size	src/sqlite/sqlite3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Unlink	src/sqlite/sqlite3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3UnlinkFromList	src/sqlite/sqlite3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys5Enter	src/sqlite/sqlite3.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Free	src/sqlite/sqlite3.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5FreeUnsafe	src/sqlite/sqlite3.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5Init	src/sqlite/sqlite3.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Leave	src/sqlite/sqlite3.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Link	src/sqlite/sqlite3.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Log	src/sqlite/sqlite3.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Malloc	src/sqlite/sqlite3.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5MallocUnsafe	src/sqlite/sqlite3.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5Realloc	src/sqlite/sqlite3.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Roundup	src/sqlite/sqlite3.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Shutdown	src/sqlite/sqlite3.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Size	src/sqlite/sqlite3.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Unlink	src/sqlite/sqlite3.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
message	third_party/gmock/gmock-gtest-all.cc	/^  std::string message;$/;"	m	struct:testing::internal::TraceInfo	file:
message	third_party/gmock/gtest/gtest.h	/^    std::string const message;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::std
message	third_party/gmock/gtest/gtest.h	/^  const char* message() const { return message_.c_str(); }$/;"	f	class:testing::TestPartResult
message	third_party/gmock/gtest/gtest.h	/^  const char* message() const {$/;"	f	class:testing::AssertionResult
message_	third_party/gmock/gtest/gtest.h	/^  internal::scoped_ptr< ::std::string> message_;$/;"	m	class:testing::AssertionResult
message_	third_party/gmock/gtest/gtest.h	/^  std::string message_;  \/\/ The test failure message.$/;"	m	class:testing::TestPartResult
metadata_	src/include/index/index.h	/^  IndexMetadata *metadata_;$/;"	m	class:cmudb::Index
method_ptr_	third_party/gmock/gmock/gmock.h	/^  const MethodPtr method_ptr_;$/;"	m	class:testing::internal::InvokeMethodAction
method_ptr_	third_party/gmock/gmock/gmock.h	/^  const MethodPtr method_ptr_;$/;"	m	class:testing::internal::InvokeMethodWithoutArgsAction
minFrame	src/sqlite/sqlite3.c	/^  u32 minFrame;              \/* Ignore wal frames before this one *\/$/;"	m	struct:Wal	file:
minLeaf	src/sqlite/sqlite3.c	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
minLocal	src/sqlite/sqlite3.c	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
minLocal	src/sqlite/sqlite3.c	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage	file:
minMaxFinalize	src/sqlite/sqlite3.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxQuery	src/sqlite/sqlite3.c	/^static u8 minMaxQuery(AggInfo *pAggInfo, ExprList **ppMinMax){$/;"	f	file:
minWriteFileFormat	src/sqlite/sqlite3.c	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe	file:
min_	third_party/gmock/gmock-gtest-all.cc	/^  const int min_;$/;"	m	class:testing::__anon7::BetweenCardinalityImpl	file:
minmaxFunc	src/sqlite/sqlite3.c	/^static void minmaxFunc($/;"	f	file:
minmaxStep	src/sqlite/sqlite3.c	/^static void minmaxStep($/;"	f	file:
minor	src/sqlite/sqlite3.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	src/sqlite/sqlite3.c	/^  fts5YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:fts5yyStackEntry	file:
mkFullPathname	src/sqlite/sqlite3.c	/^static int mkFullPathname($/;"	f	file:
mmapSize	src/sqlite/sqlite3.c	/^  sqlite3_int64 mmapSize;             \/* Usable size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSize	src/sqlite/sqlite3.c	/^  sqlite3_int64 mmapSize;       \/* Usable size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeActual	src/sqlite/sqlite3.c	/^  sqlite3_int64 mmapSizeActual;       \/* Actual size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSizeActual	src/sqlite/sqlite3.c	/^  sqlite3_int64 mmapSizeActual; \/* Actual size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeMax	src/sqlite/sqlite3.c	/^  sqlite3_int64 mmapSizeMax;          \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:unixFile	file:
mmapSizeMax	src/sqlite/sqlite3.c	/^  sqlite3_int64 mmapSizeMax;    \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:winFile	file:
mnMaster	src/sqlite/sqlite3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnPmaSize	src/sqlite/sqlite3.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnReg	src/sqlite/sqlite3.c	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo	file:
mnReq	src/sqlite/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mock_obj_	third_party/gmock/gmock/gmock.h	/^  const void* mock_obj_;  \/\/ Protected by g_gmock_mutex.$/;"	m	class:testing::internal::UntypedFunctionMockerBase
mode	src/sqlite/shell.c	/^  int mode;              \/* An output mode setting *\/$/;"	m	struct:ShellState	file:
mode	src/sqlite/shell.c	/^  int mode;           \/* Mode prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
modeDescr	src/sqlite/shell.c	/^static const char *modeDescr[] = {$/;"	v	file:
modifyPagePointer	src/sqlite/sqlite3.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
mono_tuple_matcher_	third_party/gmock/gmock/gmock.h	/^    const Matcher<InnerMatcherArg> mono_tuple_matcher_;$/;"	m	class:testing::internal::PointwiseMatcher::Impl
moveToChild	src/sqlite/sqlite3.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToLeftmost	src/sqlite/sqlite3.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToParent	src/sqlite/sqlite3.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToRightmost	src/sqlite/sqlite3.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRoot	src/sqlite/sqlite3.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
movetoTarget	src/sqlite/sqlite3.c	/^  i64 movetoTarget;       \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
mprintf	src/include/sqlite/sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines
mprintf	src/sqlite/sqlite3.c	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
msize	src/include/sqlite/sqlite3ext.h	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines
msize	src/sqlite/sqlite3.c	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines	file:
multiSelect	src/sqlite/sqlite3.c	/^static int multiSelect($/;"	f	file:
multiSelectCollSeq	src/sqlite/sqlite3.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectOrderBy	src/sqlite/sqlite3.c	/^static int multiSelectOrderBy($/;"	f	file:
multiSelectOrderByKeyInfo	src/sqlite/sqlite3.c	/^static KeyInfo *multiSelectOrderByKeyInfo(Parse *pParse, Select *p, int nExtra){$/;"	f	file:
multiSelectValues	src/sqlite/sqlite3.c	/^static int multiSelectValues($/;"	f	file:
mutable_impl	third_party/gmock/gmock/gmock.h	/^  Impl& mutable_impl() { return impl_; }$/;"	f	class:testing::PolymorphicMatcher
mutex	src/sqlite/sqlite3.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	src/sqlite/sqlite3.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;           \/* Mutex to protect pMain *\/$/;"	m	struct:rbu_vfs	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon23	file:
mutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config	file:
mutex	test/common/rwmutex_test.cpp	/^  RWMutex mutex;$/;"	m	class:cmudb::Counter	file:
mutexIsInit	src/sqlite/sqlite3.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutex_	src/include/common/rwmutex.h	/^  mutex_t mutex_;$/;"	m	class:cmudb::RWMutex
mutex_	third_party/gmock/gmock-gtest-all.cc	/^  Mutex mutex_;  \/\/ protects all internal state$/;"	m	class:testing::internal::OsStackTraceGetter	file:
mutex_	third_party/gmock/gmock/gmock.h	/^  mutable Mutex mutex_;  \/\/ Protects action_count_checked_.$/;"	m	class:testing::internal::ExpectationBase
mutex_	third_party/gmock/gtest/gtest.h	/^  MutexBase* const mutex_;$/;"	m	class:std::tr1::GTestMutexLock
mutex_	third_party/gmock/gtest/gtest.h	/^  mutable internal::Mutex mutex_;$/;"	m	class:testing::UnitTest
mutex_	third_party/gmock/gtest/gtest.h	/^  pthread_mutex_t mutex_;  \/\/ The underlying pthread mutex.$/;"	m	class:std::tr1::MutexBase
mutex_	third_party/gmock/gtest/gtest.h	/^  pthread_mutex_t mutex_;$/;"	m	class:std::tr1::Notification
mutex_alloc	src/include/sqlite/sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines
mutex_alloc	src/sqlite/sqlite3.c	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
mutex_enter	src/include/sqlite/sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_enter	src/sqlite/sqlite3.c	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_free	src/include/sqlite/sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_free	src/sqlite/sqlite3.c	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_leave	src/include/sqlite/sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_leave	src/sqlite/sqlite3.c	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_t	src/include/common/rwmutex.h	/^  typedef std::mutex mutex_t;$/;"	t	class:cmudb::RWMutex
mutex_try	src/include/sqlite/sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_try	src/sqlite/sqlite3.c	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mxAlloc	src/sqlite/sqlite3.c	/^  u32  mxAlloc;        \/* Maximum allowed allocation.  0 for no malloc usage *\/$/;"	m	struct:StrAccum	file:
mxCurrent	src/sqlite/sqlite3.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon23	file:
mxErr	src/sqlite/sqlite3.c	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk	file:
mxFrame	src/sqlite/sqlite3.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxKeysize	src/sqlite/sqlite3.c	/^  int mxKeysize;                  \/* Largest serialized key seen so far *\/$/;"	m	struct:VdbeSorter	file:
mxLevel	src/include/sqlite/sqlite3.h	/^int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxLevel	src/sqlite/sqlite3.c	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
mxLevel	src/sqlite/sqlite3.c	/^  int mxLevel;                      \/* iLevel value for root of the tree *\/$/;"	m	struct:RtreeCursor	file:
mxMmap	src/sqlite/sqlite3.c	/^  sqlite3_int64 mxMmap;             \/* Maximum value for szMmap *\/$/;"	m	struct:Sqlite3Config	file:
mxOut	src/sqlite/sqlite3.c	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside	file:
mxParserStack	src/sqlite/sqlite3.c	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config	file:
mxPathname	src/include/sqlite/sqlite3.h	/^int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
mxPathname	src/sqlite/sqlite3.c	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	file:
mxPgno	src/sqlite/sqlite3.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPinned	src/sqlite/sqlite3.c	/^  unsigned int mxPinned;         \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPmaSize	src/sqlite/sqlite3.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxReg	src/sqlite/sqlite3.c	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo	file:
mxReq	src/sqlite/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mxSample	src/sqlite/sqlite3.c	/^  int mxSample;             \/* Maximum number of samples to accumulate *\/$/;"	m	struct:Stat4Accum	file:
mxSavepoint	src/sqlite/sqlite3.c	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table	file:
mxStrlen	src/sqlite/sqlite3.c	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config	file:
mxSz	src/sqlite/sqlite3.c	/^  int mxSz;                       \/* Maximum bytes of data to store *\/$/;"	m	struct:IncrMerger	file:
mxValue	src/sqlite/sqlite3.c	/^  sqlite3StatValueType mxValue[10];   \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxWalSize	src/sqlite/sqlite3.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
n	src/sqlite/shell.c	/^  int n;              \/* Number of bytes in z *\/$/;"	m	struct:ImportCtx	file:
n	src/sqlite/shell.c	/^  int n;$/;"	m	struct:ShellText	file:
n	src/sqlite/sqlite3.c	/^    int n;                                    \/* A counter *\/$/;"	m	union:Walker::__anon20	file:
n	src/sqlite/sqlite3.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	src/sqlite/sqlite3.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	src/sqlite/sqlite3.c	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken	file:
n	src/sqlite/sqlite3.c	/^  int n;                          \/* Number of valid bytes of data in a[] *\/$/;"	m	struct:Blob	file:
n	src/sqlite/sqlite3.c	/^  int n;                          \/* Size of buffer a[] in bytes *\/$/;"	m	struct:Fts5LookaheadReader	file:
n	src/sqlite/sqlite3.c	/^  int n;                          \/* Size of buffer at a[] in bytes *\/$/;"	m	struct:Fts5PoslistReader	file:
n	src/sqlite/sqlite3.c	/^  int n;                          \/* Size of buffer p in bytes *\/$/;"	m	struct:Fts5Token	file:
n	src/sqlite/sqlite3.c	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet	file:
n	src/sqlite/sqlite3.c	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:sqlite3_value	file:
n	src/sqlite/sqlite3.c	/^  int n;            \/* Size of record in bytes *\/$/;"	m	struct:IndexSample	file:
n	src/sqlite/sqlite3.c	/^  int n;$/;"	m	struct:Fts5Buffer	file:
n	src/sqlite/sqlite3.c	/^  u16 n;                      \/* Number of valid a[] entries *\/$/;"	m	struct:WhereOrSet	file:
n	src/sqlite/sqlite3.c	/^  u32 n;                 \/* Bytes of content, or number of sub-nodes *\/$/;"	m	struct:JsonNode	file:
n	src/sqlite/sqlite3.c	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token	file:
n90pct	src/sqlite/sqlite3.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
nAccumulator	src/sqlite/sqlite3.c	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo	file:
nAdvance	src/sqlite/sqlite3.c	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader	file:
nAll	src/sqlite/sqlite3.c	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist	file:
nAlloc	src/sqlite/shell.c	/^  int nAlloc;         \/* Space allocated for z[] *\/$/;"	m	struct:ImportCtx	file:
nAlloc	src/sqlite/shell.c	/^  int nAlloc;$/;"	m	struct:ShellText	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;                     \/* Allocated size of a[] (nAlloc>=n) *\/$/;"	m	struct:Blob	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;                     \/* Size of allocation containing aBuf *\/$/;"	m	struct:SessionBuffer	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;                     \/* Total size of allocation *\/$/;"	m	struct:Fts5HashEntry	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;                     \/* space allocated at zToken *\/$/;"	m	struct:unicode_cursor	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;                 \/* Bytes of space at aAlloc *\/$/;"	m	struct:PmaReader	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc;            \/* Number of a[] slots allocated *\/$/;"	m	struct:ExprList	file:
nAlloc	src/sqlite/sqlite3.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon23	file:
nAlloc	src/sqlite/sqlite3.c	/^  u32  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum	file:
nAlloc	src/sqlite/sqlite3.c	/^  u32 nAlloc;        \/* Number of slots of aNode[] allocated *\/$/;"	m	struct:JsonParse	file:
nAlloc	src/sqlite/sqlite3.c	/^  u32 nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	src/sqlite/sqlite3.c	/^  u32 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList	file:
nAlloc	src/sqlite/sqlite3.c	/^  u64 nAlloc;              \/* Bytes of storage available in zBuf[] *\/$/;"	m	struct:JsonString	file:
nAlloc	src/sqlite/sqlite3.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAllocated	src/sqlite/sqlite3.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nArg	src/sqlite/sqlite3.c	/^  i8 nArg;             \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef	file:
nArg	src/sqlite/sqlite3.c	/^  int nArg;                \/* Total number of arguments *\/$/;"	m	struct:PrintfArguments	file:
nAuthPW	src/sqlite/sqlite3.c	/^  int nAuthPW;                  \/* Size of the zAuthPW in bytes *\/$/;"	m	struct:sqlite3_userauth	file:
nAutoincrmerge	src/sqlite/sqlite3.c	/^  int nAutoincrmerge;             \/* Value configured by 'automerge' *\/$/;"	m	struct:Fts3Table	file:
nAutomerge	src/sqlite/sqlite3.c	/^  int nAutomerge;                 \/* 'automerge' setting *\/$/;"	m	struct:Fts5Config	file:
nBackfill	src/sqlite/sqlite3.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBackfillAttempted	src/sqlite/sqlite3.c	/^  u32 nBackfillAttempted;         \/* WAL frames perhaps written, or maybe not *\/$/;"	m	struct:WalCkptInfo	file:
nBacktrace	src/sqlite/sqlite3.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	src/sqlite/sqlite3.c	/^  int nBacktrace;$/;"	m	struct:__anon23	file:
nBacktraceSlots	src/sqlite/sqlite3.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBackup	src/sqlite/sqlite3.c	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree	file:
nBlock	src/sqlite/sqlite3.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBtm	src/sqlite/sqlite3.c	/^      u16 nBtm;              \/* Size of BTM vector *\/$/;"	m	struct:WhereLoop::__anon32::__anon33	file:
nBuf	src/sqlite/sqlite3.c	/^  int nBuf;                       \/* Size of buffer aBuf *\/$/;"	m	struct:SessionBuffer	file:
nBuffer	src/sqlite/sqlite3.c	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nBuffer	src/sqlite/sqlite3.c	/^  int nBuffer;                    \/* Size of write buffer in bytes *\/$/;"	m	struct:PmaWriter	file:
nBuffer	src/sqlite/sqlite3.c	/^  int nBuffer;                \/* Size of read buffer in bytes *\/$/;"	m	struct:PmaReader	file:
nBuffer	src/sqlite/sqlite3.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBusy	src/sqlite/sqlite3.c	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler	file:
nBusy	src/sqlite/sqlite3.c	/^  u32 nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nByte	src/sqlite/sqlite3.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nBytes	src/sqlite/sqlite3.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytesPerCell	src/sqlite/sqlite3.c	/^  u8 nBytesPerCell;           \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nCell	src/sqlite/sqlite3.c	/^  int nCell;                      \/* Number of cells on page *\/$/;"	m	struct:StatPage	file:
nCell	src/sqlite/sqlite3.c	/^  int nCell;                      \/* Value of 'ncell' column *\/$/;"	m	struct:StatCursor	file:
nCell	src/sqlite/sqlite3.c	/^  int nCell;              \/* Number of cells in apCell[] *\/$/;"	m	struct:CellArray	file:
nCell	src/sqlite/sqlite3.c	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage	file:
nChange	src/sqlite/sqlite3.c	/^  int nChange;                    \/* Size of apChange[] array *\/$/;"	m	struct:SessionTable	file:
nChange	src/sqlite/sqlite3.c	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3	file:
nChange	src/sqlite/sqlite3.c	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe	file:
nChange	src/sqlite/sqlite3.c	/^  int nChange;            \/* Statement changes (Vdbe.nChange)     *\/$/;"	m	struct:VdbeFrame	file:
nChar	src/sqlite/sqlite3.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	src/sqlite/sqlite3.c	/^  u32  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum	file:
nCheck	src/sqlite/shell.c	/^  int nCheck;            \/* Number of ".check" commands run *\/$/;"	m	struct:ShellState	file:
nChild	src/sqlite/sqlite3.c	/^  int nChild;                     \/* Number of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
nChild	src/sqlite/sqlite3.c	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm	file:
nChildCsr	src/sqlite/sqlite3.c	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChildMem	src/sqlite/sqlite3.c	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChunkSize	src/sqlite/sqlite3.c	/^  int nChunkSize;                 \/* In-memory chunk-size *\/$/;"	m	struct:MemJournal	file:
nCkpt	src/sqlite/sqlite3.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCol	src/sqlite/sqlite3.c	/^  i16 nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                       \/* Number of columns *\/$/;"	m	struct:Fts5Config	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                       \/* Number of columns in current object *\/$/;"	m	struct:RbuObjIter	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                       \/* Number of columns in table zName *\/$/;"	m	struct:SessionTable	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                       \/* Number of columns in zTab *\/$/;"	m	struct:sqlite3_changeset_iter	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                       \/* Size of azCol[] and abPK[] arrays *\/$/;"	m	struct:SessionApplyCtx	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;                 \/* Number of columns in index + pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey	file:
nCol	src/sqlite/sqlite3.c	/^  int nCol;$/;"	m	struct:Fts5Colset	file:
nColCache	src/sqlite/sqlite3.c	/^  u8 nColCache;        \/* Number of entries in aColCache[] *\/$/;"	m	struct:Parse	file:
nColumn	src/sqlite/sqlite3.c	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table	file:
nColumn	src/sqlite/sqlite3.c	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo	file:
nColumn	src/sqlite/sqlite3.c	/^  u16 nColumn;             \/* Number of columns stored in the index *\/$/;"	m	struct:Index	file:
nColumn	src/sqlite/sqlite3.c	/^  u32 nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nConstraint	src/include/sqlite/sqlite3.h	/^int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nConstraint	src/sqlite/sqlite3.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	src/sqlite/sqlite3.c	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	file:
nCoord	src/include/sqlite/sqlite3.h	/^int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nCoord	src/sqlite/sqlite3.c	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
nCost	src/sqlite/sqlite3.c	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader	file:
nCrisisMerge	src/sqlite/sqlite3.c	/^  int nCrisisMerge;               \/* Maximum allowed segments per level *\/$/;"	m	struct:Fts5Config	file:
nCsr	src/sqlite/sqlite3.c	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram	file:
nCte	src/sqlite/sqlite3.c	/^  int nCte;                       \/* Number of CTEs in the WITH clause *\/$/;"	m	struct:With	file:
nCurrent	src/sqlite/sqlite3.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon23	file:
nCurrentPage	src/sqlite/sqlite3.c	/^  unsigned int nCurrentPage;     \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCursor	src/sqlite/sqlite3.c	/^  int nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame	file:
nCursor	src/sqlite/sqlite3.c	/^  int nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe	file:
nCursor	src/sqlite/sqlite3.c	/^  u32 nCursor;                \/* Number of open cursors *\/$/;"	m	struct:Rtree	file:
nData	src/sqlite/sqlite3.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	src/sqlite/sqlite3.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	src/sqlite/sqlite3.c	/^  int nData;                      \/* Number of bytes in aData *\/$/;"	m	struct:SessionInput	file:
nData	src/sqlite/sqlite3.c	/^  int nData;                      \/* Total bytes of data (incl. structure) *\/$/;"	m	struct:Fts5HashEntry	file:
nData	src/sqlite/sqlite3.c	/^  int nData;              \/* Size of pData.  0 if none. *\/$/;"	m	struct:BtreePayload	file:
nData	src/sqlite/sqlite3.c	/^  int nData;$/;"	m	struct:Fts5IndexIter	file:
nData	src/sqlite/sqlite3.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	src/sqlite/sqlite3.c	/^  u32 nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nDb	src/sqlite/sqlite3.c	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3	file:
nDbChange	src/sqlite/sqlite3.c	/^  int nDbChange;          \/* Value of db->nChange *\/$/;"	m	struct:VdbeFrame	file:
nDeferredCons	src/sqlite/sqlite3.c	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint	file:
nDeferredCons	src/sqlite/sqlite3.c	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3	file:
nDeferredImmCons	src/sqlite/sqlite3.c	/^  i64 nDeferredImmCons;               \/* Number of deferred imm fk. *\/$/;"	m	struct:Savepoint	file:
nDeferredImmCons	src/sqlite/sqlite3.c	/^  i64 nDeferredImmCons;         \/* Net deferred immediate constraints *\/$/;"	m	struct:sqlite3	file:
nDim	src/sqlite/sqlite3.c	/^  u8 nDim;                    \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDim2	src/sqlite/sqlite3.c	/^  u8 nDim2;                   \/* Twice the number of dimensions *\/$/;"	m	struct:Rtree	file:
nDlidx	src/sqlite/sqlite3.c	/^  int nDlidx;                     \/* Allocated size of aDlidx[] array *\/$/;"	m	struct:Fts5SegWriter	file:
nDoc	src/sqlite/sqlite3.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	src/sqlite/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor	file:
nDoc	src/sqlite/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoclist	src/sqlite/sqlite3.c	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nDoclist	src/sqlite/sqlite3.c	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
nDoclist	src/sqlite/sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in bytes *\/$/;"	m	struct:NodeReader	file:
nDoclist	src/sqlite/sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nElem	src/sqlite/sqlite3.c	/^  int nElem;$/;"	m	struct:MatchinfoBuffer	file:
nEmpty	src/sqlite/sqlite3.c	/^  int nEmpty;                     \/* Number of contiguous term-less nodes *\/$/;"	m	struct:Fts5SegWriter	file:
nEntry	src/sqlite/sqlite3.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEntry	src/sqlite/sqlite3.c	/^  int nEntry;                     \/* Number of entries currently in hash *\/$/;"	m	struct:Fts5Hash	file:
nEntry	src/sqlite/sqlite3.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEntry	src/sqlite/sqlite3.c	/^  int nEntry;                     \/* Total number of entries in hash table *\/$/;"	m	struct:SessionTable	file:
nEq	src/sqlite/sqlite3.c	/^      u16 nEq;               \/* Number of equality constraints *\/$/;"	m	struct:WhereLoop::__anon32::__anon33	file:
nEquiv	src/sqlite/sqlite3.c	/^  unsigned char nEquiv;      \/* Number of entries in aEquiv[] *\/$/;"	m	struct:WhereScan	file:
nErr	src/sqlite/shell.c	/^  int nErr;              \/* Number of errors seen *\/$/;"	m	struct:ShellState	file:
nErr	src/sqlite/sqlite3.c	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext	file:
nErr	src/sqlite/sqlite3.c	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse	file:
nErr	src/sqlite/sqlite3.c	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk	file:
nErr	src/sqlite/sqlite3.c	/^  u8 nErr;           \/* Number of errors seen *\/$/;"	m	struct:JsonParse	file:
nEst	src/sqlite/sqlite3.c	/^  LogEst nEst;                    \/* Estimated output rows per loop *\/$/;"	m	struct:ScanStatus	file:
nException	src/sqlite/sqlite3.c	/^  int nException;$/;"	m	struct:Unicode61Tokenizer	file:
nException	src/sqlite/sqlite3.c	/^  int nException;$/;"	m	struct:unicode_tokenizer	file:
nExpr	src/sqlite/sqlite3.c	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList	file:
nExt	src/sqlite/sqlite3.c	/^  u32 nExt;              \/* Number of entries in aExt[] *\/$/;"	m	struct:sqlite3AutoExtList	file:
nExtension	src/sqlite/sqlite3.c	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3	file:
nExtra	src/sqlite/sqlite3.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nFails	src/sqlite/sqlite3.c	/^  int nFails;                  \/* Number of conch taking failures *\/$/;"	m	struct:proxyLockingContext	file:
nFetchOut	src/sqlite/sqlite3.c	/^  int nFetchOut;                      \/* Number of outstanding xFetch refs *\/$/;"	m	struct:unixFile	file:
nFetchOut	src/sqlite/sqlite3.c	/^  int nFetchOut;                \/* Number of outstanding xFetch references *\/$/;"	m	struct:winFile	file:
nField	src/sqlite/sqlite3.c	/^  i16 nField;             \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor	file:
nField	src/sqlite/sqlite3.c	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord	file:
nField	src/sqlite/sqlite3.c	/^  u16 nField;         \/* Number of key columns in the index *\/$/;"	m	struct:KeyInfo	file:
nFilter	src/sqlite/shell.c	/^  int nFilter;             \/* Number of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
nFirst	src/sqlite/sqlite3.c	/^  int nFirst;                     \/* Number of entries in aFirst[] *\/$/;"	m	struct:Fts5SFinder	file:
nFirstAlloc	src/sqlite/sqlite3.c	/^  int nFirstAlloc;                \/* Allocated size of aFirst[] *\/$/;"	m	struct:Fts5SFinder	file:
nFkConstraint	src/sqlite/sqlite3.c	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe	file:
nFold	src/sqlite/sqlite3.c	/^  int nFold;                      \/* Size of aFold[] in bytes *\/$/;"	m	struct:Unicode61Tokenizer	file:
nFrame	src/sqlite/sqlite3.c	/^  int nFrame;                     \/* Entries in aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrame	src/sqlite/sqlite3.c	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe	file:
nFrameAlloc	src/sqlite/sqlite3.c	/^  int nFrameAlloc;                \/* Allocated size of aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFree	src/sqlite/sqlite3.c	/^  int nFree;           \/* Bytes of available memory *\/$/;"	m	struct:ReusableSpace	file:
nFree	src/sqlite/sqlite3.c	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage	file:
nFreeSlot	src/sqlite/sqlite3.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFresh	src/sqlite/sqlite3.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFunc	src/sqlite/sqlite3.c	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo	file:
nHash	src/sqlite/sqlite3.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHashSize	src/sqlite/sqlite3.c	/^  int nHashSize;                  \/* Bytes of memory for in-memory hash *\/$/;"	m	struct:Fts5Config	file:
nHdrParsed	src/sqlite/sqlite3.c	/^  u16 nHdrParsed;         \/* Number of header fields parsed so far *\/$/;"	m	struct:VdbeCursor	file:
nHeap	src/sqlite/sqlite3.c	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config	file:
nHeight	src/sqlite/sqlite3.c	/^  int nHeight;              \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse	file:
nHeight	src/sqlite/sqlite3.c	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr	file:
nHidden	src/sqlite/sqlite3.c	/^  u8 nHidden;               \/* Number of hidden columns *\/$/;"	m	struct:PragmaVtab	file:
nId	src/sqlite/sqlite3.c	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList	file:
nIdx	src/sqlite/sqlite3.c	/^  int nIdx;                       \/* Number of entries in aIdx[] *\/$/;"	m	struct:Fts5Sorter	file:
nIdxCol	src/sqlite/sqlite3.c	/^      u16 nIdxCol;           \/* Index column used for ORDER BY *\/$/;"	m	struct:WhereLoop::__anon32::__anon33	file:
nIn	src/sqlite/sqlite3.c	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon30::__anon31	file:
nIn	src/sqlite/sqlite3.c	/^  int nIn;                        \/* Size of input text in bytes *\/$/;"	m	struct:HighlightContext	file:
nIndent	src/sqlite/shell.c	/^  int nIndent;           \/* Size of array aiIndent[] *\/$/;"	m	struct:ShellState	file:
nIndex	src/sqlite/sqlite3.c	/^  int nIndex;                     \/* Number of aux. indexes on table zTbl *\/$/;"	m	struct:RbuObjIter	file:
nIndex	src/sqlite/sqlite3.c	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table	file:
nInitPage	src/sqlite/sqlite3.c	/^  int nInitPage;                 \/* Initial bulk allocation size *\/$/;"	m	struct:PCacheGlobal	file:
nInput	src/sqlite/sqlite3.c	/^  int nInput;                     \/* Size of aInput[] in bytes *\/$/;"	m	struct:unicode_cursor	file:
nInput	src/sqlite/sqlite3.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInst	src/sqlite/sqlite3.c	/^  int nInst;                      \/* Total number of phrase instances *\/$/;"	m	struct:CInstIter	file:
nInstAlloc	src/sqlite/sqlite3.c	/^  int nInstAlloc;                 \/* Size of aInst[] array (entries \/ 3) *\/$/;"	m	struct:Fts5Cursor	file:
nInstCount	src/sqlite/sqlite3.c	/^  int nInstCount;                 \/* Number of phrase instances *\/$/;"	m	struct:Fts5Cursor	file:
nJson	src/sqlite/sqlite3.c	/^  int nJson;         \/* Length of the zJson string in bytes *\/$/;"	m	struct:JsonParse	file:
nKey	src/sqlite/sqlite3.c	/^  i64 nKey;                 \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor	file:
nKey	src/sqlite/sqlite3.c	/^  i64 nKey;      \/* The key for INTKEY tables, or nPayload otherwise *\/$/;"	m	struct:CellInfo	file:
nKey	src/sqlite/sqlite3.c	/^  int nKey;                       \/* Length of key in bytes *\/$/;"	m	struct:Fts5HashEntry	file:
nKey	src/sqlite/sqlite3.c	/^  int nKey;                   \/* Number of bytes in key *\/$/;"	m	struct:PmaReader	file:
nKey	src/sqlite/sqlite3.c	/^  sqlite3_int64 nKey;     \/* Size of pKey for indexes.  PRIMARY KEY for tabs *\/$/;"	m	struct:BtreePayload	file:
nKey	src/sqlite/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
nKeyCol	src/sqlite/sqlite3.c	/^  int nKeyCol;              \/* Number of index columns w\/o the pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nKeyCol	src/sqlite/sqlite3.c	/^  u16 nKeyCol;             \/* Number of columns forming the key *\/$/;"	m	struct:Index	file:
nLSlot	src/sqlite/sqlite3.c	/^  u16 nLSlot;           \/* Number of slots allocated for aLTerm[] *\/$/;"	m	struct:WhereLoop	file:
nLTerm	src/sqlite/sqlite3.c	/^  u16 nLTerm;           \/* Number of entries in aLTerm[] *\/$/;"	m	struct:WhereLoop	file:
nLabel	src/sqlite/sqlite3.c	/^  int nLabel;          \/* Number of labels used *\/$/;"	m	struct:Parse	file:
nLastOvfl	src/sqlite/sqlite3.c	/^  int nLastOvfl;                  \/* Bytes of payload on final overflow page *\/$/;"	m	struct:StatCell	file:
nLeTerm	src/sqlite/sqlite3.c	/^  int nLeTerm;                    \/* Size of zLeTerm in bytes *\/$/;"	m	struct:Fts5VocabCursor	file:
nLeafAdd	src/sqlite/sqlite3.c	/^  u32 nLeafAdd;                   \/* Number of leaf blocks added this trans *\/$/;"	m	struct:Fts3Table	file:
nLeafData	src/sqlite/sqlite3.c	/^  i64 nLeafData;                  \/* Number of bytes of leaf data written *\/$/;"	m	struct:SegmentWriter	file:
nLeafData	src/sqlite/sqlite3.c	/^  sqlite3_int64 nLeafData;        \/* Bytes of leaf page data so far *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafEst	src/sqlite/sqlite3.c	/^  int nLeafEst;                   \/* Space allocated for leaf blocks *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafWritten	src/sqlite/sqlite3.c	/^  int nLeafWritten;               \/* Number of leaf pages written *\/$/;"	m	struct:Fts5SegWriter	file:
nLevel	src/sqlite/sqlite3.c	/^  int nLevel;                     \/* Number of levels in this index *\/$/;"	m	struct:Fts5Structure	file:
nLevel	src/sqlite/sqlite3.c	/^  u8 nLevel;                \/* Number of nested loop *\/$/;"	m	struct:WhereInfo	file:
nLine	src/sqlite/shell.c	/^  int nLine;          \/* Current line number *\/$/;"	m	struct:ImportCtx	file:
nList	src/sqlite/sqlite3.c	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist	file:
nList	src/sqlite/sqlite3.c	/^  int nList;$/;"	m	struct:TokenDoclist	file:
nLoaded	src/sqlite/shell.c	/^  unsigned nLoaded;      \/* Input bytes loaded into u.x[] so far this cycle *\/$/;"	m	struct:SHA3Context	file:
nLocal	src/sqlite/sqlite3.c	/^  int nLocal;                     \/* Bytes of local payload *\/$/;"	m	struct:StatCell	file:
nLocal	src/sqlite/sqlite3.c	/^  u16 nLocal;    \/* Amount of payload held locally, not on overflow *\/$/;"	m	struct:CellInfo	file:
nLock	src/sqlite/sqlite3.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLookaside	src/sqlite/sqlite3.c	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config	file:
nLvl	src/sqlite/sqlite3.c	/^  int nLvl;$/;"	m	struct:Fts5DlidxIter	file:
nMalloc	src/sqlite/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	src/sqlite/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMax	src/sqlite/sqlite3.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMaxArg	src/sqlite/sqlite3.c	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse	file:
nMaxEqZero	src/sqlite/sqlite3.c	/^  int nMaxEqZero;           \/* Max leading 0 in anEq[] for any a[] entry *\/$/;"	m	struct:Stat4Accum	file:
nMaxPage	src/sqlite/sqlite3.c	/^  unsigned int nMaxPage;         \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPendingData	src/sqlite/sqlite3.c	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table	file:
nMaxSorterMmap	src/sqlite/sqlite3.c	/^  int nMaxSorterMmap;           \/* Maximum size of regions mapped by sorter *\/$/;"	m	struct:sqlite3	file:
nMem	src/sqlite/sqlite3.c	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram	file:
nMem	src/sqlite/sqlite3.c	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame	file:
nMem	src/sqlite/sqlite3.c	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe	file:
nMem	src/sqlite/sqlite3.c	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse	file:
nMem	src/sqlite/sqlite3.c	/^  u16 nMem;               \/* Number of aMem[] value.  Might be zero *\/$/;"	m	struct:BtreePayload	file:
nMemory	src/sqlite/sqlite3.c	/^  int nMemory;                    \/* Size of list.aMemory allocation in bytes *\/$/;"	m	struct:VdbeSorter	file:
nMerge	src/sqlite/sqlite3.c	/^  int nMerge;                     \/* Number of segments in incr-merge *\/$/;"	m	struct:Fts5StructureLevel	file:
nMin	src/sqlite/sqlite3.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMinPage	src/sqlite/sqlite3.c	/^  unsigned int nMinPage;         \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMmapOut	src/sqlite/sqlite3.c	/^  int nMmapOut;               \/* Number of mmap pages currently outstanding *\/$/;"	m	struct:Pager	file:
nModuleArg	src/sqlite/sqlite3.c	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table	file:
nMxPayload	src/sqlite/sqlite3.c	/^  int nMxPayload;                 \/* Largest payload of any cell on this page *\/$/;"	m	struct:StatPage	file:
nMxPayload	src/sqlite/sqlite3.c	/^  int nMxPayload;                 \/* Value of 'mx_payload' column *\/$/;"	m	struct:StatCursor	file:
nName	src/sqlite/sqlite3.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nName	src/sqlite/sqlite3.c	/^  u8 nName;           \/* Length of th name *\/$/;"	m	struct:__anon22	file:
nNear	src/sqlite/sqlite3.c	/^  int nNear;                      \/* NEAR parameter *\/$/;"	m	struct:Fts5ExprNearset	file:
nNear	src/sqlite/sqlite3.c	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr	file:
nNeeded	src/sqlite/sqlite3.c	/^  int nNeeded;         \/* Total bytes that could not be allocated *\/$/;"	m	struct:ReusableSpace	file:
nNest	src/sqlite/sqlite3.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNode	src/sqlite/sqlite3.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNode	src/sqlite/sqlite3.c	/^  int nNode;$/;"	m	struct:NodeReader	file:
nNode	src/sqlite/sqlite3.c	/^  u32 nNode;         \/* Number of slots of aNode[] used *\/$/;"	m	struct:JsonParse	file:
nNodeSize	src/sqlite/sqlite3.c	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table	file:
nOBSat	src/sqlite/sqlite3.c	/^  i8 nOBSat;                \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:WhereInfo	file:
nOBSat	src/sqlite/sqlite3.c	/^  int nOBSat;           \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:SortCtx	file:
nOcc	src/sqlite/sqlite3.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOffsetList	src/sqlite/sqlite3.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOldOff	src/sqlite/sqlite3.c	/^  int nOldOff;$/;"	m	struct:SessionDiffCtx	file:
nOp	src/sqlite/sqlite3.c	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram	file:
nOp	src/sqlite/sqlite3.c	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe	file:
nOp	src/sqlite/sqlite3.c	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame	file:
nOpAlloc	src/sqlite/sqlite3.c	/^  int nOpAlloc;        \/* Number of slots allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse	file:
nOrderBy	src/include/sqlite/sqlite3.h	/^int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nOrderBy	src/sqlite/sqlite3.c	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	file:
nOrig	src/sqlite/sqlite3.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOther	src/sqlite/sqlite3.c	/^  int nOther;      \/* Number of references to columns in other FROM clauses *\/$/;"	m	struct:SrcCount	file:
nOut	src/sqlite/sqlite3.c	/^  LogEst nOut;          \/* Estimated number of output rows *\/$/;"	m	struct:WhereLoop	file:
nOut	src/sqlite/sqlite3.c	/^  LogEst nOut;        \/* Number of outputs for this subquery *\/$/;"	m	struct:WhereOrCost	file:
nOut	src/sqlite/sqlite3.c	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside	file:
nOutput	src/sqlite/sqlite3.c	/^  int nOutput;$/;"	m	struct:PorterRule	file:
nOverflow	src/sqlite/sqlite3.c	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage	file:
nOvfl	src/sqlite/sqlite3.c	/^  int nOvfl;                      \/* Entries in aOvfl[] *\/$/;"	m	struct:StatCell	file:
nOvfl	src/sqlite/sqlite3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nOvflAlloc	src/sqlite/sqlite3.c	/^  int nOvflAlloc;           \/* Allocated size of aOverflow[] array *\/$/;"	m	struct:BtCursor	file:
nPMA	src/sqlite/sqlite3.c	/^  int nPMA;                       \/* Number of PMAs currently in file *\/$/;"	m	struct:SortSubtask	file:
nPSample	src/sqlite/sqlite3.c	/^  tRowcnt nPSample;         \/* How often to do a periodic sample *\/$/;"	m	struct:Stat4Accum	file:
nPage	src/sqlite/sqlite3.c	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk	file:
nPage	src/sqlite/sqlite3.c	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
nPage	src/sqlite/sqlite3.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPage	src/sqlite/sqlite3.c	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared	file:
nPage	src/sqlite/sqlite3.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPagePerSector	src/sqlite/sqlite3.c	/^  int nPagePerSector;             \/* Pages per sector for pTargetFd *\/$/;"	m	struct:sqlite3rbu	file:
nPagecount	src/sqlite/sqlite3.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nParam	src/include/sqlite/sqlite3.h	/^int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	src/include/sqlite/sqlite3.h	/^int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nParam	src/sqlite/sqlite3.c	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
nParam	src/sqlite/sqlite3.c	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
nParam	src/sqlite/sqlite3.c	/^  int nParam;                 \/* Number of parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
nPayload	src/sqlite/sqlite3.c	/^  int nPayload;                   \/* Value of 'payload' column *\/$/;"	m	struct:StatCursor	file:
nPayload	src/sqlite/sqlite3.c	/^  u32 nPayload;  \/* Bytes of payload *\/$/;"	m	struct:CellInfo	file:
nPendingData	src/sqlite/sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table	file:
nPendingData	src/sqlite/sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts5Index	file:
nPgsz	src/sqlite/sqlite3.c	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table	file:
nPhaseOneStep	src/sqlite/sqlite3.c	/^  i64 nPhaseOneStep;$/;"	m	struct:RbuState	file:
nPhaseOneStep	src/sqlite/sqlite3.c	/^  i64 nPhaseOneStep;$/;"	m	struct:sqlite3rbu	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of entries in aPhrase[] array *\/$/;"	m	struct:Fts5ExprNearset	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in expression *\/$/;"	m	struct:Fts5Expr	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:Fts5Bm25Data	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPhrase	src/sqlite/sqlite3.c	/^  int nPhrase;                    \/* Size of apPhrase array *\/$/;"	m	struct:Fts5Parse	file:
nPoint	src/sqlite/sqlite3.c	/^  int nPoint;                       \/* Number of slots used in aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPointAlloc	src/sqlite/sqlite3.c	/^  int nPointAlloc;                  \/* Number of slots allocated for aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPool	src/sqlite/sqlite3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPopulate	src/sqlite/sqlite3.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPos	src/sqlite/sqlite3.c	/^  int nPos;                       \/* Number of bytes in current position list *\/$/;"	m	struct:Fts5SegIter	file:
nPoslist	src/sqlite/sqlite3.c	/^  int nPoslist;$/;"	m	struct:Fts5DoclistIter	file:
nPragCName	src/sqlite/sqlite3.c	/^  u8 nPragCName;           \/* Num of col names. 0 means use pragma name *\/$/;"	m	struct:PragmaName	file:
nPrefix	src/sqlite/sqlite3.c	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
nPrefix	src/sqlite/sqlite3.c	/^  int nPrefix;                    \/* Number of prefix indexes *\/$/;"	m	struct:Fts5Config	file:
nProgress	src/sqlite/sqlite3.c	/^  i64 nProgress;$/;"	m	struct:RbuState	file:
nProgress	src/sqlite/sqlite3.c	/^  int nProgress;                  \/* Rows processed for all objects *\/$/;"	m	struct:sqlite3rbu	file:
nProgressOps	src/sqlite/sqlite3.c	/^  unsigned nProgressOps;        \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3	file:
nQueryLoop	src/sqlite/sqlite3.c	/^  u32 nQueryLoop;      \/* Est number of iterations of a query (10*log2(N)) *\/$/;"	m	struct:Parse	file:
nRangeReg	src/sqlite/sqlite3.c	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse	file:
nRankArg	src/sqlite/sqlite3.c	/^  int nRankArg;                   \/* Number of trailing arguments for rank() *\/$/;"	m	struct:Fts5Cursor	file:
nRate	src/sqlite/shell.c	/^  unsigned nRate;        \/* Bytes of input accepted per Keccak iteration *\/$/;"	m	struct:SHA3Context	file:
nRbu	src/sqlite/sqlite3.c	/^  int nRbu;                       \/* Number of RBU VFS in the stack *\/$/;"	m	struct:sqlite3rbu	file:
nRead	src/sqlite/sqlite3.c	/^  int nRead;                      \/* Total number of blocks read *\/$/;"	m	struct:Fts5Index	file:
nRead	src/sqlite/sqlite3.c	/^  int nRead;                  \/* Database pages read *\/$/;"	m	struct:Pager	file:
nReaders	src/sqlite/sqlite3.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nRec	src/sqlite/sqlite3.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRecValid	src/sqlite/sqlite3.c	/^  int nRecValid;            \/* Number of valid fields currently in pRec *\/$/;"	m	struct:WhereLoopBuilder	file:
nRecord	src/sqlite/sqlite3.c	/^  int nRecord;                    \/* Number of bytes in buffer aRecord[] *\/$/;"	m	struct:SessionChange	file:
nRecyclable	src/sqlite/sqlite3.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRef	src/include/sqlite/sqlite3.h	/^int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab
nRef	src/sqlite/sqlite3.c	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                       \/* Object reference count *\/$/;"	m	struct:Fts5Structure	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                   \/* Number of references to this node *\/$/;"	m	struct:RtreeNode	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext	file:
nRef	src/sqlite/sqlite3.c	/^  int nRef;$/;"	m	struct:FuncDestructor	file:
nRef	src/sqlite/sqlite3.c	/^  u32 nRef;           \/* Number of references to this KeyInfo object *\/$/;"	m	struct:KeyInfo	file:
nRef	src/sqlite/sqlite3.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	src/sqlite/sqlite3.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRefInitMutex	src/sqlite/sqlite3.c	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config	file:
nRefSum	src/sqlite/sqlite3.c	/^  int nRefSum;                        \/* Sum of ref counts over all pages *\/$/;"	m	struct:PCache	file:
nRegion	src/sqlite/sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRegion	src/sqlite/sqlite3.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRemaining	src/sqlite/sqlite3.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nResColumn	src/sqlite/sqlite3.c	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe	file:
nReserve	src/sqlite/sqlite3.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	src/sqlite/sqlite3.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nRow	src/sqlite/sqlite3.c	/^  LogEst nRow;          \/* Estimated number of rows generated by this path *\/$/;"	m	struct:WherePath	file:
nRow	src/sqlite/sqlite3.c	/^  int nRow;$/;"	m	struct:RbuState	file:
nRow	src/sqlite/sqlite3.c	/^  tRowcnt nRow;             \/* Number of rows in the entire table *\/$/;"	m	struct:Stat4Accum	file:
nRow	src/sqlite/sqlite3.c	/^  u32 nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRowAvg	src/sqlite/sqlite3.c	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor	file:
nRowEst	src/sqlite/sqlite3.c	/^  i64 nRowEst;                \/* Estimated number of rows in this table *\/$/;"	m	struct:Rtree	file:
nRowEst0	src/sqlite/sqlite3.c	/^  tRowcnt nRowEst0;        \/* Non-logarithmic number of rows in the index *\/$/;"	m	struct:Index	file:
nRowLogEst	src/sqlite/sqlite3.c	/^  LogEst nRowLogEst;   \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table	file:
nRowOut	src/sqlite/sqlite3.c	/^  LogEst nRowOut;           \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo	file:
nRowid	src/sqlite/sqlite3.c	/^  u32 nRowid;                     \/* Sizeof aRowid[] *\/$/;"	m	struct:Stat4Sample	file:
nRowidOffset	src/sqlite/sqlite3.c	/^  int nRowidOffset;               \/* Allocated size of aRowidOffset[] array *\/$/;"	m	struct:Fts5SegIter	file:
nSample	src/sqlite/sqlite3.c	/^  int nSample;              \/* Current number of samples *\/$/;"	m	struct:Stat4Accum	file:
nSample	src/sqlite/sqlite3.c	/^  int nSample;             \/* Number of elements in aSample[] *\/$/;"	m	struct:Index	file:
nSampleCol	src/sqlite/sqlite3.c	/^  int nSampleCol;          \/* Size of IndexSample.anEq[] and so on *\/$/;"	m	struct:Index	file:
nSavepoint	src/sqlite/sqlite3.c	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3	file:
nSavepoint	src/sqlite/sqlite3.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nScan	src/sqlite/sqlite3.c	/^  int nScan;              \/* Entries in aScan[] *\/$/;"	m	struct:Vdbe	file:
nScratch	src/sqlite/sqlite3.c	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config	file:
nScratchFree	src/sqlite/sqlite3.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nSdst	src/sqlite/sqlite3.c	/^  int nSdst;           \/* Number of registers allocated *\/$/;"	m	struct:SelectDest	file:
nSeg	src/sqlite/sqlite3.c	/^  int nSeg;                       \/* Size of aSeg[] array *\/$/;"	m	struct:Fts5Iter	file:
nSeg	src/sqlite/sqlite3.c	/^  int nSeg;                       \/* Total number of segments on level *\/$/;"	m	struct:Fts5StructureLevel	file:
nSegment	src/sqlite/sqlite3.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSegment	src/sqlite/sqlite3.c	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader	file:
nSegment	src/sqlite/sqlite3.c	/^  int nSegment;                   \/* Total segments in this structure *\/$/;"	m	struct:Fts5Structure	file:
nSelect	src/sqlite/sqlite3.c	/^  int nSelect;         \/* Number of SELECT statements seen *\/$/;"	m	struct:Parse	file:
nSelectIndent	src/sqlite/sqlite3.c	/^  int nSelectIndent;   \/* How far to indent SELECTTRACE() output *\/$/;"	m	struct:Parse	file:
nSelectRow	src/sqlite/sqlite3.c	/^  LogEst nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select	file:
nSession	src/sqlite/shell.c	/^  int nSession;             \/* Number of active sessions *\/$/;"	m	struct:ShellState	file:
nSet	src/sqlite/sqlite3.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nShared	src/sqlite/sqlite3.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nShm	src/sqlite/sqlite3.c	/^  int nShm;                       \/* Number of entries in apShm[] array *\/$/;"	m	struct:rbu_file	file:
nSize	src/sqlite/sqlite3.c	/^  int nSize;                      \/* Bytes of data currently in memory *\/$/;"	m	struct:MemJournal	file:
nSize	src/sqlite/sqlite3.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	src/sqlite/sqlite3.c	/^  int nSize;$/;"	m	struct:Fts5DoclistIter	file:
nSize	src/sqlite/sqlite3.c	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo	file:
nSkip	src/sqlite/sqlite3.c	/^  u16 nSkip;            \/* Number of NULL aLTerm[] entries *\/$/;"	m	struct:WhereLoop	file:
nSlot	src/sqlite/sqlite3.c	/^  int nSlot;                      \/* Size of aSlot[] array *\/$/;"	m	struct:Fts5Hash	file:
nSlot	src/sqlite/sqlite3.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	src/sqlite/sqlite3.c	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause	file:
nSnippet	src/sqlite/sqlite3.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSortingColumn	src/sqlite/sqlite3.c	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo	file:
nSpace	src/sqlite/sqlite3.c	/^  int nSpace;$/;"	m	struct:Fts5Buffer	file:
nSpace	src/sqlite/sqlite3.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSpill	src/sqlite/sqlite3.c	/^  int nSpill;                     \/* Bytes of data before flushing *\/$/;"	m	struct:MemJournal	file:
nSqlExec	src/sqlite/sqlite3.c	/^  u8 nSqlExec;                  \/* Number of pending OP_SqlExec opcodes *\/$/;"	m	struct:sqlite3	file:
nSrc	src/sqlite/sqlite3.c	/^  int nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList	file:
nStat	src/sqlite/sqlite3.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nStatement	src/sqlite/sqlite3.c	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3	file:
nStep	src/sqlite/sqlite3.c	/^  int nStep;                      \/* Rows processed for current object *\/$/;"	m	struct:sqlite3rbu	file:
nStmtDefCons	src/sqlite/sqlite3.c	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStmtDefImmCons	src/sqlite/sqlite3.c	/^  i64 nStmtDefImmCons;    \/* Number of def. imm constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStmtSpill	src/sqlite/sqlite3.c	/^  int nStmtSpill;                   \/* Stmt-journal spill-to-disk threshold *\/$/;"	m	struct:Sqlite3Config	file:
nStop	src/sqlite/sqlite3.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nSub	src/sqlite/sqlite3.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSubRec	src/sqlite/sqlite3.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nSuffix	src/sqlite/sqlite3.c	/^  int nSuffix;$/;"	m	struct:PorterRule	file:
nTab	src/sqlite/sqlite3.c	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse	file:
nTabRef	src/sqlite/sqlite3.c	/^  u32 nTabRef;         \/* Number of pointers to this Table *\/$/;"	m	struct:Table	file:
nTableLock	src/sqlite/sqlite3.c	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse	file:
nTask	src/sqlite/sqlite3.c	/^  u8 nTask;                       \/* Size of aTask[] array *\/$/;"	m	struct:VdbeSorter	file:
nTblCol	src/sqlite/sqlite3.c	/^  int nTblCol;                    \/* Size of azTblCol[] array *\/$/;"	m	struct:RbuObjIter	file:
nTempReg	src/sqlite/sqlite3.c	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;                      \/* Number of entries in aTerm[] *\/$/;"	m	struct:Fts5ExprPhrase	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;                      \/* Size of phrase in terms *\/$/;"	m	struct:Fts5MatchPhrase	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts3SegFilter	file:
nTerm	src/sqlite/sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts5TermsetEntry	file:
nTermAlloc	src/sqlite/sqlite3.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nThis	src/sqlite/sqlite3.c	/^  int nThis;       \/* Number of references to columns in pSrcList *\/$/;"	m	struct:SrcCount	file:
nTitle	src/sqlite/sqlite3.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon23	file:
nTitle	src/sqlite/sqlite3.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nToken	src/sqlite/sqlite3.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	src/sqlite/sqlite3.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	src/sqlite/sqlite3.c	/^  int nToken;                     \/* Size of zToken in bytes *\/$/;"	m	struct:Fts3tokCursor	file:
nToken	src/sqlite/sqlite3.c	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
nTokenAllocated	src/sqlite/sqlite3.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTop	src/sqlite/sqlite3.c	/^      u16 nTop;              \/* Size of TOP vector *\/$/;"	m	struct:WhereLoop::__anon32::__anon33	file:
nTotalChange	src/sqlite/sqlite3.c	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3	file:
nTotalRow	src/sqlite/sqlite3.c	/^  i64 nTotalRow;                  \/* Total number of rows in FTS table *\/$/;"	m	struct:Fts5Storage	file:
nTransaction	src/sqlite/sqlite3.c	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared	file:
nTree	src/sqlite/sqlite3.c	/^  int nTree;                 \/* Used size of aTree\/aReadr (power of 2) *\/$/;"	m	struct:MergeEngine	file:
nUnused	src/sqlite/sqlite3.c	/^  int nUnused;                    \/* Number of unused bytes on page *\/$/;"	m	struct:StatPage	file:
nUnused	src/sqlite/sqlite3.c	/^  int nUnused;                    \/* Value of 'unused' column *\/$/;"	m	struct:StatCursor	file:
nUsed	src/sqlite/sqlite3.c	/^  int nUsed;               \/* Number of arguments used so far *\/$/;"	m	struct:PrintfArguments	file:
nUsed	src/sqlite/sqlite3.c	/^  u64 nUsed;               \/* Bytes of zBuf[] currently used *\/$/;"	m	struct:JsonString	file:
nUsermerge	src/sqlite/sqlite3.c	/^  int nUsermerge;                 \/* 'usermerge' setting *\/$/;"	m	struct:Fts5Config	file:
nVDestroy	src/sqlite/sqlite3.c	/^  int nVDestroy;                \/* Number of active OP_VDestroy operations *\/$/;"	m	struct:sqlite3	file:
nVTrans	src/sqlite/sqlite3.c	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3	file:
nVal	src/sqlite/sqlite3.c	/^  int nVal;                       \/* Size of the record in bytes *\/$/;"	m	struct:SorterRecord	file:
nVar	src/sqlite/sqlite3.c	/^  ynVar nVar;               \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse	file:
nVar	src/sqlite/sqlite3.c	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe	file:
nVdbeActive	src/sqlite/sqlite3.c	/^  int nVdbeActive;              \/* Number of VDBEs currently running *\/$/;"	m	struct:sqlite3	file:
nVdbeExec	src/sqlite/sqlite3.c	/^  int nVdbeExec;                \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3	file:
nVdbeRead	src/sqlite/sqlite3.c	/^  int nVdbeRead;                \/* Number of active VDBEs that read or write *\/$/;"	m	struct:sqlite3	file:
nVdbeWrite	src/sqlite/sqlite3.c	/^  int nVdbeWrite;               \/* Number of active VDBEs that read and write *\/$/;"	m	struct:sqlite3	file:
nVtabLock	src/sqlite/sqlite3.c	/^  int nVtabLock;            \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse	file:
nWiData	src/sqlite/sqlite3.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWork	src/sqlite/sqlite3.c	/^  int nWork;                      \/* Number of leaf pages flushed *\/$/;"	m	struct:IncrmergeWriter	file:
nWorkUnit	src/sqlite/sqlite3.c	/^  int nWorkUnit;                  \/* Leaf pages in a "unit" of work *\/$/;"	m	struct:Fts5Index	file:
nWorker	src/sqlite/sqlite3.c	87404;"	d	file:
nWorker	src/sqlite/sqlite3.c	87490;"	d	file:
nWriteCounter	src/sqlite/sqlite3.c	/^  u64 nWriteCounter;              \/* Total leaves written to level 0 *\/$/;"	m	struct:Fts5Structure	file:
nXField	src/sqlite/sqlite3.c	/^  u16 nXField;        \/* Number of columns beyond the key columns *\/$/;"	m	struct:KeyInfo	file:
nXor	src/sqlite/sqlite3.c	/^  int nXor;           \/* Number of XOR operations done *\/$/;"	m	struct:EntropyGatherer	file:
nZero	src/sqlite/sqlite3.c	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:sqlite3_value::MemValue	file:
nZero	src/sqlite/sqlite3.c	/^  int nZero;              \/* Extra zero data appended after pData,nData *\/$/;"	m	struct:BtreePayload	file:
na	src/sqlite/sqlite3.c	/^  int na;             \/* Size of a[] in bytes *\/$/;"	m	struct:EntropyGatherer	file:
name	third_party/gmock/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestCase
name	third_party/gmock/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestInfo
nameInUsingClause	src/sqlite/sqlite3.c	/^static int nameInUsingClause(IdList *pUsing, const char *zCol){$/;"	f	file:
name_	src/include/index/index.h	/^  std::string name_;$/;"	m	class:cmudb::IndexMetadata
name_	third_party/gmock/gmock-gtest-all.cc	/^  std::string name_;$/;"	m	class:testing::__anon4::TestNameIs	file:
name_	third_party/gmock/gmock-gtest-all.cc	/^  std::string name_;$/;"	m	class:testing::internal::TestCaseNameIs	file:
name_	third_party/gmock/gmock/gmock.h	/^  const char* name_;  \/\/ Protected by g_gmock_mutex.$/;"	m	class:testing::internal::UntypedFunctionMockerBase
name_	third_party/gmock/gtest/gtest.h	/^  const std::string name_;               \/\/ Test name$/;"	m	class:testing::TestInfo
name_	third_party/gmock/gtest/gtest.h	/^  std::string name_;$/;"	m	class:testing::TestCase
nan_eq_nan_	third_party/gmock/gmock/gmock.h	/^    const bool nan_eq_nan_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl
nan_eq_nan_	third_party/gmock/gmock/gmock.h	/^  const bool nan_eq_nan_;$/;"	m	class:testing::internal::FloatingEqMatcher
ncFlags	src/sqlite/sqlite3.c	/^  u16 ncFlags;         \/* Zero or more NC_* flags defined below *\/$/;"	m	struct:NameContext	file:
nearlyFull	src/sqlite/sqlite3.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
needCsvQuote	src/sqlite/shell.c	/^static const char needCsvQuote[] = {$/;"	v	file:
needFree	src/sqlite/sqlite3.c	/^      u8 needFree;           \/* True if sqlite3_free(idxStr) is needed *\/$/;"	m	struct:WhereLoop::__anon32::__anon34	file:
needToFreeIdxStr	src/include/sqlite/sqlite3.h	/^int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
needToFreeIdxStr	src/sqlite/sqlite3.c	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	file:
nested	src/sqlite/sqlite3.c	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse	file:
neverCorrupt	src/sqlite/sqlite3.c	/^  int neverCorrupt;                 \/* Database is always well-formed *\/$/;"	m	struct:Sqlite3Config	file:
newDatabase	src/sqlite/sqlite3.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newRowid	src/sqlite/sqlite3.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newTnum	src/sqlite/sqlite3.c	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
newmask	src/sqlite/sqlite3.c	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse	file:
next	src/sqlite/sqlite3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon24::__anon26	file:
next	src/sqlite/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
next	src/sqlite/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
next	src/sqlite/sqlite3.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
nextAutovac	src/sqlite/sqlite3.c	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3	file:
nextPagesize	src/sqlite/sqlite3.c	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3	file:
nextShmId	src/sqlite/sqlite3.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	src/sqlite/sqlite3.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
next_	third_party/gmock/gtest/gtest.h	/^  mutable linked_ptr_internal const* next_;$/;"	m	class:testing::internal::linked_ptr_internal
next_page_id_	src/include/disk/disk_manager.h	/^  std::atomic<page_id_t> next_page_id_;$/;"	m	class:cmudb::DiskManager
next_page_id_	src/include/page/b_plus_tree_leaf_page.h	/^  page_id_t next_page_id_;$/;"	m	class:cmudb::BPlusTreeLeafPage
next_stmt	src/include/sqlite/sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
next_stmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
nfsUnlock	src/sqlite/sqlite3.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
nn	src/sqlite/sqlite3.c	/^  int nn;                         \/* Size of record in bytes *\/$/;"	m	struct:Fts5Data	file:
noCase	src/sqlite/sqlite3.c	/^  u8 noCase;            \/* true to ignore case differences *\/$/;"	m	struct:compareInfo	file:
noLock	src/sqlite/sqlite3.c	/^  u8 noLock;                  \/* Do not lock (except in WAL mode) *\/$/;"	m	struct:Pager	file:
noSkipScan	src/sqlite/sqlite3.c	/^  unsigned noSkipScan:1;   \/* Do not try to use skip-scan if true *\/$/;"	m	struct:Index	file:
noSync	src/sqlite/sqlite3.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
nocaseCollatingFunc	src/sqlite/sqlite3.c	/^static int nocaseCollatingFunc($/;"	f	file:
nodeAcquire	src/sqlite/sqlite3.c	/^static int nodeAcquire($/;"	f	file:
nodeBlobReset	src/sqlite/sqlite3.c	/^static void nodeBlobReset(Rtree *pRtree){$/;"	f	file:
nodeDeleteCell	src/sqlite/sqlite3.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeGetCell	src/sqlite/sqlite3.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCoord	src/sqlite/sqlite3.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetRowid	src/sqlite/sqlite3.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeHash	src/sqlite/sqlite3.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHashDelete	src/sqlite/sqlite3.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	src/sqlite/sqlite3.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashLookup	src/sqlite/sqlite3.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeInsertCell	src/sqlite/sqlite3.c	/^static int nodeInsertCell($/;"	f	file:
nodeNew	src/sqlite/sqlite3.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeOverwriteCell	src/sqlite/sqlite3.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeParentIndex	src/sqlite/sqlite3.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodeReaderInit	src/sqlite/sqlite3.c	/^static int nodeReaderInit(NodeReader *p, const char *aNode, int nNode){$/;"	f	file:
nodeReaderNext	src/sqlite/sqlite3.c	/^static int nodeReaderNext(NodeReader *p){$/;"	f	file:
nodeReaderRelease	src/sqlite/sqlite3.c	/^static void nodeReaderRelease(NodeReader *p){$/;"	f	file:
nodeReference	src/sqlite/sqlite3.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeRelease	src/sqlite/sqlite3.c	/^static int nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRowidIndex	src/sqlite/sqlite3.c	/^static int nodeRowidIndex($/;"	f	file:
nodeWrite	src/sqlite/sqlite3.c	/^static int nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeZero	src/sqlite/sqlite3.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
nolockCheckReservedLock	src/sqlite/sqlite3.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockClose	src/sqlite/sqlite3.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockLock	src/sqlite/sqlite3.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	src/sqlite/sqlite3.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nonfatally_failed	third_party/gmock/gtest/gtest.h	/^  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }$/;"	f	class:testing::TestPartResult
noopFunc	src/sqlite/sqlite3.c	106518;"	d	file:
noopMutexAlloc	src/sqlite/sqlite3.c	/^static sqlite3_mutex *noopMutexAlloc(int id){$/;"	f	file:
noopMutexEnd	src/sqlite/sqlite3.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnter	src/sqlite/sqlite3.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	src/sqlite/sqlite3.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexInit	src/sqlite/sqlite3.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexLeave	src/sqlite/sqlite3.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexTry	src/sqlite/sqlite3.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
normalMode	src/sqlite/shell.c	/^  int normalMode;        \/* Output mode before ".explain on" *\/$/;"	m	struct:ShellState	file:
notIndexed	src/sqlite/sqlite3.c	/^      unsigned notIndexed :1;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
notNull	src/sqlite/sqlite3.c	/^  u8 notNull;      \/* An OE_ code for handling a NOT NULL constraint *\/$/;"	m	struct:Column	file:
notReady	src/sqlite/sqlite3.c	/^  Bitmask notReady;          \/* FROM entries not usable at this level *\/$/;"	m	struct:WhereLevel	file:
notUsed0	src/sqlite/sqlite3.c	/^  u32 notUsed0;                   \/* Available for future enhancements *\/$/;"	m	struct:WalCkptInfo	file:
notUsed1	src/sqlite/sqlite3.c	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon11	file:
notValid	src/sqlite/sqlite3.c	/^static void notValid($/;"	f	file:
notified_	third_party/gmock/gtest/gtest.h	/^  bool notified_;$/;"	m	class:std::tr1::Notification
nowValue	src/sqlite/sqlite3.c	/^  sqlite3StatValueType nowValue[10];  \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
nrhs	src/sqlite/sqlite3.c	/^  signed char nrhs;     \/* Negative of the number of RHS symbols in the rule *\/$/;"	m	struct:__anon38	file:
nrhs	src/sqlite/sqlite3.c	/^  signed char nrhs;     \/* Negative of the number of RHS symbols in the rule *\/$/;"	m	struct:__anon42	file:
nullRow	src/sqlite/sqlite3.c	/^  u8 nullRow;             \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor	file:
nullValue	src/sqlite/shell.c	/^  char nullValue[20];    \/* The text to print when a NULL comes back from$/;"	m	struct:ShellState	file:
nullifFunc	src/sqlite/sqlite3.c	/^static void nullifFunc($/;"	f	file:
num_elements_	third_party/gmock/gmock/gmock.h	/^  size_t num_elements_;$/;"	m	class:testing::internal::MatchMatrix
num_matchers_	third_party/gmock/gmock/gmock.h	/^  size_t num_matchers_;$/;"	m	class:testing::internal::MatchMatrix
numberOfCachePages	src/sqlite/sqlite3.c	/^static int numberOfCachePages(PCache *p){$/;"	f	file:
numericType	src/sqlite/sqlite3.c	/^static u16 numericType(Mem *pMem){$/;"	f	file:
obj_ptr_	third_party/gmock/gmock/gmock.h	/^  Class* const obj_ptr_;$/;"	m	class:testing::internal::InvokeMethodAction
obj_ptr_	third_party/gmock/gmock/gmock.h	/^  Class* const obj_ptr_;$/;"	m	class:testing::internal::InvokeMethodWithoutArgsAction
object_	third_party/gmock/gmock/gmock.h	/^    const Super& object_;$/;"	m	class:testing::internal::RefMatcher::Impl
object_	third_party/gmock/gmock/gmock.h	/^  T& object_;$/;"	m	class:testing::internal::RefMatcher
objiter	src/sqlite/sqlite3.c	/^  RbuObjIter objiter;             \/* Iterator for skipping through tbl\/idx *\/$/;"	m	struct:sqlite3rbu	file:
offset	src/sqlite/sqlite3.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offset_	src/include/vtable/virtual_table.h	/^  int offset_ = 0;$/;"	m	class:cmudb::Cursor
offsetof	src/sqlite/sqlite3.c	12596;"	d	file:
okConstFactor	src/sqlite/sqlite3.c	/^  u8 okConstFactor;    \/* OK to factor out constants *\/$/;"	m	struct:Parse	file:
oldLockingContext	src/sqlite/sqlite3.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
old_reporter_	third_party/gmock/gmock-gtest-all.cc	/^  TestPartResultReporterInterface* old_reporter_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
oldmask	src/sqlite/sqlite3.c	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse	file:
omit	src/include/sqlite/sqlite3.h	/^unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
omit	src/sqlite/sqlite3.c	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
omitMask	src/sqlite/sqlite3.c	/^      u16 omitMask;          \/* Terms that may be omitted *\/$/;"	m	struct:WhereLoop::__anon32::__anon34	file:
onError	src/sqlite/sqlite3.c	/^  u8 onError;              \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index	file:
onErrorText	src/sqlite/sqlite3.c	/^static const char *onErrorText(int onError){$/;"	f	file:
one_input_line	src/sqlite/shell.c	/^static char *one_input_line(FILE *in, char *zPrior, int isContinuation){$/;"	f	file:
oom	src/sqlite/sqlite3.c	/^  u8 oom;            \/* Set to true if out of memory *\/$/;"	m	struct:JsonParse	file:
op	src/include/sqlite/sqlite3.h	/^unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
op	src/sqlite/sqlite3.c	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
op	src/sqlite/sqlite3.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	src/sqlite/sqlite3.c	/^  int op;                         \/* Current operation *\/$/;"	m	struct:sqlite3_changeset_iter	file:
op	src/sqlite/sqlite3.c	/^  int op;                         \/* One of SQLITE_INSERT, UPDATE, DELETE *\/$/;"	m	struct:PreUpdate	file:
op	src/sqlite/sqlite3.c	/^  int op;                         \/* One of UPDATE, DELETE, INSERT *\/$/;"	m	struct:SessionChange	file:
op	src/sqlite/sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
op	src/sqlite/sqlite3.c	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause	file:
op	src/sqlite/sqlite3.c	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger	file:
op	src/sqlite/sqlite3.c	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select	file:
op	src/sqlite/sqlite3.c	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr	file:
op	src/sqlite/sqlite3.c	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep	file:
op2	src/sqlite/sqlite3.c	/^  u8 op2;                \/* TK_REGISTER: original value of Expr.op$/;"	m	struct:Expr	file:
opIterNext	src/sqlite/sqlite3.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opMask	src/sqlite/sqlite3.c	/^  u32 opMask;                \/* Acceptable operators *\/$/;"	m	struct:WhereScan	file:
opPrecedence	src/sqlite/sqlite3.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opcode	src/sqlite/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp	file:
opcode	src/sqlite/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList	file:
open	src/include/sqlite/sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open	src/sqlite/sqlite3.c	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open16	src/include/sqlite/sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open16	src/sqlite/sqlite3.c	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
openDatabase	src/sqlite/sqlite3.c	/^static int openDatabase($/;"	f	file:
openDirectory	src/sqlite/sqlite3.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openFlags	src/sqlite/sqlite3.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	src/sqlite/sqlite3.c	/^  int openFlags;                  \/* Flags this file was opened with *\/$/;"	m	struct:rbu_file	file:
openFlags	src/sqlite/sqlite3.c	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared	file:
openFlags	src/sqlite/sqlite3.c	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3	file:
openRbuHandle	src/sqlite/sqlite3.c	/^static sqlite3rbu *openRbuHandle($/;"	f	file:
openStatTable	src/sqlite/sqlite3.c	/^static void openStatTable($/;"	f	file:
openSubJournal	src/sqlite/sqlite3.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
open_db	src/sqlite/shell.c	/^static void open_db(ShellState *p, int keepAlive){$/;"	f	file:
open_v2	src/include/sqlite/sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines
open_v2	src/sqlite/sqlite3.c	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	file:
operator !	third_party/gmock/gmock-gtest-all.cc	/^AssertionResult AssertionResult::operator!() const {$/;"	f	class:testing::AssertionResult
operator !=	src/catalog/schema.cpp	/^bool Schema::operator!=(const Schema &other) const { return !(*this == other); }$/;"	f	class:cmudb::Schema
operator !=	src/include/catalog/column.h	/^  bool operator!=(const Column &other) const { return !(*this == other); }$/;"	f	class:cmudb::Column
operator !=	src/include/table/table_iterator.h	/^  inline bool operator!=(const TableIterator &itr) const {$/;"	f	class:cmudb::TableIterator
operator !=	third_party/gmock/gmock/gmock.h	/^  bool operator!=(const Expectation& rhs) const { return !(*this == rhs); }$/;"	f	class:testing::Expectation
operator !=	third_party/gmock/gmock/gmock.h	/^  bool operator!=(const ExpectationSet& rhs) const { return !(*this == rhs); }$/;"	f	class:testing::ExpectationSet
operator !=	third_party/gmock/gtest/gtest.h	/^  bool operator!=(T* p) const { return value_ != p; }$/;"	f	class:testing::internal::linked_ptr
operator !=	third_party/gmock/gtest/gtest.h	/^  bool operator!=(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator !=	third_party/gmock/gtest/gtest.h	/^  bool operator!=(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator !=	third_party/gmock/gtest/gtest.h	/^bool operator!=(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator ()	src/include/common/rid.h	/^  size_t operator()(const cmudb::RID &obj) const {$/;"	f	struct:std::hash
operator ()	src/include/index/generic_key.h	/^  inline int operator()(const GenericKey<KeySize> &lhs,$/;"	f	class:cmudb::GenericComparator
operator ()	third_party/gmock/gmock-gtest-all.cc	/^  bool operator()(const TestCase* test_case) const {$/;"	f	class:testing::internal::TestCaseNameIs
operator ()	third_party/gmock/gmock-gtest-all.cc	/^  bool operator()(const TestInfo * test_info) const {$/;"	f	class:testing::__anon4::TestNameIs
operator ()	third_party/gmock/gmock-gtest-all.cc	/^  bool operator()(const TestProperty& test_property) const {$/;"	f	class:testing::internal::TestPropertyKeyIs
operator ()	third_party/gmock/gmock-gtest-all.cc	/^bool ExitedWithCode::operator()(int exit_status) const {$/;"	f	class:testing::ExitedWithCode
operator ()	third_party/gmock/gmock-gtest-all.cc	/^bool KilledBySignal::operator()(int exit_status) const {$/;"	f	class:testing::KilledBySignal
operator ()	third_party/gmock/gmock/gmock.h	/^    OutIter operator() (Func \/* f *\/, const Tup& \/* t *\/, OutIter out) const {$/;"	f	struct:testing::internal::TransformTupleValuesHelper::IterateOverTuple
operator ()	third_party/gmock/gmock/gmock.h	/^    OutIter operator() (Func f, const Tup& t, OutIter out) const {$/;"	f	struct:testing::internal::TransformTupleValuesHelper::IterateOverTuple
operator ()	third_party/gmock/gmock/gmock.h	/^    bool operator()(const Expectation& lhs, const Expectation& rhs) const {$/;"	f	class:testing::Expectation::Less
operator ()	third_party/gmock/gmock/gmock.h	/^  AssertionResult operator()(const char* value_text, const T& x) const {$/;"	f	class:testing::internal::PredicateFormatterFromMatcher
operator ()	third_party/gmock/gmock/gmock.h	/^  Matcher<Target> operator()(const Arg& a) const {$/;"	f	struct:testing::internal::CastAndAppendTransform
operator ()	third_party/gmock/gmock/gmock.h	/^  bool operator()(const ::testing::internal::linked_ptr<T>& lhs,$/;"	f	struct:testing::internal::LinkedPtrLessThan
operator ()	third_party/gmock/gmock/gmock.h	/^  bool operator()(const T& lhs, const U& rhs) const { return lhs < rhs; }$/;"	f	struct:testing::internal::LessComparator
operator ()	third_party/gmock/gmock/gmock.h	/^  bool operator()(const T& x) const {$/;"	f	class:testing::internal::MatcherAsPredicate
operator *	src/index/index_iterator.cpp	/^const MappingType INDEXITERATOR_TYPE::operator*() $/;"	f	class:cmudb::INDEXITERATOR_TYPE
operator *	src/table/table_iterator.cpp	/^const Tuple &TableIterator::operator*() {$/;"	f	class:cmudb::TableIterator
operator *	third_party/gmock/gtest/gtest.h	/^  T& operator*() const { return *value_; }$/;"	f	class:testing::internal::linked_ptr
operator *	third_party/gmock/gtest/gtest.h	/^  const T& operator*() const { return *impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator ++	src/include/vtable/virtual_table.h	/^  Cursor &operator++() {$/;"	f	class:cmudb::Cursor
operator ++	src/index/index_iterator.cpp	/^void INDEXITERATOR_TYPE::operator++() $/;"	f	class:cmudb::INDEXITERATOR_TYPE
operator ++	src/table/table_iterator.cpp	/^TableIterator &TableIterator::operator++() {$/;"	f	class:cmudb::TableIterator
operator ++	src/table/table_iterator.cpp	/^TableIterator TableIterator::operator++(int) {$/;"	f	class:cmudb::TableIterator
operator ++	third_party/gmock/gtest/gtest.h	/^  ParamIterator operator++(int \/*unused*\/) {$/;"	f	class:testing::internal::ParamIterator
operator ++	third_party/gmock/gtest/gtest.h	/^  ParamIterator& operator++() {$/;"	f	class:testing::internal::ParamIterator
operator +=	third_party/gmock/gmock/gmock.h	/^  ExpectationSet& operator+=(const Expectation& e) {$/;"	f	class:testing::ExpectationSet
operator ->	src/table/table_iterator.cpp	/^Tuple *TableIterator::operator->() {$/;"	f	class:cmudb::TableIterator
operator ->	third_party/gmock/gtest/gtest.h	/^  T* operator->() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
operator ->	third_party/gmock/gtest/gtest.h	/^  const T* operator->() const { return impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator <<	src/include/common/rid.h	/^  friend std::ostream &operator<<(std::ostream &os, const RID &rid) {$/;"	f	class:cmudb::RID
operator <<	src/include/index/generic_key.h	/^  friend std::ostream &operator<<(std::ostream &os, const GenericKey &key) {$/;"	f	class:cmudb::GenericKey
operator <<	third_party/gmock/gmock-gtest-all.cc	/^Message& Message::operator <<(const ::std::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gmock-gtest-all.cc	/^Message& Message::operator <<(const ::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gmock-gtest-all.cc	/^Message& Message::operator <<(const wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gmock-gtest-all.cc	/^Message& Message::operator <<(wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gmock-gtest-all.cc	/^std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {$/;"	f	namespace:testing
operator <<	third_party/gmock/gmock/gmock.h	/^  MatchResultListener& operator<<(const T& x) {$/;"	f	class:testing::MatchResultListener
operator <<	third_party/gmock/gtest/gtest.h	/^  Message& operator <<(BasicNarrowIoManip val) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gtest/gtest.h	/^  Message& operator <<(bool b) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gtest/gtest.h	/^  inline Message& operator <<(T* const& pointer) {  \/\/ NOLINT$/;"	f	class:testing::Message
operator <<	third_party/gmock/gtest/gtest.h	/^  inline Message& operator <<(const T& val) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gtest/gtest.h	/^  inline Message& operator <<(const T& value) {$/;"	f	class:testing::Message
operator <<	third_party/gmock/gtest/gtest.h	/^  template <typename T> AssertionResult& operator<<(const T& value) {$/;"	f	class:testing::AssertionResult
operator <<	third_party/gmock/gtest/gtest.h	/^::std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::internal2
operator <<	third_party/gmock/gtest/gtest.h	/^inline std::ostream& operator <<(std::ostream& os, const Message& sb) {$/;"	f	namespace:testing
operator =	src/type/value.cpp	/^Value &Value::operator=(Value other) {$/;"	f	class:cmudb::Value
operator =	third_party/gmock/gmock-gtest-all.cc	/^void AssertHelper::operator=(const Message& message) const {$/;"	f	class:testing::internal::AssertHelper
operator =	third_party/gmock/gtest/gtest.h	/^  FilePath& operator=(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
operator =	third_party/gmock/gtest/gtest.h	/^  ParamGenerator& operator=(const ParamGenerator& other) {$/;"	f	class:testing::internal::ParamGenerator
operator =	third_party/gmock/gtest/gtest.h	/^  ParamIterator& operator=(const ParamIterator& other) {$/;"	f	class:testing::internal::ParamIterator
operator =	third_party/gmock/gtest/gtest.h	/^  linked_ptr& operator=(linked_ptr const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	third_party/gmock/gtest/gtest.h	/^  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	third_party/gmock/gtest/gtest.h	/^  tuple& operator=(const tuple& \/* t *\/) { return *this; }$/;"	f	class:std::tr1::tuple
operator =	third_party/gmock/gtest/gtest.h	/^  tuple& operator=(const tuple& t) { return CopyFrom(t); }$/;"	f	class:std::tr1::tuple
operator ==	src/catalog/schema.cpp	/^bool Schema::operator==(const Schema &other) const {$/;"	f	class:cmudb::Schema
operator ==	src/include/catalog/column.h	/^  bool operator==(const Column &other) const {$/;"	f	class:cmudb::Column
operator ==	src/include/common/rid.h	/^  bool operator==(const RID &other) const {$/;"	f	class:cmudb::RID
operator ==	src/include/table/table_iterator.h	/^  inline bool operator==(const TableIterator &itr) const {$/;"	f	class:cmudb::TableIterator
operator ==	third_party/gmock/gmock/gmock.h	/^  bool operator==(const Expectation& rhs) const {$/;"	f	class:testing::Expectation
operator ==	third_party/gmock/gmock/gmock.h	/^  bool operator==(const ExpectationSet& rhs) const {$/;"	f	class:testing::ExpectationSet
operator ==	third_party/gmock/gtest/gtest.h	/^  bool operator==(T* p) const { return value_ == p; }$/;"	f	class:testing::internal::linked_ptr
operator ==	third_party/gmock/gtest/gtest.h	/^  bool operator==(const NativeArray& rhs) const {$/;"	f	class:testing::internal::NativeArray
operator ==	third_party/gmock/gtest/gtest.h	/^  bool operator==(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator ==	third_party/gmock/gtest/gtest.h	/^  bool operator==(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator ==	third_party/gmock/gtest/gtest.h	/^bool operator==(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const { return Action<F>(NULL); }$/;"	f	class:testing::internal::DoDefaultAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const { return MakeAction(new Impl<F>(action_)); }$/;"	f	class:testing::internal::WithArgsAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::PolymorphicAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::DoBothAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::IgnoreResultAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnRefAction
operator Action<F>	third_party/gmock/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnRefOfCopyAction
operator Matcher<ArgsTuple>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<ArgsTuple>() const {$/;"	f	class:testing::internal::ArgsMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ContainsMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::EachMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ElementsAreArrayMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ElementsAreMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::SizeIsMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
operator Matcher<Container>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcher
operator Matcher<FloatType&>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<FloatType&>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<FloatType>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<FloatType>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<LhsContainer>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<LhsContainer>() const {$/;"	f	class:testing::internal::PointwiseMatcher
operator Matcher<LhsContainer>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<LhsContainer>() const {$/;"	f	class:testing::internal::WhenSortedByMatcher
operator Matcher<PairType>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<PairType> () const {$/;"	f	class:testing::internal::PairMatcher
operator Matcher<PairType>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<PairType>() const {$/;"	f	class:testing::internal::KeyMatcher
operator Matcher<Pointer>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Pointer>() const {$/;"	f	class:testing::internal::PointeeMatcher
operator Matcher<Super&>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<Super&>() const {$/;"	f	class:testing::internal::RefMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const { return A<T>(); }$/;"	f	class:testing::internal::AnythingMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::PolymorphicMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::BothOfMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::EitherOfMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::NotMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::ResultOfMatcher
operator Matcher<T>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::VariadicMatcher
operator Matcher<const FloatType&>	third_party/gmock/gmock/gmock.h	/^  operator Matcher<const FloatType&>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder10
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder9
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7,$/;"	f	class:testing::internal::CartesianProductHolder8
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6,$/;"	f	class:testing::internal::CartesianProductHolder7
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >() const {$/;"	f	class:testing::internal::CartesianProductHolder6
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >() const {$/;"	f	class:testing::internal::CartesianProductHolder5
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >() const {$/;"	f	class:testing::internal::CartesianProductHolder4
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >() const {$/;"	f	class:testing::internal::CartesianProductHolder3
operator ParamGenerator< ::std::tr1::tuple<T1, T2> >	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::CartesianProductHolder2
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const { return ValuesIn(&v1_, &v1_ + 1); }$/;"	f	class:testing::internal::ValueArray1
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray10
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray11
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray12
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray13
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray14
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray15
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray16
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray17
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray18
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray19
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray2
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray20
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray21
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray22
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray23
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray24
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray25
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray26
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray27
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray28
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray29
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray3
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray30
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray31
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray32
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray33
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray34
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray35
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray36
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray37
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray38
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray39
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray4
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray40
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray41
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray42
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray43
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray44
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray45
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray46
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray47
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray48
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray49
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray5
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray50
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray6
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray7
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray8
operator ParamGenerator<T>	third_party/gmock/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray9
operator T&	third_party/gmock/gmock/gmock.h	/^  operator T&() const { return *pointer_; }$/;"	f	class:testing::internal::ReferenceWrapper
operator bool	third_party/gmock/gtest/gtest.h	/^  operator bool() const { return success_; }  \/\/ NOLINT$/;"	f	class:testing::AssertionResult
operator bool	third_party/gmock/gtest/gtest.h	/^  operator bool() const { return true; }$/;"	f	struct:testing::internal::ConstCharPtr
operatorMask	src/sqlite/sqlite3.c	/^static u16 operatorMask(int op){$/;"	f	file:
optimalReserve	src/sqlite/sqlite3.c	/^  u8 optimalReserve;    \/* Desired amount of reserved space per page *\/$/;"	m	struct:BtShared	file:
optionMatch	src/sqlite/shell.c	/^static int optionMatch(const char *zStr, const char *zOpt){$/;"	f	file:
orconf	src/sqlite/sqlite3.c	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg	file:
orconf	src/sqlite/sqlite3.c	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep	file:
orderByConsumed	src/include/sqlite/sqlite3.h	/^int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
orderByConsumed	src/sqlite/sqlite3.c	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	file:
original_reporter_	third_party/gmock/gtest/gtest.h	/^  TestPartResultReporterInterface* original_reporter_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
original_working_dir	third_party/gmock/gmock-gtest-all.cc	/^const char* UnitTest::original_working_dir() const {$/;"	f	class:testing::UnitTest
original_working_dir_	third_party/gmock/gmock-gtest-all.cc	/^  internal::FilePath original_working_dir_;$/;"	m	class:testing::internal::UnitTestImpl	file:
orphanTrigger	src/sqlite/sqlite3.c	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
osAccess	src/sqlite/sqlite3.c	30669;"	d	file:
osAreFileApisANSI	src/sqlite/sqlite3.c	38639;"	d	file:
osAreFileApisANSI	src/sqlite/sqlite3.c	38660;"	d	file:
osCharLowerW	src/sqlite/sqlite3.c	38669;"	d	file:
osCharUpperW	src/sqlite/sqlite3.c	38677;"	d	file:
osClose	src/sqlite/sqlite3.c	30666;"	d	file:
osCloseHandle	src/sqlite/sqlite3.c	38681;"	d	file:
osCreateEventExW	src/sqlite/sqlite3.c	39147;"	d	file:
osCreateFile2	src/sqlite/sqlite3.c	39201;"	d	file:
osCreateFileA	src/sqlite/sqlite3.c	38689;"	d	file:
osCreateFileMappingA	src/sqlite/sqlite3.c	38709;"	d	file:
osCreateFileMappingFromApp	src/sqlite/sqlite3.c	39256;"	d	file:
osCreateFileMappingW	src/sqlite/sqlite3.c	38719;"	d	file:
osCreateFileW	src/sqlite/sqlite3.c	38698;"	d	file:
osCreateMutexW	src/sqlite/sqlite3.c	38728;"	d	file:
osDeleteFileA	src/sqlite/sqlite3.c	38737;"	d	file:
osDeleteFileW	src/sqlite/sqlite3.c	38745;"	d	file:
osFallocate	src/sqlite/sqlite3.c	30741;"	d	file:
osFchmod	src/sqlite/sqlite3.c	30734;"	d	file:
osFchown	src/sqlite/sqlite3.c	30760;"	d	file:
osFcntl	src/sqlite/sqlite3.c	30695;"	d	file:
osFcntl	src/sqlite/sqlite3.c	31070;"	d	file:
osFcntl	src/sqlite/sqlite3.c	31071;"	d	file:
osFileTimeToLocalFileTime	src/sqlite/sqlite3.c	38753;"	d	file:
osFileTimeToSystemTime	src/sqlite/sqlite3.c	38762;"	d	file:
osFlushFileBuffers	src/sqlite/sqlite3.c	38767;"	d	file:
osFlushViewOfFile	src/sqlite/sqlite3.c	39298;"	d	file:
osFormatMessageA	src/sqlite/sqlite3.c	38775;"	d	file:
osFormatMessageW	src/sqlite/sqlite3.c	38784;"	d	file:
osFreeLibrary	src/sqlite/sqlite3.c	38793;"	d	file:
osFstat	src/sqlite/sqlite3.c	30685;"	d	file:
osFtruncate	src/sqlite/sqlite3.c	30692;"	d	file:
osGetCurrentProcessId	src/sqlite/sqlite3.c	38797;"	d	file:
osGetDiskFreeSpaceA	src/sqlite/sqlite3.c	38805;"	d	file:
osGetDiskFreeSpaceW	src/sqlite/sqlite3.c	38814;"	d	file:
osGetFileAttributesA	src/sqlite/sqlite3.c	38823;"	d	file:
osGetFileAttributesExW	src/sqlite/sqlite3.c	38839;"	d	file:
osGetFileAttributesW	src/sqlite/sqlite3.c	38831;"	d	file:
osGetFileInformationByHandleEx	src/sqlite/sqlite3.c	39183;"	d	file:
osGetFileSize	src/sqlite/sqlite3.c	38848;"	d	file:
osGetFullPathNameA	src/sqlite/sqlite3.c	38856;"	d	file:
osGetFullPathNameW	src/sqlite/sqlite3.c	38865;"	d	file:
osGetLastError	src/sqlite/sqlite3.c	38870;"	d	file:
osGetNativeSystemInfo	src/sqlite/sqlite3.c	39227;"	d	file:
osGetProcAddressA	src/sqlite/sqlite3.c	38885;"	d	file:
osGetProcessHeap	src/sqlite/sqlite3.c	39248;"	d	file:
osGetSystemInfo	src/sqlite/sqlite3.c	38894;"	d	file:
osGetSystemTime	src/sqlite/sqlite3.c	38898;"	d	file:
osGetSystemTimeAsFileTime	src/sqlite/sqlite3.c	38906;"	d	file:
osGetTempPathA	src/sqlite/sqlite3.c	38915;"	d	file:
osGetTempPathW	src/sqlite/sqlite3.c	38923;"	d	file:
osGetTickCount	src/sqlite/sqlite3.c	38931;"	d	file:
osGetTickCount64	src/sqlite/sqlite3.c	39219;"	d	file:
osGetVersionExA	src/sqlite/sqlite3.c	38939;"	d	file:
osGetVersionExW	src/sqlite/sqlite3.c	38949;"	d	file:
osGetcwd	src/sqlite/sqlite3.c	30672;"	d	file:
osGeteuid	src/sqlite/sqlite3.c	30763;"	d	file:
osGetpagesize	src/sqlite/sqlite3.c	30791;"	d	file:
osGetpid	src/sqlite/sqlite3.c	30278;"	d	file:
osHeapAlloc	src/sqlite/sqlite3.c	38954;"	d	file:
osHeapCompact	src/sqlite/sqlite3.c	39003;"	d	file:
osHeapCreate	src/sqlite/sqlite3.c	38963;"	d	file:
osHeapDestroy	src/sqlite/sqlite3.c	38972;"	d	file:
osHeapFree	src/sqlite/sqlite3.c	38976;"	d	file:
osHeapReAlloc	src/sqlite/sqlite3.c	38980;"	d	file:
osHeapSize	src/sqlite/sqlite3.c	38985;"	d	file:
osHeapValidate	src/sqlite/sqlite3.c	38994;"	d	file:
osInterlockedCompareExchange	src/sqlite/sqlite3.c	39267;"	d	file:
osIsNT	src/sqlite/sqlite3.c	39561;"	d	file:
osIsNT	src/sqlite/sqlite3.c	39563;"	d	file:
osIsNT	src/sqlite/sqlite3.c	39565;"	d	file:
osIsNT	src/sqlite/sqlite3.c	39567;"	d	file:
osLoadLibraryA	src/sqlite/sqlite3.c	39011;"	d	file:
osLoadLibraryW	src/sqlite/sqlite3.c	39020;"	d	file:
osLoadPackagedLibrary	src/sqlite/sqlite3.c	39210;"	d	file:
osLocalFree	src/sqlite/sqlite3.c	39028;"	d	file:
osLocaltime	src/sqlite/sqlite3.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osLockFile	src/sqlite/sqlite3.c	39037;"	d	file:
osLockFileEx	src/sqlite/sqlite3.c	39048;"	d	file:
osLstat	src/sqlite/sqlite3.c	30805;"	d	file:
osMapViewOfFile	src/sqlite/sqlite3.c	39059;"	d	file:
osMapViewOfFileFromApp	src/sqlite/sqlite3.c	39192;"	d	file:
osMkdir	src/sqlite/sqlite3.c	30750;"	d	file:
osMmap	src/sqlite/sqlite3.c	30770;"	d	file:
osMremap	src/sqlite/sqlite3.c	30784;"	d	file:
osMultiByteToWideChar	src/sqlite/sqlite3.c	39064;"	d	file:
osMunmap	src/sqlite/sqlite3.c	30777;"	d	file:
osOpen	src/sqlite/sqlite3.c	30663;"	d	file:
osOpenDirectory	src/sqlite/sqlite3.c	30747;"	d	file:
osOutputDebugStringA	src/sqlite/sqlite3.c	39236;"	d	file:
osOutputDebugStringW	src/sqlite/sqlite3.c	39244;"	d	file:
osPread	src/sqlite/sqlite3.c	30705;"	d	file:
osPread64	src/sqlite/sqlite3.c	30712;"	d	file:
osPwrite	src/sqlite/sqlite3.c	30722;"	d	file:
osPwrite64	src/sqlite/sqlite3.c	30730;"	d	file:
osQueryPerformanceCounter	src/sqlite/sqlite3.c	39069;"	d	file:
osRead	src/sqlite/sqlite3.c	30698;"	d	file:
osReadFile	src/sqlite/sqlite3.c	39074;"	d	file:
osReadlink	src/sqlite/sqlite3.c	30798;"	d	file:
osRmdir	src/sqlite/sqlite3.c	30753;"	d	file:
osSetEndOfFile	src/sqlite/sqlite3.c	39079;"	d	file:
osSetFilePointer	src/sqlite/sqlite3.c	39087;"	d	file:
osSetFilePointerEx	src/sqlite/sqlite3.c	39174;"	d	file:
osSleep	src/sqlite/sqlite3.c	39096;"	d	file:
osStat	src/sqlite/sqlite3.c	30675;"	d	file:
osSystemTimeToFileTime	src/sqlite/sqlite3.c	39100;"	d	file:
osUnlink	src/sqlite/sqlite3.c	30744;"	d	file:
osUnlockFile	src/sqlite/sqlite3.c	39110;"	d	file:
osUnlockFileEx	src/sqlite/sqlite3.c	39120;"	d	file:
osUnmapViewOfFile	src/sqlite/sqlite3.c	39129;"	d	file:
osUuidCreate	src/sqlite/sqlite3.c	39281;"	d	file:
osUuidCreateSequential	src/sqlite/sqlite3.c	39289;"	d	file:
osWaitForSingleObject	src/sqlite/sqlite3.c	39156;"	d	file:
osWaitForSingleObjectEx	src/sqlite/sqlite3.c	39165;"	d	file:
osWideCharToMultiByte	src/sqlite/sqlite3.c	39133;"	d	file:
osWrite	src/sqlite/sqlite3.c	30715;"	d	file:
osWriteFile	src/sqlite/sqlite3.c	39138;"	d	file:
os_stack_trace_getter	third_party/gmock/gmock-gtest-all.cc	/^OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {$/;"	f	class:testing::internal::UnitTestImpl
os_stack_trace_getter_	third_party/gmock/gmock-gtest-all.cc	/^  OsStackTraceGetterInterface* os_stack_trace_getter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
out	src/sqlite/shell.c	/^  FILE *out;             \/* Write results here *\/$/;"	m	struct:ShellState	file:
out2Prerelease	src/sqlite/sqlite3.c	/^static Mem *out2Prerelease(Vdbe *p, VdbeOp *pOp){$/;"	f	file:
out2PrereleaseWithClear	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE Mem *out2PrereleaseWithClear(Mem *pOut){$/;"	f	file:
outCount	src/sqlite/shell.c	/^  int outCount;          \/* Revert to stdout when reaching zero *\/$/;"	m	struct:ShellState	file:
outcome	third_party/gmock/gmock-gtest-all.cc	/^  DeathTestOutcome outcome() const { return outcome_; }$/;"	f	class:testing::internal::DeathTestImpl
outcome_	third_party/gmock/gmock-gtest-all.cc	/^  DeathTestOutcome outcome_;$/;"	m	class:testing::internal::DeathTestImpl	file:
outfile	src/sqlite/shell.c	/^  char outfile[FILENAME_MAX]; \/* Filename for *out *\/$/;"	m	struct:ShellState	file:
outputLogHeader_	src/include/common/logger.h	/^inline void outputLogHeader_(const char *file, int line, const char *func,$/;"	f	namespace:cmudb
output_	third_party/gmock/gmock-gtest-all.cc	/^  std::string output_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
output_c_string	src/sqlite/shell.c	/^static void output_c_string(FILE *out, const char *z){$/;"	f	file:
output_csv	src/sqlite/shell.c	/^static void output_csv(ShellState *p, const char *z, int bSep){$/;"	f	file:
output_file_	third_party/gmock/gmock-gtest-all.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::XmlUnitTestResultPrinter	file:
output_file_close	src/sqlite/shell.c	/^static void output_file_close(FILE *f){$/;"	f	file:
output_file_open	src/sqlite/shell.c	/^static FILE *output_file_open(const char *zFile){$/;"	f	file:
output_hex_blob	src/sqlite/shell.c	/^static void output_hex_blob(FILE *out, const void *pBlob, int nBlob){$/;"	f	file:
output_html_string	src/sqlite/shell.c	/^static void output_html_string(FILE *out, const char *z){$/;"	f	file:
output_quoted_escaped_string	src/sqlite/shell.c	/^static void output_quoted_escaped_string(FILE *out, const char *z){$/;"	f	file:
output_quoted_string	src/sqlite/shell.c	/^static void output_quoted_string(FILE *out, const char *z){$/;"	f	file:
output_reset	src/sqlite/shell.c	/^static void output_reset(ShellState *p){$/;"	f	file:
overflow	src/sqlite/sqlite3.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overload_function	src/include/sqlite/sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines
overload_function	src/sqlite/sqlite3.c	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	file:
override	src/include/hash/extendible_hash.h	/^  bool Find(const K &key, V &value) override;$/;"	m	class:cmudb::ExtendibleHash
override	src/include/hash/extendible_hash.h	/^  bool Remove(const K &key) override;$/;"	m	class:cmudb::ExtendibleHash
override	src/include/hash/extendible_hash.h	/^  void Insert(const K &key, const V &value) override;$/;"	m	class:cmudb::ExtendibleHash
override	src/include/index/b_plus_tree_index.h	/^                   Transaction *transaction = nullptr) override;$/;"	m	class:cmudb::BPlusTreeIndex
override	src/include/index/b_plus_tree_index.h	/^               Transaction *transaction = nullptr) override;$/;"	m	class:cmudb::BPlusTreeIndex
override	src/include/type/bigint_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Add(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value CastAs(const Value &val, const TypeId type_id) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Divide(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Modulo(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Multiply(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value OperateNull(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Sqrt(const Value &val) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  Value Subtract(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  bool IsZero(const Value &val) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/bigint_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::BigintType
override	src/include/type/boolean_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  Value CastAs(const Value &val, const TypeId type_id) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/boolean_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::BooleanType
override	src/include/type/decimal_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Add(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value CastAs(const Value &val, const TypeId type_id) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Divide(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Max(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Min(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Modulo(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Multiply(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value OperateNull(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Sqrt(const Value &val) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  Value Subtract(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  bool IsZero(const Value &val) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/decimal_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::DecimalType
override	src/include/type/integer_parent_type.h	/^                                        const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                                     const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                                   const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                                  const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                                const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                            const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                           const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                         const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                       const TypeId type_id) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^                       const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  Value Max(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  Value Min(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual Value Add(const Value &left, const Value &right) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual Value Copy(const Value &val) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual Value DeserializeFrom(const char *storage) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual Value Sqrt(const Value &val) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual bool IsZero(const Value &val) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual std::string ToString(const Value &val) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_parent_type.h	/^  virtual void SerializeTo(const Value &val, char *storage) const override = 0;$/;"	m	class:cmudb::IntegerParentType
override	src/include/type/integer_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Add(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value CastAs(const Value &val, const TypeId type_id) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Divide(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Modulo(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Multiply(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value OperateNull(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Sqrt(const Value &val) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  Value Subtract(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  bool IsZero(const Value &val) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/integer_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::IntegerType
override	src/include/type/smallint_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Add(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value CastAs(const Value &val, const TypeId type_id) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Divide(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Modulo(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Multiply(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value OperateNull(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Sqrt(const Value &val) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  Value Subtract(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  bool IsZero(const Value &val) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/smallint_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::SmallintType
override	src/include/type/tinyint_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Add(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value CastAs(const Value &val, const TypeId type_id) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Divide(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Modulo(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Multiply(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value OperateNull(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Sqrt(const Value &val) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  Value Subtract(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  bool IsZero(const Value &val) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/tinyint_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::TinyintType
override	src/include/type/varlen_type.h	/^                                   const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^                                const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^                             const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^                           const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  CmpBool CompareEquals(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  CmpBool CompareLessThan(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  Value CastAs(const Value &value, const TypeId type_id) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  Value Copy(const Value &val) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  Value DeserializeFrom(const char *storage) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  const char *GetData(const Value &val) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  std::string ToString(const Value &val) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  uint32_t GetLength(const Value &val) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  virtual Value Max(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  virtual Value Min(const Value &left, const Value &right) const override;$/;"	m	class:cmudb::VarlenType
override	src/include/type/varlen_type.h	/^  void SerializeTo(const Value &val, char *storage) const override;$/;"	m	class:cmudb::VarlenType
owner	src/sqlite/sqlite3.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	src/sqlite/sqlite3.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner_	third_party/gmock/gmock/gmock.h	/^  FunctionMockerBase<F>* const owner_;$/;"	m	class:testing::internal::TypedExpectation
owner_	third_party/gmock/gtest/gtest.h	/^  pthread_t owner_;  \/\/ The thread holding the mutex.$/;"	m	class:std::tr1::MutexBase
p	src/sqlite/shell.c	/^  sqlite3_session *p;      \/* The open session *\/$/;"	m	struct:OpenSession	file:
p	src/sqlite/sqlite3.c	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::p4union	file:
p	src/sqlite/sqlite3.c	/^  const char *p;                  \/* Token text (not NULL terminated) *\/$/;"	m	struct:Fts5Token	file:
p	src/sqlite/sqlite3.c	/^  u8 *p;                          \/* Pointer to buffer containing record *\/$/;"	m	struct:Fts5Data	file:
p	src/sqlite/sqlite3.c	/^  u8 *p;$/;"	m	struct:Fts5Buffer	file:
p	src/sqlite/sqlite3.c	/^  void *p;          \/* Pointer to sampled record *\/$/;"	m	struct:IndexSample	file:
p1	src/sqlite/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p1	src/sqlite/sqlite3.c	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp	file:
p1	src/sqlite/sqlite3.c	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList	file:
p2	src/sqlite/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p2	src/sqlite/sqlite3.c	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp	file:
p2	src/sqlite/sqlite3.c	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList	file:
p3	src/sqlite/sqlite3.c	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp	file:
p3	src/sqlite/sqlite3.c	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList	file:
p3	src/sqlite/sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p4	src/sqlite/sqlite3.c	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::p4union	file:
p4type	src/sqlite/sqlite3.c	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp	file:
p4union	src/sqlite/sqlite3.c	/^  union p4union {     \/* fourth parameter *\/$/;"	u	struct:VdbeOp	file:
p5	src/sqlite/sqlite3.c	/^  u16 p5;             \/* Fifth parameter is an unsigned 16-bit integer *\/$/;"	m	struct:VdbeOp	file:
p5	src/sqlite/sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
pAggInfo	src/sqlite/sqlite3.c	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr	file:
pAggInfo	src/sqlite/sqlite3.c	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext	file:
pAinc	src/sqlite/sqlite3.c	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse	file:
pAltCursor	src/sqlite/sqlite3.c	/^  VdbeCursor *pAltCursor; \/* Associated index cursor from which to read *\/$/;"	m	struct:VdbeCursor	file:
pAndInfo	src/sqlite/sqlite3.c	/^    WhereAndInfo *pAndInfo; \/* Extra information if (eOperator& WO_AND)!=0 *\/$/;"	m	union:WhereTerm::__anon35	file:
pApi	src/sqlite/sqlite3.c	/^  const Fts5ExtensionApi *pApi;   \/* API offered by current FTS version *\/$/;"	m	struct:CInstIter	file:
pAppData	src/include/sqlite/sqlite3.h	/^void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	src/include/sqlite/sqlite3.h	/^void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pAppData	src/sqlite/sqlite3.c	/^  void *pAppData;                    \/* The extra pAppData, if any. *\/$/;"	m	struct:winVfsAppData	file:
pAppData	src/sqlite/sqlite3.c	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	file:
pAppData	src/sqlite/sqlite3.c	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	file:
pArg	src/include/sqlite/sqlite3.h	/^void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pArg	src/include/sqlite/sqlite3.h	/^void *pArg;$/;"	m	struct:sqlite3_pcache_methods2
pArg	src/sqlite/sqlite3.c	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler	file:
pArg	src/sqlite/sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	file:
pArg	src/sqlite/sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2	file:
pAuthArg	src/sqlite/sqlite3.c	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3	file:
pAux	src/sqlite/sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* Currently executing extension function *\/$/;"	m	struct:Fts5Cursor	file:
pAux	src/sqlite/sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* Extension to which this belongs *\/$/;"	m	struct:Fts5Auxdata	file:
pAux	src/sqlite/sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* First in list of all aux. functions *\/$/;"	m	struct:Fts5Global	file:
pAux	src/sqlite/sqlite3.c	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module	file:
pAux	src/sqlite/sqlite3.c	/^  void *pAux;                     \/* Aux data pointer *\/$/;"	m	struct:AuxData	file:
pAuxData	src/sqlite/sqlite3.c	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:Vdbe	file:
pAuxData	src/sqlite/sqlite3.c	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:VdbeFrame	file:
pAuxdata	src/sqlite/sqlite3.c	/^  Fts5Auxdata *pAuxdata;          \/* First in linked list of saved aux-data *\/$/;"	m	struct:Fts5Cursor	file:
pBackup	src/sqlite/sqlite3.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBlob	src/sqlite/sqlite3.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlockingConnection	src/sqlite/sqlite3.c	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3	file:
pBt	src/sqlite/sqlite3.c	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor	file:
pBt	src/sqlite/sqlite3.c	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage	file:
pBt	src/sqlite/sqlite3.c	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree	file:
pBt	src/sqlite/sqlite3.c	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk	file:
pBt	src/sqlite/sqlite3.c	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db	file:
pBtree	src/sqlite/sqlite3.c	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor	file:
pBtree	src/sqlite/sqlite3.c	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock	file:
pBtx	src/sqlite/sqlite3.c	/^  Btree *pBtx;            \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor	file:
pBuf	src/include/sqlite/sqlite3.h	/^void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page
pBuf	src/sqlite/sqlite3.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistCallbackCtx	file:
pBuf	src/sqlite/sqlite3.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pBuf	src/sqlite/sqlite3.c	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page	file:
pBulk	src/sqlite/sqlite3.c	/^  void *pBulk;                        \/* Bulk memory used by pcache-local *\/$/;"	m	struct:PCache1	file:
pBusyHandlerArg	src/sqlite/sqlite3.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pCCurHint	src/sqlite/sqlite3.c	/^    struct CCurHint *pCCurHint;               \/* Used by codeCursorHint() *\/$/;"	m	union:Walker::__anon20	typeref:struct:Walker::__anon20::CCurHint	file:
pCache	src/sqlite/sqlite3.c	/^  PCache *pCache;                \/* PRIVATE: Cache that owns this page *\/$/;"	m	struct:PgHdr	file:
pCache	src/sqlite/sqlite3.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCache	src/sqlite/sqlite3.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCheck	src/sqlite/sqlite3.c	/^  ExprList *pCheck;    \/* All CHECK constraints *\/$/;"	m	struct:Table	file:
pChunk	src/sqlite/sqlite3.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	src/sqlite/sqlite3.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pCodec	src/sqlite/sqlite3.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pColl	src/sqlite/sqlite3.c	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::p4union	file:
pCollNeededArg	src/sqlite/sqlite3.c	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3	file:
pCols	src/sqlite/sqlite3.c	/^    ExprList *pCols;                \/* List of explicit column names, or NULL *\/$/;"	m	struct:With::Cte	file:
pColset	src/sqlite/sqlite3.c	/^  Fts5Colset *pColset;            \/* Columns to search (NULL -> all columns) *\/$/;"	m	struct:Fts5ExprNearset	file:
pColset	src/sqlite/sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to these columns *\/$/;"	m	struct:Fts5Iter	file:
pColset	src/sqlite/sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistCallbackCtx	file:
pColset	src/sqlite/sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pColumns	src/sqlite/sqlite3.c	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger	file:
pCommitArg	src/sqlite/sqlite3.c	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/$/;"	m	struct:sqlite3	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;            \/* Fts5 table configuration *\/$/;"	m	struct:Fts5VocabCursor	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Index	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Table	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Expr	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5IntegrityCtx	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Parse	file:
pConfig	src/sqlite/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Storage	file:
pConflict	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pConflict;        \/* Points to conflicting row, if any *\/$/;"	m	struct:sqlite3_changeset_iter	file:
pConstExpr	src/sqlite/sqlite3.c	/^  ExprList *pConstExpr;\/* Constant expressions *\/$/;"	m	struct:Parse	file:
pContext	src/include/sqlite/sqlite3.h	/^void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	src/include/sqlite/sqlite3.h	/^void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pContext	src/sqlite/sqlite3.c	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
pContext	src/sqlite/sqlite3.c	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pContext	src/sqlite/sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pCovidx	src/sqlite/sqlite3.c	/^    Index *pCovidx;       \/* Possible covering index for WHERE_MULTI_OR *\/$/;"	m	union:WhereLevel::__anon30	file:
pCsr	src/sqlite/sqlite3.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCsr	src/sqlite/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	src/sqlite/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	src/sqlite/sqlite3.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCsr	src/sqlite/sqlite3.c	/^  Fts5Cursor *pCsr;               \/* First in list of all open cursors *\/$/;"	m	struct:Fts5Global	file:
pCsr	src/sqlite/sqlite3.c	/^  VdbeCursor *pCsr;               \/* Cursor to read old values from *\/$/;"	m	struct:PreUpdate	file:
pCsr	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer_cursor *pCsr; \/* Cursor to iterate through zInput *\/$/;"	m	struct:Fts3tokCursor	file:
pCtx	src/sqlite/sqlite3.c	/^    sqlite3_context *pCtx; \/* Used when p4type is P4_FUNCCTX *\/$/;"	m	union:VdbeOp::p4union	file:
pCtx	src/sqlite/sqlite3.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCtx	src/sqlite/sqlite3.c	/^  sqlite3_context *pCtx;   \/* Function context - put error messages here *\/$/;"	m	struct:JsonString	file:
pCtx	src/sqlite/sqlite3.c	/^  void *pCtx;$/;"	m	struct:PorterContext	file:
pCtx	src/sqlite/sqlite3.c	/^  void *pCtx;$/;"	m	struct:SessionHook	file:
pCurrent	src/sqlite/sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCurrent	src/sqlite/sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:win_syscall	file:
pCursor	src/sqlite/sqlite3.c	/^    BtCursor *pCursor;          \/* CURTYPE_BTREE.  Btree cursor *\/$/;"	m	union:VdbeCursor::__anon21	file:
pCursor	src/sqlite/sqlite3.c	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared	file:
pCursor	src/sqlite/sqlite3.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pData	src/sqlite/sqlite3.c	/^  Fts5Data *pData;              \/* Data for current page of this level *\/$/;"	m	struct:Fts5DlidxLvl	file:
pData	src/sqlite/sqlite3.c	/^  const u8 *pData;$/;"	m	struct:Fts5IndexIter	file:
pData	src/sqlite/sqlite3.c	/^  const void *pData;      \/* Data for tables.  NULL for indexes *\/$/;"	m	struct:BtreePayload	file:
pData	src/sqlite/sqlite3.c	/^  void *pData;                   \/* Page data *\/$/;"	m	struct:PgHdr	file:
pDataVersion	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDataVersion;$/;"	m	struct:Fts5Index	file:
pDbFd	src/sqlite/sqlite3.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbPage	src/sqlite/sqlite3.c	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage	file:
pDef	src/sqlite/sqlite3.c	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:sqlite3_value::MemValue	file:
pDefault	src/sqlite/sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDefault	src/sqlite/sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:win_syscall	file:
pDeferred	src/sqlite/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor	file:
pDeferred	src/sqlite/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pDelFrame	src/sqlite/sqlite3.c	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe	file:
pDelete	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDelete;          \/* DELETE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pDelete	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDelete;          \/* Statement for DELETE ops *\/$/;"	m	struct:RbuObjIter	file:
pDeleteNode	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteParent	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteRowid	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleted	src/sqlite/sqlite3.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDeleter	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pDeleter;         \/* "DELETE FROM %_data ... id>=? AND id<=?" *\/$/;"	m	struct:Fts5Index	file:
pDest	src/sqlite/sqlite3.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	src/sqlite/sqlite3.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestructor	src/sqlite/sqlite3.c	/^    FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	union:FuncDef::__anon12	file:
pDflt	src/sqlite/sqlite3.c	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column	file:
pDfltColl	src/sqlite/sqlite3.c	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3	file:
pDfltTok	src/sqlite/sqlite3.c	/^  Fts5TokenizerModule *pDfltTok;  \/* Default tokenizer module *\/$/;"	m	struct:Fts5Global	file:
pDirty	src/sqlite/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	src/sqlite/sqlite3.c	/^  PgHdr *pDirty;                 \/* Transient list of dirty sorted by pgno *\/$/;"	m	struct:PgHdr	file:
pDirtyNext	src/sqlite/sqlite3.c	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyPrev	src/sqlite/sqlite3.c	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyTail	src/sqlite/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDisconnect	src/sqlite/sqlite3.c	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3	file:
pDlidx	src/sqlite/sqlite3.c	/^  Fts5DlidxIter *pDlidx;          \/* If there is a doclist-index *\/$/;"	m	struct:Fts5SegIter	file:
pEList	src/sqlite/sqlite3.c	/^  ExprList *pEList;         \/* Replacement expressions *\/$/;"	m	struct:SubstContext	file:
pEList	src/sqlite/sqlite3.c	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select	file:
pEList	src/sqlite/sqlite3.c	/^  ExprList *pEList;    \/* Optional list of result-set columns *\/$/;"	m	struct:NameContext	file:
pEnd	src/sqlite/sqlite3.c	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside	file:
pEnd	src/sqlite/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pEntry	src/sqlite/sqlite3.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pEpoTab	src/sqlite/sqlite3.c	/^  Table *pEpoTab;                      \/* Eponymous table for this module *\/$/;"	m	struct:Module	file:
pErr	src/sqlite/sqlite3.c	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3	file:
pExpr	src/sqlite/sqlite3.c	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pExpr	src/sqlite/sqlite3.c	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pExpr	src/sqlite/sqlite3.c	/^    Expr *pExpr;            \/* The parse tree for this expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
pExpr	src/sqlite/sqlite3.c	/^    Expr *pExpr;           \/* Used when p4type is P4_EXPR *\/$/;"	m	union:VdbeOp::p4union	file:
pExpr	src/sqlite/sqlite3.c	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm	file:
pExpr	src/sqlite/sqlite3.c	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan	file:
pExpr	src/sqlite/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor	file:
pExpr	src/sqlite/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExpr	src/sqlite/sqlite3.c	/^  Fts5Expr *pExpr;                \/* Expression for MATCH queries *\/$/;"	m	struct:Fts5Cursor	file:
pExpr	src/sqlite/sqlite3.c	/^  Fts5Expr *pExpr;$/;"	m	struct:Fts5ExprCtx	file:
pExpr	src/sqlite/sqlite3.c	/^  Fts5ExprNode *pExpr;            \/* Result of a successful parse *\/$/;"	m	struct:Fts5Parse	file:
pExprList	src/sqlite/sqlite3.c	/^  ExprList *pExprList; \/* SET clause for UPDATE. *\/$/;"	m	struct:TriggerStep	file:
pExtra	src/include/sqlite/sqlite3.h	/^void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page
pExtra	src/sqlite/sqlite3.c	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr	file:
pExtra	src/sqlite/sqlite3.c	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page	file:
pFKey	src/sqlite/sqlite3.c	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table	file:
pFd	src/sqlite/sqlite3.c	/^  sqlite3_file *pFd;              \/* File handle *\/$/;"	m	struct:SorterFile	file:
pFd	src/sqlite/sqlite3.c	/^  sqlite3_file *pFd;              \/* File handle to write to *\/$/;"	m	struct:PmaWriter	file:
pFd	src/sqlite/sqlite3.c	/^  sqlite3_file *pFd;           \/* The WAL file to which we write *\/$/;"	m	struct:WalWriter	file:
pFd	src/sqlite/sqlite3.c	/^  sqlite3_file *pFd;          \/* File handle we are reading from *\/$/;"	m	struct:PmaReader	file:
pFiller	src/sqlite/sqlite3.c	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:sqlite3_value	file:
pFilter	src/sqlite/sqlite3.c	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader	file:
pFilterCtx	src/sqlite/sqlite3.c	/^  void *pFilterCtx;               \/* First argument to pass to xTableFilter *\/$/;"	m	struct:sqlite3_session	file:
pFirst	src/sqlite/sqlite3.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	src/sqlite/sqlite3.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon23	typeref:struct:__anon23::MemBlockHdr	file:
pFirst	src/sqlite/sqlite3.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	src/sqlite/sqlite3.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pForest	src/sqlite/sqlite3.c	/^  struct RowSetEntry *pForest;   \/* List of binary trees of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrame	src/sqlite/sqlite3.c	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:sqlite3_value::MemValue	file:
pFrame	src/sqlite/sqlite3.c	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe	file:
pFree	src/sqlite/sqlite3.c	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside	file:
pFree	src/sqlite/sqlite3.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	src/sqlite/sqlite3.c	/^  PgHdr1 *pFree;                      \/* List of unused pcache-local pages *\/$/;"	m	struct:PCache1	file:
pFree	src/sqlite/sqlite3.c	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe	file:
pFresh	src/sqlite/sqlite3.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrom	src/sqlite/sqlite3.c	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey	file:
pFts	src/sqlite/sqlite3.c	/^  Fts5Context *pFts;              \/* First arg to pass to pApi functions *\/$/;"	m	struct:CInstIter	file:
pFts3Tab	src/sqlite/sqlite3.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFunc	src/sqlite/sqlite3.c	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pFunc	src/sqlite/sqlite3.c	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::p4union	file:
pFunc	src/sqlite/sqlite3.c	/^  FuncDef *pFunc;         \/* Pointer to function information *\/$/;"	m	struct:sqlite3_context	file:
pFuncArg	src/sqlite/sqlite3.c	/^      ExprList *pFuncArg;  \/* Arguments to table-valued-function *\/$/;"	m	union:SrcList::SrcList_item::__anon18	file:
pGlobal	src/sqlite/sqlite3.c	/^  Fts5Global *pGlobal;            \/* FTS5 global object for this database *\/$/;"	m	struct:Fts5VocabTable	file:
pGlobal	src/sqlite/sqlite3.c	/^  Fts5Global *pGlobal;            \/* Global (connection wide) data *\/$/;"	m	struct:Fts5Table	file:
pGlobal	src/sqlite/sqlite3.c	/^  Fts5Global *pGlobal;            \/* Global context for this function *\/$/;"	m	struct:Fts5Auxiliary	file:
pGroup	src/sqlite/sqlite3.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroupBy	src/sqlite/sqlite3.c	/^    ExprList *pGroupBy;                       \/* GROUP BY clause *\/$/;"	m	union:Walker::__anon20	file:
pGroupBy	src/sqlite/sqlite3.c	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo	file:
pGroupBy	src/sqlite/sqlite3.c	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select	file:
pGroupBy	src/sqlite/sqlite3.c	/^  ExprList *pGroupBy;$/;"	m	struct:HavingToWhereCtx	file:
pHasContent	src/sqlite/sqlite3.c	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared	file:
pHash	src/sqlite/sqlite3.c	/^    FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	union:FuncDef::__anon12	file:
pHash	src/sqlite/sqlite3.c	/^  Fts5Hash *pHash;                \/* Hash table for in-memory data *\/$/;"	m	struct:Fts5Index	file:
pHashNext	src/sqlite/sqlite3.c	/^  Fts5HashEntry *pHashNext;       \/* Next hash entry with same hash-key *\/$/;"	m	struct:Fts5HashEntry	file:
pHaving	src/sqlite/sqlite3.c	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select	file:
pHavingCtx	src/sqlite/sqlite3.c	/^    struct HavingToWhereCtx *pHavingCtx;      \/* HAVING to WHERE clause ctx *\/$/;"	m	union:Walker::__anon20	typeref:struct:Walker::__anon20::HavingToWhereCtx	file:
pHead	src/sqlite/sqlite3.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHeap	src/sqlite/sqlite3.c	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config	file:
pI64	src/sqlite/sqlite3.c	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::p4union	file:
pIBIndex	src/sqlite/sqlite3.c	/^    Index *pIBIndex;  \/* Index structure corresponding to u1.zIndexedBy *\/$/;"	m	struct:SrcList::SrcList_item	file:
pId	src/sqlite/sqlite3.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	src/sqlite/sqlite3.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pIdList	src/sqlite/sqlite3.c	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep	file:
pIdx	src/sqlite/sqlite3.c	/^  Fts5Index *pIdx;$/;"	m	struct:Fts5FlushCtx	file:
pIdx	src/sqlite/sqlite3.c	/^  Index *pIdx;     \/* The index to be tested for coverage *\/$/;"	m	struct:IdxCover	file:
pIdx	src/sqlite/sqlite3.c	/^  Index *pIdx;    \/* The index used to access the table *\/$/;"	m	struct:CCurHint	file:
pIdx	src/sqlite/sqlite3.c	/^  Index *pIdx;$/;"	m	struct:ValueNewStat4Ctx	file:
pIdxCover	src/sqlite/sqlite3.c	/^    struct IdxCover *pIdxCover;               \/* Check for index coverage *\/$/;"	m	union:Walker::__anon20	typeref:struct:Walker::__anon20::IdxCover	file:
pIdxDeleter	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pIdxDeleter;      \/* "DELETE FROM %_idx WHERE segid=? *\/$/;"	m	struct:Fts5Index	file:
pIdxExpr	src/sqlite/sqlite3.c	/^  Expr *pIdxExpr;            \/* Search for this index expression *\/$/;"	m	struct:WhereScan	file:
pIdxExpr	src/sqlite/sqlite3.c	/^  Expr *pIdxExpr;    \/* The index expression *\/$/;"	m	struct:IdxExprTrans	file:
pIdxIter	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pIdxIter;         \/* Index iterator *\/$/;"	m	struct:RbuObjIter	file:
pIdxSelect	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pIdxSelect;$/;"	m	struct:Fts5Index	file:
pIdxTrans	src/sqlite/sqlite3.c	/^    struct IdxExprTrans *pIdxTrans;           \/* Convert indexed expr to column *\/$/;"	m	union:Walker::__anon20	typeref:struct:Walker::__anon20::IdxExprTrans	file:
pIdxWriter	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pIdxWriter;       \/* "INSERT ... %_idx VALUES(?,?,?,?)" *\/$/;"	m	struct:Fts5Index	file:
pIn	src/sqlite/sqlite3.c	/^  void *pIn;                                \/* First argument to xInput *\/$/;"	m	struct:SessionInput	file:
pIn	src/sqlite/sqlite3.c	/^  void *pIn;                     \/* Argument to the thread *\/$/;"	m	struct:SQLiteThread	file:
pIn	src/sqlite/sqlite3.c	/^  void *pIn;               \/* Argument to xTask *\/$/;"	m	struct:SQLiteThread	file:
pInJournal	src/sqlite/sqlite3.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInSavepoint	src/sqlite/sqlite3.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pIncr	src/sqlite/sqlite3.c	/^  IncrMerger *pIncr;          \/* Incremental merger *\/$/;"	m	struct:PmaReader	file:
pIndex	src/sqlite/sqlite3.c	/^      Index *pIndex;         \/* Index used, or NULL *\/$/;"	m	struct:WhereLoop::__anon32::__anon33	file:
pIndex	src/sqlite/sqlite3.c	/^  Fts5Index *pIndex;              \/* Associated FTS5 index *\/$/;"	m	struct:Fts5VocabCursor	file:
pIndex	src/sqlite/sqlite3.c	/^  Fts5Index *pIndex;              \/* Full-text index *\/$/;"	m	struct:Fts5Table	file:
pIndex	src/sqlite/sqlite3.c	/^  Fts5Index *pIndex;              \/* Index that owns this iterator *\/$/;"	m	struct:Fts5Iter	file:
pIndex	src/sqlite/sqlite3.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Expr	file:
pIndex	src/sqlite/sqlite3.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Storage	file:
pIndex	src/sqlite/sqlite3.c	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table	file:
pInfo	src/sqlite/sqlite3.c	/^  sqlite3_rtree_query_info *pInfo;  \/* xGeom and xQueryFunc argument *\/$/;"	m	struct:RtreeConstraint	file:
pInitMutex	src/sqlite/sqlite3.c	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config	file:
pInode	src/sqlite/sqlite3.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	src/sqlite/sqlite3.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInput	src/sqlite/sqlite3.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInsert	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pInsert;          \/* INSERT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pInsert	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pInsert;          \/* Statement for INSERT operations *\/$/;"	m	struct:RbuObjIter	file:
pIter	src/sqlite/sqlite3.c	/^  Fts5IndexIter *pIter;           \/* Iterator for this term *\/$/;"	m	struct:Fts5ExprTerm	file:
pIter	src/sqlite/sqlite3.c	/^  Fts5IndexIter *pIter;           \/* Term\/rowid iterator object *\/$/;"	m	struct:Fts5VocabCursor	file:
pIter	src/sqlite/sqlite3.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pKey	src/sqlite/sqlite3.c	/^  const char *pKey;            \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
pKey	src/sqlite/sqlite3.c	/^  const void *pKey;       \/* Key content for indexes.  NULL for tables *\/$/;"	m	struct:BtreePayload	file:
pKey	src/sqlite/sqlite3.c	/^  void *pKey;               \/* Saved key that was cursor last known position *\/$/;"	m	struct:BtCursor	file:
pKey	src/sqlite/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
pKeyInfo	src/sqlite/sqlite3.c	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::p4union	file:
pKeyInfo	src/sqlite/sqlite3.c	/^  KeyInfo *pKeyInfo;              \/* How to compare records *\/$/;"	m	struct:VdbeSorter	file:
pKeyInfo	src/sqlite/sqlite3.c	/^  KeyInfo *pKeyInfo;      \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor	file:
pKeyInfo	src/sqlite/sqlite3.c	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord	file:
pKeyInfo	src/sqlite/sqlite3.c	/^  struct KeyInfo *pKeyInfo;            \/* Arg passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo	file:
pLast	src/sqlite/sqlite3.c	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep	file:
pLast	src/sqlite/sqlite3.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon23	typeref:struct:__anon23::MemBlockHdr	file:
pLast	src/sqlite/sqlite3.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLeaf	src/sqlite/sqlite3.c	/^  Fts5Data *pLeaf;                \/* Current leaf data *\/$/;"	m	struct:Fts5SegIter	file:
pLeft	src/sqlite/sqlite3.c	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr	file:
pLeft	src/sqlite/sqlite3.c	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr	file:
pLeft	src/sqlite/sqlite3.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeftmost	src/sqlite/sqlite3.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLimit	src/sqlite/sqlite3.c	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pLimit	src/sqlite/sqlite3.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pList	src/sqlite/sqlite3.c	/^    ExprList *pList;     \/* op = IN, EXISTS, SELECT, CASE, FUNCTION, BETWEEN *\/$/;"	m	union:Expr::__anon14	file:
pList	src/sqlite/sqlite3.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	src/sqlite/sqlite3.c	/^  SessionTable *pList;            \/* List of tables in current patch *\/$/;"	m	struct:sqlite3_changegroup	file:
pList	src/sqlite/sqlite3.c	/^  SorterRecord *pList;            \/* Linked list of records *\/$/;"	m	struct:SorterList	file:
pList	src/sqlite/sqlite3.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	src/sqlite/sqlite3.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	src/sqlite/sqlite3.c	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist	file:
pList	src/sqlite/sqlite3.c	/^  char *pList;$/;"	m	struct:TokenDoclist	file:
pLock	src/sqlite/sqlite3.c	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared	file:
pLog	src/sqlite/shell.c	/^  FILE *pLog;            \/* Write log output here *\/$/;"	m	struct:ShellState	file:
pLogArg	src/sqlite/sqlite3.c	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config	file:
pLoops	src/sqlite/sqlite3.c	/^  WhereLoop *pLoops;        \/* List of all WhereLoop objects *\/$/;"	m	struct:WhereInfo	file:
pLruNext	src/sqlite/sqlite3.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	src/sqlite/sqlite3.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pMIBuffer	src/sqlite/sqlite3.c	/^  MatchinfoBuffer *pMIBuffer;     \/* Buffer for matchinfo data *\/$/;"	m	struct:Fts3Cursor	file:
pMain	src/sqlite/sqlite3.c	/^  rbu_file *pMain;                \/* Linked list of main db files *\/$/;"	m	struct:rbu_vfs	file:
pMainNext	src/sqlite/sqlite3.c	/^  rbu_file *pMainNext;            \/* Next MAIN_DB file *\/$/;"	m	struct:rbu_file	file:
pMap	src/sqlite/sqlite3.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMapRegion	src/sqlite/sqlite3.c	/^  void *pMapRegion;                   \/* Memory mapped region *\/$/;"	m	struct:unixFile	file:
pMapRegion	src/sqlite/sqlite3.c	/^  void *pMapRegion;             \/* Area memory mapped *\/$/;"	m	struct:winFile	file:
pMem	src/sqlite/sqlite3.c	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::p4union	file:
pMem	src/sqlite/sqlite3.c	/^  Mem *pMem;              \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context	file:
pMerger	src/sqlite/sqlite3.c	/^  MergeEngine *pMerger;           \/* Merge engine thread reads data from *\/$/;"	m	struct:IncrMerger	file:
pMerger	src/sqlite/sqlite3.c	/^  MergeEngine *pMerger;           \/* Or here, if bUseThreads==0 *\/$/;"	m	struct:VdbeSorter	file:
pMethod	src/sqlite/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	src/sqlite/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/* The file I\/O methods to use. *\/$/;"	m	struct:winVfsAppData	file:
pMethod	src/sqlite/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethod	src/sqlite/sqlite3.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethods	src/include/sqlite/sqlite3.h	/^const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pMethods	src/sqlite/sqlite3.c	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	file:
pMmapFreelist	src/sqlite/sqlite3.c	/^  PgHdr *pMmapFreelist;       \/* List of free mmap page headers (pDirty) *\/$/;"	m	struct:Pager	file:
pMod	src/sqlite/sqlite3.c	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable	file:
pMod	src/sqlite/sqlite3.c	/^  const sqlite3_tokenizer_module *pMod;$/;"	m	struct:Fts3tokTable	file:
pModule	src/include/sqlite/sqlite3.h	/^const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pModule	src/sqlite/sqlite3.c	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module	file:
pModule	src/sqlite/sqlite3.c	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	file:
pModule	src/sqlite/sqlite3.c	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer	file:
pNC	src/sqlite/sqlite3.c	/^    NameContext *pNC;                         \/* Naming context *\/$/;"	m	union:Walker::__anon20	file:
pName	src/sqlite/sqlite3.c	/^  const PragmaName *pName;  \/* Name of the pragma *\/$/;"	m	struct:PragmaVtab	file:
pName	src/sqlite/sqlite3.c	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
pNear	src/sqlite/sqlite3.c	/^  Fts5ExprNearset *pNear;         \/* For FTS5_STRING - cluster of phrases *\/$/;"	m	struct:Fts5ExprNode	file:
pNew	src/sqlite/sqlite3.c	/^  WhereLoop *pNew;          \/* Template WhereLoop *\/$/;"	m	struct:WhereLoopBuilder	file:
pNewTable	src/sqlite/sqlite3.c	/^  Table *pNewTable;         \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse	file:
pNewTrigger	src/sqlite/sqlite3.c	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse	file:
pNewUnpacked	src/sqlite/sqlite3.c	/^  UnpackedRecord *pNewUnpacked;   \/* Unpacked version of new.* record *\/$/;"	m	struct:PreUpdate	file:
pNext	src/include/sqlite/sqlite3.h	/^sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNext	src/sqlite/sqlite3.c	/^    SorterRecord *pNext;          \/* Pointer to next record in list *\/$/;"	m	union:SorterRecord::__anon28	file:
pNext	src/sqlite/sqlite3.c	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo	file:
pNext	src/sqlite/sqlite3.c	/^  BtCursor *pNext;          \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pNext	src/sqlite/sqlite3.c	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock	file:
pNext	src/sqlite/sqlite3.c	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared	file:
pNext	src/sqlite/sqlite3.c	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree	file:
pNext	src/sqlite/sqlite3.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	src/sqlite/sqlite3.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	src/sqlite/sqlite3.c	/^  Fts5Auxdata *pNext;             \/* Next object in linked list *\/$/;"	m	struct:Fts5Auxdata	file:
pNext	src/sqlite/sqlite3.c	/^  Fts5Auxiliary *pNext;           \/* Next registered auxiliary function *\/$/;"	m	struct:Fts5Auxiliary	file:
pNext	src/sqlite/sqlite3.c	/^  Fts5Cursor *pNext;              \/* Next cursor in Fts5Cursor.pCsr list *\/$/;"	m	struct:Fts5Cursor	file:
pNext	src/sqlite/sqlite3.c	/^  Fts5TermsetEntry *pNext;$/;"	m	struct:Fts5TermsetEntry	file:
pNext	src/sqlite/sqlite3.c	/^  Fts5TokenizerModule *pNext;     \/* Next registered tokenizer module *\/$/;"	m	struct:Fts5TokenizerModule	file:
pNext	src/sqlite/sqlite3.c	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef	file:
pNext	src/sqlite/sqlite3.c	/^  Index *pNext;            \/* The next index associated with the same table *\/$/;"	m	struct:Index	file:
pNext	src/sqlite/sqlite3.c	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot	file:
pNext	src/sqlite/sqlite3.c	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext	file:
pNext	src/sqlite/sqlite3.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	src/sqlite/sqlite3.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	src/sqlite/sqlite3.c	/^  RbuUpdateStmt *pNext;$/;"	m	struct:RbuUpdateStmt	file:
pNext	src/sqlite/sqlite3.c	/^  RtreeNode *pNext;           \/* Next node in this hash collision chain *\/$/;"	m	struct:RtreeNode	file:
pNext	src/sqlite/sqlite3.c	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint	file:
pNext	src/sqlite/sqlite3.c	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select	file:
pNext	src/sqlite/sqlite3.c	/^  SessionChange *pNext;           \/* For hash-table collisions *\/$/;"	m	struct:SessionChange	file:
pNext	src/sqlite/sqlite3.c	/^  SessionTable *pNext;$/;"	m	struct:SessionTable	file:
pNext	src/sqlite/sqlite3.c	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram	file:
pNext	src/sqlite/sqlite3.c	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger	file:
pNext	src/sqlite/sqlite3.c	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg	file:
pNext	src/sqlite/sqlite3.c	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep	file:
pNext	src/sqlite/sqlite3.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	src/sqlite/sqlite3.c	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable	file:
pNext	src/sqlite/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pNext	src/sqlite/sqlite3.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	src/sqlite/sqlite3.c	/^  sqlite3_session *pNext;         \/* Next session object on same db. *\/$/;"	m	struct:sqlite3_session	file:
pNext	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	file:
pNext	src/sqlite/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	src/sqlite/sqlite3.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	src/sqlite/sqlite3.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	src/sqlite/sqlite3.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	src/sqlite/sqlite3.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	src/sqlite/sqlite3.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	src/sqlite/sqlite3.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNextAux	src/sqlite/sqlite3.c	/^  AuxData *pNextAux;              \/* Next element in list *\/$/;"	m	struct:AuxData	file:
pNextBlocked	src/sqlite/sqlite3.c	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3	file:
pNextChunk	src/sqlite/sqlite3.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextDocid	src/sqlite/sqlite3.c	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist	file:
pNextFrom	src/sqlite/sqlite3.c	/^  FKey *pNextFrom;  \/* Next FKey with the same in pFrom. Next parent of pFrom *\/$/;"	m	struct:FKey	file:
pNextId	src/sqlite/sqlite3.c	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
pNextLeaf	src/sqlite/sqlite3.c	/^  Fts5Data *pNextLeaf;            \/* Leaf page (iLeafPgno+1) *\/$/;"	m	struct:Fts5SegIter	file:
pNextLoop	src/sqlite/sqlite3.c	/^  WhereLoop *pNextLoop; \/* Next WhereLoop object in the WhereClause *\/$/;"	m	struct:WhereLoop	file:
pNextTo	src/sqlite/sqlite3.c	/^  FKey *pNextTo;    \/* Next with the same zTo. Next child of zTo. *\/$/;"	m	struct:FKey	file:
pNextZombie	src/sqlite/sqlite3.c	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table	file:
pNode	src/sqlite/sqlite3.c	/^  Fts5ExprNode *pNode;            \/* FTS5_STRING node this phrase is part of *\/$/;"	m	struct:Fts5ExprPhrase	file:
pNodeBlob	src/sqlite/sqlite3.c	/^  sqlite3_blob *pNodeBlob;$/;"	m	struct:Rtree	file:
pOffset	src/sqlite/sqlite3.c	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pOffset	src/sqlite/sqlite3.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffsetList	src/sqlite/sqlite3.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOldMethod	src/sqlite/sqlite3.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOn	src/sqlite/sqlite3.c	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pOrInfo	src/sqlite/sqlite3.c	/^    WhereOrInfo *pOrInfo;   \/* Extra information if (eOperator & WO_OR)!=0 *\/$/;"	m	union:WhereTerm::__anon35	file:
pOrPoslist	src/sqlite/sqlite3.c	/^  char *pOrPoslist;$/;"	m	struct:Fts3Phrase	file:
pOrSet	src/sqlite/sqlite3.c	/^  WhereOrSet *pOrSet;       \/* Record best loops here, if not NULL *\/$/;"	m	struct:WhereLoopBuilder	file:
pOrderBy	src/sqlite/sqlite3.c	/^  ExprList *pOrderBy;       \/* ORDER BY clause *\/$/;"	m	struct:WhereLoopBuilder	file:
pOrderBy	src/sqlite/sqlite3.c	/^  ExprList *pOrderBy;       \/* The ORDER BY clause or NULL *\/$/;"	m	struct:WhereInfo	file:
pOrderBy	src/sqlite/sqlite3.c	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select	file:
pOrderBy	src/sqlite/sqlite3.c	/^  ExprList *pOrderBy;   \/* The ORDER BY (or GROUP BY clause) *\/$/;"	m	struct:SortCtx	file:
pOrderBy	src/sqlite/sqlite3.c	/^  ExprList *pOrderBy;  \/* Key columns for SRT_Queue and SRT_DistQueue *\/$/;"	m	struct:SelectDest	file:
pOrigWC	src/sqlite/sqlite3.c	/^  WhereClause *pOrigWC;      \/* Original, innermost WhereClause *\/$/;"	m	struct:WhereScan	file:
pOut	src/sqlite/sqlite3.c	/^  Fts5Buffer *pOut;               \/* Output poslist *\/$/;"	m	struct:Fts5NearTrimmer	file:
pOut	src/sqlite/sqlite3.c	/^  Mem *pOut;              \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context	file:
pOut	src/sqlite/sqlite3.c	/^  void *pOut;                    \/* Result returned by the thread *\/$/;"	m	struct:SQLiteThread	file:
pOuter	src/sqlite/sqlite3.c	/^  WhereClause *pOuter;     \/* Outer conjunction *\/$/;"	m	struct:WhereClause	file:
pOuter	src/sqlite/sqlite3.c	/^  With *pOuter;                   \/* Containing WITH clause, or NULL *\/$/;"	m	struct:With	file:
pPCache	src/sqlite/sqlite3.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPage	src/sqlite/sqlite3.c	/^  sqlite3_pcache_page *pPage;    \/* Pcache object page handle *\/$/;"	m	struct:PgHdr	file:
pPage	src/sqlite/sqlite3.c	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config	file:
pPage1	src/sqlite/sqlite3.c	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared	file:
pPager	src/sqlite/sqlite3.c	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr	file:
pPager	src/sqlite/sqlite3.c	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared	file:
pPager	src/sqlite/sqlite3.c	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk	file:
pParent	src/sqlite/sqlite3.c	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr	file:
pParent	src/sqlite/sqlite3.c	/^  RtreeNode *pParent;         \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	src/sqlite/sqlite3.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	src/sqlite/sqlite3.c	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;            \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;            \/* The parsing context *\/$/;"	m	struct:SubstContext	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;          \/* Parsing context used to create this Vdbe *\/$/;"	m	struct:Vdbe	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer	file:
pParse	src/sqlite/sqlite3.c	/^  Parse *pParse;$/;"	m	struct:ValueNewStat4Ctx	file:
pPartIdxWhere	src/sqlite/sqlite3.c	/^  Expr *pPartIdxWhere;     \/* WHERE clause for partial indices *\/$/;"	m	struct:Index	file:
pPatch	src/sqlite/sqlite3.c	/^    JsonNode *pPatch;      \/* Node chain of patch for JNODE_PATCH *\/$/;"	m	union:JsonNode::__anon40	file:
pPayload	src/sqlite/sqlite3.c	/^  u8 *pPayload;  \/* Pointer to the start of payload *\/$/;"	m	struct:CellInfo	file:
pPg	src/sqlite/sqlite3.c	/^  DbPage *pPg;$/;"	m	struct:StatPage	file:
pPhrase	src/sqlite/sqlite3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	src/sqlite/sqlite3.c	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr	file:
pPhrase	src/sqlite/sqlite3.c	/^  Fts5ExprPhrase *pPhrase;$/;"	m	struct:TokenCtx	file:
pPk	src/sqlite/sqlite3.c	/^  Index *pPk;                     \/* PK index if pTab is WITHOUT ROWID *\/$/;"	m	struct:PreUpdate	file:
pPoslist	src/sqlite/sqlite3.c	/^  Fts5Buffer *pPoslist;           \/* Pointer to current poslist *\/$/;"	m	struct:Fts5MatchPhrase	file:
pPragma	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pPragma;    \/* The pragma statement to run *\/$/;"	m	struct:PragmaVtabCursor	file:
pPreUpdate	src/sqlite/sqlite3.c	/^  PreUpdate *pPreUpdate;        \/* Context for active pre-update callback *\/$/;"	m	struct:sqlite3	file:
pPreUpdateArg	src/sqlite/sqlite3.c	/^  void *pPreUpdateArg;          \/* First argument to xPreUpdateCallback *\/$/;"	m	struct:sqlite3	file:
pPrev	src/sqlite/sqlite3.c	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree	file:
pPrev	src/sqlite/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pPrev	src/sqlite/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	src/sqlite/sqlite3.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrevTo	src/sqlite/sqlite3.c	/^  FKey *pPrevTo;    \/* Previous with the same zTo *\/$/;"	m	struct:FKey	file:
pPrior	src/sqlite/sqlite3.c	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select	file:
pPrior	src/sqlite/sqlite3.c	/^  VtabCtx *pPrior;    \/* Parent context (if any) *\/$/;"	m	struct:VtabCtx	file:
pProfileArg	src/sqlite/sqlite3.c	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3	file:
pProgram	src/sqlite/sqlite3.c	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::p4union	file:
pProgram	src/sqlite/sqlite3.c	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe	file:
pProgram	src/sqlite/sqlite3.c	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg	file:
pProgressArg	src/sqlite/sqlite3.c	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3	file:
pPtr	src/sqlite/sqlite3.c	/^  void *pPtr;                     \/* Pointer value *\/$/;"	m	struct:Fts5Auxdata	file:
pRank	src/sqlite/sqlite3.c	/^  Fts5Auxiliary *pRank;           \/* Rank callback (or NULL) *\/$/;"	m	struct:Fts5Cursor	file:
pRankArgStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pRankArgStmt;     \/* Origin of objects in apRankArg[] *\/$/;"	m	struct:Fts5Cursor	file:
pRbu	src/sqlite/sqlite3.c	/^  sqlite3rbu *pRbu;               \/* Pointer to rbu object (rbu target only) *\/$/;"	m	struct:rbu_file	file:
pRbuFd	src/sqlite/sqlite3.c	/^  rbu_file *pRbuFd;               \/* Fd for main db of dbRbu *\/$/;"	m	struct:sqlite3rbu	file:
pRbuUpdate	src/sqlite/sqlite3.c	/^  RbuUpdateStmt *pRbuUpdate;$/;"	m	struct:RbuObjIter	file:
pRbuVfs	src/sqlite/sqlite3.c	/^  rbu_vfs *pRbuVfs;               \/* Pointer to the rbu_vfs object *\/$/;"	m	struct:rbu_file	file:
pRead	src/sqlite/sqlite3.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pReadParent	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadRowid	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReader	src/sqlite/sqlite3.c	/^  PmaReader *pReader;             \/* Readr data from here after Rewind() *\/$/;"	m	struct:VdbeSorter	file:
pReader	src/sqlite/sqlite3.c	/^  sqlite3_blob *pReader;          \/* RO incr-blob open on %_data table *\/$/;"	m	struct:Fts5Index	file:
pReal	src/sqlite/sqlite3.c	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::p4union	file:
pReal	src/sqlite/sqlite3.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:rbu_file	file:
pRealVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pRealVfs;          \/* Underlying VFS *\/$/;"	m	struct:rbu_vfs	file:
pRec	src/sqlite/sqlite3.c	/^  UnpackedRecord *pRec;     \/* Probe for stat4 (if required) *\/$/;"	m	struct:WhereLoopBuilder	file:
pRef	src/sqlite/sqlite3.c	/^  MemPage *pRef;          \/* Reference page *\/$/;"	m	struct:CellArray	file:
pReprepare	src/sqlite/sqlite3.c	/^  Vdbe *pReprepare;         \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse	file:
pResult	src/sqlite/sqlite3.c	/^  void *pResult;           \/* Result of xTask *\/$/;"	m	struct:SQLiteThread	file:
pResultSet	src/sqlite/sqlite3.c	/^  ExprList *pResultSet;     \/* Result set of the query *\/$/;"	m	struct:WhereInfo	file:
pResultSet	src/sqlite/sqlite3.c	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe	file:
pRight	src/sqlite/sqlite3.c	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr	file:
pRight	src/sqlite/sqlite3.c	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr	file:
pRight	src/sqlite/sqlite3.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	src/sqlite/sqlite3.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRollbackArg	src/sqlite/sqlite3.c	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/$/;"	m	struct:sqlite3	file:
pRoot	src/sqlite/sqlite3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRoot	src/sqlite/sqlite3.c	/^  Fts5ExprNode *pRoot;$/;"	m	struct:Fts5Expr	file:
pRowSet	src/sqlite/sqlite3.c	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:sqlite3_value::MemValue	file:
pSavepoint	src/sqlite/sqlite3.c	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3	file:
pScan	src/sqlite/sqlite3.c	/^  Fts5HashEntry *pScan;           \/* Current ordered scan item *\/$/;"	m	struct:Fts5Hash	file:
pScanNext	src/sqlite/sqlite3.c	/^  Fts5HashEntry *pScanNext;       \/* Next entry in sorted order *\/$/;"	m	struct:Fts5HashEntry	file:
pSchema	src/sqlite/sqlite3.c	/^    Schema *pSchema;  \/* Schema to which this item is fixed *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSchema	src/sqlite/sqlite3.c	/^  Schema *pSchema;         \/* Schema containing this index *\/$/;"	m	struct:Index	file:
pSchema	src/sqlite/sqlite3.c	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger	file:
pSchema	src/sqlite/sqlite3.c	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db	file:
pSchema	src/sqlite/sqlite3.c	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table	file:
pSchema	src/sqlite/sqlite3.c	/^  Schema *pSchema;    \/* Fix items to this schema *\/$/;"	m	struct:DbFixer	file:
pSchema	src/sqlite/sqlite3.c	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared	file:
pScopyFrom	src/sqlite/sqlite3.c	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:sqlite3_value	file:
pScratch	src/sqlite/sqlite3.c	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config	file:
pScratchEnd	src/sqlite/sqlite3.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchFree	src/sqlite/sqlite3.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pSeekStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pSeekStmt;        \/* Cache for fts3CursorSeekStmt() *\/$/;"	m	struct:Fts3Table	file:
pSeg	src/sqlite/sqlite3.c	/^  Fts5StructureSegment *pSeg;     \/* Segment to iterate through *\/$/;"	m	struct:Fts5SegIter	file:
pSegcsr	src/sqlite/sqlite3.c	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pSegments	src/sqlite/sqlite3.c	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table	file:
pSelect	src/sqlite/sqlite3.c	/^    Select *pSelect;                \/* The definition of this CTE *\/$/;"	m	struct:With::Cte	file:
pSelect	src/sqlite/sqlite3.c	/^    Select *pSelect;     \/* EP_xIsSelect and op = IN, EXISTS, SELECT *\/$/;"	m	union:Expr::__anon14	file:
pSelect	src/sqlite/sqlite3.c	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSelect	src/sqlite/sqlite3.c	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table	file:
pSelect	src/sqlite/sqlite3.c	/^  Select *pSelect;     \/* SELECT statement or RHS of INSERT INTO SELECT ... *\/$/;"	m	struct:TriggerStep	file:
pSelect	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pSelect;          \/* SELECT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pSelect	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pSelect;          \/* Source data *\/$/;"	m	struct:RbuObjIter	file:
pSem	src/sqlite/sqlite3.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSeqTab	src/sqlite/sqlite3.c	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema	file:
pShm	src/sqlite/sqlite3.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	src/sqlite/sqlite3.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShmNode	src/sqlite/sqlite3.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	src/sqlite/sqlite3.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	src/sqlite/sqlite3.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pSnapshot	src/sqlite/sqlite3.c	/^  WalIndexHdr *pSnapshot;    \/* Start transaction here if not NULL *\/$/;"	m	struct:Wal	file:
pSortCsr	src/sqlite/sqlite3.c	/^  Fts5Cursor *pSortCsr;           \/* Sort data from this cursor *\/$/;"	m	struct:Fts5Table	file:
pSorter	src/sqlite/sqlite3.c	/^    VdbeSorter *pSorter;        \/* CURTYPE_SORTER. Sorter object *\/$/;"	m	union:VdbeCursor::__anon21	file:
pSorter	src/sqlite/sqlite3.c	/^  Fts5Sorter *pSorter;            \/* Sorter for "ORDER BY rank" queries *\/$/;"	m	struct:Fts5Cursor	file:
pSorter	src/sqlite/sqlite3.c	/^  VdbeSorter *pSorter;            \/* Sorter that owns this sub-task *\/$/;"	m	struct:SortSubtask	file:
pSpace	src/sqlite/sqlite3.c	/^  u8 *pSpace;          \/* Available memory *\/$/;"	m	struct:ReusableSpace	file:
pSqllogArg	src/sqlite/sqlite3.c	/^  void *pSqllogArg;$/;"	m	struct:Sqlite3Config	file:
pSrc	src/sqlite/sqlite3.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	src/sqlite/sqlite3.c	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select	file:
pSrc	src/sqlite/sqlite3.c	/^  SrcList *pSrc;   \/* One particular FROM clause in a nested query *\/$/;"	m	struct:SrcCount	file:
pSrcCount	src/sqlite/sqlite3.c	/^    struct SrcCount *pSrcCount;               \/* Counting column references *\/$/;"	m	union:Walker::__anon20	typeref:struct:Walker::__anon20::SrcCount	file:
pSrcDb	src/sqlite/sqlite3.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcList	src/sqlite/sqlite3.c	/^    SrcList *pSrcList;                        \/* FROM clause *\/$/;"	m	union:Walker::__anon20	file:
pSrcList	src/sqlite/sqlite3.c	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext	file:
pStart	src/sqlite/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pStart	src/sqlite/sqlite3.c	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside	file:
pStmt	src/sqlite/shell.c	/^  sqlite3_stmt *pStmt;   \/* Current statement if any. *\/$/;"	m	struct:ShellState	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Iterates through set of root pages *\/$/;"	m	struct:StatCursor	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Statement holding lock on pIndex *\/$/;"	m	struct:Fts5VocabCursor	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Statement used to read %_content *\/$/;"	m	struct:Fts5Cursor	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;       \/* Statement cursor is currently pointing at *\/$/;"	m	struct:stmt_cursor	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:Fts5Sorter	file:
pStmt	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:SessionDiffCtx	file:
pStorage	src/sqlite/sqlite3.c	/^  Fts5Storage *pStorage;          \/* Document store *\/$/;"	m	struct:Fts5Table	file:
pStorage	src/sqlite/sqlite3.c	/^  Fts5Storage *pStorage;$/;"	m	struct:Fts5InsertCtx	file:
pStress	src/sqlite/sqlite3.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pStruct	src/sqlite/sqlite3.c	/^  Fts5Structure *pStruct;         \/* Current db structure (or NULL) *\/$/;"	m	struct:Fts5Index	file:
pStruct	src/sqlite/sqlite3.c	/^  Fts5Structure *pStruct;         \/* Database structure for this iterator *\/$/;"	m	struct:Fts5Iter	file:
pSynced	src/sqlite/sqlite3.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pSynonym	src/sqlite/sqlite3.c	/^  Fts5ExprTerm *pSynonym;         \/* Pointer to first in list of synonyms *\/$/;"	m	struct:Fts5ExprTerm	file:
pTab	src/sqlite/sqlite3.c	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pTab	src/sqlite/sqlite3.c	/^    Table *pTab;           \/* Used when p4type is P4_TABLE *\/$/;"	m	union:VdbeOp::p4union	file:
pTab	src/sqlite/sqlite3.c	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item	file:
pTab	src/sqlite/sqlite3.c	/^  Table *pTab;                    \/* Schema object being upated *\/$/;"	m	struct:PreUpdate	file:
pTab	src/sqlite/sqlite3.c	/^  Table *pTab;            \/* Table object *\/$/;"	m	struct:Incrblob	file:
pTab	src/sqlite/sqlite3.c	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr	file:
pTab	src/sqlite/sqlite3.c	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo	file:
pTab	src/sqlite/sqlite3.c	/^  Table *pTab;        \/* The Table object to which the virtual table belongs *\/$/;"	m	struct:VtabCtx	file:
pTabList	src/sqlite/sqlite3.c	/^  SrcList *pTabList;        \/* List of tables in the join *\/$/;"	m	struct:WhereInfo	file:
pTabSchema	src/sqlite/sqlite3.c	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger	file:
pTable	src/sqlite/sqlite3.c	/^  SessionTable *pTable;           \/* List of attached tables *\/$/;"	m	struct:sqlite3_session	file:
pTable	src/sqlite/sqlite3.c	/^  Table *pTable;           \/* The SQL table being indexed *\/$/;"	m	struct:Index	file:
pTail	src/sqlite/sqlite3.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTargetFd	src/sqlite/sqlite3.c	/^  rbu_file *pTargetFd;            \/* File handle open on target db *\/$/;"	m	struct:sqlite3rbu	file:
pTask	src/sqlite/sqlite3.c	/^  SortSubtask *pTask;             \/* Task that owns this merger *\/$/;"	m	struct:IncrMerger	file:
pTask	src/sqlite/sqlite3.c	/^  SortSubtask *pTask;        \/* Used by this thread only *\/$/;"	m	struct:MergeEngine	file:
pTblIter	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pTblIter;         \/* Iterate through tables *\/$/;"	m	struct:RbuObjIter	file:
pTerm	src/sqlite/sqlite3.c	/^  char *pTerm;$/;"	m	struct:Fts5TermsetEntry	file:
pTermset	src/sqlite/sqlite3.c	/^  Fts5Termset *pTermset;$/;"	m	struct:Fts5IntegrityCtx	file:
pThread	src/sqlite/sqlite3.c	/^  SQLiteThread *pThread;          \/* Background thread, if any *\/$/;"	m	struct:SortSubtask	file:
pTmpInsert	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pTmpInsert;       \/* Insert into rbu_tmp_$zDataTbl *\/$/;"	m	struct:RbuObjIter	file:
pTmpSpace	src/sqlite/sqlite3.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTmpSpace	src/sqlite/sqlite3.c	/^  u8 *pTmpSpace;        \/* Temp space sufficient to hold a single cell *\/$/;"	m	struct:BtShared	file:
pTok	src/sqlite/sqlite3.c	/^  Fts5Tokenizer *pTok;$/;"	m	struct:Fts5Config	file:
pTok	src/sqlite/sqlite3.c	/^  Fts5TokenizerModule *pTok;      \/* First in list of all tokenizer modules *\/$/;"	m	struct:Fts5Global	file:
pTok	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer *pTok;$/;"	m	struct:Fts3tokTable	file:
pTokApi	src/sqlite/sqlite3.c	/^  fts5_tokenizer *pTokApi;$/;"	m	struct:Fts5Config	file:
pToken	src/sqlite/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pToken	src/sqlite/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	src/sqlite/sqlite3.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pTokenizer	src/sqlite/sqlite3.c	/^  Fts5Tokenizer *pTokenizer;      \/* Parent tokenizer instance *\/$/;"	m	struct:PorterTokenizer	file:
pTokenizer	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor	file:
pTokenizer	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	src/sqlite/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table	file:
pToplevel	src/sqlite/sqlite3.c	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse	file:
pTraceArg	src/sqlite/sqlite3.c	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3	file:
pTree	src/sqlite/sqlite3.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTrig	src/sqlite/sqlite3.c	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep	file:
pTrigger	src/sqlite/sqlite3.c	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg	file:
pTrigger	src/sqlite/sqlite3.c	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table	file:
pTrigger	src/sqlite/sqlite3.c	105720;"	d	file:
pTrigger	src/sqlite/sqlite3.c	110429;"	d	file:
pTrigger	src/sqlite/sqlite3.c	125062;"	d	file:
pTriggerPrg	src/sqlite/sqlite3.c	/^  TriggerPrg *pTriggerPrg;  \/* Linked list of coded triggers *\/$/;"	m	struct:Parse	file:
pTriggerTab	src/sqlite/sqlite3.c	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse	file:
pUnlockArg	src/sqlite/sqlite3.c	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3	file:
pUnlockConnection	src/sqlite/sqlite3.c	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3	file:
pUnpacked	src/sqlite/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Space to unpack a record *\/$/;"	m	struct:SortSubtask	file:
pUnpacked	src/sqlite/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Unpacked version of aRecord[] *\/$/;"	m	struct:PreUpdate	file:
pUnpacked	src/sqlite/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Used by VdbeSorterCompare() *\/$/;"	m	struct:VdbeSorter	file:
pUnused	src/sqlite/sqlite3.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	src/sqlite/sqlite3.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUpdate	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pUpdate;          \/* Last update statement (or NULL) *\/$/;"	m	struct:RbuUpdateStmt	file:
pUpdate	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pUpdate;          \/* UPDATE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pUpdateArg	src/sqlite/sqlite3.c	/^  void *pUpdateArg;$/;"	m	struct:sqlite3	file:
pUser	src/include/sqlite/sqlite3.h	/^void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	src/include/sqlite/sqlite3.h	/^void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUser	src/sqlite/sqlite3.c	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
pUser	src/sqlite/sqlite3.c	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pUser	src/sqlite/sqlite3.c	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq	file:
pUserData	src/sqlite/sqlite3.c	/^  void *pUserData;                \/* User pointer passed to xCreate() *\/$/;"	m	struct:Fts5TokenizerModule	file:
pUserData	src/sqlite/sqlite3.c	/^  void *pUserData;                \/* User-data pointer *\/$/;"	m	struct:Fts5Auxiliary	file:
pUserData	src/sqlite/sqlite3.c	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef	file:
pUserData	src/sqlite/sqlite3.c	/^  void *pUserData;$/;"	m	struct:FuncDestructor	file:
pUsing	src/sqlite/sqlite3.c	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pVCur	src/sqlite/sqlite3.c	/^    sqlite3_vtab_cursor *pVCur; \/* CURTYPE_VTAB.   Vtab cursor *\/$/;"	m	union:VdbeCursor::__anon21	file:
pVList	src/sqlite/sqlite3.c	/^  VList *pVList;            \/* Mapping between variable names and numbers *\/$/;"	m	struct:Parse	file:
pVList	src/sqlite/sqlite3.c	/^  VList *pVList;          \/* Name of variables *\/$/;"	m	struct:Vdbe	file:
pVTable	src/sqlite/sqlite3.c	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table	file:
pVTable	src/sqlite/sqlite3.c	/^  VTable *pVTable;    \/* The virtual table being constructed *\/$/;"	m	struct:VtabCtx	file:
pVdbe	src/sqlite/sqlite3.c	/^  Vdbe *pVdbe;            \/* The VM that owns this context *\/$/;"	m	struct:sqlite3_context	file:
pVdbe	src/sqlite/sqlite3.c	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse	file:
pVdbe	src/sqlite/sqlite3.c	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe	file:
pVdbeBranchArg	src/sqlite/sqlite3.c	/^  void *pVdbeBranchArg;                                     \/* 1st argument *\/$/;"	m	struct:Sqlite3Config	file:
pVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pVfs;                  \/* The VFS that created this unixFile *\/$/;"	m	struct:unixFile	file:
pVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:MemJournal	file:
pVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3	file:
pVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfs	src/sqlite/sqlite3.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVtab	src/include/sqlite/sqlite3.h	/^sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pVtab	src/sqlite/sqlite3.c	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::p4union	file:
pVtab	src/sqlite/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable	file:
pVtab	src/sqlite/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	file:
pVtabCtx	src/sqlite/sqlite3.c	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3	file:
pWC	src/sqlite/sqlite3.c	/^  WhereClause *pWC;          \/* WhereClause currently being scanned *\/$/;"	m	struct:WhereScan	file:
pWC	src/sqlite/sqlite3.c	/^  WhereClause *pWC;         \/* WHERE clause terms *\/$/;"	m	struct:WhereLoopBuilder	file:
pWC	src/sqlite/sqlite3.c	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm	file:
pWInfo	src/sqlite/sqlite3.c	/^  WhereInfo *pWInfo;        \/* Information about this WHERE *\/$/;"	m	struct:WhereLoopBuilder	file:
pWInfo	src/sqlite/sqlite3.c	/^  WhereInfo *pWInfo;       \/* WHERE clause processing context *\/$/;"	m	struct:WhereClause	file:
pWLoop	src/sqlite/sqlite3.c	/^  struct WhereLoop *pWLoop;  \/* The selected WhereLoop object *\/$/;"	m	struct:WhereLevel	typeref:struct:WhereLevel::WhereLoop	file:
pWal	src/sqlite/sqlite3.c	/^  Wal *pWal;                   \/* The complete WAL information *\/$/;"	m	struct:WalWriter	file:
pWal	src/sqlite/sqlite3.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWalArg	src/sqlite/sqlite3.c	/^  void *pWalArg;$/;"	m	struct:sqlite3	file:
pWalFd	src/sqlite/sqlite3.c	/^  rbu_file *pWalFd;               \/* Wal file descriptor for this main db *\/$/;"	m	struct:rbu_file	file:
pWalFd	src/sqlite/sqlite3.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWhen	src/sqlite/sqlite3.c	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger	file:
pWhere	src/sqlite/sqlite3.c	/^  Expr *pWhere;             \/* The complete WHERE clause *\/$/;"	m	struct:WhereInfo	file:
pWhere	src/sqlite/sqlite3.c	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select	file:
pWhere	src/sqlite/sqlite3.c	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep	file:
pWith	src/sqlite/sqlite3.c	/^  With *pWith;              \/* Current WITH clause, or NULL *\/$/;"	m	struct:Parse	file:
pWith	src/sqlite/sqlite3.c	/^  With *pWith;           \/* WITH clause attached to this select. Or NULL. *\/$/;"	m	struct:Select	file:
pWithToFree	src/sqlite/sqlite3.c	/^  With *pWithToFree;        \/* Free this WITH object at the end of the parse *\/$/;"	m	struct:Parse	file:
pWriteNode	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteParent	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteRowid	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriter	src/sqlite/sqlite3.c	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared	file:
pWriter	src/sqlite/sqlite3.c	/^  sqlite3_stmt *pWriter;          \/* "INSERT ... %_data VALUES(?,?)" *\/$/;"	m	struct:Fts5Index	file:
pZombieTab	src/sqlite/sqlite3.c	/^  Table *pZombieTab;        \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse	file:
padToSectorBoundary	src/sqlite/sqlite3.c	/^  u8 padToSectorBoundary;    \/* Pad transactions out to the next sector *\/$/;"	m	struct:Wal	file:
page	src/sqlite/sqlite3.c	/^  sqlite3_pcache_page page;      \/* Base class. Must be first. pBuf & pExtra *\/$/;"	m	struct:PgHdr1	file:
pageFindSlot	src/sqlite/sqlite3.c	/^static u8 *pageFindSlot(MemPage *pPg, int nByte, int *pRc){$/;"	f	file:
pageFreeArray	src/sqlite/sqlite3.c	/^static int pageFreeArray($/;"	f	file:
pageHash	src/sqlite/sqlite3.c	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr	file:
pageInJournal	src/sqlite/sqlite3.c	/^static int pageInJournal(Pager *pPager, PgHdr *pPg){$/;"	f	file:
pageInsertArray	src/sqlite/sqlite3.c	/^static int pageInsertArray($/;"	f	file:
pageReinit	src/sqlite/sqlite3.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageSize	src/sqlite/sqlite3.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
pageSize	src/sqlite/sqlite3.c	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared	file:
page_id_	src/include/common/rid.h	/^  page_id_t page_id_;$/;"	m	class:cmudb::RID
page_id_	src/include/page/b_plus_tree_page.h	/^  page_id_t page_id_;$/;"	m	class:cmudb::BPlusTreePage
page_id_	src/include/page/page.h	/^  page_id_t page_id_ = INVALID_PAGE_ID;$/;"	m	class:cmudb::Page
page_id_t	src/include/common/config.h	/^typedef int32_t page_id_t; \/\/ page id type$/;"	t	namespace:cmudb
page_set_	src/include/concurrency/transaction.h	/^  std::shared_ptr<std::deque<Page *>> page_set_;$/;"	m	class:cmudb::Transaction
page_table_	src/include/buffer/buffer_pool_manager.h	/^  HashTable<page_id_t, Page *> *page_table_;$/;"	m	class:cmudb::BufferPoolManager
page_type_	src/include/page/b_plus_tree_page.h	/^  IndexPageType page_type_;$/;"	m	class:cmudb::BPlusTreePage
pagerAcquireMapPage	src/sqlite/sqlite3.c	/^static int pagerAcquireMapPage($/;"	f	file:
pagerAddPageToRollbackJournal	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int pagerAddPageToRollbackJournal(PgHdr *pPg){$/;"	f	file:
pagerBeginReadTransaction	src/sqlite/sqlite3.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	src/sqlite/sqlite3.c	48174;"	d	file:
pagerExclusiveLock	src/sqlite/sqlite3.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerFixMaplimit	src/sqlite/sqlite3.c	/^static void pagerFixMaplimit(Pager *pPager){$/;"	f	file:
pagerFlushOnCommit	src/sqlite/sqlite3.c	/^static int pagerFlushOnCommit(Pager *pPager, int bCommit){$/;"	f	file:
pagerFreeMapHdrs	src/sqlite/sqlite3.c	/^static void pagerFreeMapHdrs(Pager *pPager){$/;"	f	file:
pagerLockDb	src/sqlite/sqlite3.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerOpenSavepoint	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int pagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f	file:
pagerOpenWal	src/sqlite/sqlite3.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	src/sqlite/sqlite3.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	src/sqlite/sqlite3.c	48173;"	d	file:
pagerOpentemp	src/sqlite/sqlite3.c	/^static int pagerOpentemp($/;"	f	file:
pagerPagecount	src/sqlite/sqlite3.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPlaybackSavepoint	src/sqlite/sqlite3.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerReleaseMapPage	src/sqlite/sqlite3.c	/^static void pagerReleaseMapPage(PgHdr *pPg){$/;"	f	file:
pagerReportSize	src/sqlite/sqlite3.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	src/sqlite/sqlite3.c	49531;"	d	file:
pagerRollbackWal	src/sqlite/sqlite3.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	src/sqlite/sqlite3.c	48171;"	d	file:
pagerStress	src/sqlite/sqlite3.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerSyncHotJournal	src/sqlite/sqlite3.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerUndoCallback	src/sqlite/sqlite3.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUnlockAndRollback	src/sqlite/sqlite3.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockDb	src/sqlite/sqlite3.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockIfUnused	src/sqlite/sqlite3.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUseWal	src/sqlite/sqlite3.c	48168;"	d	file:
pagerUseWal	src/sqlite/sqlite3.c	48170;"	d	file:
pagerWalFrames	src/sqlite/sqlite3.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	src/sqlite/sqlite3.c	48172;"	d	file:
pagerWriteLargeSector	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int pagerWriteLargeSector(PgHdr *pPg){$/;"	f	file:
pager_cksum	src/sqlite/sqlite3.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_datahash	src/sqlite/sqlite3.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	src/sqlite/sqlite3.c	48588;"	d	file:
pager_delmaster	src/sqlite/sqlite3.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_end_transaction	src/sqlite/sqlite3.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster, int bCommit){$/;"	f	file:
pager_error	src/sqlite/sqlite3.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_incr_changecounter	src/sqlite/sqlite3.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_open_journal	src/sqlite/sqlite3.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_pagehash	src/sqlite/sqlite3.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	src/sqlite/sqlite3.c	48589;"	d	file:
pager_playback	src/sqlite/sqlite3.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback_one_page	src/sqlite/sqlite3.c	/^static int pager_playback_one_page($/;"	f	file:
pager_reset	src/sqlite/sqlite3.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_set_pagehash	src/sqlite/sqlite3.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	src/sqlite/sqlite3.c	48590;"	d	file:
pager_truncate	src/sqlite/sqlite3.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_unlock	src/sqlite/sqlite3.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_wait_on_lock	src/sqlite/sqlite3.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_write	src/sqlite/sqlite3.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	src/sqlite/sqlite3.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_pagelist	src/sqlite/sqlite3.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
pages_	src/include/buffer/buffer_pool_manager.h	/^  Page *pages_;$/;"	m	class:cmudb::BufferPoolManager
param_	third_party/gmock/gtest/gtest.h	/^  const T param_;  \/\/ User-supplied parameter to the thread function.$/;"	m	class:std::tr1::ThreadWithParam
parameter_	third_party/gmock/gtest/gtest.h	/^  const ParamType parameter_;$/;"	m	class:testing::internal::ParameterizedTestFactory
parameter_	third_party/gmock/gtest/gtest.h	/^  static const ParamType* parameter_;$/;"	m	class:testing::WithParamInterface
parameter_	third_party/gmock/gtest/gtest.h	/^const T* WithParamInterface<T>::parameter_ = NULL;$/;"	m	class:testing::WithParamInterface
parameterized_test_registry	third_party/gmock/gmock-gtest-all.cc	/^  internal::ParameterizedTestCaseRegistry& parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl
parameterized_test_registry_	third_party/gmock/gmock-gtest-all.cc	/^  internal::ParameterizedTestCaseRegistry parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parameterized_tests_registered_	third_party/gmock/gmock-gtest-all.cc	/^  bool parameterized_tests_registered_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parentWrite	src/sqlite/sqlite3.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parent_	third_party/gmock/gmock-gtest-all.cc	/^  UnitTest* const parent_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parent_page_id_	src/include/page/b_plus_tree_page.h	/^  page_id_t parent_page_id_;$/;"	m	class:cmudb::BPlusTreePage
parseDateOrTime	src/sqlite/sqlite3.c	/^static int parseDateOrTime($/;"	f	file:
parseHhMmSs	src/sqlite/sqlite3.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseModifier	src/sqlite/sqlite3.c	/^static int parseModifier($/;"	f	file:
parseTimezone	src/sqlite/sqlite3.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	src/sqlite/sqlite3.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
parserAddExprIdListTerm	src/sqlite/sqlite3.c	/^  static ExprList *parserAddExprIdListTerm($/;"	f	file:
parserDoubleLinkSelect	src/sqlite/sqlite3.c	/^  static void parserDoubleLinkSelect(Parse *pParse, Select *p){$/;"	f	file:
partial_regex_	third_party/gmock/gtest/gtest.h	/^  regex_t partial_regex_;  \/\/ For PartialMatch().$/;"	m	class:std::tr1::RE
passed	third_party/gmock/gtest/gtest.h	/^  bool passed() const { return type_ == kSuccess; }$/;"	f	class:testing::TestPartResult
pathname_	third_party/gmock/gtest/gtest.h	/^  std::string pathname_;$/;"	m	class:testing::internal::FilePath
pattern	third_party/gmock/gtest/gtest.h	/^  const char* pattern() const { return pattern_; }$/;"	f	class:std::tr1::RE
patternCompare	src/sqlite/sqlite3.c	/^static int patternCompare($/;"	f	file:
pattern_	third_party/gmock/gtest/gtest.h	/^  const char* pattern_;$/;"	m	class:std::tr1::RE
payloadSize	src/sqlite/sqlite3.c	/^  u32 payloadSize;        \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor	file:
pc	src/sqlite/sqlite3.c	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame	file:
pc	src/sqlite/sqlite3.c	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe	file:
pcache1	src/sqlite/sqlite3.c	45642;"	d	file:
pcache1Alloc	src/sqlite/sqlite3.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1AllocPage	src/sqlite/sqlite3.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache, int benignMalloc){$/;"	f	file:
pcache1Cachesize	src/sqlite/sqlite3.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Create	src/sqlite/sqlite3.c	/^static sqlite3_pcache *pcache1Create(int szPage, int szExtra, int bPurgeable){$/;"	f	file:
pcache1Destroy	src/sqlite/sqlite3.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1EnforceMaxPage	src/sqlite/sqlite3.c	/^static void pcache1EnforceMaxPage(PCache1 *pCache){$/;"	f	file:
pcache1EnterMutex	src/sqlite/sqlite3.c	45648;"	d	file:
pcache1EnterMutex	src/sqlite/sqlite3.c	45652;"	d	file:
pcache1Fetch	src/sqlite/sqlite3.c	/^static sqlite3_pcache_page *pcache1Fetch($/;"	f	file:
pcache1FetchNoMutex	src/sqlite/sqlite3.c	/^static PgHdr1 *pcache1FetchNoMutex($/;"	f	file:
pcache1FetchStage2	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE PgHdr1 *pcache1FetchStage2($/;"	f	file:
pcache1FetchWithMutex	src/sqlite/sqlite3.c	/^static PgHdr1 *pcache1FetchWithMutex($/;"	f	file:
pcache1Free	src/sqlite/sqlite3.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1FreePage	src/sqlite/sqlite3.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1Init	src/sqlite/sqlite3.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1InitBulk	src/sqlite/sqlite3.c	/^static int pcache1InitBulk(PCache1 *pCache){$/;"	f	file:
pcache1LeaveMutex	src/sqlite/sqlite3.c	45649;"	d	file:
pcache1LeaveMutex	src/sqlite/sqlite3.c	45653;"	d	file:
pcache1MemSize	src/sqlite/sqlite3.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1Pagecount	src/sqlite/sqlite3.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1PinPage	src/sqlite/sqlite3.c	/^static PgHdr1 *pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1Rekey	src/sqlite/sqlite3.c	/^static void pcache1Rekey($/;"	f	file:
pcache1RemoveFromHash	src/sqlite/sqlite3.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage, int freeFlag){$/;"	f	file:
pcache1ResizeHash	src/sqlite/sqlite3.c	/^static void pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1Shrink	src/sqlite/sqlite3.c	/^static void pcache1Shrink(sqlite3_pcache *p){$/;"	f	file:
pcache1Shutdown	src/sqlite/sqlite3.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Truncate	src/sqlite/sqlite3.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1TruncateUnsafe	src/sqlite/sqlite3.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1UnderMemoryPressure	src/sqlite/sqlite3.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1Unpin	src/sqlite/sqlite3.c	/^static void pcache1Unpin($/;"	f	file:
pcache1_g	src/sqlite/sqlite3.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcache2	src/sqlite/sqlite3.c	/^  sqlite3_pcache_methods2 pcache2;  \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config	file:
pcacheDump	src/sqlite/sqlite3.c	/^  void pcacheDump(PCache *pCache){$/;"	f
pcacheDump	src/sqlite/sqlite3.c	44639;"	d	file:
pcacheFetchFinishWithInit	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE PgHdr *pcacheFetchFinishWithInit($/;"	f	file:
pcacheManageDirtyList	src/sqlite/sqlite3.c	/^static void pcacheManageDirtyList(PgHdr *pPage, u8 addRemove){$/;"	f	file:
pcacheMergeDirtyList	src/sqlite/sqlite3.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheSortDirtyList	src/sqlite/sqlite3.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheTrace	src/sqlite/sqlite3.c	44612;"	d	file:
pcacheTrace	src/sqlite/sqlite3.c	44638;"	d	file:
pcacheUnpin	src/sqlite/sqlite3.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pclose	src/sqlite/shell.c	124;"	d	file:
pclose	src/sqlite/shell.c	125;"	d	file:
per_thread_test_part_result_reporter_	third_party/gmock/gmock-gtest-all.cc	/^      per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
pgidx	src/sqlite/sqlite3.c	/^  Fts5Buffer pgidx;               \/* Buffer containing page-index *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	src/sqlite/sqlite3.c	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr	file:
pgno	src/sqlite/sqlite3.c	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage	file:
pgno	src/sqlite/sqlite3.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5DlidxWriter	file:
pgno	src/sqlite/sqlite3.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5PageWriter	file:
pgnoFirst	src/sqlite/sqlite3.c	/^  int pgnoFirst;                  \/* First leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoLast	src/sqlite/sqlite3.c	/^  int pgnoLast;                   \/* Last leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoRoot	src/sqlite/sqlite3.c	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor	file:
pgnoRoot	src/sqlite/sqlite3.c	/^  Pgno pgnoRoot;          \/* Root page of the open btree cursor *\/$/;"	m	struct:VdbeCursor	file:
pgsz	src/sqlite/sqlite3.c	/^  int pgsz;                       \/* Approximate page size used in %_data *\/$/;"	m	struct:Fts5Config	file:
pgsz	src/sqlite/sqlite3.c	/^  int pgsz;                       \/* Main database page size *\/$/;"	m	struct:VdbeSorter	file:
pgsz	src/sqlite/sqlite3.c	/^  int pgsz;$/;"	m	struct:sqlite3rbu	file:
pin_count_	src/include/page/page.h	/^  int pin_count_ = 0;$/;"	m	class:cmudb::Page
pnByte	src/sqlite/sqlite3.c	/^  int *pnByte;                    \/* Pointer to bytes counter *\/$/;"	m	struct:Fts5Hash	file:
pnBytesFreed	src/sqlite/sqlite3.c	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3	file:
pointer	third_party/gmock/gtest/gtest.h	/^    T* pointer() { return &value_; }$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
pointer	third_party/gmock/gtest/gtest.h	/^  T* pointer() { return &value_; }$/;"	f	class:std::tr1::ThreadLocal
pointer	third_party/gmock/gtest/gtest.h	/^  T* pointer() { return GetOrCreateValue(); }$/;"	f	class:std::tr1::ThreadLocal
pointer	third_party/gmock/gtest/gtest.h	/^  const T* pointer() const { return &value_; }$/;"	f	class:std::tr1::ThreadLocal
pointer	third_party/gmock/gtest/gtest.h	/^  const T* pointer() const { return GetOrCreateValue(); }$/;"	f	class:std::tr1::ThreadLocal
pointer_	third_party/gmock/gmock/gmock.h	/^  T* pointer_;$/;"	m	class:testing::internal::ReferenceWrapper
pool_size_	src/include/buffer/buffer_pool_manager.h	/^  size_t pool_size_;$/;"	m	class:cmudb::BufferPoolManager
popen	src/sqlite/shell.c	122;"	d	file:
popen	src/sqlite/shell.c	123;"	d	file:
populateCellCache	src/sqlite/sqlite3.c	/^static void populateCellCache(CellArray *p, int idx, int N){$/;"	f	file:
port_num_	third_party/gmock/gmock-gtest-all.cc	/^    const string port_num_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
porterClose	src/sqlite/sqlite3.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterCreate	src/sqlite/sqlite3.c	/^static int porterCreate($/;"	f	file:
porterDestroy	src/sqlite/sqlite3.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterIdChar	src/sqlite/sqlite3.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterNext	src/sqlite/sqlite3.c	/^static int porterNext($/;"	f	file:
porterOpen	src/sqlite/sqlite3.c	/^static int porterOpen($/;"	f	file:
porterTokenizerModule	src/sqlite/sqlite3.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porter_stemmer	src/sqlite/sqlite3.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_tokenizer	src/sqlite/sqlite3.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	src/sqlite/sqlite3.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer_cursor	src/sqlite/sqlite3.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	src/sqlite/sqlite3.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
posix	third_party/gmock/gmock-gtest-all.cc	/^namespace posix {$/;"	n	namespace:testing::internal	file:
posix	third_party/gmock/gtest/gtest.h	/^namespace posix {$/;"	n	namespace:std::tr1
posixOpen	src/sqlite/sqlite3.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixUnlock	src/sqlite/sqlite3.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
poslist	src/sqlite/sqlite3.c	/^  Fts5Buffer poslist;             \/* Buffer containing current poslist *\/$/;"	m	struct:Fts5Iter	file:
poslist	src/sqlite/sqlite3.c	/^  Fts5Buffer poslist;             \/* Current position list *\/$/;"	m	struct:Fts5ExprPhrase	file:
post_flag_parse_init_performed_	third_party/gmock/gmock-gtest-all.cc	/^  bool post_flag_parse_init_performed_;$/;"	m	class:testing::internal::UnitTestImpl	file:
ppNextElem	src/sqlite/sqlite3.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
ppRec	src/sqlite/sqlite3.c	/^  UnpackedRecord **ppRec;$/;"	m	struct:ValueNewStat4Ctx	file:
ppWhere	src/sqlite/sqlite3.c	/^  Expr **ppWhere;$/;"	m	struct:HavingToWhereCtx	file:
pragCName	src/sqlite/sqlite3.c	/^static const char *const pragCName[] = {$/;"	v	file:
pragmaLocate	src/sqlite/sqlite3.c	/^static const PragmaName *pragmaLocate(const char *zName){$/;"	f	file:
pragmaVtabBestIndex	src/sqlite/sqlite3.c	/^static int pragmaVtabBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
pragmaVtabClose	src/sqlite/sqlite3.c	/^static int pragmaVtabClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
pragmaVtabColumn	src/sqlite/sqlite3.c	/^static int pragmaVtabColumn($/;"	f	file:
pragmaVtabConnect	src/sqlite/sqlite3.c	/^static int pragmaVtabConnect($/;"	f	file:
pragmaVtabCursorClear	src/sqlite/sqlite3.c	/^static void pragmaVtabCursorClear(PragmaVtabCursor *pCsr){$/;"	f	file:
pragmaVtabDisconnect	src/sqlite/sqlite3.c	/^static int pragmaVtabDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
pragmaVtabEof	src/sqlite/sqlite3.c	/^static int pragmaVtabEof(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
pragmaVtabFilter	src/sqlite/sqlite3.c	/^static int pragmaVtabFilter($/;"	f	file:
pragmaVtabModule	src/sqlite/sqlite3.c	/^static const sqlite3_module pragmaVtabModule = {$/;"	v	file:
pragmaVtabNext	src/sqlite/sqlite3.c	/^static int pragmaVtabNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
pragmaVtabOpen	src/sqlite/sqlite3.c	/^static int pragmaVtabOpen(sqlite3_vtab *pVtab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
pragmaVtabRowid	src/sqlite/sqlite3.c	/^static int pragmaVtabRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *p){$/;"	f	file:
predicate_	third_party/gmock/gmock/gmock.h	/^  Predicate predicate_;$/;"	m	class:testing::internal::TrulyMatcher
prefix	src/sqlite/sqlite3.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prefix_	third_party/gmock/gmock/gmock.h	/^  const StringType prefix_;$/;"	m	class:testing::internal::StartsWithMatcher
premature_exit_filepath_	third_party/gmock/gmock-gtest-all.cc	/^  const char* const premature_exit_filepath_;$/;"	m	class:testing::internal::ScopedPrematureExitFile	file:
prepFlags	src/sqlite/sqlite3.c	/^  u8 prepFlags;           \/* SQLITE_PREPARE_* flags *\/$/;"	m	struct:Vdbe	file:
prepare	src/include/sqlite/sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare	src/sqlite/sqlite3.c	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16	src/include/sqlite/sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16	src/sqlite/sqlite3.c	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16_v2	src/include/sqlite/sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16_v2	src/sqlite/sqlite3.c	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepareAndCollectError	src/sqlite/sqlite3.c	/^static int prepareAndCollectError($/;"	f	file:
prepareFreeAndCollectError	src/sqlite/sqlite3.c	/^static int prepareFreeAndCollectError($/;"	f	file:
prepare_v2	src/include/sqlite/sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare_v2	src/sqlite/sqlite3.c	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prereq	src/sqlite/sqlite3.c	/^  Bitmask prereq;       \/* Bitmask of other loops that must run first *\/$/;"	m	struct:WhereLoop	file:
prereq	src/sqlite/sqlite3.c	/^  Bitmask prereq;     \/* Prerequisites *\/$/;"	m	struct:WhereOrCost	file:
prereqAll	src/sqlite/sqlite3.c	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm	file:
prereqRight	src/sqlite/sqlite3.c	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm	file:
prev	src/sqlite/sqlite3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon24::__anon26	file:
prev	src/sqlite/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
prev	src/sqlite/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
prev	src/sqlite/sqlite3.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prevSize	src/sqlite/sqlite3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon24::__anon25	file:
printBold	src/sqlite/shell.c	/^static void printBold(const char *zText){$/;"	f	file:
printSchemaLine	src/sqlite/shell.c	/^static void printSchemaLine(FILE *out, const char *z, const char *zTail){$/;"	f	file:
printSchemaLineN	src/sqlite/shell.c	/^static void printSchemaLineN(FILE *out, char *z, int n, const char *zTail){$/;"	f	file:
print_pager_state	src/sqlite/sqlite3.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
print_time_	third_party/gmock/gmock-gtest-all.cc	/^  bool print_time_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
printfFlags	src/sqlite/sqlite3.c	/^  u8   printfFlags;    \/* SQLITE_PRINTF flags below *\/$/;"	m	struct:StrAccum	file:
printfFunc	src/sqlite/sqlite3.c	/^static void printfFunc($/;"	f	file:
process_input	src/sqlite/shell.c	/^static int process_input(ShellState *p, FILE *in){$/;"	f	file:
process_sqliterc	src/sqlite/shell.c	/^static void process_sqliterc($/;"	f	file:
profile	src/include/sqlite/sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines
profile	src/sqlite/sqlite3.c	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	file:
progress_handler	src/include/sqlite/sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
progress_handler	src/sqlite/sqlite3.c	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
property_	third_party/gmock/gmock/gmock.h	/^  PropertyType (Class::*property_)() const;$/;"	m	class:testing::internal::PropertyMatcher
proto2	third_party/gmock/gtest/gtest.h	/^namespace proto2 { class Message; }$/;"	n
proto_	third_party/gmock/gmock/gmock.h	/^  const internal::linked_ptr<Proto> proto_;$/;"	m	class:testing::internal::SetArgumentPointeeAction
proxyBreakConchLock	src/sqlite/sqlite3.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyCheckReservedLock	src/sqlite/sqlite3.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyClose	src/sqlite/sqlite3.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyConchLock	src/sqlite/sqlite3.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyCreateConchPathname	src/sqlite/sqlite3.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateLockPath	src/sqlite/sqlite3.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateUnixFile	src/sqlite/sqlite3.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyFileControl	src/sqlite/sqlite3.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyGetDbPathForUnixFile	src/sqlite/sqlite3.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetHostID	src/sqlite/sqlite3.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetLockPath	src/sqlite/sqlite3.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyLock	src/sqlite/sqlite3.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLockingContext	src/sqlite/sqlite3.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	src/sqlite/sqlite3.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyReleaseConch	src/sqlite/sqlite3.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	src/sqlite/sqlite3.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTransformUnixFile	src/sqlite/sqlite3.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyUnlock	src/sqlite/sqlite3.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
pseudoTableReg	src/sqlite/sqlite3.c	/^    int pseudoTableReg;         \/* CURTYPE_PSEUDO. Reg holding content. *\/$/;"	m	union:VdbeCursor::__anon21	file:
pthreadMutexAlloc	src/sqlite/sqlite3.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexEnd	src/sqlite/sqlite3.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnter	src/sqlite/sqlite3.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	src/sqlite/sqlite3.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	src/sqlite/sqlite3.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexInit	src/sqlite/sqlite3.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexLeave	src/sqlite/sqlite3.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	src/sqlite/sqlite3.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	src/sqlite/sqlite3.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
ptr_	third_party/gmock/gmock/gmock.h	/^  T1* const ptr_;$/;"	m	class:testing::internal::AssignAction
ptr_	third_party/gmock/gtest/gtest.h	/^  T* ptr_;$/;"	m	struct:std::tr1::tuple_element
ptrmapGet	src/sqlite/sqlite3.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	src/sqlite/sqlite3.c	60457;"	d	file:
ptrmapPageno	src/sqlite/sqlite3.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPut	src/sqlite/sqlite3.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	src/sqlite/sqlite3.c	60456;"	d	file:
ptrmapPutOvflPtr	src/sqlite/sqlite3.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	src/sqlite/sqlite3.c	60458;"	d	file:
pushDownWhereTerms	src/sqlite/sqlite3.c	/^static int pushDownWhereTerms($/;"	f	file:
pushOntoSorter	src/sqlite/sqlite3.c	/^static void pushOntoSorter($/;"	f	file:
put2byte	src/sqlite/sqlite3.c	59135;"	d	file:
put32bits	src/sqlite/sqlite3.c	48445;"	d	file:
put4byte	src/sqlite/sqlite3.c	59137;"	d	file:
putVarint	src/sqlite/sqlite3.c	17616;"	d	file:
putVarint32	src/sqlite/sqlite3.c	17612;"	d	file:
putVarint64	src/sqlite/sqlite3.c	/^static int SQLITE_NOINLINE putVarint64(unsigned char *p, u64 v){$/;"	f	file:
pzErrMsg	src/sqlite/sqlite3.c	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon19	file:
pzErrmsg	src/sqlite/sqlite3.c	/^  char **pzErrmsg;$/;"	m	struct:Fts5Config	file:
qnxnto	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
querySharedCacheTableLock	src/sqlite/sqlite3.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	src/sqlite/sqlite3.c	59555;"	d	file:
queryTestTokenizer	src/sqlite/sqlite3.c	/^static int queryTestTokenizer($/;"	f	file:
queryTokenizer	src/sqlite/sqlite3.c	/^int queryTokenizer($/;"	f	file:
quoteChar	src/sqlite/shell.c	/^static char quoteChar(const char *zName){$/;"	f	file:
quoteFunc	src/sqlite/sqlite3.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
r	src/sqlite/sqlite3.c	/^    double r;           \/* Real value used when MEM_Real is set in flags *\/$/;"	m	union:sqlite3_value::MemValue	file:
r1	src/sqlite/sqlite3.c	/^  i8 r1;              \/* Value to return if (lhs > rhs) *\/$/;"	m	struct:UnpackedRecord	file:
r2	src/sqlite/sqlite3.c	/^  i8 r2;              \/* Value to return if (rhs < lhs) *\/$/;"	m	struct:UnpackedRecord	file:
rCost	src/sqlite/sqlite3.c	/^  LogEst rCost;         \/* Total cost of this path *\/$/;"	m	struct:WherePath	file:
rLimit	src/sqlite/sqlite3.c	/^  double rLimit;      \/* Maximum NNN value for this transform *\/$/;"	m	struct:__anon22	file:
rParentScore	src/include/sqlite/sqlite3.h	/^sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rParentScore	src/sqlite/sqlite3.c	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
rRun	src/sqlite/sqlite3.c	/^  LogEst rRun;          \/* Cost of running each loop *\/$/;"	m	struct:WhereLoop	file:
rRun	src/sqlite/sqlite3.c	/^  LogEst rRun;        \/* Cost of running this subquery *\/$/;"	m	struct:WhereOrCost	file:
rScore	src/include/sqlite/sqlite3.h	/^sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
rScore	src/sqlite/sqlite3.c	/^  RtreeDValue rScore;    \/* The score for this node.  Smallest goes first. *\/$/;"	m	struct:RtreeSearchPoint	file:
rScore	src/sqlite/sqlite3.c	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
rSetup	src/sqlite/sqlite3.c	/^  LogEst rSetup;        \/* One-time setup cost (ex: create transient index) *\/$/;"	m	struct:WhereLoop	file:
rSum	src/sqlite/sqlite3.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rUnsorted	src/sqlite/sqlite3.c	/^  LogEst rUnsorted;     \/* Total cost of this path ignoring sorting costs *\/$/;"	m	struct:WherePath	file:
rValue	src/sqlite/sqlite3.c	/^    RtreeDValue rValue;             \/* Constraint value. *\/$/;"	m	union:RtreeConstraint::__anon39	file:
rXform	src/sqlite/sqlite3.c	/^  double rXform;      \/* Constant used for this transform *\/$/;"	m	struct:__anon22	file:
random	third_party/gmock/gmock-gtest-all.cc	/^  internal::Random* random() { return &random_; }$/;"	f	class:testing::internal::UnitTestImpl
randomBlob	src/sqlite/sqlite3.c	/^static void randomBlob($/;"	f	file:
randomFill	src/sqlite/sqlite3.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFunc	src/sqlite/sqlite3.c	/^static void randomFunc($/;"	f	file:
random_	third_party/gmock/gmock-gtest-all.cc	/^  internal::Random random_;$/;"	m	class:testing::internal::UnitTestImpl	file:
random_seed	third_party/gmock/gmock-gtest-all.cc	/^  int random_seed() const { return random_seed_; }$/;"	f	class:testing::internal::UnitTestImpl
random_seed	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::random_seed() const { return impl_->random_seed(); }$/;"	f	class:testing::UnitTest
random_seed_	third_party/gmock/gmock-gtest-all.cc	/^  int random_seed_;$/;"	m	class:testing::internal::UnitTestImpl	file:
random_seed_	third_party/gmock/gmock-gtest-all.cc	/^  internal::Int32 random_seed_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
randomness	src/include/sqlite/sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines
randomness	src/sqlite/sqlite3.c	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	file:
randomnessPid	src/sqlite/sqlite3.c	/^static pid_t randomnessPid = 0;$/;"	v	file:
rawS	src/sqlite/sqlite3.c	/^  char rawS;          \/* Raw numeric value stored in s *\/$/;"	m	struct:DateTime	file:
raw_printf	src/sqlite/shell.c	415;"	d	file:
rbuAllocateIterArrays	src/sqlite/sqlite3.c	/^static void rbuAllocateIterArrays(sqlite3rbu *p, RbuObjIter *pIter, int nCol){$/;"	f	file:
rbuBadControlError	src/sqlite/sqlite3.c	/^static void rbuBadControlError(sqlite3rbu *p){$/;"	f	file:
rbuCaptureDbWrite	src/sqlite/sqlite3.c	/^static int rbuCaptureDbWrite(sqlite3rbu *pRbu, i64 iOff){$/;"	f	file:
rbuCaptureWalRead	src/sqlite/sqlite3.c	/^static int rbuCaptureWalRead(sqlite3rbu *pRbu, i64 iOff, int iAmt){$/;"	f	file:
rbuCheckpointFrame	src/sqlite/sqlite3.c	/^static void rbuCheckpointFrame(sqlite3rbu *p, RbuFrame *pFrame){$/;"	f	file:
rbuCopyPragma	src/sqlite/sqlite3.c	/^static void rbuCopyPragma(sqlite3rbu *p, const char *zPragma){$/;"	f	file:
rbuCreateImposterTable	src/sqlite/sqlite3.c	/^static void rbuCreateImposterTable(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable2	src/sqlite/sqlite3.c	/^static void rbuCreateImposterTable2(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateTargetSchema	src/sqlite/sqlite3.c	/^static void rbuCreateTargetSchema(sqlite3rbu *p){$/;"	f	file:
rbuCreateVfs	src/sqlite/sqlite3.c	/^static void rbuCreateVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeleteOalFile	src/sqlite/sqlite3.c	/^static void rbuDeleteOalFile(sqlite3rbu *p){$/;"	f	file:
rbuDeleteVfs	src/sqlite/sqlite3.c	/^static void rbuDeleteVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeltaApply	src/sqlite/sqlite3.c	/^static int rbuDeltaApply($/;"	f	file:
rbuDeltaChecksum	src/sqlite/sqlite3.c	/^static unsigned int rbuDeltaChecksum(const char *zIn, size_t N){$/;"	f	file:
rbuDeltaGetInt	src/sqlite/sqlite3.c	/^static unsigned int rbuDeltaGetInt(const char **pz, int *pLen){$/;"	f	file:
rbuDeltaOutputSize	src/sqlite/sqlite3.c	/^static int rbuDeltaOutputSize(const char *zDelta, int lenDelta){$/;"	f	file:
rbuEditErrmsg	src/sqlite/sqlite3.c	/^static void rbuEditErrmsg(sqlite3rbu *p){$/;"	f	file:
rbuFileSuffix3	src/sqlite/sqlite3.c	/^static void rbuFileSuffix3(const char *zBase, char *z){$/;"	f	file:
rbuFinalize	src/sqlite/sqlite3.c	/^static void rbuFinalize(sqlite3rbu *p, sqlite3_stmt *pStmt){$/;"	f	file:
rbuFindMaindb	src/sqlite/sqlite3.c	/^static rbu_file *rbuFindMaindb(rbu_vfs *pRbuVfs, const char *zWal){$/;"	f	file:
rbuFossilDeltaFunc	src/sqlite/sqlite3.c	/^static void rbuFossilDeltaFunc($/;"	f	file:
rbuFreeState	src/sqlite/sqlite3.c	/^static void rbuFreeState(RbuState *p){$/;"	f	file:
rbuGetU32	src/sqlite/sqlite3.c	/^static u32 rbuGetU32(u8 *aBuf){$/;"	f	file:
rbuGetUpdateStmt	src/sqlite/sqlite3.c	/^static int rbuGetUpdateStmt($/;"	f	file:
rbuIncrSchemaCookie	src/sqlite/sqlite3.c	/^static void rbuIncrSchemaCookie(sqlite3rbu *p){$/;"	f	file:
rbuIndexCntFunc	src/sqlite/sqlite3.c	/^static void rbuIndexCntFunc($/;"	f	file:
rbuInitPhaseOneSteps	src/sqlite/sqlite3.c	/^static void rbuInitPhaseOneSteps(sqlite3rbu *p){$/;"	f	file:
rbuIsVacuum	src/sqlite/sqlite3.c	170364;"	d	file:
rbuLoadState	src/sqlite/sqlite3.c	/^static RbuState *rbuLoadState(sqlite3rbu *p){$/;"	f	file:
rbuLockDatabase	src/sqlite/sqlite3.c	/^static void rbuLockDatabase(sqlite3rbu *p){$/;"	f	file:
rbuMPrintf	src/sqlite/sqlite3.c	/^static char *rbuMPrintf(sqlite3rbu *p, const char *zFmt, ...){$/;"	f	file:
rbuMPrintfExec	src/sqlite/sqlite3.c	/^static int rbuMPrintfExec(sqlite3rbu *p, sqlite3 *db, const char *zFmt, ...){$/;"	f	file:
rbuMainToWal	src/sqlite/sqlite3.c	/^static const char *rbuMainToWal(const char *zName, int flags){$/;"	f	file:
rbuMalloc	src/sqlite/sqlite3.c	/^static void *rbuMalloc(sqlite3rbu *p, int nByte){$/;"	f	file:
rbuMisuseError	src/sqlite/sqlite3.c	/^static sqlite3rbu *rbuMisuseError(void){$/;"	f	file:
rbuMoveOalFile	src/sqlite/sqlite3.c	/^static void rbuMoveOalFile(sqlite3rbu *p){$/;"	f	file:
rbuObjIterCacheIndexedCols	src/sqlite/sqlite3.c	/^static void rbuObjIterCacheIndexedCols(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheTableInfo	src/sqlite/sqlite3.c	/^static int rbuObjIterCacheTableInfo(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterClearStatements	src/sqlite/sqlite3.c	/^static void rbuObjIterClearStatements(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFinalize	src/sqlite/sqlite3.c	/^static void rbuObjIterFinalize(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFirst	src/sqlite/sqlite3.c	/^static int rbuObjIterFirst(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFreeCols	src/sqlite/sqlite3.c	/^static void rbuObjIterFreeCols(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterGetBindlist	src/sqlite/sqlite3.c	/^static char *rbuObjIterGetBindlist(sqlite3rbu *p, int nBind){$/;"	f	file:
rbuObjIterGetCollist	src/sqlite/sqlite3.c	/^static char *rbuObjIterGetCollist($/;"	f	file:
rbuObjIterGetIndexCols	src/sqlite/sqlite3.c	/^static char *rbuObjIterGetIndexCols($/;"	f	file:
rbuObjIterGetOldlist	src/sqlite/sqlite3.c	/^static char *rbuObjIterGetOldlist($/;"	f	file:
rbuObjIterGetSetlist	src/sqlite/sqlite3.c	/^static char *rbuObjIterGetSetlist($/;"	f	file:
rbuObjIterGetWhere	src/sqlite/sqlite3.c	/^static char *rbuObjIterGetWhere($/;"	f	file:
rbuObjIterNext	src/sqlite/sqlite3.c	/^static int rbuObjIterNext(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterPrepareAll	src/sqlite/sqlite3.c	/^static int rbuObjIterPrepareAll($/;"	f	file:
rbuObjIterPrepareTmpInsert	src/sqlite/sqlite3.c	/^static void rbuObjIterPrepareTmpInsert($/;"	f	file:
rbuOpenDatabase	src/sqlite/sqlite3.c	/^static void rbuOpenDatabase(sqlite3rbu *p, int *pbRetry){$/;"	f	file:
rbuOpenDbhandle	src/sqlite/sqlite3.c	/^static sqlite3 *rbuOpenDbhandle($/;"	f	file:
rbuPutU16	src/sqlite/sqlite3.c	/^static void rbuPutU16(u8 *aBuf, u16 iVal){$/;"	f	file:
rbuPutU32	src/sqlite/sqlite3.c	/^static void rbuPutU32(u8 *aBuf, u32 iVal){$/;"	f	file:
rbuSaveState	src/sqlite/sqlite3.c	/^static void rbuSaveState(sqlite3rbu *p, int eStage){$/;"	f	file:
rbuSetupCheckpoint	src/sqlite/sqlite3.c	/^static void rbuSetupCheckpoint(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupOal	src/sqlite/sqlite3.c	/^static void rbuSetupOal(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuShmChecksum	src/sqlite/sqlite3.c	/^static i64 rbuShmChecksum(sqlite3rbu *p){$/;"	f	file:
rbuStep	src/sqlite/sqlite3.c	/^static int rbuStep(sqlite3rbu *p){$/;"	f	file:
rbuStepOneOp	src/sqlite/sqlite3.c	/^static void rbuStepOneOp(sqlite3rbu *p, int eType){$/;"	f	file:
rbuStepType	src/sqlite/sqlite3.c	/^static int rbuStepType(sqlite3rbu *p, const char **pzMask){$/;"	f	file:
rbuStrCompare	src/sqlite/sqlite3.c	/^static int rbuStrCompare(const char *z1, const char *z2){$/;"	f	file:
rbuStrndup	src/sqlite/sqlite3.c	/^static char *rbuStrndup(const char *zStr, int *pRc){$/;"	f	file:
rbuTableType	src/sqlite/sqlite3.c	/^static void rbuTableType($/;"	f	file:
rbuTargetNameFunc	src/sqlite/sqlite3.c	/^static void rbuTargetNameFunc($/;"	f	file:
rbuTmpInsertFunc	src/sqlite/sqlite3.c	/^static void rbuTmpInsertFunc($/;"	f	file:
rbuUnlockShm	src/sqlite/sqlite3.c	/^static void rbuUnlockShm(rbu_file *p){$/;"	f	file:
rbuVfsAccess	src/sqlite/sqlite3.c	/^static int rbuVfsAccess($/;"	f	file:
rbuVfsCheckReservedLock	src/sqlite/sqlite3.c	/^static int rbuVfsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
rbuVfsClose	src/sqlite/sqlite3.c	/^static int rbuVfsClose(sqlite3_file *pFile){$/;"	f	file:
rbuVfsCurrentTime	src/sqlite/sqlite3.c	/^static int rbuVfsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
rbuVfsDelete	src/sqlite/sqlite3.c	/^static int rbuVfsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
rbuVfsDeviceCharacteristics	src/sqlite/sqlite3.c	/^static int rbuVfsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
rbuVfsDlClose	src/sqlite/sqlite3.c	/^static void rbuVfsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
rbuVfsDlError	src/sqlite/sqlite3.c	/^static void rbuVfsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
rbuVfsDlOpen	src/sqlite/sqlite3.c	/^static void *rbuVfsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
rbuVfsDlSym	src/sqlite/sqlite3.c	/^static void (*rbuVfsDlSym($/;"	f	file:
rbuVfsFileControl	src/sqlite/sqlite3.c	/^static int rbuVfsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
rbuVfsFileSize	src/sqlite/sqlite3.c	/^static int rbuVfsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
rbuVfsFullPathname	src/sqlite/sqlite3.c	/^static int rbuVfsFullPathname($/;"	f	file:
rbuVfsGetLastError	src/sqlite/sqlite3.c	/^static int rbuVfsGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
rbuVfsLock	src/sqlite/sqlite3.c	/^static int rbuVfsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsOpen	src/sqlite/sqlite3.c	/^static int rbuVfsOpen($/;"	f	file:
rbuVfsRandomness	src/sqlite/sqlite3.c	/^static int rbuVfsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
rbuVfsRead	src/sqlite/sqlite3.c	/^static int rbuVfsRead($/;"	f	file:
rbuVfsSectorSize	src/sqlite/sqlite3.c	/^static int rbuVfsSectorSize(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmBarrier	src/sqlite/sqlite3.c	/^static void rbuVfsShmBarrier(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmLock	src/sqlite/sqlite3.c	/^static int rbuVfsShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
rbuVfsShmMap	src/sqlite/sqlite3.c	/^static int rbuVfsShmMap($/;"	f	file:
rbuVfsShmUnmap	src/sqlite/sqlite3.c	/^static int rbuVfsShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
rbuVfsSleep	src/sqlite/sqlite3.c	/^static int rbuVfsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
rbuVfsSync	src/sqlite/sqlite3.c	/^static int rbuVfsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
rbuVfsTruncate	src/sqlite/sqlite3.c	/^static int rbuVfsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
rbuVfsUnlock	src/sqlite/sqlite3.c	/^static int rbuVfsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsWrite	src/sqlite/sqlite3.c	/^static int rbuVfsWrite($/;"	f	file:
rbuWinUtf8ToUnicode	src/sqlite/sqlite3.c	/^static LPWSTR rbuWinUtf8ToUnicode(const char *zFilename){$/;"	f	file:
rbuWithoutRowidPK	src/sqlite/sqlite3.c	/^static char *rbuWithoutRowidPK(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbu_file	src/sqlite/sqlite3.c	/^struct rbu_file {$/;"	s	file:
rbu_file	src/sqlite/sqlite3.c	/^typedef struct rbu_file rbu_file;$/;"	t	typeref:struct:rbu_file	file:
rbu_vfs	src/sqlite/sqlite3.c	/^struct rbu_vfs {$/;"	s	file:
rbu_vfs	src/sqlite/sqlite3.c	/^typedef struct rbu_vfs rbu_vfs;$/;"	t	typeref:struct:rbu_vfs	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                         \/* Current error code *\/$/;"	m	struct:Fts5Index	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                         \/* Error code *\/$/;"	m	struct:sqlite3_changegroup	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                         \/* Iterator error code *\/$/;"	m	struct:sqlite3_changeset_iter	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                         \/* Non-zero if an error has occurred *\/$/;"	m	struct:sqlite3_session	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                         \/* Value returned by last rbu_step() call *\/$/;"	m	struct:sqlite3rbu	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	src/sqlite/sqlite3.c	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe	file:
rc	src/sqlite/sqlite3.c	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse	file:
rc	src/sqlite/sqlite3.c	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon19	file:
rc	src/sqlite/sqlite3.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
rc	src/sqlite/sqlite3.c	/^  int rc;$/;"	m	struct:Fts5Parse	file:
rc	src/sqlite/sqlite3.c	/^  int rc;$/;"	m	struct:TokenCtx	file:
rcApp	src/sqlite/sqlite3.c	/^  int rcApp;              \/* errcode set by sqlite3_result_error_code() *\/$/;"	m	struct:Vdbe	file:
rd_lock	src/buffer/lru_replacer.cpp	/^template<typename T> void LRUReplacer<T>::rd_lock() {$/;"	f	class:cmudb::LRUReplacer
rd_mutex	src/include/buffer/lru_replacer.h	/^  std::mutex rd_mutex;$/;"	m	class:cmudb::LRUReplacer
rd_mutex	src/include/hash/extendible_hash.h	/^  mutable std::mutex rd_mutex;$/;"	m	class:cmudb::ExtendibleHash
rd_unlock	src/buffer/lru_replacer.cpp	/^template<typename T> void LRUReplacer<T>::rd_unlock() {$/;"	f	class:cmudb::LRUReplacer
read32bits	src/sqlite/sqlite3.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
readCoord	src/sqlite/sqlite3.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readDbPage	src/sqlite/sqlite3.c	/^static int readDbPage(PgHdr *pPg, u32 iFrame){$/;"	f	file:
readFile	src/sqlite/shell.c	/^static char *readFile(const char *zName, int *pnByte){$/;"	f	file:
readInt16	src/sqlite/sqlite3.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt64	src/sqlite/sqlite3.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readJournalHdr	src/sqlite/sqlite3.c	/^static int readJournalHdr($/;"	f	file:
readLock	src/sqlite/sqlite3.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readMasterJournal	src/sqlite/sqlite3.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readOnly	src/sqlite/sqlite3.c	/^  bft readOnly:1;         \/* True for statements that do not write *\/$/;"	m	struct:Vdbe	file:
readOnly	src/sqlite/sqlite3.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	src/sqlite/sqlite3.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
read_fd	third_party/gmock/gmock-gtest-all.cc	/^  int read_fd() const { return read_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
read_fd_	third_party/gmock/gmock-gtest-all.cc	/^  int read_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
reader	src/sqlite/sqlite3.c	/^  Fts5LookaheadReader reader;     \/* Input iterator *\/$/;"	m	struct:Fts5NearTrimmer	file:
reader_	src/include/common/rwmutex.h	/^  cond_t reader_;$/;"	m	class:cmudb::RWMutex
reader_count_	src/include/common/rwmutex.h	/^  uint32_t reader_count_;$/;"	m	class:cmudb::RWMutex
readers	src/include/buffer/lru_replacer.h	/^  uint64_t readers;$/;"	m	class:cmudb::LRUReplacer
readers	src/include/hash/extendible_hash.h	/^  uint64_t readers;$/;"	m	class:cmudb::ExtendibleHash
readfileFunc	src/sqlite/shell.c	/^static void readfileFunc($/;"	f	file:
readpoint	src/sqlite/sqlite3.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readsTable	src/sqlite/sqlite3.c	/^static int readsTable(Parse *p, int iDb, Table *pTab){$/;"	f	file:
realloc	src/include/sqlite/sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines
realloc	src/sqlite/sqlite3.c	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	file:
realloc64	src/include/sqlite/sqlite3ext.h	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
realloc64	src/sqlite/sqlite3.c	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
rebuildPage	src/sqlite/sqlite3.c	/^static int rebuildPage($/;"	f	file:
recordFunc	src/sqlite/sqlite3.c	/^static void recordFunc($/;"	f	file:
ref_	third_party/gmock/gmock/gmock.h	/^    T& ref_;$/;"	m	class:testing::internal::ReturnRefAction::Impl
ref_	third_party/gmock/gmock/gmock.h	/^  T& ref_;$/;"	m	class:testing::internal::ReturnRefAction
reference	third_party/gmock/gtest/gtest.h	/^  typedef const T& reference;$/;"	t	class:testing::internal::ParamIterator
regCtr	src/sqlite/sqlite3.c	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo	file:
regResult	src/sqlite/sqlite3.c	/^    int regResult;    \/* Registers holding results of a co-routine *\/$/;"	m	struct:SrcList::SrcList_item	file:
regReturn	src/sqlite/sqlite3.c	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item	file:
regReturn	src/sqlite/sqlite3.c	/^  int regReturn;        \/* Register holding block-output return address *\/$/;"	m	struct:SortCtx	file:
regRoot	src/sqlite/sqlite3.c	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse	file:
regRowid	src/sqlite/sqlite3.c	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse	file:
regex	third_party/gmock/gmock-gtest-all.cc	/^  const RE* regex() const { return regex_; }$/;"	f	class:testing::internal::DeathTestImpl
regex_	third_party/gmock/gmock-gtest-all.cc	/^  const RE* const regex_;$/;"	m	class:testing::internal::DeathTestImpl	file:
regex_	third_party/gmock/gmock/gmock.h	/^  const internal::linked_ptr<const RE> regex_;$/;"	m	class:testing::internal::MatchesRegexMatcher
registerTokenizer	src/sqlite/sqlite3.c	/^int registerTokenizer($/;"	f	file:
registerTrace	src/sqlite/sqlite3.c	/^static void registerTrace(int iReg, Mem *p){$/;"	f	file:
registered_	third_party/gmock/gtest/gtest.h	/^  bool registered_;$/;"	m	class:testing::internal::TypedTestCasePState
rehash	src/sqlite/sqlite3.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
reindexDatabases	src/sqlite/sqlite3.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexTable	src/sqlite/sqlite3.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reinsertNodeContent	src/sqlite/sqlite3.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
relation_to_source_	third_party/gmock/gtest/gtest.h	/^  RelationToSource relation_to_source_;$/;"	m	class:testing::internal::NativeArray
release	third_party/gmock/gtest/gtest.h	/^  T* release() {$/;"	f	struct:std::tr1::tuple_element
releaseAllSavepoints	src/sqlite/sqlite3.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseInodeInfo	src/sqlite/sqlite3.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseMemArray	src/sqlite/sqlite3.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releasePage	src/sqlite/sqlite3.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
releasePageNotNull	src/sqlite/sqlite3.c	/^static void releasePageNotNull(MemPage *pPage){$/;"	f	file:
release_memory	src/include/sqlite/sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines
release_memory	src/sqlite/sqlite3.c	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	file:
reloadTableSchema	src/sqlite/sqlite3.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
relocatePage	src/sqlite/sqlite3.c	/^static int relocatePage($/;"	f	file:
removeElementGivenHash	src/sqlite/sqlite3.c	/^static void removeElementGivenHash($/;"	f	file:
removeFromBlockedList	src/sqlite/sqlite3.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromSharingList	src/sqlite/sqlite3.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeNode	src/sqlite/sqlite3.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
remove_diacritic	src/sqlite/sqlite3.c	/^static int remove_diacritic(int c){$/;"	f	file:
remove_reference	third_party/gmock/gmock/gmock.h	/^template <typename T> struct remove_reference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
remove_reference	third_party/gmock/gmock/gmock.h	/^template <typename T> struct remove_reference<T&> { typedef T type; }; \/\/ NOLINT$/;"	s	namespace:testing::internal
renameParentFunc	src/sqlite/sqlite3.c	/^static void renameParentFunc($/;"	f	file:
renameTableFunc	src/sqlite/sqlite3.c	/^static void renameTableFunc($/;"	f	file:
renameTriggerFunc	src/sqlite/sqlite3.c	/^static void renameTriggerFunc($/;"	f	file:
renderLogMsg	src/sqlite/sqlite3.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
repeat_	third_party/gmock/gmock-gtest-all.cc	/^  internal::Int32 repeat_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
repeated_action	third_party/gmock/gmock/gmock.h	/^  const Action<F>& repeated_action() const { return repeated_action_; }$/;"	f	class:testing::internal::TypedExpectation
repeated_action_	third_party/gmock/gmock/gmock.h	/^  Action<F> repeated_action_;$/;"	m	class:testing::internal::TypedExpectation
repeated_action_specified_	third_party/gmock/gmock/gmock.h	/^  bool repeated_action_specified_;  \/\/ True if a WillRepeatedly() was specified.$/;"	m	class:testing::internal::ExpectationBase
repeater	third_party/gmock/gmock-gtest-all.cc	/^TestEventListener* TestEventListeners::repeater() { return repeater_; }$/;"	f	class:testing::TestEventListeners
repeater_	third_party/gmock/gtest/gtest.h	/^  internal::TestEventRepeater* repeater_;$/;"	m	class:testing::TestEventListeners
replaceFunc	src/sqlite/sqlite3.c	/^static void replaceFunc($/;"	f	file:
replacer_	src/include/buffer/buffer_pool_manager.h	/^  Replacer<Page *> *replacer_;$/;"	m	class:cmudb::BufferPoolManager
reportError	src/sqlite/sqlite3.c	/^static int reportError(int iErr, int lineno, const char *zType){$/;"	f	file:
reportable_disabled_test_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::reportable_disabled_test_count() const {$/;"	f	class:testing::TestCase
reportable_disabled_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::reportable_disabled_test_count() const {$/;"	f	class:testing::UnitTest
reportable_disabled_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::reportable_disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reportable_test_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::reportable_test_count() const {$/;"	f	class:testing::TestCase
reportable_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::reportable_test_count() const {$/;"	f	class:testing::UnitTest
reportable_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::reportable_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reserved	src/sqlite/sqlite3.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reset	src/include/sqlite/sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
reset	src/sqlite/sqlite3.c	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
reset	third_party/gmock/gtest/gtest.h	/^  void reset(T* p = NULL) {$/;"	f	struct:std::tr1::tuple_element
reset	third_party/gmock/gtest/gtest.h	/^  void reset(T* ptr = NULL) {$/;"	f	class:testing::internal::linked_ptr
resetAccumulator	src/sqlite/sqlite3.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resetAndCollectError	src/sqlite/sqlite3.c	/^static int resetAndCollectError(sqlite3_stmt *pStmt, char **pzErrmsg){$/;"	f	file:
reset_auto_extension	src/include/sqlite/sqlite3ext.h	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines
reset_auto_extension	src/sqlite/sqlite3.c	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines	file:
resizeIndexObject	src/sqlite/sqlite3.c	/^static int resizeIndexObject(sqlite3 *db, Index *pIdx, int N){$/;"	f	file:
resolveAlias	src/sqlite/sqlite3.c	/^static void resolveAlias($/;"	f	file:
resolveAsName	src/sqlite/sqlite3.c	/^static int resolveAsName($/;"	f	file:
resolveAttachExpr	src/sqlite/sqlite3.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveCompoundOrderBy	src/sqlite/sqlite3.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveExprStep	src/sqlite/sqlite3.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveOrderByTermToExprList	src/sqlite/sqlite3.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderGroupBy	src/sqlite/sqlite3.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOutOfRangeError	src/sqlite/sqlite3.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveP2Values	src/sqlite/sqlite3.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveSelectStep	src/sqlite/sqlite3.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
resolve_backslashes	src/sqlite/shell.c	/^static void resolve_backslashes(char *z){$/;"	f	file:
restoreCursorPosition	src/sqlite/sqlite3.c	60265;"	d	file:
restore_debug_trace_modes	src/sqlite/shell.c	/^static void restore_debug_trace_modes(void){$/;"	f	file:
result	third_party/gmock/gtest/gtest.h	/^  const TestResult* result() const { return &result_; }$/;"	f	class:testing::TestInfo
result_	third_party/gmock/gmock-gtest-all.cc	/^  TestPartResultArray* const result_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
result_	third_party/gmock/gmock/gmock.h	/^  const T result_;$/;"	m	class:testing::internal::SetErrnoAndReturnAction
result_	third_party/gmock/gtest/gtest.h	/^  TestResult result_;$/;"	m	class:testing::TestInfo
result_blob	src/include/sqlite/sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_blob	src/sqlite/sqlite3.c	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_blob64	src/include/sqlite/sqlite3ext.h	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_blob64	src/sqlite/sqlite3.c	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
result_double	src/include/sqlite/sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines
result_double	src/sqlite/sqlite3.c	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	file:
result_error	src/include/sqlite/sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines
result_error	src/sqlite/sqlite3.c	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error16	src/include/sqlite/sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines
result_error16	src/sqlite/sqlite3.c	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_code	src/include/sqlite/sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_error_code	src/sqlite/sqlite3.c	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_nomem	src/include/sqlite/sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_nomem	src/sqlite/sqlite3.c	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_toobig	src/include/sqlite/sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_toobig	src/sqlite/sqlite3.c	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_int	src/include/sqlite/sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_int	src/sqlite/sqlite3.c	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_int64	src/include/sqlite/sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
result_int64	src/sqlite/sqlite3.c	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
result_null	src/include/sqlite/sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_null	src/sqlite/sqlite3.c	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_subtype	src/include/sqlite/sqlite3ext.h	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines
result_subtype	src/sqlite/sqlite3.c	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines	file:
result_text	src/include/sqlite/sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text	src/sqlite/sqlite3.c	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16	src/include/sqlite/sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16	src/sqlite/sqlite3.c	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16be	src/include/sqlite/sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16be	src/sqlite/sqlite3.c	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16le	src/include/sqlite/sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16le	src/sqlite/sqlite3.c	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text64	src/include/sqlite/sqlite3ext.h	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_text64	src/sqlite/sqlite3.c	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
result_value	src/include/sqlite/sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
result_value	src/sqlite/sqlite3.c	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob	src/include/sqlite/sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_zeroblob	src/sqlite/sqlite3.c	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob64	src/include/sqlite/sqlite3ext.h	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
result_zeroblob64	src/sqlite/sqlite3.c	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
results	src/include/vtable/virtual_table.h	/^  std::vector<RID> results;$/;"	m	class:cmudb::Cursor
results_	third_party/gmock/gmock-gtest-all.cc	/^  const TestPartResultArray* const results_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
retRangeStart	src/sqlite/sqlite3.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
retired_	third_party/gmock/gmock/gmock.h	/^  bool retired_;    \/\/ True iff this expectation has retired.$/;"	m	class:testing::internal::ExpectationBase
retires_on_saturation_	third_party/gmock/gmock/gmock.h	/^  bool retires_on_saturation_;$/;"	m	class:testing::internal::ExpectationBase
returnSingleInt	src/sqlite/sqlite3.c	/^static void returnSingleInt(Vdbe *v, i64 value){$/;"	f	file:
returnSingleText	src/sqlite/sqlite3.c	/^static void returnSingleText($/;"	f	file:
reusable	src/sqlite/sqlite3.c	/^    unsigned reusable :1;   \/* Constant expression is reusable *\/$/;"	m	struct:ExprList::ExprList_item	file:
revLoop	src/sqlite/sqlite3.c	/^  Bitmask revLoop;      \/* aLoop[]s that should be reversed for ORDER BY *\/$/;"	m	struct:WherePath	file:
revMask	src/sqlite/sqlite3.c	/^  Bitmask revMask;          \/* Mask of ORDER BY terms that need reversing *\/$/;"	m	struct:WhereInfo	file:
rhs_	third_party/gmock/gmock/gmock.h	/^    const FloatType rhs_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl
rhs_	third_party/gmock/gmock/gmock.h	/^    const RhsStlContainer rhs_;$/;"	m	class:testing::internal::PointwiseMatcher::Impl
rhs_	third_party/gmock/gmock/gmock.h	/^  const FloatType rhs_;$/;"	m	class:testing::internal::FloatingEqMatcher
rhs_	third_party/gmock/gmock/gmock.h	/^  const RhsStlContainer rhs_;$/;"	m	class:testing::internal::PointwiseMatcher
rhs_	third_party/gmock/gmock/gmock.h	/^  const StlContainer rhs_;$/;"	m	class:testing::internal::ContainerEqMatcher
rid_	src/include/concurrency/transaction.h	/^  RID rid_;$/;"	m	class:cmudb::WriteRecord
rid_	src/include/table/tuple.h	/^  RID rid_;        \/\/ if pointing to the table heap, the rid is valid$/;"	m	class:cmudb::Tuple
right_	third_party/gmock/gmock-gtest-all.cc	/^  ::std::vector<size_t> right_;$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
robustFchown	src/sqlite/sqlite3.c	/^static int robustFchown(int fd, uid_t uid, gid_t gid){$/;"	f	file:
robust_close	src/sqlite/sqlite3.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_flock	src/sqlite/sqlite3.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	src/sqlite/sqlite3.c	32555;"	d	file:
robust_ftruncate	src/sqlite/sqlite3.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_open	src/sqlite/sqlite3.c	/^static int robust_open(const char *z, int f, mode_t m){$/;"	f	file:
rollback_hook	src/include/sqlite/sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
rollback_hook	src/sqlite/sqlite3.c	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
rootOnly	src/sqlite/sqlite3.c	/^  u8 rootOnly;                    \/* True for a root-only reader *\/$/;"	m	struct:Fts3SegReader	file:
root_page_id_	src/include/index/b_plus_tree.h	/^  page_id_t root_page_id_;$/;"	m	class:cmudb::BPlusTree
roundFunc	src/sqlite/sqlite3.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
rowSeparator	src/sqlite/shell.c	/^  char rowSeparator[20]; \/* Row separator character for MODE_Ascii *\/$/;"	m	struct:ShellState	file:
rowSetEntryAlloc	src/sqlite/sqlite3.c	/^static struct RowSetEntry *rowSetEntryAlloc(RowSet *p){$/;"	f	file:
rowSetEntryMerge	src/sqlite/sqlite3.c	/^static struct RowSetEntry *rowSetEntryMerge($/;"	f	file:
rowSetEntrySort	src/sqlite/sqlite3.c	/^static struct RowSetEntry *rowSetEntrySort(struct RowSetEntry *pIn){$/;"	f	file:
rowSetListToTree	src/sqlite/sqlite3.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetNDeepTree	src/sqlite/sqlite3.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetTreeToList	src/sqlite/sqlite3.c	/^static void rowSetTreeToList($/;"	f	file:
rowid	src/sqlite/sqlite3.c	/^  i64 rowid;                      \/* This table's current rowid value *\/$/;"	m	struct:Fts5VocabCursor	file:
rowidWrite	src/sqlite/sqlite3.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rsFlags	src/sqlite/sqlite3.c	/^  u16 rsFlags;                   \/* Various flags *\/$/;"	m	struct:RowSet	file:
rtreeBeginTransaction	src/sqlite/sqlite3.c	/^static int rtreeBeginTransaction(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeBestIndex	src/sqlite/sqlite3.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeCallbackConstraint	src/sqlite/sqlite3.c	/^static int rtreeCallbackConstraint($/;"	f	file:
rtreeClose	src/sqlite/sqlite3.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeColumn	src/sqlite/sqlite3.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeConnect	src/sqlite/sqlite3.c	/^static int rtreeConnect($/;"	f	file:
rtreeConstraintError	src/sqlite/sqlite3.c	/^static int rtreeConstraintError(Rtree *pRtree, int iCol){$/;"	f	file:
rtreeCreate	src/sqlite/sqlite3.c	/^static int rtreeCreate($/;"	f	file:
rtreeDeleteRowid	src/sqlite/sqlite3.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDestroy	src/sqlite/sqlite3.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	src/sqlite/sqlite3.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeEndTransaction	src/sqlite/sqlite3.c	/^static int rtreeEndTransaction(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeEnqueue	src/sqlite/sqlite3.c	/^static RtreeSearchPoint *rtreeEnqueue($/;"	f	file:
rtreeEof	src/sqlite/sqlite3.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeFilter	src/sqlite/sqlite3.c	/^static int rtreeFilter($/;"	f	file:
rtreeFreeCallback	src/sqlite/sqlite3.c	/^static void rtreeFreeCallback(void *p){$/;"	f	file:
rtreeInit	src/sqlite/sqlite3.c	/^static int rtreeInit($/;"	f	file:
rtreeInsertCell	src/sqlite/sqlite3.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeLeafConstraint	src/sqlite/sqlite3.c	/^static void rtreeLeafConstraint($/;"	f	file:
rtreeMatchArgFree	src/sqlite/sqlite3.c	/^static void rtreeMatchArgFree(void *pArg){$/;"	f	file:
rtreeModule	src/sqlite/sqlite3.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeNext	src/sqlite/sqlite3.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeNodeOfFirstSearchPoint	src/sqlite/sqlite3.c	/^static RtreeNode *rtreeNodeOfFirstSearchPoint(RtreeCursor *pCur, int *pRC){$/;"	f	file:
rtreeNonleafConstraint	src/sqlite/sqlite3.c	/^static void rtreeNonleafConstraint($/;"	f	file:
rtreeOpen	src/sqlite/sqlite3.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreeQueryStat1	src/sqlite/sqlite3.c	/^static int rtreeQueryStat1(sqlite3 *db, Rtree *pRtree){$/;"	f	file:
rtreeReference	src/sqlite/sqlite3.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeRelease	src/sqlite/sqlite3.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRename	src/sqlite/sqlite3.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRowid	src/sqlite/sqlite3.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeSavepoint	src/sqlite/sqlite3.c	/^static int rtreeSavepoint(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
rtreeSearchPointCompare	src/sqlite/sqlite3.c	/^static int rtreeSearchPointCompare($/;"	f	file:
rtreeSearchPointFirst	src/sqlite/sqlite3.c	/^static RtreeSearchPoint *rtreeSearchPointFirst(RtreeCursor *pCur){$/;"	f	file:
rtreeSearchPointNew	src/sqlite/sqlite3.c	/^static RtreeSearchPoint *rtreeSearchPointNew($/;"	f	file:
rtreeSearchPointPop	src/sqlite/sqlite3.c	/^static void rtreeSearchPointPop(RtreeCursor *p){$/;"	f	file:
rtreeSearchPointSwap	src/sqlite/sqlite3.c	/^static void rtreeSearchPointSwap(RtreeCursor *p, int i, int j){$/;"	f	file:
rtreeSqlInit	src/sqlite/sqlite3.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeStepToLeaf	src/sqlite/sqlite3.c	/^static int rtreeStepToLeaf(RtreeCursor *pCur){$/;"	f	file:
rtreeUpdate	src/sqlite/sqlite3.c	/^static int rtreeUpdate($/;"	f	file:
rtreeValueDown	src/sqlite/sqlite3.c	/^static RtreeValue rtreeValueDown(sqlite3_value *v){$/;"	f	file:
rtreeValueUp	src/sqlite/sqlite3.c	/^static RtreeValue rtreeValueUp(sqlite3_value *v){$/;"	f	file:
rtreedepth	src/sqlite/sqlite3.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	src/sqlite/sqlite3.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
ru_stime	src/sqlite/shell.c	/^  struct timeval ru_stime; \/* system CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
ru_utime	src/sqlite/shell.c	/^  struct timeval ru_utime; \/* user CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
runOneSqlLine	src/sqlite/shell.c	/^static int runOneSqlLine(ShellState *p, char *zSql, FILE *in, int startline){$/;"	f	file:
runOnlyOnce	src/sqlite/sqlite3.c	/^  bft runOnlyOnce:1;      \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe	file:
run_schema_dump_query	src/sqlite/shell.c	/^static int run_schema_dump_query($/;"	f	file:
run_table_dump_query	src/sqlite/shell.c	/^static int run_table_dump_query($/;"	f	file:
rusage	src/sqlite/shell.c	/^struct rusage {$/;"	s	file:
rwlatch_	src/include/page/page.h	/^  RWMutex rwlatch_;$/;"	m	class:cmudb::Page
s	src/sqlite/shell.c	/^    u64 s[25];                \/* Keccak state. 5x5 lines of 64 bits each *\/$/;"	m	union:SHA3Context::__anon10	file:
s	src/sqlite/sqlite3.c	/^  double s;           \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	src/sqlite/sqlite3.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
sArg	src/sqlite/sqlite3.c	/^  Token sArg;               \/* Complete text of a module argument *\/$/;"	m	struct:Parse	file:
sBegin	src/sqlite/shell.c	/^static struct rusage sBegin;  \/* CPU time at start *\/$/;"	v	typeref:struct:rusage	file:
sColMap	src/sqlite/sqlite3.c	/^  struct sColMap {      \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey	file:
sFts5Api	src/sqlite/sqlite3.c	/^static const Fts5ExtensionApi sFts5Api = {$/;"	v	file:
sLastToken	src/sqlite/sqlite3.c	/^  Token sLastToken;       \/* The last token parsed *\/$/;"	m	struct:Parse	file:
sMaskSet	src/sqlite/sqlite3.c	/^  WhereMaskSet sMaskSet;    \/* Map cursor numbers to bitmasks *\/$/;"	m	struct:WhereInfo	file:
sNameToken	src/sqlite/sqlite3.c	/^  Token sNameToken;       \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse	file:
sParse	src/sqlite/sqlite3.c	/^  JsonParse sParse;          \/* Parse of the input JSON *\/$/;"	m	struct:JsonEachCursor	file:
sPoint	src/sqlite/sqlite3.c	/^  RtreeSearchPoint sPoint;          \/* Cached next search point *\/$/;"	m	struct:RtreeCursor	file:
sWC	src/sqlite/sqlite3.c	/^  WhereClause sWC;          \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo	file:
safe_isalnum	src/sqlite/sqlite3.c	180171;"	d	file:
safe_isdigit	src/sqlite/sqlite3.c	180170;"	d	file:
safe_isspace	src/sqlite/sqlite3.c	180204;"	d	file:
safe_isxdigit	src/sqlite/sqlite3.c	180172;"	d	file:
safety_level	src/sqlite/sqlite3.c	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db	file:
sampleClear	src/sqlite/sqlite3.c	/^static void sampleClear(sqlite3 *db, Stat4Sample *p){$/;"	f	file:
sampleCopy	src/sqlite/sqlite3.c	/^static void sampleCopy(Stat4Accum *p, Stat4Sample *pTo, Stat4Sample *pFrom){$/;"	f	file:
sampleInsert	src/sqlite/sqlite3.c	/^static void sampleInsert(Stat4Accum *p, Stat4Sample *pNew, int nEqZero){$/;"	f	file:
sampleIsBetter	src/sqlite/sqlite3.c	/^static int sampleIsBetter($/;"	f	file:
sampleIsBetterPost	src/sqlite/sqlite3.c	/^static int sampleIsBetterPost($/;"	f	file:
samplePushPrevious	src/sqlite/sqlite3.c	/^static void samplePushPrevious(Stat4Accum *p, int iChng){$/;"	f	file:
sampleSetRowid	src/sqlite/sqlite3.c	/^static void sampleSetRowid(sqlite3 *db, Stat4Sample *p, int n, const u8 *pData){$/;"	f	file:
sampleSetRowidInt64	src/sqlite/sqlite3.c	/^static void sampleSetRowidInt64(sqlite3 *db, Stat4Sample *p, i64 iRowid){$/;"	f	file:
saveAllCursors	src/sqlite/sqlite3.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveCursorKey	src/sqlite/sqlite3.c	/^static int saveCursorKey(BtCursor *pCur){$/;"	f	file:
saveCursorPosition	src/sqlite/sqlite3.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
saveCursorsOnList	src/sqlite/sqlite3.c	/^static int SQLITE_NOINLINE saveCursorsOnList($/;"	f	file:
save_err_msg	src/sqlite/shell.c	/^static char *save_err_msg($/;"	f	file:
savedNQueryLoop	src/sqlite/sqlite3.c	/^  int savedNQueryLoop;      \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
savedSelectTrace	src/sqlite/shell.c	/^static int savedSelectTrace;$/;"	v	file:
savedWhereTrace	src/sqlite/shell.c	/^static int savedWhereTrace;$/;"	v	file:
saved_cnt	src/sqlite/sqlite3.c	/^static int saved_cnt;$/;"	v	file:
scanstatsOn	src/sqlite/shell.c	/^  int scanstatsOn;       \/* True to display scan stats before each finalize *\/$/;"	m	struct:ShellState	file:
schemaFlags	src/sqlite/sqlite3.c	/^  u16 schemaFlags;     \/* Flags associated with this schema *\/$/;"	m	struct:Schema	file:
schemaIsValid	src/sqlite/sqlite3.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schema_	src/include/vtable/virtual_table.h	/^  Schema *schema_;$/;"	m	class:cmudb::VirtualTable
schema_cookie	src/sqlite/sqlite3.c	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema	file:
scratchAllocOut	src/sqlite/sqlite3.c	/^static int scratchAllocOut = 0;$/;"	v	file:
searchWith	src/sqlite/sqlite3.c	/^static struct Cte *searchWith($/;"	f	file:
second_matcher_	third_party/gmock/gmock/gmock.h	/^  const Matcher<const SecondType&> second_matcher_;$/;"	m	class:testing::internal::PairMatcherImpl
second_matcher_	third_party/gmock/gmock/gmock.h	/^  const SecondMatcher second_matcher_;$/;"	m	class:testing::internal::PairMatcher
sectorSize	src/sqlite/sqlite3.c	/^  int sectorSize;                     \/* Device sector size *\/$/;"	m	struct:unixFile	file:
sectorSize	src/sqlite/sqlite3.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
seekAndRead	src/sqlite/sqlite3.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	src/sqlite/sqlite3.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekAndWriteFd	src/sqlite/sqlite3.c	/^static int seekAndWriteFd($/;"	f	file:
seekOp	src/sqlite/sqlite3.c	/^  u8 seekOp;              \/* Most recent seek operation on this cursor *\/$/;"	m	struct:VdbeCursor	file:
seekResult	src/sqlite/sqlite3.c	/^  int seekResult;         \/* Result of previous sqlite3BtreeMoveto() or 0$/;"	m	struct:VdbeCursor	file:
seenInterrupt	src/sqlite/shell.c	/^static volatile int seenInterrupt = 0;$/;"	v	file:
selFlags	src/sqlite/sqlite3.c	/^  u32 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select	file:
selectAddSubqueryTypeInfo	src/sqlite/sqlite3.c	/^static void selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectExpander	src/sqlite/sqlite3.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectInnerLoop	src/sqlite/sqlite3.c	/^static void selectInnerLoop($/;"	f	file:
selectNodeIsConstant	src/sqlite/sqlite3.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectOpName	src/sqlite/sqlite3.c	/^static const char *selectOpName(int id){$/;"	f	file:
selectPopWith	src/sqlite/sqlite3.c	/^static void selectPopWith(Walker *pWalker, Select *p){$/;"	f	file:
selectPopWith	src/sqlite/sqlite3.c	121374;"	d	file:
semXCheckReservedLock	src/sqlite/sqlite3.c	/^static int semXCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semXClose	src/sqlite/sqlite3.c	/^static int semXClose(sqlite3_file *id) {$/;"	f	file:
semXLock	src/sqlite/sqlite3.c	/^static int semXLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXUnlock	src/sqlite/sqlite3.c	/^static int semXUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
separateCache	src/sqlite/sqlite3.c	/^  int separateCache;             \/* Use a new PGroup for each PCache *\/$/;"	m	struct:PCacheGlobal	file:
seqCount	src/sqlite/sqlite3.c	/^  i64 seqCount;           \/* Sequence counter *\/$/;"	m	struct:VdbeCursor	file:
sequence_created_	third_party/gmock/gmock/gmock.h	/^  bool sequence_created_;$/;"	m	class:testing::InSequence
serialGet	src/sqlite/sqlite3.c	/^static u32 SQLITE_NOINLINE serialGet($/;"	f	file:
sessionAppendBlob	src/sqlite/sqlite3.c	/^static void sessionAppendBlob($/;"	f	file:
sessionAppendByte	src/sqlite/sqlite3.c	/^static void sessionAppendByte(SessionBuffer *p, u8 v, int *pRc){$/;"	f	file:
sessionAppendCol	src/sqlite/sqlite3.c	/^static void sessionAppendCol($/;"	f	file:
sessionAppendDelete	src/sqlite/sqlite3.c	/^static int sessionAppendDelete($/;"	f	file:
sessionAppendIdent	src/sqlite/sqlite3.c	/^static void sessionAppendIdent($/;"	f	file:
sessionAppendInteger	src/sqlite/sqlite3.c	/^static void sessionAppendInteger($/;"	f	file:
sessionAppendStr	src/sqlite/sqlite3.c	/^static void sessionAppendStr($/;"	f	file:
sessionAppendTableHdr	src/sqlite/sqlite3.c	/^static void sessionAppendTableHdr($/;"	f	file:
sessionAppendUpdate	src/sqlite/sqlite3.c	/^static int sessionAppendUpdate($/;"	f	file:
sessionAppendValue	src/sqlite/sqlite3.c	/^static void sessionAppendValue(SessionBuffer *p, sqlite3_value *pVal, int *pRc){$/;"	f	file:
sessionAppendVarint	src/sqlite/sqlite3.c	/^static void sessionAppendVarint(SessionBuffer *p, int v, int *pRc){$/;"	f	file:
sessionApplyOneOp	src/sqlite/sqlite3.c	/^static int sessionApplyOneOp($/;"	f	file:
sessionApplyOneWithRetry	src/sqlite/sqlite3.c	/^static int sessionApplyOneWithRetry($/;"	f	file:
sessionBindRow	src/sqlite/sqlite3.c	/^static int sessionBindRow($/;"	f	file:
sessionBindValue	src/sqlite/sqlite3.c	/^static int sessionBindValue($/;"	f	file:
sessionBufferGrow	src/sqlite/sqlite3.c	/^static int sessionBufferGrow(SessionBuffer *p, int nByte, int *pRc){$/;"	f	file:
sessionChangeEqual	src/sqlite/sqlite3.c	/^static int sessionChangeEqual($/;"	f	file:
sessionChangeHash	src/sqlite/sqlite3.c	/^static unsigned int sessionChangeHash($/;"	f	file:
sessionChangeMerge	src/sqlite/sqlite3.c	/^static int sessionChangeMerge($/;"	f	file:
sessionChangegroupOutput	src/sqlite/sqlite3.c	/^static int sessionChangegroupOutput($/;"	f	file:
sessionChangesetApply	src/sqlite/sqlite3.c	/^static int sessionChangesetApply($/;"	f	file:
sessionChangesetBufferRecord	src/sqlite/sqlite3.c	/^static int sessionChangesetBufferRecord($/;"	f	file:
sessionChangesetBufferTblhdr	src/sqlite/sqlite3.c	/^static int sessionChangesetBufferTblhdr(SessionInput *pIn, int *pnByte){$/;"	f	file:
sessionChangesetInvert	src/sqlite/sqlite3.c	/^static int sessionChangesetInvert($/;"	f	file:
sessionChangesetNew	src/sqlite/sqlite3.c	178470;"	d	file:
sessionChangesetNext	src/sqlite/sqlite3.c	/^static int sessionChangesetNext($/;"	f	file:
sessionChangesetOld	src/sqlite/sqlite3.c	178471;"	d	file:
sessionChangesetReadTblhdr	src/sqlite/sqlite3.c	/^static int sessionChangesetReadTblhdr(sqlite3_changeset_iter *p){$/;"	f	file:
sessionChangesetStart	src/sqlite/sqlite3.c	/^static int sessionChangesetStart($/;"	f	file:
sessionChangesetToHash	src/sqlite/sqlite3.c	/^static int sessionChangesetToHash($/;"	f	file:
sessionConflictHandler	src/sqlite/sqlite3.c	/^static int sessionConflictHandler($/;"	f	file:
sessionDeleteRow	src/sqlite/sqlite3.c	/^static int sessionDeleteRow($/;"	f	file:
sessionDeleteTable	src/sqlite/sqlite3.c	/^static void sessionDeleteTable(SessionTable *pList){$/;"	f	file:
sessionDiffCount	src/sqlite/sqlite3.c	/^static int sessionDiffCount(void *pCtx){$/;"	f	file:
sessionDiffDepth	src/sqlite/sqlite3.c	/^static int sessionDiffDepth(void *pCtx){$/;"	f	file:
sessionDiffFindModified	src/sqlite/sqlite3.c	/^static int sessionDiffFindModified($/;"	f	file:
sessionDiffFindNew	src/sqlite/sqlite3.c	/^static int sessionDiffFindNew($/;"	f	file:
sessionDiffHooks	src/sqlite/sqlite3.c	/^static void sessionDiffHooks($/;"	f	file:
sessionDiffNew	src/sqlite/sqlite3.c	/^static int sessionDiffNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiffOld	src/sqlite/sqlite3.c	/^static int sessionDiffOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiscardData	src/sqlite/sqlite3.c	/^static void sessionDiscardData(SessionInput *pIn){$/;"	f	file:
sessionExprCompareOther	src/sqlite/sqlite3.c	/^static char *sessionExprCompareOther($/;"	f	file:
sessionExprComparePK	src/sqlite/sqlite3.c	/^static char *sessionExprComparePK($/;"	f	file:
sessionFindTable	src/sqlite/sqlite3.c	/^static int sessionFindTable($/;"	f	file:
sessionGenerateChangeset	src/sqlite/sqlite3.c	/^static int sessionGenerateChangeset($/;"	f	file:
sessionGetI64	src/sqlite/sqlite3.c	/^static sqlite3_int64 sessionGetI64(u8 *aRec){$/;"	f	file:
sessionGrowHash	src/sqlite/sqlite3.c	/^static int sessionGrowHash(int bPatchset, SessionTable *pTab){$/;"	f	file:
sessionHashAppendBlob	src/sqlite/sqlite3.c	/^static unsigned int sessionHashAppendBlob(unsigned int h, int n, const u8 *z){$/;"	f	file:
sessionHashAppendI64	src/sqlite/sqlite3.c	/^static unsigned int sessionHashAppendI64(unsigned int h, i64 i){$/;"	f	file:
sessionHashAppendType	src/sqlite/sqlite3.c	/^static unsigned int sessionHashAppendType(unsigned int h, int eType){$/;"	f	file:
sessionInitTable	src/sqlite/sqlite3.c	/^static int sessionInitTable(sqlite3_session *pSession, SessionTable *pTab){$/;"	f	file:
sessionInputBuffer	src/sqlite/sqlite3.c	/^static int sessionInputBuffer(SessionInput *pIn, int nByte){$/;"	f	file:
sessionInsertRow	src/sqlite/sqlite3.c	/^static int sessionInsertRow($/;"	f	file:
sessionMergeRecord	src/sqlite/sqlite3.c	/^static void sessionMergeRecord($/;"	f	file:
sessionMergeUpdate	src/sqlite/sqlite3.c	/^static int sessionMergeUpdate($/;"	f	file:
sessionMergeValue	src/sqlite/sqlite3.c	/^static u8 *sessionMergeValue($/;"	f	file:
sessionPreupdateCount	src/sqlite/sqlite3.c	/^static int sessionPreupdateCount(void *pCtx){$/;"	f	file:
sessionPreupdateDepth	src/sqlite/sqlite3.c	/^static int sessionPreupdateDepth(void *pCtx){$/;"	f	file:
sessionPreupdateEqual	src/sqlite/sqlite3.c	/^static int sessionPreupdateEqual($/;"	f	file:
sessionPreupdateHash	src/sqlite/sqlite3.c	/^static int sessionPreupdateHash($/;"	f	file:
sessionPreupdateHooks	src/sqlite/sqlite3.c	/^static void sessionPreupdateHooks($/;"	f	file:
sessionPreupdateNew	src/sqlite/sqlite3.c	/^static int sessionPreupdateNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateOld	src/sqlite/sqlite3.c	/^static int sessionPreupdateOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateOneChange	src/sqlite/sqlite3.c	/^static void sessionPreupdateOneChange($/;"	f	file:
sessionPutI64	src/sqlite/sqlite3.c	/^static void sessionPutI64(u8 *aBuf, sqlite3_int64 i){$/;"	f	file:
sessionReadRecord	src/sqlite/sqlite3.c	/^static int sessionReadRecord($/;"	f	file:
sessionRetryConstraints	src/sqlite/sqlite3.c	/^static int sessionRetryConstraints($/;"	f	file:
sessionSeekToRow	src/sqlite/sqlite3.c	/^static int sessionSeekToRow($/;"	f	file:
sessionSelectBind	src/sqlite/sqlite3.c	/^static int sessionSelectBind($/;"	f	file:
sessionSelectFindNew	src/sqlite/sqlite3.c	/^static char *sessionSelectFindNew($/;"	f	file:
sessionSelectRow	src/sqlite/sqlite3.c	/^static int sessionSelectRow($/;"	f	file:
sessionSelectStmt	src/sqlite/sqlite3.c	/^static int sessionSelectStmt($/;"	f	file:
sessionSerialLen	src/sqlite/sqlite3.c	/^static int sessionSerialLen(u8 *a){$/;"	f	file:
sessionSerializeValue	src/sqlite/sqlite3.c	/^static int sessionSerializeValue($/;"	f	file:
sessionSkipRecord	src/sqlite/sqlite3.c	/^static void sessionSkipRecord($/;"	f	file:
sessionTableInfo	src/sqlite/sqlite3.c	/^static int sessionTableInfo($/;"	f	file:
sessionUpdateRow	src/sqlite/sqlite3.c	/^static int sessionUpdateRow($/;"	f	file:
sessionValueSetStr	src/sqlite/sqlite3.c	/^static int sessionValueSetStr($/;"	f	file:
sessionVarintGet	src/sqlite/sqlite3.c	/^static int sessionVarintGet(u8 *aBuf, int *piVal){$/;"	f	file:
sessionVarintLen	src/sqlite/sqlite3.c	/^static int sessionVarintLen(int iVal){$/;"	f	file:
sessionVarintPut	src/sqlite/sqlite3.c	/^static int sessionVarintPut(u8 *aBuf, int iVal){$/;"	f	file:
session_close	src/sqlite/shell.c	/^static void session_close(OpenSession *pSession){$/;"	f	file:
session_close_all	src/sqlite/shell.c	/^static void session_close_all(ShellState *p){$/;"	f	file:
session_close_all	src/sqlite/shell.c	3548;"	d	file:
session_filter	src/sqlite/shell.c	/^static int session_filter(void *pCtx, const char *zTab){$/;"	f	file:
session_help	src/sqlite/shell.c	/^void session_help(ShellState *p){$/;"	f
set	third_party/gmock/gtest/gtest.h	/^  void set(const T& value) { *pointer() = value; }$/;"	f	class:std::tr1::ThreadLocal
set	third_party/gmock/gtest/gtest.h	/^  void set(const T& value) { value_ = value; }$/;"	f	class:std::tr1::ThreadLocal
setAllPagerFlags	src/sqlite/sqlite3.c	/^static void setAllPagerFlags(sqlite3 *db){$/;"	f	file:
setAllPagerFlags	src/sqlite/sqlite3.c	113966;"	d	file:
setBinaryMode	src/sqlite/shell.c	/^static void setBinaryMode(FILE *file, int isOutput){$/;"	f	file:
setBinaryMode	src/sqlite/shell.c	179;"	d	file:
setChildPtrmaps	src/sqlite/sqlite3.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	src/sqlite/sqlite3.c	63220;"	d	file:
setDateTimeToCurrent	src/sqlite/sqlite3.c	/^static int setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDefaultSyncFlag	src/sqlite/sqlite3.c	/^static void setDefaultSyncFlag(BtShared *pBt, u8 safety_level){$/;"	f	file:
setDefaultSyncFlag	src/sqlite/sqlite3.c	62340;"	d	file:
setDestPgsz	src/sqlite/sqlite3.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setGetterMethod	src/sqlite/sqlite3.c	/^static void setGetterMethod(Pager *pPager){$/;"	f	file:
setJoinExpr	src/sqlite/sqlite3.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setLikeOptFlag	src/sqlite/sqlite3.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setMaster	src/sqlite/sqlite3.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setOrClearFlag	src/sqlite/shell.c	/^static void setOrClearFlag(ShellState *p, unsigned mFlag, const char *zArg){$/;"	f	file:
setPageReferenced	src/sqlite/sqlite3.c	/^static void setPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
setPendingFd	src/sqlite/sqlite3.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setPragmaResultColumnNames	src/sqlite/sqlite3.c	/^static void setPragmaResultColumnNames($/;"	f	file:
setRawDateNumber	src/sqlite/sqlite3.c	/^static void setRawDateNumber(DateTime *p, double r){$/;"	f	file:
setResultStrOrError	src/sqlite/sqlite3.c	/^static void setResultStrOrError($/;"	f	file:
setSectorSize	src/sqlite/sqlite3.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSharedCacheTableLock	src/sqlite/sqlite3.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	src/sqlite/sqlite3.c	59556;"	d	file:
setStrAccumError	src/sqlite/sqlite3.c	/^static void setStrAccumError(StrAccum *p, u8 eError){$/;"	f	file:
setTextMode	src/sqlite/shell.c	/^static void setTextMode(FILE *file, int isOutput){$/;"	f	file:
setTextMode	src/sqlite/shell.c	180;"	d	file:
set_authorizer	src/include/sqlite/sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
set_authorizer	src/sqlite/sqlite3.c	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
set_auxdata	src/include/sqlite/sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines
set_auxdata	src/sqlite/sqlite3.c	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
set_cardinality	third_party/gmock/gmock/gmock.h	/^  void set_cardinality(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase
set_catch_exceptions	third_party/gmock/gmock-gtest-all.cc	/^  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }$/;"	f	class:testing::internal::UnitTestImpl	file:
set_child_pid	third_party/gmock/gmock-gtest-all.cc	/^  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }$/;"	f	class:testing::internal::ForkingDeathTest
set_current_test_case	third_party/gmock/gmock-gtest-all.cc	/^  void set_current_test_case(TestCase* a_current_test_case) {$/;"	f	class:testing::internal::UnitTestImpl
set_current_test_info	third_party/gmock/gmock-gtest-all.cc	/^  void set_current_test_info(TestInfo* a_current_test_info) {$/;"	f	class:testing::internal::UnitTestImpl
set_elapsed_time	third_party/gmock/gtest/gtest.h	/^  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }$/;"	f	class:testing::TestResult
set_forwarding_enabled	third_party/gmock/gmock-gtest-all.cc	/^  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }$/;"	f	class:testing::internal::TestEventRepeater
set_last_death_test_message	third_party/gmock/gmock-gtest-all.cc	/^void DeathTest::set_last_death_test_message(const std::string& message) {$/;"	f	class:testing::internal::DeathTest
set_last_insert_rowid	src/include/sqlite/sqlite3ext.h	/^  void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
set_last_insert_rowid	src/sqlite/sqlite3.c	/^  void (*set_last_insert_rowid)(sqlite3*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
set_os_stack_trace_getter	third_party/gmock/gmock-gtest-all.cc	/^void UnitTestImpl::set_os_stack_trace_getter($/;"	f	class:testing::internal::UnitTestImpl
set_outcome	third_party/gmock/gmock-gtest-all.cc	/^  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }$/;"	f	class:testing::internal::DeathTestImpl
set_read_fd	third_party/gmock/gmock-gtest-all.cc	/^  void set_read_fd(int fd) { read_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
set_should_run	third_party/gmock/gtest/gtest.h	/^  void set_should_run(bool should) { should_run_ = should; }$/;"	f	class:testing::TestCase
set_spawned	third_party/gmock/gmock-gtest-all.cc	/^  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }$/;"	f	class:testing::internal::DeathTestImpl
set_status	third_party/gmock/gmock-gtest-all.cc	/^  void set_status(int a_status) { status_ = a_status; }$/;"	f	class:testing::internal::DeathTestImpl
set_table_name	src/sqlite/shell.c	/^static void set_table_name(ShellState *p, const char *zName){$/;"	f	file:
set_up_tc_	third_party/gmock/gtest/gtest.h	/^  Test::SetUpTestCaseFunc set_up_tc_;$/;"	m	class:testing::TestCase
set_write_fd	third_party/gmock/gmock-gtest-all.cc	/^  void set_write_fd(int fd) { write_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
setupLookaside	src/sqlite/sqlite3.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
severity_	third_party/gmock/gtest/gtest.h	/^  const GTestLogSeverity severity_;$/;"	m	class:std::tr1::GTestLog
sha3Func	src/sqlite/shell.c	/^static void sha3Func($/;"	f	file:
sha3QueryFunc	src/sqlite/shell.c	/^static void sha3QueryFunc($/;"	f	file:
sharable	src/sqlite/sqlite3.c	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree	file:
shared	src/sqlite/sqlite3.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
sharedByte	src/sqlite/sqlite3.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedCacheEnabled	src/sqlite/sqlite3.c	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config	file:
sharedLockByte	src/sqlite/sqlite3.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedMask	src/sqlite/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	src/sqlite/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedMask	src/sqlite/sqlite3.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
shared_lock_set_	src/include/concurrency/transaction.h	/^  std::shared_ptr<std::unordered_set<RID>> shared_lock_set_;$/;"	m	class:cmudb::Transaction
shellAddSchemaName	src/sqlite/shell.c	/^static void shellAddSchemaName($/;"	f	file:
shellAuth	src/sqlite/shell.c	/^static int shellAuth($/;"	f	file:
shellDatabaseError	src/sqlite/shell.c	/^static int shellDatabaseError(sqlite3 *db){$/;"	f	file:
shellDeleteFile	src/sqlite/shell.c	/^int shellDeleteFile(const char *zFilename){$/;"	f
shellFkeyCollateClause	src/sqlite/shell.c	/^static void shellFkeyCollateClause($/;"	f	file:
shellFlgs	src/sqlite/shell.c	/^  unsigned shellFlgs;    \/* Various flags *\/$/;"	m	struct:ShellState	file:
shellLog	src/sqlite/shell.c	/^static void shellLog(void *pArg, int iErrCode, const char *zMsg){$/;"	f	file:
shellNomemError	src/sqlite/shell.c	/^static int shellNomemError(void){$/;"	f	file:
shell_add_history	src/sqlite/shell.c	90;"	d	file:
shell_add_history	src/sqlite/shell.c	99;"	d	file:
shell_callback	src/sqlite/shell.c	/^static int shell_callback($/;"	f	file:
shell_dbinfo_command	src/sqlite/shell.c	/^static int shell_dbinfo_command(ShellState *p, int nArg, char **azArg){$/;"	f	file:
shell_exec	src/sqlite/shell.c	/^static int shell_exec($/;"	f	file:
shell_read_history	src/sqlite/shell.c	100;"	d	file:
shell_read_history	src/sqlite/shell.c	107;"	d	file:
shell_read_history	src/sqlite/shell.c	91;"	d	file:
shell_readline	src/sqlite/shell.c	103;"	d	file:
shell_readline	src/sqlite/shell.c	94;"	d	file:
shell_stifle_history	src/sqlite/shell.c	102;"	d	file:
shell_stifle_history	src/sqlite/shell.c	109;"	d	file:
shell_stifle_history	src/sqlite/shell.c	93;"	d	file:
shell_write_history	src/sqlite/shell.c	101;"	d	file:
shell_write_history	src/sqlite/shell.c	108;"	d	file:
shell_write_history	src/sqlite/shell.c	92;"	d	file:
should_run	third_party/gmock/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestCase
should_run	third_party/gmock/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestInfo
should_run_	third_party/gmock/gtest/gtest.h	/^  bool should_run_;                 \/\/ True iff this test should run$/;"	m	class:testing::TestInfo
should_run_	third_party/gmock/gtest/gtest.h	/^  bool should_run_;$/;"	m	class:testing::TestCase
showHeader	src/sqlite/shell.c	/^  int showHeader;        \/* True to show column names in List or Column mode *\/$/;"	m	struct:ShellState	file:
showHeader	src/sqlite/shell.c	/^  int showHeader;     \/* The ".header" setting prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
shuffle_	third_party/gmock/gmock-gtest-all.cc	/^  bool shuffle_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
sign_bit	third_party/gmock/gtest/gtest.h	/^  Bits sign_bit() const { return kSignBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
signum_	third_party/gmock/gtest/gtest.h	/^  const int signum_;$/;"	m	class:testing::KilledBySignal
simpleClose	src/sqlite/sqlite3.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleCreate	src/sqlite/sqlite3.c	/^static int simpleCreate($/;"	f	file:
simpleDelim	src/sqlite/sqlite3.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDestroy	src/sqlite/sqlite3.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleNext	src/sqlite/sqlite3.c	/^static int simpleNext($/;"	f	file:
simpleOpen	src/sqlite/sqlite3.c	/^static int simpleOpen($/;"	f	file:
simpleTokenizerModule	src/sqlite/sqlite3.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simple_tokenizer	src/sqlite/sqlite3.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	src/sqlite/sqlite3.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer_cursor	src/sqlite/sqlite3.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	src/sqlite/sqlite3.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
size	third_party/gmock/gmock-gtest-all.cc	/^int TestPartResultArray::size() const {$/;"	f	class:testing::TestPartResultArray
size	third_party/gmock/gmock/gmock.h	/^  int size() const { return static_cast<int>(expectations_.size()); }$/;"	f	class:testing::ExpectationSet
size	third_party/gmock/gtest/gtest.h	/^  size_t size() const { return size_; }$/;"	f	class:testing::internal::NativeArray
size4x	src/sqlite/sqlite3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon24::__anon25	file:
size_	src/include/page/b_plus_tree_page.h	/^  int size_;$/;"	m	class:cmudb::BPlusTreePage
size_	src/include/table/tuple.h	/^  int32_t size_;$/;"	m	class:cmudb::Tuple
size_	src/include/type/value.h	/^  } size_;$/;"	m	class:cmudb::Value	typeref:union:cmudb::Value::__anon9
size_	third_party/gmock/gtest/gtest.h	/^  size_t size_;$/;"	m	class:testing::internal::NativeArray
size_matcher_	third_party/gmock/gmock/gmock.h	/^    const Matcher<SizeType> size_matcher_;$/;"	m	class:testing::internal::SizeIsMatcher::Impl
size_matcher_	third_party/gmock/gmock/gmock.h	/^  const SizeMatcher size_matcher_;$/;"	m	class:testing::internal::SizeIsMatcher
sjfd	src/sqlite/sqlite3.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
skipBtreeMutex	src/sqlite/sqlite3.c	/^  u8 skipBtreeMutex;            \/* True if no shared-cache backends *\/$/;"	m	struct:sqlite3	file:
skipFlag	src/sqlite/sqlite3.c	/^  u8 skipFlag;            \/* Skip accumulator loading if true *\/$/;"	m	struct:sqlite3_context	file:
skipNext	src/sqlite/sqlite3.c	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive.$/;"	m	struct:BtCursor	file:
sleep	src/include/sqlite/sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines
sleep	src/sqlite/sqlite3.c	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	file:
sleepObj	src/sqlite/sqlite3.c	/^static HANDLE sleepObj = NULL;$/;"	v	file:
slot_num_	src/include/common/rid.h	/^  int slot_num_; \/\/ logical offset from 0, 1...$/;"	m	class:cmudb::RID
smallint	src/include/type/value.h	/^    int16_t smallint;$/;"	m	union:cmudb::Value::Val
snprintf	src/include/sqlite/sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines
snprintf	src/sqlite/sqlite3.c	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
socket_writer_	third_party/gmock/gmock-gtest-all.cc	/^  const scoped_ptr<AbstractSocketWriter> socket_writer_;$/;"	m	class:testing::internal::StreamingListener	file:
sockfd_	third_party/gmock/gmock-gtest-all.cc	/^    int sockfd_;  \/\/ socket file descriptor$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
soft_heap_limit	src/include/sqlite/sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit	src/sqlite/sqlite3.c	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit64	src/include/sqlite/sqlite3ext.h	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit64	src/sqlite/sqlite3.c	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
sortFlags	src/sqlite/sqlite3.c	/^  u8 sortFlags;         \/* Zero or more SORTFLAG_* bits *\/$/;"	m	struct:SortCtx	file:
sortOrder	src/sqlite/sqlite3.c	/^    u8 sortOrder;           \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item	file:
sorted	src/sqlite/sqlite3.c	/^  u8 sorted;                \/* True if really sorted (not just grouped) *\/$/;"	m	struct:WhereInfo	file:
sortingIdx	src/sqlite/sqlite3.c	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo	file:
sortingIdxPTab	src/sqlite/sqlite3.c	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo	file:
soundexFunc	src/sqlite/sqlite3.c	/^static void soundexFunc($/;"	f	file:
source_matcher_	third_party/gmock/gmock/gmock.h	/^    const Matcher<U> source_matcher_;$/;"	m	class:testing::internal::MatcherCastImpl::Impl
source_text	third_party/gmock/gmock/gmock.h	/^  const char* source_text() const { return source_text_.c_str(); }$/;"	f	class:testing::internal::ExpectationBase
source_text_	third_party/gmock/gmock/gmock.h	/^  const string source_text_;  \/\/ The EXPECT_CALL(...) source text.$/;"	m	class:testing::internal::ExpectationBase
sourceid	src/include/sqlite/sqlite3ext.h	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines
sourceid	src/sqlite/sqlite3.c	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines	file:
sourceidFunc	src/sqlite/sqlite3.c	/^static void sourceidFunc($/;"	f	file:
spanBinaryExpr	src/sqlite/sqlite3.c	/^  static void spanBinaryExpr($/;"	f	file:
spanExpr	src/sqlite/sqlite3.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token t){$/;"	f	file:
spanSet	src/sqlite/sqlite3.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanUnaryPostfix	src/sqlite/sqlite3.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPrefix	src/sqlite/sqlite3.c	/^  static void spanUnaryPrefix($/;"	f	file:
spawned	third_party/gmock/gmock-gtest-all.cc	/^  bool spawned() const { return spawned_; }$/;"	f	class:testing::internal::DeathTestImpl
spawned_	third_party/gmock/gmock-gtest-all.cc	/^  bool spawned_;$/;"	m	class:testing::internal::DeathTestImpl	file:
splitNodeStartree	src/sqlite/sqlite3.c	/^static int splitNodeStartree($/;"	f	file:
sql	src/include/sqlite/sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
sql	src/sqlite/sqlite3.c	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
sql_trace_callback	src/sqlite/shell.c	/^static int sql_trace_callback($/;"	f	file:
sqlite3	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3	src/sqlite/sqlite3.c	/^struct sqlite3 {$/;"	s	file:
sqlite3	src/sqlite/sqlite3.c	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3	file:
sqlite3AbsInt32	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AbsInt32(int x){$/;"	f
sqlite3AddCheckConstraint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCollateType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddColumn	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumn(Parse *pParse, Token *pName, Token *pType){$/;"	f
sqlite3AddDefaultValue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddInt64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddNotNull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddPrimaryKey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddPrimaryKey($/;"	f
sqlite3AffinityType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char sqlite3AffinityType(const char *zIn, u8 *pszEst){$/;"	f
sqlite3AllocateIndexObject	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3AllocateIndexObject($/;"	f
sqlite3AlterBeginAddColumn	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterFinishAddColumn	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterRenameTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterRenameTable($/;"	f
sqlite3AnalysisLoad	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3Analyze	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3AnalyzeFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AnalyzeFunctions(void){$/;"	f
sqlite3ApiExit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3Apis	src/sqlite/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3AppendChar	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AppendChar(StrAccum *p, int N, char c){$/;"	f
sqlite3ArrayAllocate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ArrayAllocate($/;"	f
sqlite3AtoF	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3Atoi	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Attach	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3AuthCheck	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	src/sqlite/sqlite3.c	17563;"	d	file:
sqlite3AuthContextPop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	src/sqlite/sqlite3.c	17565;"	d	file:
sqlite3AuthContextPush	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	src/sqlite/sqlite3.c	17564;"	d	file:
sqlite3AuthRead	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthRead($/;"	f
sqlite3AuthRead	src/sqlite/sqlite3.c	17562;"	d	file:
sqlite3AuthReadCol	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthReadCol($/;"	f
sqlite3AutoExtList	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	src/sqlite/sqlite3.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoLoadExtensions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3Autoext	src/sqlite/sqlite3.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoincrementBegin	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	src/sqlite/sqlite3.c	17355;"	d	file:
sqlite3AutoincrementEnd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	src/sqlite/sqlite3.c	17356;"	d	file:
sqlite3BackupRestart	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupUpdate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BeginBenignMalloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	src/sqlite/sqlite3.c	17902;"	d	file:
sqlite3BeginTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTrigger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTrigger($/;"	f
sqlite3BeginWriteOperation	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BenignMallocHooks	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BenignMallocHooks($/;"	f
sqlite3BinaryCompareCollSeq	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BitvecBuiltinTest	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecCreate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecDestroy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecSet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecTest	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTestNotNull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTestNotNull(Bitvec *p, u32 i){$/;"	f
sqlite3BlobCompare	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int sqlite3BlobCompare(const Mem *pB1, const Mem *pB2){$/;"	f	file:
sqlite3BlockedList	src/sqlite/sqlite3.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BtreeBeginStmt	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginTrans	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeCheckpoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeClearCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClearTableOfCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTableOfCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeCloseCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCommit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommitPhaseOne	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseTwo	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeConnectionCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeConnectionCount(Btree *p){$/;"	f
sqlite3BtreeConnectionCount	src/sqlite/sqlite3.c	13406;"	d	file:
sqlite3BtreeCopyFile	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCreateTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursorHasHint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasHint(BtCursor *pCsr, unsigned int mask){$/;"	f
sqlite3BtreeCursorHasMoved	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasMoved(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorHint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorHint(BtCursor *pCur, int eHintType, ...){$/;"	f
sqlite3BtreeCursorHintFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorHintFlags(BtCursor *pCur, unsigned x){$/;"	f
sqlite3BtreeCursorIsValid	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorIsValidNN	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorIsValidNN(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorRestore	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorRestore(BtCursor *pCur, int *pDifferentRow){$/;"	f
sqlite3BtreeCursorSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorZero	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDelete(BtCursor *pCur, u8 flags){$/;"	f
sqlite3BtreeDropTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeEnter	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	src/sqlite/sqlite3.c	13402;"	d	file:
sqlite3BtreeEnterAll	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	src/sqlite/sqlite3.c	13403;"	d	file:
sqlite3BtreeEnterCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	src/sqlite/sqlite3.c	13405;"	d	file:
sqlite3BtreeEof	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeFirst	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeGetAutoVacuum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetFilename	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetMeta	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetOptimalReserve	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetOptimalReserve(Btree *p){$/;"	f
sqlite3BtreeGetPageSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetReserveNoMutex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetReserveNoMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsAllMutexes	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	src/sqlite/sqlite3.c	13426;"	d	file:
sqlite3BtreeHoldsMutex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	src/sqlite/sqlite3.c	13425;"	d	file:
sqlite3BtreeIncrVacuum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeIncrblobCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeIncrblobCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeInsert	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeInsert($/;"	f
sqlite3BtreeIntegerKey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3BtreeIntegerKey(BtCursor *pCur){$/;"	f
sqlite3BtreeIntegrityCheck	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIsInBackup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeIsReadonly	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsReadonly(Btree *p){$/;"	f
sqlite3BtreeLast	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLastPage	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLeave	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	src/sqlite/sqlite3.c	13421;"	d	file:
sqlite3BtreeLeaveAll	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	src/sqlite/sqlite3.c	13423;"	d	file:
sqlite3BtreeLeaveCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	src/sqlite/sqlite3.c	13422;"	d	file:
sqlite3BtreeLockTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeMaxPageCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMovetoUnpacked	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeNewDb	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNewDb(Btree *p){$/;"	f
sqlite3BtreeNext	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNext(BtCursor *pCur, int flags){$/;"	f
sqlite3BtreeOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeOpen($/;"	f
sqlite3BtreePager	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePayload	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePayload(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreePayloadChecked	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePayloadChecked(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreePayloadFetch	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreePayloadFetch(BtCursor *pCur, u32 *pAmt){$/;"	f
sqlite3BtreePayloadSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreePayloadSize(BtCursor *pCur){$/;"	f
sqlite3BtreePrevious	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePrevious(BtCursor *pCur, int flags){$/;"	f
sqlite3BtreePutData	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreeRollback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeRollback(Btree *p, int tripCode, int writeOnly){$/;"	f
sqlite3BtreeRowCountEst	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3BtreeRowCountEst(BtCursor *pCur){$/;"	f
sqlite3BtreeSavepoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSchema	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchemaLocked	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSecureDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSetAutoVacuum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetCacheSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetMmapLimit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetMmapLimit(Btree *p, sqlite3_int64 szMmap){$/;"	f
sqlite3BtreeSetPageSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetPagerFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPagerFlags($/;"	f
sqlite3BtreeSetSpillSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetSpillSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetVersion	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSharable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	src/sqlite/sqlite3.c	13404;"	d	file:
sqlite3BtreeTripAllCursors	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode, int writeOnly){$/;"	f
sqlite3BtreeUpdateMeta	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3BuiltinFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE FuncDefHash sqlite3BuiltinFunctions;$/;"	v
sqlite3CantopenError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CantopenError(int lineno){$/;"	f
sqlite3ChangeCookie	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3CheckCollSeq	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckObjectName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3Checkpoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3ClearStatTables	src/sqlite/sqlite3.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3ClearTempRegCache	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ClearTempRegCache(Parse *pParse){$/;"	f
sqlite3Close	src/sqlite/sqlite3.c	/^static int sqlite3Close(sqlite3 *db, int forceZombie){$/;"	f	file:
sqlite3CloseExtensions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	src/sqlite/sqlite3.c	17776;"	d	file:
sqlite3CloseSavepoints	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CodeDropTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeDropTable(Parse *pParse, Table *pTab, int iDb, int isView){$/;"	f
sqlite3CodeRowTrigger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTrigger	src/sqlite/sqlite3.c	17544;"	d	file:
sqlite3CodeRowTriggerDirect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeRowTriggerDirect	src/sqlite/sqlite3.c	17545;"	d	file:
sqlite3CodeSubselect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeSubselect($/;"	f
sqlite3CodeVerifyNamedSchema	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifySchema	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3CollapseDatabaseArray	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CollapseDatabaseArray(sqlite3 *db){$/;"	f
sqlite3ColumnDefault	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3ColumnOfIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE i16 sqlite3ColumnOfIndex(Index *pIdx, i16 iCol){$/;"	f
sqlite3ColumnPropertiesFromName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnPropertiesFromName(Table *pTab, Column *pCol){$/;"	f
sqlite3ColumnPropertiesFromName	src/sqlite/sqlite3.c	17301;"	d	file:
sqlite3ColumnType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3ColumnType(Column *pCol, char *zDflt){$/;"	f
sqlite3ColumnsFromExprList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ColumnsFromExprList($/;"	f
sqlite3CommitInternalChanges	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CompareAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompileOptions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char **sqlite3CompileOptions(int *pnOpt){$/;"	f
sqlite3CompleteInsertion	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CompleteInsertion($/;"	f
sqlite3Config	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config;$/;"	v	typeref:struct:Sqlite3Config
sqlite3ConnectionBlocked	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	src/sqlite/sqlite3.c	17948;"	d	file:
sqlite3ConnectionClosed	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	src/sqlite/sqlite3.c	17950;"	d	file:
sqlite3ConnectionUnlocked	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	src/sqlite/sqlite3.c	17949;"	d	file:
sqlite3CorruptError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CorruptError(int lineno){$/;"	f
sqlite3CorruptPgnoError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CorruptPgnoError(int lineno, Pgno pgno){$/;"	f
sqlite3Coverage	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Coverage(int x){$/;"	f
sqlite3CreateColumnExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateForeignKey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateForeignKey($/;"	f
sqlite3CreateFunc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CreateFunc($/;"	f
sqlite3CreateIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateIndex($/;"	f
sqlite3CreateView	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateView($/;"	f
sqlite3CtypeMap	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3CtypeMap	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[];$/;"	v
sqlite3DbFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbFreeNN	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DbFreeNN(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocRaw	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRaw(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRawNN	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocZero	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocZero(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMaskAllZero	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMaskAllZero(yDbMask m){$/;"	f
sqlite3DbNameToBtree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Btree *sqlite3DbNameToBtree(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3DbRealloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbRealloc(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbReallocOrFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbStrDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrNDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrNDup(sqlite3 *db, const char *z, u64 n){$/;"	f
sqlite3DbstatRegister	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbstatRegister(sqlite3 *db){ return SQLITE_OK; }$/;"	f
sqlite3DbstatRegister	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbstatRegister(sqlite3 *db){$/;"	f
sqlite3DebugPrintf	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DecOrHexToI64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DecOrHexToI64(const char *z, i64 *pOut){$/;"	f
sqlite3DefaultMutex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultRowEst	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DeferForeignKey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeleteColumnNames	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteFrom	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteFrom($/;"	f
sqlite3DeleteIndexSamples	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTrigger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTrigger	src/sqlite/sqlite3.c	17541;"	d	file:
sqlite3DeleteTriggerStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3Dequote	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Dequote(char *z){$/;"	f
sqlite3Detach	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3DropIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTrigger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTriggerPtr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3DropTriggerPtr	src/sqlite/sqlite3.c	17542;"	d	file:
sqlite3EndBenignMalloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	src/sqlite/sqlite3.c	17903;"	d	file:
sqlite3EndTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndTable($/;"	f
sqlite3ErrName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrName(int rc){$/;"	f
sqlite3ErrStr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3Error	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Error(sqlite3 *db, int err_code){$/;"	f
sqlite3ErrorFinish	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void  sqlite3ErrorFinish(sqlite3 *db, int err_code){$/;"	f	file:
sqlite3ErrorMsg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ErrorWithMsg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorWithMsg(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ExpirePreparedStatements	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3Expr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3Expr($/;"	f
sqlite3ExprAddCollateString	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAddCollateString(Parse *pParse, Expr *pExpr, const char *zC){$/;"	f
sqlite3ExprAddCollateToken	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAddCollateToken($/;"	f
sqlite3ExprAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAlloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAnalyzeAggList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggregates	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAssignVarNumber	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr, u32 n){$/;"	f
sqlite3ExprAttachSubtrees	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprCacheAffinityChange	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCachePinRegister	src/sqlite/sqlite3.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePop(Parse *pParse){$/;"	f
sqlite3ExprCachePush	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCacheRemove	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheStore	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCanBeNull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCheckHeight	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	src/sqlite/sqlite3.c	17937;"	d	file:
sqlite3ExprCheckIN	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCheckIN(Parse *pParse, Expr *pIn){$/;"	f
sqlite3ExprCheckIN	src/sqlite/sqlite3.c	17747;"	d	file:
sqlite3ExprCode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAtInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeAtInit($/;"	f
sqlite3ExprCodeCopy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeCopy(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeExprList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeFactorable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeFactorable(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeGetColumn	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumnOfTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeGetColumnToReg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnToReg($/;"	f
sqlite3ExprCodeIN	src/sqlite/sqlite3.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeLoadIndexColumn	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeLoadIndexColumn($/;"	f
sqlite3ExprCodeMove	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeTarget	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTemp	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCollSeq	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCompare(Parse *pParse, Expr *pA, Expr *pB, int iTab){$/;"	f
sqlite3ExprCompareSkip	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCompareSkip(Expr *pA, Expr *pB, int iTab){$/;"	f
sqlite3ExprContainsSubquery	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprContainsSubquery(Expr *p){$/;"	f
sqlite3ExprCoveredByIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCoveredByIndex($/;"	f
sqlite3ExprDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDeleteNN	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p){$/;"	f	file:
sqlite3ExprDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprForVectorField	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprForVectorField($/;"	f
sqlite3ExprFunction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprIfFalse	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfFalseDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalseDup(Parse *pParse, Expr *pExpr, int dest,int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprImpliesExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprImpliesExpr(Parse *pParse, Expr *pE1, Expr *pE2, int iTab){$/;"	f
sqlite3ExprIsConstant	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantOrFunction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantOrFunction(Expr *p, u8 isInit){$/;"	f
sqlite3ExprIsConstantOrGroupBy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantOrGroupBy(Parse *pParse, Expr *p, ExprList *pGroupBy){$/;"	f
sqlite3ExprIsInteger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprIsTableConstant	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsTableConstant(Expr *p, int iCur){$/;"	f
sqlite3ExprIsVector	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsVector(Expr *pExpr){$/;"	f
sqlite3ExprListAppend	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListAppendVector	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListAppendVector($/;"	f
sqlite3ExprListCheckLength	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprListCompare(ExprList *pA, ExprList *pB, int iTab){$/;"	f
sqlite3ExprListDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3ExprListFlags(const ExprList *pList){$/;"	f
sqlite3ExprListSetName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetSortOrder	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSortOrder(ExprList *p, int iSortOrder){$/;"	f
sqlite3ExprListSetSpan	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprNeedsNoAffinityChange	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprSetHeightAndFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprSetHeightAndFlags(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSkipCollate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSkipCollate(Expr *pExpr){$/;"	f
sqlite3ExprVectorSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprVectorSize(Expr *pExpr){$/;"	f
sqlite3ExprWalkNoop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f
sqlite3FaultSim	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FaultSim(int iTest){$/;"	f
sqlite3FaultSim	src/sqlite/sqlite3.c	17315;"	d	file:
sqlite3FileSuffix3	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FileSuffix3	src/sqlite/sqlite3.c	17656;"	d	file:
sqlite3FindCollSeq	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindDb	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDbName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindFunction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindInIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindInIndex($/;"	f
sqlite3FindIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FinishCoding	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishTrigger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishTrigger($/;"	f
sqlite3FixExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExpr($/;"	f
sqlite3FixExprList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExprList($/;"	f
sqlite3FixInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FixInit($/;"	f
sqlite3FixSelect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSelect($/;"	f
sqlite3FixSrcList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSrcList($/;"	f
sqlite3FixTriggerStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixTriggerStep($/;"	f
sqlite3FkActions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkActions($/;"	f
sqlite3FkActions	src/sqlite/sqlite3.c	17871;"	d	file:
sqlite3FkCheck	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkCheck($/;"	f
sqlite3FkCheck	src/sqlite/sqlite3.c	17872;"	d	file:
sqlite3FkDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	src/sqlite/sqlite3.c	17882;"	d	file:
sqlite3FkDropTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	src/sqlite/sqlite3.c	17873;"	d	file:
sqlite3FkLocateIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkLocateIndex($/;"	f
sqlite3FkLocateIndex	src/sqlite/sqlite3.c	17883;"	d	file:
sqlite3FkOldmask	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	src/sqlite/sqlite3.c	17874;"	d	file:
sqlite3FkReferences	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkReferences	src/sqlite/sqlite3.c	17876;"	d	file:
sqlite3FkRequired	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkRequired($/;"	f
sqlite3FkRequired	src/sqlite/sqlite3.c	17875;"	d	file:
sqlite3Fts3AllSegdirs	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3Always	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Always(int b) { assert( b ); return b; }$/;"	f
sqlite3Fts3CacheDeferredDoclists	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3CacheDeferredDoclists	src/sqlite/sqlite3.c	146666;"	d	file:
sqlite3Fts3Corrupt	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Corrupt(){$/;"	f
sqlite3Fts3CreateStatTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3CreateStatTable(int *pRc, Fts3Table *p){$/;"	f
sqlite3Fts3DeferToken	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferToken	src/sqlite/sqlite3.c	146665;"	d	file:
sqlite3Fts3DeferredTokenList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3DeferredTokenList	src/sqlite/sqlite3.c	146668;"	d	file:
sqlite3Fts3Dequote	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3DoclistNext	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistNext($/;"	f
sqlite3Fts3DoclistPrev	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3ErrMsg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ErrMsg(char **pzErr, const char *zFormat, ...){$/;"	f
sqlite3Fts3EvalPhraseCleanup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhrasePoslist	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhraseStats	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3EvalTestDeferred	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalTestDeferred(Fts3Cursor *pCsr, int *pRc){$/;"	f
sqlite3Fts3ExprFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ExprFree(Fts3Expr *pDel){$/;"	f
sqlite3Fts3ExprInitTestInterface	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprParse	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3FirstFilter	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3FirstFilter($/;"	f
sqlite3Fts3FreeDeferredDoclists	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredDoclists	src/sqlite/sqlite3.c	146667;"	d	file:
sqlite3Fts3FreeDeferredTokens	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	src/sqlite/sqlite3.c	146664;"	d	file:
sqlite3Fts3GetVarint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint(const char *pBuf, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint32	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3HashClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashFind	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFindElem	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInsert	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3IcuTokenizerModule	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3Incrmerge	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Incrmerge(Fts3Table *p, int nMerge, int nMin){$/;"	f
sqlite3Fts3Init	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitHashTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitTok	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTok(sqlite3 *db, Fts3Hash *pHash){$/;"	f
sqlite3Fts3InitTokenizer	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3IsIdChar	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3MIBufferFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3MIBufferFree(MatchinfoBuffer *p){$/;"	f
sqlite3Fts3Matchinfo	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3MaxLevel	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MaxLevel(Fts3Table *p, int *pnMax){$/;"	f
sqlite3Fts3MsrIncrNext	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrRestart	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrStart	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrOvfl	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3Never	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Never(int b)  { assert( !b ); return b; }$/;"	f
sqlite3Fts3NextToken	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3Offsets	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3OpenTokenizer	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3OpenTokenizer($/;"	f
sqlite3Fts3Optimize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PorterTokenizerModule	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PutVarint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3ReadBlock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3SegReaderCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderFinish	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderNew	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderPending	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderStart	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegmentsClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SelectDocsize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDoctotal	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SimpleTokenizerModule	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3Snippet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3UnicodeTokenizer	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3UnicodeTokenizer(sqlite3_tokenizer_module const **ppModule){$/;"	f
sqlite3Fts3UpdateMethod	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3VarintLen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3Fts5AuxInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5AuxInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5BufferAppendBlob	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferAppendBlob($/;"	f	file:
sqlite3Fts5BufferAppendPrintf	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferAppendPrintf($/;"	f	file:
sqlite3Fts5BufferAppendString	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferAppendString($/;"	f	file:
sqlite3Fts5BufferAppendVarint	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferAppendVarint(int *pRc, Fts5Buffer *pBuf, i64 iVal){$/;"	f	file:
sqlite3Fts5BufferFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferFree(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferSet	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferSet($/;"	f	file:
sqlite3Fts5BufferSize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){$/;"	f	file:
sqlite3Fts5BufferZero	src/sqlite/sqlite3.c	/^static void sqlite3Fts5BufferZero(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5ConfigDeclareVtab	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ConfigDeclareVtab(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ConfigFree(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigLoad	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ConfigLoad(Fts5Config *pConfig, int iCookie){$/;"	f	file:
sqlite3Fts5ConfigParse	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ConfigParse($/;"	f	file:
sqlite3Fts5ConfigParseRank	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ConfigParseRank($/;"	f	file:
sqlite3Fts5ConfigSetValue	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ConfigSetValue($/;"	f	file:
sqlite3Fts5Corrupt	src/sqlite/sqlite3.c	/^static int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }$/;"	f	file:
sqlite3Fts5CreateTable	src/sqlite/sqlite3.c	/^static int sqlite3Fts5CreateTable($/;"	f	file:
sqlite3Fts5Dequote	src/sqlite/sqlite3.c	/^static void sqlite3Fts5Dequote(char *z){$/;"	f	file:
sqlite3Fts5DropAll	src/sqlite/sqlite3.c	/^static int sqlite3Fts5DropAll(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ExprCheckPoslists	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ExprCheckPoslists(Fts5Expr *pExpr, i64 iRowid){$/;"	f	file:
sqlite3Fts5ExprClearPoslists	src/sqlite/sqlite3.c	/^static Fts5PoslistPopulator *sqlite3Fts5ExprClearPoslists(Fts5Expr *pExpr, int bLive){$/;"	f	file:
sqlite3Fts5ExprClonePhrase	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprClonePhrase($/;"	f	file:
sqlite3Fts5ExprEof	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprEof(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprFirst	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprFirst(Fts5Expr *p, Fts5Index *pIdx, i64 iFirst, int bDesc){$/;"	f	file:
sqlite3Fts5ExprFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ExprFree(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5ExprNew	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprNew($/;"	f	file:
sqlite3Fts5ExprNext	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprNext(Fts5Expr *p, i64 iLast){$/;"	f	file:
sqlite3Fts5ExprPhraseCollist	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprPhraseCollist($/;"	f	file:
sqlite3Fts5ExprPhraseCount	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprPhraseCount(Fts5Expr *pExpr){$/;"	f	file:
sqlite3Fts5ExprPhraseSize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprPhraseSize(Fts5Expr *pExpr, int iPhrase){$/;"	f	file:
sqlite3Fts5ExprPopulatePoslists	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprPopulatePoslists($/;"	f	file:
sqlite3Fts5ExprPoslist	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ExprPoslist(Fts5Expr *pExpr, int iPhrase, const u8 **pa){$/;"	f	file:
sqlite3Fts5ExprRowid	src/sqlite/sqlite3.c	/^static i64 sqlite3Fts5ExprRowid(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5Get32	src/sqlite/sqlite3.c	/^static int sqlite3Fts5Get32(const u8 *aBuf){$/;"	f	file:
sqlite3Fts5GetTokenizer	src/sqlite/sqlite3.c	/^static int sqlite3Fts5GetTokenizer($/;"	f	file:
sqlite3Fts5GetVarint	src/sqlite/sqlite3.c	/^static u8 sqlite3Fts5GetVarint(const unsigned char *p, u64 *v){$/;"	f	file:
sqlite3Fts5GetVarint32	src/sqlite/sqlite3.c	/^static int sqlite3Fts5GetVarint32(const unsigned char *p, u32 *v){$/;"	f	file:
sqlite3Fts5GetVarintLen	src/sqlite/sqlite3.c	/^static int sqlite3Fts5GetVarintLen(u32 iVal){$/;"	f	file:
sqlite3Fts5HashClear	src/sqlite/sqlite3.c	/^static void sqlite3Fts5HashClear(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5HashFree(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashNew	src/sqlite/sqlite3.c	/^static int sqlite3Fts5HashNew(Fts5Config *pConfig, Fts5Hash **ppNew, int *pnByte){$/;"	f	file:
sqlite3Fts5HashQuery	src/sqlite/sqlite3.c	/^static int sqlite3Fts5HashQuery($/;"	f	file:
sqlite3Fts5HashScanEntry	src/sqlite/sqlite3.c	/^static void sqlite3Fts5HashScanEntry($/;"	f	file:
sqlite3Fts5HashScanEof	src/sqlite/sqlite3.c	/^static int sqlite3Fts5HashScanEof(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5HashScanInit($/;"	f	file:
sqlite3Fts5HashScanNext	src/sqlite/sqlite3.c	/^static void sqlite3Fts5HashScanNext(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashWrite	src/sqlite/sqlite3.c	/^static int sqlite3Fts5HashWrite($/;"	f	file:
sqlite3Fts5IndexBeginWrite	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexBeginWrite(Fts5Index *p, int bDelete, i64 iRowid){$/;"	f	file:
sqlite3Fts5IndexCharlenToBytelen	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexCharlenToBytelen($/;"	f	file:
sqlite3Fts5IndexClose	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexClose(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexEntryCksum	src/sqlite/sqlite3.c	/^static u64 sqlite3Fts5IndexEntryCksum($/;"	f	file:
sqlite3Fts5IndexFromCsrid	src/sqlite/sqlite3.c	/^static Fts5Index *sqlite3Fts5IndexFromCsrid($/;"	f	file:
sqlite3Fts5IndexGetAverages	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexGetAverages(Fts5Index *p, i64 *pnRow, i64 *anSize){$/;"	f	file:
sqlite3Fts5IndexInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexInit(sqlite3 *db){$/;"	f	file:
sqlite3Fts5IndexIntegrityCheck	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexIntegrityCheck(Fts5Index *p, u64 cksum){$/;"	f	file:
sqlite3Fts5IndexLoadConfig	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexLoadConfig(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexMerge	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexMerge(Fts5Index *p, int nMerge){$/;"	f	file:
sqlite3Fts5IndexOpen	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexOpen($/;"	f	file:
sqlite3Fts5IndexOptimize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexOptimize(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexQuery	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexQuery($/;"	f	file:
sqlite3Fts5IndexReads	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexReads(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReinit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexReinit(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReset	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexReset(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexRollback	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexRollback(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexSetAverages	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexSetAverages(Fts5Index *p, const u8 *pData, int nData){$/;"	f	file:
sqlite3Fts5IndexSetCookie	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexSetCookie(Fts5Index *p, int iNew){$/;"	f	file:
sqlite3Fts5IndexSync	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexSync(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexWrite	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IndexWrite($/;"	f	file:
sqlite3Fts5Init	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts5Init(sqlite3 *db){$/;"	f
sqlite3Fts5IsBareword	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IsBareword(char t){$/;"	f	file:
sqlite3Fts5IterClose	src/sqlite/sqlite3.c	/^static void sqlite3Fts5IterClose(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterEof	src/sqlite/sqlite3.c	183483;"	d	file:
sqlite3Fts5IterNext	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IterNext(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNextFrom	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IterNextFrom(Fts5IndexIter *pIndexIter, i64 iMatch){$/;"	f	file:
sqlite3Fts5IterNextScan	src/sqlite/sqlite3.c	/^static int sqlite3Fts5IterNextScan(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterTerm	src/sqlite/sqlite3.c	/^static const char *sqlite3Fts5IterTerm(Fts5IndexIter *pIndexIter, int *pn){$/;"	f	file:
sqlite3Fts5MallocZero	src/sqlite/sqlite3.c	/^static void *sqlite3Fts5MallocZero(int *pRc, int nByte){$/;"	f	file:
sqlite3Fts5Mprintf	src/sqlite/sqlite3.c	/^static char *sqlite3Fts5Mprintf(int *pRc, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseColset	src/sqlite/sqlite3.c	/^static Fts5Colset *sqlite3Fts5ParseColset($/;"	f	file:
sqlite3Fts5ParseColsetInvert	src/sqlite/sqlite3.c	/^static Fts5Colset *sqlite3Fts5ParseColsetInvert(Fts5Parse *pParse, Fts5Colset *p){$/;"	f	file:
sqlite3Fts5ParseError	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseError(Fts5Parse *pParse, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseFinished	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseFinished(Fts5Parse *pParse, Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseImplicitAnd	src/sqlite/sqlite3.c	/^static Fts5ExprNode *sqlite3Fts5ParseImplicitAnd($/;"	f	file:
sqlite3Fts5ParseNear	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseNear(Fts5Parse *pParse, Fts5Token *pTok){$/;"	f	file:
sqlite3Fts5ParseNearset	src/sqlite/sqlite3.c	/^static Fts5ExprNearset *sqlite3Fts5ParseNearset($/;"	f	file:
sqlite3Fts5ParseNearsetFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseNearsetFree(Fts5ExprNearset *pNear){$/;"	f	file:
sqlite3Fts5ParseNode	src/sqlite/sqlite3.c	/^static Fts5ExprNode *sqlite3Fts5ParseNode($/;"	f	file:
sqlite3Fts5ParseNodeFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseNodeFree(Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParsePhraseFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParsePhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
sqlite3Fts5ParseSetColset	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseSetColset($/;"	f	file:
sqlite3Fts5ParseSetDistance	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParseSetDistance($/;"	f	file:
sqlite3Fts5ParseTerm	src/sqlite/sqlite3.c	/^static Fts5ExprPhrase *sqlite3Fts5ParseTerm($/;"	f	file:
sqlite3Fts5Parser	src/sqlite/sqlite3.c	/^static void sqlite3Fts5Parser($/;"	f	file:
sqlite3Fts5ParserARG_FETCH	src/sqlite/sqlite3.c	184077;"	d	file:
sqlite3Fts5ParserARG_PDECL	src/sqlite/sqlite3.c	184076;"	d	file:
sqlite3Fts5ParserARG_SDECL	src/sqlite/sqlite3.c	184075;"	d	file:
sqlite3Fts5ParserARG_STORE	src/sqlite/sqlite3.c	184078;"	d	file:
sqlite3Fts5ParserAlloc	src/sqlite/sqlite3.c	/^static void *sqlite3Fts5ParserAlloc(void *(*mallocProc)(fts5YYMALLOCARGTYPE)){$/;"	f	file:
sqlite3Fts5ParserFTS5TOKENTYPE	src/sqlite/sqlite3.c	184062;"	d	file:
sqlite3Fts5ParserFinalize	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParserFinalize(void *p){$/;"	f	file:
sqlite3Fts5ParserFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParserFree($/;"	f	file:
sqlite3Fts5ParserInit	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParserInit(void *fts5yypParser){$/;"	f	file:
sqlite3Fts5ParserStackPeak	src/sqlite/sqlite3.c	/^static int sqlite3Fts5ParserStackPeak(void *p){$/;"	f	file:
sqlite3Fts5ParserTrace	src/sqlite/sqlite3.c	/^static void sqlite3Fts5ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f	file:
sqlite3Fts5PoslistNext64	src/sqlite/sqlite3.c	/^static int sqlite3Fts5PoslistNext64($/;"	f	file:
sqlite3Fts5PoslistReaderInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5PoslistReaderInit($/;"	f	file:
sqlite3Fts5PoslistReaderNext	src/sqlite/sqlite3.c	/^static int sqlite3Fts5PoslistReaderNext(Fts5PoslistReader *pIter){$/;"	f	file:
sqlite3Fts5PoslistSafeAppend	src/sqlite/sqlite3.c	/^static void sqlite3Fts5PoslistSafeAppend($/;"	f	file:
sqlite3Fts5PoslistWriterAppend	src/sqlite/sqlite3.c	/^static int sqlite3Fts5PoslistWriterAppend($/;"	f	file:
sqlite3Fts5Put32	src/sqlite/sqlite3.c	/^static void sqlite3Fts5Put32(u8 *aBuf, int iVal){$/;"	f	file:
sqlite3Fts5PutVarint	src/sqlite/sqlite3.c	/^static int sqlite3Fts5PutVarint(unsigned char *p, u64 v){$/;"	f	file:
sqlite3Fts5StorageClose	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageClose(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageConfigValue	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageConfigValue($/;"	f	file:
sqlite3Fts5StorageContentInsert	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageContentInsert($/;"	f	file:
sqlite3Fts5StorageDelete	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageDelete(Fts5Storage *p, i64 iDel, sqlite3_value **apVal){$/;"	f	file:
sqlite3Fts5StorageDeleteAll	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageDeleteAll(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageDocsize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageDocsize(Fts5Storage *p, i64 iRowid, int *aCol){$/;"	f	file:
sqlite3Fts5StorageIndexInsert	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageIndexInsert($/;"	f	file:
sqlite3Fts5StorageIntegrity	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageIntegrity(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageMerge	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageMerge(Fts5Storage *p, int nMerge){$/;"	f	file:
sqlite3Fts5StorageOpen	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageOpen($/;"	f	file:
sqlite3Fts5StorageOptimize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageOptimize(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRebuild	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageRebuild(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRename	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageRename(Fts5Storage *pStorage, const char *zName){$/;"	f	file:
sqlite3Fts5StorageReset	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageReset(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRollback	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageRollback(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRowCount	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageRowCount(Fts5Storage *p, i64 *pnRow){$/;"	f	file:
sqlite3Fts5StorageSize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageSize(Fts5Storage *p, int iCol, i64 *pnToken){$/;"	f	file:
sqlite3Fts5StorageStmt	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageStmt($/;"	f	file:
sqlite3Fts5StorageStmtRelease	src/sqlite/sqlite3.c	/^static void sqlite3Fts5StorageStmtRelease($/;"	f	file:
sqlite3Fts5StorageSync	src/sqlite/sqlite3.c	/^static int sqlite3Fts5StorageSync(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5Strndup	src/sqlite/sqlite3.c	/^static char *sqlite3Fts5Strndup(int *pRc, const char *pIn, int nIn){$/;"	f	file:
sqlite3Fts5TermsetAdd	src/sqlite/sqlite3.c	/^static int sqlite3Fts5TermsetAdd($/;"	f	file:
sqlite3Fts5TermsetFree	src/sqlite/sqlite3.c	/^static void sqlite3Fts5TermsetFree(Fts5Termset *p){$/;"	f	file:
sqlite3Fts5TermsetNew	src/sqlite/sqlite3.c	/^static int sqlite3Fts5TermsetNew(Fts5Termset **pp){$/;"	f	file:
sqlite3Fts5Tokenize	src/sqlite/sqlite3.c	/^static int sqlite3Fts5Tokenize($/;"	f	file:
sqlite3Fts5TokenizerInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5TokenizerInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5UnicodeFold	src/sqlite/sqlite3.c	/^static int sqlite3Fts5UnicodeFold(int c, int bRemoveDiacritic){$/;"	f	file:
sqlite3Fts5UnicodeIsalnum	src/sqlite/sqlite3.c	/^static int sqlite3Fts5UnicodeIsalnum(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsdiacritic	src/sqlite/sqlite3.c	/^static int sqlite3Fts5UnicodeIsdiacritic(int c){$/;"	f	file:
sqlite3Fts5VocabInit	src/sqlite/sqlite3.c	/^static int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3FtsUnicodeFold	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeFold(int c, int bRemoveDiacritic){$/;"	f
sqlite3FtsUnicodeIsalnum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeIsalnum(int c){$/;"	f
sqlite3FtsUnicodeIsdiacritic	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeIsdiacritic(int c){$/;"	f
sqlite3FunctionUsesThisSrc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FunctionUsesThisSrc(Expr *pExpr, SrcList *pSrcList){$/;"	f
sqlite3GenerateConstraintChecks	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateIndexKey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateRowDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowIndexDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3Get4byte	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3GetBoolean	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetBoolean(const char *z, u8 dflt){$/;"	f
sqlite3GetCollSeq	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetFuncCollSeq	src/sqlite/sqlite3.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetInt32	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetTempRange	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempReg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetToken	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetVTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVTable	src/sqlite/sqlite3.c	17799;"	d	file:
sqlite3GetVarint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint32	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVdbe	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GlobalConfig	src/sqlite/sqlite3.c	12967;"	d	file:
sqlite3GlobalConfig	src/sqlite/sqlite3.c	12973;"	d	file:
sqlite3HaltConstraint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HaltConstraint($/;"	f
sqlite3HashClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashFind	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashFind(const Hash *pH, const char *pKey){$/;"	f
sqlite3HashInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInsert	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){$/;"	f
sqlite3HeaderSizeBtree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizeBtree(void){ return ROUND8(sizeof(MemPage)); }$/;"	f
sqlite3HeaderSizePcache	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizePcache(void){ return ROUND8(sizeof(PgHdr)); }$/;"	f
sqlite3HeaderSizePcache1	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizePcache1(void){ return ROUND8(sizeof(PgHdr1)); }$/;"	f
sqlite3HeapNearlyFull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HexToBlob	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToInt	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3HexToInt(int h){$/;"	f
sqlite3Hooks	src/sqlite/sqlite3.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hwtime	src/sqlite/sqlite3.c	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE   sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3IcuInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IdListAppend	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3InRhsIsConstant	src/sqlite/sqlite3.c	/^static int sqlite3InRhsIsConstant(Expr *pIn){$/;"	f	file:
sqlite3IndexAffinityOk	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityStr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3IndexAffinityStr(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3IndexColumnAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char sqlite3IndexColumnAffinity(sqlite3 *db, Index *pIdx, int iCol){$/;"	f
sqlite3IndexedByLookup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3Init	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3InitCallback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitInfo	src/sqlite/sqlite3.c	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3	file:
sqlite3InitOne	src/sqlite/sqlite3.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3Insert	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Insert($/;"	f
sqlite3InsertBuiltinFuncs	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3InsertBuiltinFuncs($/;"	f
sqlite3IntFloatCompare	src/sqlite/sqlite3.c	/^static int sqlite3IntFloatCompare(i64 i, double r){$/;"	f	file:
sqlite3IntTokens	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[] = {$/;"	v
sqlite3IntTokens	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[];$/;"	v
sqlite3InvalidFunction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3InvalidFunction($/;"	f
sqlite3InvokeBusyHandler	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3IoTrace	src/sqlite/sqlite3.c	/^SQLITE_API SQLITE_EXTERN void (SQLITE_CDECL *sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IoTrace	src/sqlite/sqlite3.c	/^SQLITE_API void (SQLITE_CDECL *sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoerrnomemError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IoerrnomemError(int lineno){$/;"	f
sqlite3IsEbcdicIdChar	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsEbcdicIdChar	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[];$/;"	v
sqlite3IsIdChar	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsIdChar(u8 c){ return IdChar(c); }$/;"	f
sqlite3IsLikeFunction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsNaN	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNaN	src/sqlite/sqlite3.c	17216;"	d	file:
sqlite3IsNumericAffinity	src/sqlite/sqlite3.c	15420;"	d	file:
sqlite3IsReadOnly	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsRowid	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsRowid(const char *z){$/;"	f
sqlite3IsToplevel	src/sqlite/sqlite3.c	17538;"	d	file:
sqlite3IsToplevel	src/sqlite/sqlite3.c	17548;"	d	file:
sqlite3Isalnum	src/sqlite/sqlite3.c	17107;"	d	file:
sqlite3Isalnum	src/sqlite/sqlite3.c	17116;"	d	file:
sqlite3Isalpha	src/sqlite/sqlite3.c	17108;"	d	file:
sqlite3Isalpha	src/sqlite/sqlite3.c	17117;"	d	file:
sqlite3Isdigit	src/sqlite/sqlite3.c	17109;"	d	file:
sqlite3Isdigit	src/sqlite/sqlite3.c	17118;"	d	file:
sqlite3Isquote	src/sqlite/sqlite3.c	17112;"	d	file:
sqlite3Isquote	src/sqlite/sqlite3.c	17121;"	d	file:
sqlite3Isspace	src/sqlite/sqlite3.c	17106;"	d	file:
sqlite3Isspace	src/sqlite/sqlite3.c	17115;"	d	file:
sqlite3Isxdigit	src/sqlite/sqlite3.c	17110;"	d	file:
sqlite3Isxdigit	src/sqlite/sqlite3.c	17119;"	d	file:
sqlite3JoinType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JournalCreate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalIsInMemory	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalIsInMemory(sqlite3_file *p){$/;"	f
sqlite3JournalModename	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalOpen($/;"	f
sqlite3JournalSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3Json1Init	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Json1Init(sqlite3 *db){$/;"	f
sqlite3KeyInfoAlloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoAlloc(sqlite3 *db, int N, int X){$/;"	f
sqlite3KeyInfoIsWriteable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeyInfoIsWriteable(KeyInfo *p){ return p->nRef==1; }$/;"	f
sqlite3KeyInfoOfIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoOfIndex(Parse *pParse, Index *pIdx){$/;"	f
sqlite3KeyInfoRef	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoRef(KeyInfo *p){$/;"	f
sqlite3KeyInfoUnref	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3KeyInfoUnref(KeyInfo *p){$/;"	f
sqlite3KeywordCode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3LeaveMutexAndCloseZombie	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3LeaveMutexAndCloseZombie(sqlite3 *db){$/;"	f
sqlite3LimitWhere	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3LimitWhere($/;"	f
sqlite3LoadExtension	src/sqlite/sqlite3.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LocateCollSeq	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTable($/;"	f
sqlite3LocateTableItem	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTableItem($/;"	f
sqlite3LockAndPrepare	src/sqlite/sqlite3.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3LogEst	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEst(u64 x){$/;"	f
sqlite3LogEstAdd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEstAdd(LogEst a, LogEst b){$/;"	f
sqlite3LogEstFromDouble	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEstFromDouble(double x){$/;"	f
sqlite3LogEstToInt	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u64 sqlite3LogEstToInt(LogEst x){$/;"	f
sqlite3MPrintf	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3Malloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Malloc(u64 n){$/;"	f
sqlite3MallocAlarm	src/sqlite/sqlite3.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocEnd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocInit(void){$/;"	f
sqlite3MallocMutex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MallocMutex(void){$/;"	f
sqlite3MallocSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocZero	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3MallocZero(u64 n){$/;"	f
sqlite3MatchSpanName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MatchSpanName($/;"	f
sqlite3MaterializeView	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MaterializeView($/;"	f
sqlite3MayAbort	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MemCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemFree	src/sqlite/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	src/sqlite/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemGetMemsys3	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys5	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetWin32	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemInit	src/sqlite/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	src/sqlite/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemJournalOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemMalloc	src/sqlite/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	src/sqlite/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemRealloc	src/sqlite/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	src/sqlite/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRoundup	src/sqlite/sqlite3.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	src/sqlite/sqlite3.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemSetDefault	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemShutdown	src/sqlite/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	src/sqlite/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemSize	src/sqlite/sqlite3.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemSize	src/sqlite/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	src/sqlite/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemdebugBacktrace	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktraceCallback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugDump	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugHasType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	src/sqlite/sqlite3.c	18005;"	d	file:
sqlite3MemdebugMallocCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugNoType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	src/sqlite/sqlite3.c	18006;"	d	file:
sqlite3MemdebugSetType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	src/sqlite/sqlite3.c	18004;"	d	file:
sqlite3MemdebugSettitle	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSync	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSync(){$/;"	f
sqlite3MemoryBarrier	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	src/sqlite/sqlite3.c	17201;"	d	file:
sqlite3Memsys3Dump	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3MemsysGetHeader	src/sqlite/sqlite3.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MisuseError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MulInt64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MultiWrite	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MutexAlloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	src/sqlite/sqlite3.c	14747;"	d	file:
sqlite3MutexEnd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	src/sqlite/sqlite3.c	14749;"	d	file:
sqlite3MutexInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexInit(void){$/;"	f
sqlite3MutexInit	src/sqlite/sqlite3.c	14748;"	d	file:
sqlite3NameFromToken	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NestedParse	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NoTempsInRange	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3NoTempsInRange(Parse *pParse, int iFirst, int iLast){$/;"	f
sqlite3NomemError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3NomemError(int lineno){$/;"	f
sqlite3NoopMutex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3OSTrace	src/sqlite/sqlite3.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OomClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OomClear(sqlite3 *db){$/;"	f
sqlite3OomFault	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OomFault(sqlite3 *db){$/;"	f
sqlite3OpcodeName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeProperty	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpcodeProperty	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[];$/;"	v
sqlite3OpenMasterTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenTable($/;"	f
sqlite3OpenTableAndIndices	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTempDatabase	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OsAccess	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsAccess($/;"	f
sqlite3OsCheckReservedLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsCloseFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCurrentTimeInt64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDeviceCharacteristics	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDlClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlSym	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsFetch	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFetch(sqlite3_file *id, i64 iOff, int iAmt, void **pp){$/;"	f
sqlite3OsFileControl	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControlHint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsFileControlHint(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFullPathname	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFullPathname($/;"	f
sqlite3OsGetLastError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsGetLastError(sqlite3_vfs *pVfs){$/;"	f
sqlite3OsInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsInit(void){$/;"	f
sqlite3OsLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpen($/;"	f
sqlite3OsOpenMalloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpenMalloc($/;"	f
sqlite3OsRandomness	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRead	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsSectorSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmMap	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmMap($/;"	f
sqlite3OsShmUnmap	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsSleep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSync	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsTruncate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsUnfetch	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnfetch(sqlite3_file *id, i64 iOff, void *p){$/;"	f
sqlite3OsUnlock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsWrite	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3PCacheBufferSetup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCachePercentDirty	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PCachePercentDirty(PCache *pCache){$/;"	f
sqlite3PCacheSetDefault	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3PExpr($/;"	f
sqlite3PExprAddSelect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PExprAddSelect(Parse *pParse, Expr *pExpr, Select *pSelect){$/;"	f
sqlite3PageFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PageFree(void *p){$/;"	f
sqlite3PageMalloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PagerAlignReserve	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerAlignReserve(Pager *pDest, Pager *pSrc){$/;"	f
sqlite3PagerBackupPtr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBegin	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerCacheStat	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerCacheStat(Pager *pPager, int eStat, int reset, int *pnVal){$/;"	f
sqlite3PagerCheckpoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCheckpoint($/;"	f
sqlite3PagerClearCache	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerClearCache(Pager *pPager){$/;"	f
sqlite3PagerClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerClose(Pager *pPager, sqlite3 *db){$/;"	f
sqlite3PagerCloseWal	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCloseWal(Pager *pPager, sqlite3 *db){$/;"	f
sqlite3PagerCodec	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCommitPhaseOne	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseTwo	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerDataVersion	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3PagerDataVersion(Pager *pPager){$/;"	f
sqlite3PagerDontWrite	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerExclusiveLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerFile	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFilename	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerFilename(Pager *pPager, int nullIfMemDb){$/;"	f
sqlite3PagerFlush	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerFlush(Pager *pPager){$/;"	f
sqlite3PagerGet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGet($/;"	f
sqlite3PagerGetCodec	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetData	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetJournalMode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIswriteable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerJournalSizeLimit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalname	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerJrnlFile	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerJrnlFile(Pager *pPager){$/;"	f
sqlite3PagerLockingMode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLookup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerMaxPageCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMemUsed	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMovepage	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerOkToChangeJournalMode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpen($/;"	f
sqlite3PagerOpenSavepoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenWal	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenWal($/;"	f
sqlite3PagerPageRefcount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPagecount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagenumber	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerReadFileheader	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerRef	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRefcount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRekey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRekey(DbPage *pPg, Pgno iNew, u16 flags){$/;"	f
sqlite3PagerRollback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerSavepoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSetBusyhandler	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetCachesize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCodec	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetFlags($/;"	f
sqlite3PagerSetJournalMode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetMmapLimit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetMmapLimit(Pager *pPager, sqlite3_int64 szMmap){$/;"	f
sqlite3PagerSetPagesize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetSpillsize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetSpillsize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSharedLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerShrink	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerShrink(Pager *pPager){$/;"	f
sqlite3PagerSnapshotGet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotGet(Pager *pPager, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3PagerSnapshotOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotOpen(Pager *pPager, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3PagerSnapshotRecover	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotRecover(Pager *pPager){$/;"	f
sqlite3PagerState	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerState(Pager *pPager){$/;"	f
sqlite3PagerStats	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerSync	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSync(Pager *pPager, const char *zMaster){$/;"	f
sqlite3PagerTempSpace	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTruncateImage	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerUnref	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerUnrefNotNull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnrefNotNull(DbPage *pPg){$/;"	f
sqlite3PagerUseWal	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerUseWal(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerUseWal	src/sqlite/sqlite3.c	14164;"	d	file:
sqlite3PagerVfs	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalFramesize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalFramesize(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWrite	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWrite(PgHdr *pPg){$/;"	f
sqlite3ParseToplevel	src/sqlite/sqlite3.c	17537;"	d	file:
sqlite3ParseToplevel	src/sqlite/sqlite3.c	17547;"	d	file:
sqlite3ParseUri	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParseUri($/;"	f
sqlite3Parser	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Parser($/;"	f
sqlite3ParserARG_FETCH	src/sqlite/sqlite3.c	136364;"	d	file:
sqlite3ParserARG_PDECL	src/sqlite/sqlite3.c	136363;"	d	file:
sqlite3ParserARG_SDECL	src/sqlite/sqlite3.c	136362;"	d	file:
sqlite3ParserARG_STORE	src/sqlite/sqlite3.c	136365;"	d	file:
sqlite3ParserAlloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ParserAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
sqlite3ParserFinalize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserFinalize(void *p){$/;"	f
sqlite3ParserFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserFree($/;"	f
sqlite3ParserInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserInit(void *yypParser){$/;"	f
sqlite3ParserReset	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserReset(Parse *pParse){$/;"	f
sqlite3ParserStackPeak	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserTOKENTYPE	src/sqlite/sqlite3.c	136342;"	d	file:
sqlite3ParserTrace	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3Parser_ENGINEALWAYSONSTACK	src/sqlite/sqlite3.c	136102;"	d	file:
sqlite3Pcache1Mutex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3Pcache1Mutex(void){$/;"	f
sqlite3PcacheCleanAll	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClearWritable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearWritable(PCache *pCache){$/;"	f
sqlite3PcacheClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDrop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheFetch	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_pcache_page *sqlite3PcacheFetch($/;"	f
sqlite3PcacheFetchFinish	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheFetchFinish($/;"	f
sqlite3PcacheFetchStress	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheFetchStress($/;"	f
sqlite3PcacheGetCachesize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheInitialize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheIterateDirty	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheMakeClean	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMove	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheMxDump	src/sqlite/sqlite3.c	/^  int sqlite3PcacheMxDump = 9999;   \/* Max cache entries for pcacheDump() *\/$/;"	v
sqlite3PcacheOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheOpen($/;"	f
sqlite3PcachePageRefcount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePageSanity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageSanity(PgHdr *pPg){$/;"	f
sqlite3PcachePagecount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcacheRef	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRefCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRelease	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void SQLITE_NOINLINE sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheReleaseMemory	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheSetCachesize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetPageSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheSetSpillsize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSetSpillsize(PCache *p, int mxPage){$/;"	f
sqlite3PcacheShrink	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShrink(PCache *pCache){$/;"	f
sqlite3PcacheShutdown	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheStats	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheStats($/;"	f
sqlite3PcacheTrace	src/sqlite/sqlite3.c	/^  int sqlite3PcacheTrace = 2;       \/* 0: off  1: simple  2: cache dumps *\/$/;"	v
sqlite3PcacheTruncate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PendingByte	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte;$/;"	v
sqlite3Pragma	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Pragma($/;"	f
sqlite3PragmaVtabRegister	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Module *sqlite3PragmaVtabRegister(sqlite3 *db, const char *zName){$/;"	f
sqlite3Prepare	src/sqlite/sqlite3.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare16	src/sqlite/sqlite3.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3PrimaryKeyIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3PrimaryKeyIndex(Table *pTab){$/;"	f
sqlite3Prng	src/sqlite/sqlite3.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3PrngRestoreState	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngSaveState	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngType	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3Put4byte	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3PutVarint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3ReadSchema	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3Realloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Realloc(void *pOld, u64 nBytes){$/;"	f
sqlite3RefillIndex	src/sqlite/sqlite3.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RegisterBuiltinFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterBuiltinFunctions(void){$/;"	f
sqlite3RegisterDateTimeFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterLikeFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3RegisterPerConnectionBuiltinFunctions	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterPerConnectionBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3Reindex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ReleaseTempRange	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempReg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3Reprepare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3ResetAllSchemasOfConnection	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetAllSchemasOfConnection(sqlite3 *db){$/;"	f
sqlite3ResetOneSchema	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetOneSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResolveExprListNames	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprListNames($/;"	f
sqlite3ResolveExprNames	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprNames($/;"	f
sqlite3ResolveOrderGroupBy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolvePartIdxLabel	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolvePartIdxLabel(Parse *pParse, int iLabel){$/;"	f
sqlite3ResolveSelectNames	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelectNames($/;"	f
sqlite3ResolveSelfReference	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelfReference($/;"	f
sqlite3ResultSetOfSelect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3RollbackAll	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackAll(sqlite3 *db, int tripCode){$/;"	f
sqlite3RollbackTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RootPageMoved	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RowSetClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInsert	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetNext	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetTest	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetTest(RowSet *pRowSet, int iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RowidConstraint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowidConstraint($/;"	f
sqlite3RtreeInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RunParser	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunVacuum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db, int iDb){$/;"	f
sqlite3SafetyCheckOk	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SavedPrng	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Savepoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3SchemaClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaGet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaMutexHeld	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	src/sqlite/sqlite3.c	13427;"	d	file:
sqlite3SchemaToIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3ScratchFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchMalloc	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3SectorSize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SectorSize(sqlite3_file *pFile){$/;"	f
sqlite3Select	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Select($/;"	f
sqlite3SelectAddColumnTypeAndCollation	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectAddColumnTypeAndCollation($/;"	f
sqlite3SelectAddTypeInfo	src/sqlite/sqlite3.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDestInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectDup(sqlite3 *db, Select *pDup, int flags){$/;"	f
sqlite3SelectExpand	src/sqlite/sqlite3.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExprHeight	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	src/sqlite/sqlite3.c	17936;"	d	file:
sqlite3SelectNew	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectNew($/;"	f
sqlite3SelectPrep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectPrep($/;"	f
sqlite3SelectSetName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectSetName(Select *p, const char *zName){$/;"	f
sqlite3SelectSetName	src/sqlite/sqlite3.c	17501;"	d	file:
sqlite3SelectTrace	src/sqlite/sqlite3.c	/^\/***\/ int sqlite3SelectTrace = 0;$/;"	v
sqlite3SelectWalkAssert2	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectWalkAssert2(Walker *NotUsed, Select *NotUsed2){$/;"	f
sqlite3SelectWalkNoop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SelectWalkNoop(Walker *NotUsed, Select *NotUsed2){$/;"	f
sqlite3SelectWrongNumTermsError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectWrongNumTermsError(Parse *pParse, Select *p){$/;"	f
sqlite3SetHasNullFlag	src/sqlite/sqlite3.c	/^static void sqlite3SetHasNullFlag(Vdbe *v, int iCur, int regHasNull){$/;"	f	file:
sqlite3SetMakeRecordP5	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SetMakeRecordP5(Vdbe *v, Table *pTab){$/;"	f
sqlite3SetMakeRecordP5	src/sqlite/sqlite3.c	17483;"	d	file:
sqlite3SetString	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SetString(char **pz, sqlite3 *db, const char *zNew){$/;"	f
sqlite3SharedCacheList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	src/sqlite/sqlite3.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SkipAccumulatorLoad	src/sqlite/sqlite3.c	/^static void sqlite3SkipAccumulatorLoad(sqlite3_context *context){$/;"	f	file:
sqlite3SmallTypeSizes	src/sqlite/sqlite3.c	/^static const u8 sqlite3SmallTypeSizes[] = {$/;"	v	file:
sqlite3SrcListAppend	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppendFromTerm	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAssignCursors	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListEnlarge	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListFuncArgs	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListFuncArgs(Parse *pParse, SrcList *p, ExprList *pList){$/;"	f
sqlite3SrcListIndexedBy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListLookup	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListShiftJoinType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3StackAllocRaw	src/sqlite/sqlite3.c	17170;"	d	file:
sqlite3StackAllocRaw	src/sqlite/sqlite3.c	17174;"	d	file:
sqlite3StackAllocZero	src/sqlite/sqlite3.c	17171;"	d	file:
sqlite3StackAllocZero	src/sqlite/sqlite3.c	17175;"	d	file:
sqlite3StackFree	src/sqlite/sqlite3.c	17172;"	d	file:
sqlite3StackFree	src/sqlite/sqlite3.c	17176;"	d	file:
sqlite3StartTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StartTable($/;"	f
sqlite3Stat	src/sqlite/sqlite3.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3Stat4Column	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4Column($/;"	f
sqlite3Stat4ProbeFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Stat4ProbeFree(UnpackedRecord *pRec){$/;"	f
sqlite3Stat4ProbeSetValue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4ProbeSetValue($/;"	f
sqlite3Stat4ValueFromExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4ValueFromExpr($/;"	f
sqlite3StatType	src/sqlite/sqlite3.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	src/sqlite/sqlite3.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatValueType	src/sqlite/sqlite3.c	/^typedef sqlite3_int64 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	src/sqlite/sqlite3.c	/^typedef u32 sqlite3StatValueType;$/;"	t	file:
sqlite3StatusDown	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusDown(int op, int N){$/;"	f
sqlite3StatusHighwater	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusHighwater(int op, int X){$/;"	f
sqlite3StatusUp	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusUp(int op, int N){$/;"	f
sqlite3StatusValue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3StatusValue(int op){$/;"	f
sqlite3Step	src/sqlite/sqlite3.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3StmtCurrentTime	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3StmtCurrentTime(sqlite3_context *p){$/;"	f
sqlite3StmtVtabInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StmtVtabInit(sqlite3 *db){$/;"	f
sqlite3StrAccumAppend	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumAppendAll	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppendAll(StrAccum *p, const char *z){$/;"	f
sqlite3StrAccumEnlarge	src/sqlite/sqlite3.c	/^static int sqlite3StrAccumEnlarge(StrAccum *p, int N){$/;"	f	file:
sqlite3StrAccumFinish	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumReset	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrBINARY	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3StrBINARY[] = "BINARY";$/;"	v
sqlite3StrBINARY	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3StrBINARY[];$/;"	v
sqlite3StrICmp	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrNICmp	src/sqlite/sqlite3.c	17133;"	d	file:
sqlite3StringToId	src/sqlite/sqlite3.c	/^static void sqlite3StringToId(Expr *p){$/;"	f	file:
sqlite3Strlen30	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Strlen30(const char *z){$/;"	f
sqlite3SubInt64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3SubselectError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SubselectError(Parse *pParse, int nActual, int nExpect){$/;"	f
sqlite3SystemError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SystemError(sqlite3 *db, int rc){$/;"	f
sqlite3TableAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableAffinity(Vdbe *v, Table *pTab, int iReg){$/;"	f
sqlite3TableColumnAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char sqlite3TableColumnAffinity(Table *pTab, int iCol){$/;"	f
sqlite3TableLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableLock($/;"	f
sqlite3TableLock	src/sqlite/sqlite3.c	17782;"	d	file:
sqlite3TempInMemory	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3ThreadCreate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ThreadCreate($/;"	f
sqlite3ThreadJoin	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ThreadJoin(SQLiteThread *p, void **ppOut){$/;"	f
sqlite3ThreadProc	src/sqlite/sqlite3.c	/^static unsigned __stdcall sqlite3ThreadProc($/;"	f	file:
sqlite3TokenInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TokenInit(Token *p, char *z){$/;"	f
sqlite3Tolower	src/sqlite/sqlite3.c	17111;"	d	file:
sqlite3Tolower	src/sqlite/sqlite3.c	17120;"	d	file:
sqlite3Toupper	src/sqlite/sqlite3.c	17105;"	d	file:
sqlite3Toupper	src/sqlite/sqlite3.c	17114;"	d	file:
sqlite3TransferBindings	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TreeViewBareExprList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewBareExprList($/;"	f
sqlite3TreeViewExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewExpr(TreeView *pView, const Expr *pExpr, u8 moreToFollow){$/;"	f
sqlite3TreeViewExprList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewExprList($/;"	f
sqlite3TreeViewItem	src/sqlite/sqlite3.c	/^static void sqlite3TreeViewItem(TreeView *p, const char *zLabel,u8 moreFollows){$/;"	f	file:
sqlite3TreeViewLine	src/sqlite/sqlite3.c	/^static void sqlite3TreeViewLine(TreeView *p, const char *zFormat, ...){$/;"	f	file:
sqlite3TreeViewPop	src/sqlite/sqlite3.c	/^static void sqlite3TreeViewPop(TreeView *p){$/;"	f	file:
sqlite3TreeViewPush	src/sqlite/sqlite3.c	/^static TreeView *sqlite3TreeViewPush(TreeView *p, u8 moreToFollow){$/;"	f	file:
sqlite3TreeViewSelect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewSelect(TreeView *pView, const Select *p, u8 moreToFollow){$/;"	f
sqlite3TreeViewWith	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewWith(TreeView *pView, const With *pWith, u8 moreToFollow){$/;"	f
sqlite3TriggerColmask	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerColmask	src/sqlite/sqlite3.c	17549;"	d	file:
sqlite3TriggerDeleteStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerInsertStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerList	src/sqlite/sqlite3.c	17546;"	d	file:
sqlite3TriggerSelectStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerUpdateStep	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggersExist	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggersExist($/;"	f
sqlite3TriggersExist	src/sqlite/sqlite3.c	17540;"	d	file:
sqlite3TwoPartName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TwoPartName($/;"	f
sqlite3UniqueConstraint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UniqueConstraint($/;"	f
sqlite3UnlinkAndDeleteIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	src/sqlite/sqlite3.c	17543;"	d	file:
sqlite3Update	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Update($/;"	f
sqlite3UpperToLower	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UpperToLower	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[];$/;"	v
sqlite3UserAuthTable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3UserAuthTable(const char *zTable){$/;"	f
sqlite3Utf16ByteLen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16to8	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf8CharLen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8Read	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8Read	src/sqlite/sqlite3.c	106636;"	d	file:
sqlite3Utf8To8	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8Trans1	src/sqlite/sqlite3.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3UtfSelfTest	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UtfSelfTest(void){$/;"	f
sqlite3VListAdd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE VList *sqlite3VListAdd($/;"	f
sqlite3VListNameToNum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VListNameToNum(VList *pIn, const char *zName, int nName){$/;"	f
sqlite3VListNumToName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3VListNumToName(VList *pIn, int iVal){$/;"	f
sqlite3VMPrintf	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VXPrintf	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VXPrintf($/;"	f
sqlite3Vacuum	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Vacuum(Parse *pParse, Token *pNm){$/;"	f
sqlite3ValueApplyAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueBytes	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueFree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFromExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueFromExpr($/;"	f
sqlite3ValueNew	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueSetNull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetNull(sqlite3_value *p){$/;"	f
sqlite3ValueSetStr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetStr($/;"	f
sqlite3ValueText	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3VarintLen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VdbeAddOp0	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp1	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp2	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp3	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp4	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4Dup8	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Dup8($/;"	f
sqlite3VdbeAddOp4Int	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOpList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeAddOpList($/;"	f
sqlite3VdbeAddParseSchemaOp	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAllocUnpackedRecord	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAppendP4	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeAppendP4(Vdbe *p, void *pP4, int n){$/;"	f
sqlite3VdbeAssertMayAbort	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeChangeEncoding	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeOpcode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeOpcode(Vdbe *p, u32 addr, u8 iNewOpcode){$/;"	f
sqlite3VdbeChangeP1	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP4	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP5	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u16 p5){$/;"	f
sqlite3VdbeChangeToNoop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeCheckFk	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckFk	src/sqlite/sqlite3.c	18889;"	d	file:
sqlite3VdbeCheckMemInvariants	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckMemInvariants(Mem *p){$/;"	f
sqlite3VdbeClearObject	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeClearObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeCloseStatement	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeComment	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeCountChanges	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCreate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3VdbeCreate(Parse *pParse){$/;"	f
sqlite3VdbeCurrentAddr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCursorMoveto	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorMoveto(VdbeCursor **pp, int *piCol){$/;"	f
sqlite3VdbeCursorRestore	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorRestore(VdbeCursor *p){$/;"	f
sqlite3VdbeDb	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDeleteAuxData	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteAuxData(sqlite3 *db, AuxData **pp, int iOp, int mask){$/;"	f
sqlite3VdbeDeletePriorOpcode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeDeletePriorOpcode(Vdbe *p, u8 op){$/;"	f
sqlite3VdbeEndCoroutine	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEndCoroutine(Vdbe *v, int regYield){$/;"	f
sqlite3VdbeEnter	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeEnter	src/sqlite/sqlite3.c	18872;"	d	file:
sqlite3VdbeError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeError(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeExec	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeExec($/;"	f
sqlite3VdbeExpandSql	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeFinalize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFindCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE RecordCompare sqlite3VdbeFindCompare(UnpackedRecord *p){$/;"	f
sqlite3VdbeFrameDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameRestore	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFreeCursor	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeGetBoundValue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3VdbeGetBoundValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeGetOp	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGoto	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeGoto(Vdbe *p, int iDest){$/;"	f
sqlite3VdbeHalt	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	src/sqlite/sqlite3.c	17968;"	d	file:
sqlite3VdbeIdxKeyCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxRowid	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIntValue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeJumpHere	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeLeave	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLeave	src/sqlite/sqlite3.c	18878;"	d	file:
sqlite3VdbeLinkSubProgram	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeList($/;"	f
sqlite3VdbeLoadString	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeLoadString(Vdbe *p, int iDest, const char *zStr){$/;"	f
sqlite3VdbeMakeLabel	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMakeLabel(Vdbe *v){$/;"	f
sqlite3VdbeMakeReady	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMemAboutToChange	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemAboutToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemCast	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemCast(Mem *pMem, u8 aff, u8 encoding){$/;"	f
sqlite3VdbeMemClearAndResize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){$/;"	f
sqlite3VdbeMemCopy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemExpandBlob	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemExpandBlob	src/sqlite/sqlite3.c	18903;"	d	file:
sqlite3VdbeMemFinalize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFromBtree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemGrow	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){$/;"	f
sqlite3VdbeMemHandleBom	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemInit(Mem *pMem, sqlite3 *db, u16 flags){$/;"	f
sqlite3VdbeMemIntegerify	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMove	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemNulTerminate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemPrettyPrint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemRealify	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRelease	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemSetDouble	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetDouble	src/sqlite/sqlite3.c	18829;"	d	file:
sqlite3VdbeMemSetInt64	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetNull	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetStr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetZeroBlob	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemShallowCopy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemStringify	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemStringify(Mem *pMem, u8 enc, u8 bForce){$/;"	f
sqlite3VdbeMemTooBig	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTranslate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeMultiLoad	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMultiLoad(Vdbe *p, int iDest, const char *zTypes, ...){$/;"	f
sqlite3VdbeNoopComment	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeOneByteSerialTypeLen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3VdbeOneByteSerialTypeLen(u8 serial_type){$/;"	f
sqlite3VdbeParameterIndex	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbePreUpdateHook	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePreUpdateHook($/;"	f
sqlite3VdbePrepareFlags	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3VdbePrepareFlags(Vdbe *v){$/;"	f
sqlite3VdbePrintOp	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintSql	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbeRealValue	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRecordCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordCompareWithSkip	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompareWithSkip($/;"	f
sqlite3VdbeRecordUnpack	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeReset	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResolveLabel	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResolveLabel(Vdbe *v, int x){$/;"	f
sqlite3VdbeReusable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeReusable(Vdbe *p){$/;"	f
sqlite3VdbeRewind	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeScanStatus	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeScanStatus($/;"	f
sqlite3VdbeScanStatus	src/sqlite/sqlite3.c	13966;"	d	file:
sqlite3VdbeSerialGet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialPut	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialPut(u8 *buf, Mem *pMem, u32 serial_type){$/;"	f
sqlite3VdbeSerialType	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialType(Mem *pMem, int file_format, u32 *pLen){$/;"	f
sqlite3VdbeSerialTypeLen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSetChanges	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetColName	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetLineNumber	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetLineNumber(Vdbe *v, int iLine){$/;"	f
sqlite3VdbeSetNumCols	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetP4KeyInfo	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetP4KeyInfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3VdbeSetSql	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, u8 prepFlags){$/;"	f
sqlite3VdbeSetVarmask	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSorterClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterCompare	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterInit($/;"	f
sqlite3VdbeSorterNext	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterNext(sqlite3 *db, const VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterReset	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterReset(sqlite3 *db, VdbeSorter *pSorter){$/;"	f
sqlite3VdbeSorterRewind	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRewind(const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRowkey	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRowkey(const VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterWrite	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSwap	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeTakeOpArray	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTransferError	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeTransferError(Vdbe *p){$/;"	f
sqlite3VdbeUsesBtree	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeVerifyNoMallocRequired(Vdbe *p, int N){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	src/sqlite/sqlite3.c	13843;"	d	file:
sqlite3VdbeVerifyNoResultRow	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeVerifyNoResultRow(Vdbe *p){$/;"	f
sqlite3VdbeVerifyNoResultRow	src/sqlite/sqlite3.c	13844;"	d	file:
sqlite3VectorErrorMsg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VectorErrorMsg(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3VectorFieldSubexpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3VectorFieldSubexpr(Expr *pVector, int i){$/;"	f
sqlite3ViewGetColumnNames	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	src/sqlite/sqlite3.c	17342;"	d	file:
sqlite3VtabArgExtend	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabBegin	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBeginParse	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabBeginParse($/;"	f
sqlite3VtabCallConnect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallCreate	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallDestroy	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabClear	src/sqlite/sqlite3.c	17790;"	d	file:
sqlite3VtabCommit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabCommit	src/sqlite/sqlite3.c	17793;"	d	file:
sqlite3VtabCreateModule	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Module *sqlite3VtabCreateModule($/;"	f
sqlite3VtabDisconnect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabDisconnect(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabEponymousTableClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabEponymousTableClear(sqlite3 *db, Module *pMod){$/;"	f
sqlite3VtabEponymousTableInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabEponymousTableInit(Parse *pParse, Module *pMod){$/;"	f
sqlite3VtabFinishParse	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabImportErrmsg	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabImportErrmsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f
sqlite3VtabInSync	src/sqlite/sqlite3.c	17794;"	d	file:
sqlite3VtabInSync	src/sqlite/sqlite3.c	17819;"	d	file:
sqlite3VtabLock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabLock	src/sqlite/sqlite3.c	17795;"	d	file:
sqlite3VtabMakeWritable	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabOverloadFunction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabRollback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabRollback	src/sqlite/sqlite3.c	17792;"	d	file:
sqlite3VtabSavepoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSavepoint	src/sqlite/sqlite3.c	17798;"	d	file:
sqlite3VtabSync	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSync(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VtabSync	src/sqlite/sqlite3.c	17791;"	d	file:
sqlite3VtabUnlock	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlock	src/sqlite/sqlite3.c	17796;"	d	file:
sqlite3VtabUnlockList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3VtabUnlockList	src/sqlite/sqlite3.c	17797;"	d	file:
sqlite3WalBeginReadTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	src/sqlite/sqlite3.c	47242;"	d	file:
sqlite3WalBeginWriteTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	src/sqlite/sqlite3.c	47245;"	d	file:
sqlite3WalCallback	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	src/sqlite/sqlite3.c	47252;"	d	file:
sqlite3WalCheckpoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	src/sqlite/sqlite3.c	47251;"	d	file:
sqlite3WalClose	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalClose($/;"	f
sqlite3WalClose	src/sqlite/sqlite3.c	47241;"	d	file:
sqlite3WalDbsize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	src/sqlite/sqlite3.c	47244;"	d	file:
sqlite3WalDefaultHook	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalDefaultHook($/;"	f
sqlite3WalEndReadTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	src/sqlite/sqlite3.c	47243;"	d	file:
sqlite3WalEndWriteTransaction	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	src/sqlite/sqlite3.c	47246;"	d	file:
sqlite3WalExclusiveMode	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	src/sqlite/sqlite3.c	47253;"	d	file:
sqlite3WalFile	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3WalFile(Wal *pWal){$/;"	f
sqlite3WalFile	src/sqlite/sqlite3.c	47257;"	d	file:
sqlite3WalFindFrame	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFindFrame($/;"	f
sqlite3WalFindFrame	src/sqlite/sqlite3.c	47256;"	d	file:
sqlite3WalFrames	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFrames($/;"	f
sqlite3WalFrames	src/sqlite/sqlite3.c	47250;"	d	file:
sqlite3WalFramesize	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFramesize(Wal *pWal){$/;"	f
sqlite3WalFramesize	src/sqlite/sqlite3.c	47255;"	d	file:
sqlite3WalHeapMemory	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	src/sqlite/sqlite3.c	47254;"	d	file:
sqlite3WalLimit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	src/sqlite/sqlite3.c	47240;"	d	file:
sqlite3WalOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalOpen($/;"	f
sqlite3WalOpen	src/sqlite/sqlite3.c	47239;"	d	file:
sqlite3WalReadFrame	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalReadFrame($/;"	f
sqlite3WalSavepoint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	src/sqlite/sqlite3.c	47248;"	d	file:
sqlite3WalSavepointUndo	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	src/sqlite/sqlite3.c	47249;"	d	file:
sqlite3WalSnapshotGet	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSnapshotGet(Wal *pWal, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3WalSnapshotOpen	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSnapshotOpen(Wal *pWal, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3WalSnapshotRecover	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSnapshotRecover(Wal *pWal){$/;"	f
sqlite3WalTrace	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalTrace = 0;$/;"	v
sqlite3WalUndo	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	src/sqlite/sqlite3.c	47247;"	d	file:
sqlite3WalkExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExprList	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkSelect	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WhereAddScanStatus	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereAddScanStatus($/;"	f
sqlite3WhereAddScanStatus	src/sqlite/sqlite3.c	127310;"	d	file:
sqlite3WhereBegin	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereBreakLabel	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereBreakLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereClauseClear	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClauseClear(WhereClause *pWC){$/;"	f
sqlite3WhereClauseInit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClauseInit($/;"	f
sqlite3WhereClausePrint	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClausePrint(WhereClause *pWC){$/;"	f
sqlite3WhereCodeOneLoopStart	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereCodeOneLoopStart($/;"	f
sqlite3WhereContinueLabel	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereContinueLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereEnd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereExplainOneScan	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereExplainOneScan($/;"	f
sqlite3WhereExplainOneScan	src/sqlite/sqlite3.c	127300;"	d	file:
sqlite3WhereExprAnalyze	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereExprAnalyze($/;"	f
sqlite3WhereExprListUsage	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereExprListUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f
sqlite3WhereExprUsage	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereExprUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f
sqlite3WhereFindTerm	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE WhereTerm *sqlite3WhereFindTerm($/;"	f
sqlite3WhereGetMask	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereGetMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f
sqlite3WhereIsDistinct	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsDistinct(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsOrdered	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsOrdered(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsSorted	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsSorted(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOkOnePass	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereOkOnePass(WhereInfo *pWInfo, int *aiCur){$/;"	f
sqlite3WhereOrderedInnerLoop	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereOrderedInnerLoop(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOutputRowCount	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3WhereOutputRowCount(WhereInfo *pWInfo){$/;"	f
sqlite3WhereSplit	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereSplit(WhereClause *pWC, Expr *pExpr, u8 op){$/;"	f
sqlite3WhereTabFuncArgs	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereTabFuncArgs($/;"	f
sqlite3WhereTrace	src/sqlite/sqlite3.c	/^\/***\/ int sqlite3WhereTrace = 0;$/;"	v
sqlite3WhereTrace	src/sqlite/sqlite3.c	/^\/***\/ int sqlite3WhereTrace;$/;"	v
sqlite3Win32Wait	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE DWORD sqlite3Win32Wait(HANDLE hObject){$/;"	f
sqlite3WithAdd	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE With *sqlite3WithAdd($/;"	f
sqlite3WithDelete	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WithDelete(sqlite3 *db, With *pWith){$/;"	f
sqlite3WithDelete	src/sqlite/sqlite3.c	17853;"	d	file:
sqlite3WithPush	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WithPush(Parse *pParse, With *pWith, u8 bFree){$/;"	f
sqlite3WithPush	src/sqlite/sqlite3.c	17852;"	d	file:
sqlite3XPrintf	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3_aggregate_context	src/include/sqlite/sqlite3ext.h	311;"	d
sqlite3_aggregate_context	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_context	src/sqlite/sqlite3.c	112085;"	d	file:
sqlite3_aggregate_count	src/include/sqlite/sqlite3ext.h	313;"	d
sqlite3_aggregate_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_aggregate_count	src/sqlite/sqlite3.c	112087;"	d	file:
sqlite3_api_routines	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines
sqlite3_api_routines	src/include/sqlite/sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_api_routines	src/sqlite/sqlite3.c	/^struct sqlite3_api_routines {$/;"	s	file:
sqlite3_api_routines	src/sqlite/sqlite3.c	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines	file:
sqlite3_auto_extension	src/include/sqlite/sqlite3ext.h	516;"	d
sqlite3_auto_extension	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_auto_extension($/;"	f
sqlite3_auto_extension	src/sqlite/sqlite3.c	112290;"	d	file:
sqlite3_backup	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup	src/sqlite/sqlite3.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	src/sqlite/sqlite3.c	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup	file:
sqlite3_backup_finish	src/include/sqlite/sqlite3ext.h	477;"	d
sqlite3_backup_finish	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	src/sqlite/sqlite3.c	112251;"	d	file:
sqlite3_backup_init	src/include/sqlite/sqlite3ext.h	478;"	d
sqlite3_backup_init	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_backup *sqlite3_backup_init($/;"	f
sqlite3_backup_init	src/sqlite/sqlite3.c	112252;"	d	file:
sqlite3_backup_pagecount	src/include/sqlite/sqlite3ext.h	479;"	d
sqlite3_backup_pagecount	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	src/sqlite/sqlite3.c	112253;"	d	file:
sqlite3_backup_remaining	src/include/sqlite/sqlite3ext.h	480;"	d
sqlite3_backup_remaining	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	src/sqlite/sqlite3.c	112254;"	d	file:
sqlite3_backup_step	src/include/sqlite/sqlite3ext.h	481;"	d
sqlite3_backup_step	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	src/sqlite/sqlite3.c	112255;"	d	file:
sqlite3_bind_blob	src/include/sqlite/sqlite3ext.h	315;"	d
sqlite3_bind_blob	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_blob($/;"	f
sqlite3_bind_blob	src/sqlite/sqlite3.c	112089;"	d	file:
sqlite3_bind_blob64	src/include/sqlite/sqlite3ext.h	517;"	d
sqlite3_bind_blob64	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_blob64($/;"	f
sqlite3_bind_blob64	src/sqlite/sqlite3.c	112291;"	d	file:
sqlite3_bind_double	src/include/sqlite/sqlite3ext.h	316;"	d
sqlite3_bind_double	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_double	src/sqlite/sqlite3.c	112090;"	d	file:
sqlite3_bind_int	src/include/sqlite/sqlite3ext.h	317;"	d
sqlite3_bind_int	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int	src/sqlite/sqlite3.c	112091;"	d	file:
sqlite3_bind_int64	src/include/sqlite/sqlite3ext.h	318;"	d
sqlite3_bind_int64	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_int64	src/sqlite/sqlite3.c	112092;"	d	file:
sqlite3_bind_null	src/include/sqlite/sqlite3ext.h	319;"	d
sqlite3_bind_null	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_null	src/sqlite/sqlite3.c	112093;"	d	file:
sqlite3_bind_parameter_count	src/include/sqlite/sqlite3ext.h	320;"	d
sqlite3_bind_parameter_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_count	src/sqlite/sqlite3.c	112094;"	d	file:
sqlite3_bind_parameter_index	src/include/sqlite/sqlite3ext.h	321;"	d
sqlite3_bind_parameter_index	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_index	src/sqlite/sqlite3.c	112095;"	d	file:
sqlite3_bind_parameter_name	src/include/sqlite/sqlite3ext.h	322;"	d
sqlite3_bind_parameter_name	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_name	src/sqlite/sqlite3.c	112096;"	d	file:
sqlite3_bind_text	src/include/sqlite/sqlite3ext.h	323;"	d
sqlite3_bind_text	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_text($/;"	f
sqlite3_bind_text	src/sqlite/sqlite3.c	112097;"	d	file:
sqlite3_bind_text16	src/include/sqlite/sqlite3ext.h	324;"	d
sqlite3_bind_text16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_text16($/;"	f
sqlite3_bind_text16	src/sqlite/sqlite3.c	112098;"	d	file:
sqlite3_bind_text16	src/sqlite/sqlite3.c	112364;"	d	file:
sqlite3_bind_text64	src/include/sqlite/sqlite3ext.h	518;"	d
sqlite3_bind_text64	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_text64($/;"	f
sqlite3_bind_text64	src/sqlite/sqlite3.c	112292;"	d	file:
sqlite3_bind_value	src/include/sqlite/sqlite3ext.h	325;"	d
sqlite3_bind_value	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_value	src/sqlite/sqlite3.c	112099;"	d	file:
sqlite3_bind_zeroblob	src/include/sqlite/sqlite3ext.h	442;"	d
sqlite3_bind_zeroblob	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob	src/sqlite/sqlite3.c	112216;"	d	file:
sqlite3_bind_zeroblob	src/sqlite/sqlite3.c	112425;"	d	file:
sqlite3_bind_zeroblob64	src/include/sqlite/sqlite3ext.h	532;"	d
sqlite3_bind_zeroblob64	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_bind_zeroblob64(sqlite3_stmt *pStmt, int i, sqlite3_uint64 n){$/;"	f
sqlite3_bind_zeroblob64	src/sqlite/sqlite3.c	112306;"	d	file:
sqlite3_blob	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob	src/sqlite/sqlite3.c	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob	file:
sqlite3_blob_bytes	src/include/sqlite/sqlite3ext.h	443;"	d
sqlite3_blob_bytes	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_bytes	src/sqlite/sqlite3.c	112217;"	d	file:
sqlite3_blob_bytes	src/sqlite/sqlite3.c	112426;"	d	file:
sqlite3_blob_close	src/include/sqlite/sqlite3ext.h	444;"	d
sqlite3_blob_close	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	src/sqlite/sqlite3.c	112218;"	d	file:
sqlite3_blob_close	src/sqlite/sqlite3.c	112427;"	d	file:
sqlite3_blob_open	src/include/sqlite/sqlite3ext.h	445;"	d
sqlite3_blob_open	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_blob_open($/;"	f
sqlite3_blob_open	src/sqlite/sqlite3.c	112219;"	d	file:
sqlite3_blob_open	src/sqlite/sqlite3.c	112428;"	d	file:
sqlite3_blob_read	src/include/sqlite/sqlite3ext.h	446;"	d
sqlite3_blob_read	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_read	src/sqlite/sqlite3.c	112220;"	d	file:
sqlite3_blob_read	src/sqlite/sqlite3.c	112429;"	d	file:
sqlite3_blob_reopen	src/include/sqlite/sqlite3ext.h	498;"	d
sqlite3_blob_reopen	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_reopen	src/sqlite/sqlite3.c	112272;"	d	file:
sqlite3_blob_reopen	src/sqlite/sqlite3.c	112431;"	d	file:
sqlite3_blob_write	src/include/sqlite/sqlite3ext.h	447;"	d
sqlite3_blob_write	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blob_write	src/sqlite/sqlite3.c	112221;"	d	file:
sqlite3_blob_write	src/sqlite/sqlite3.c	112430;"	d	file:
sqlite3_busy_handler	src/include/sqlite/sqlite3ext.h	326;"	d
sqlite3_busy_handler	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	src/sqlite/sqlite3.c	112100;"	d	file:
sqlite3_busy_timeout	src/include/sqlite/sqlite3ext.h	327;"	d
sqlite3_busy_timeout	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	src/sqlite/sqlite3.c	112101;"	d	file:
sqlite3_callback	src/include/sqlite/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_callback	src/sqlite/sqlite3.c	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t	file:
sqlite3_cancel_auto_extension	src/include/sqlite/sqlite3ext.h	519;"	d
sqlite3_cancel_auto_extension	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_cancel_auto_extension($/;"	f
sqlite3_cancel_auto_extension	src/sqlite/sqlite3.c	112293;"	d	file:
sqlite3_changegroup	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changegroup	src/sqlite/sqlite3.c	/^struct sqlite3_changegroup {$/;"	s	file:
sqlite3_changegroup	src/sqlite/sqlite3.c	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup	file:
sqlite3_changes	src/include/sqlite/sqlite3ext.h	328;"	d
sqlite3_changes	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	src/sqlite/sqlite3.c	112102;"	d	file:
sqlite3_changeset_iter	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_changeset_iter	src/sqlite/sqlite3.c	/^struct sqlite3_changeset_iter {$/;"	s	file:
sqlite3_changeset_iter	src/sqlite/sqlite3.c	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter	file:
sqlite3_clear_bindings	src/include/sqlite/sqlite3ext.h	441;"	d
sqlite3_clear_bindings	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_clear_bindings	src/sqlite/sqlite3.c	112215;"	d	file:
sqlite3_close	src/include/sqlite/sqlite3ext.h	329;"	d
sqlite3_close	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_close(sqlite3 *db){ return sqlite3Close(db,0); }$/;"	f
sqlite3_close	src/sqlite/sqlite3.c	112103;"	d	file:
sqlite3_close_v2	src/include/sqlite/sqlite3ext.h	502;"	d
sqlite3_close_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_close_v2(sqlite3 *db){ return sqlite3Close(db,1); }$/;"	f
sqlite3_close_v2	src/sqlite/sqlite3.c	112276;"	d	file:
sqlite3_collation_needed	src/include/sqlite/sqlite3ext.h	330;"	d
sqlite3_collation_needed	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	src/sqlite/sqlite3.c	112104;"	d	file:
sqlite3_collation_needed16	src/include/sqlite/sqlite3ext.h	331;"	d
sqlite3_collation_needed16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	src/sqlite/sqlite3.c	112105;"	d	file:
sqlite3_collation_needed16	src/sqlite/sqlite3.c	112365;"	d	file:
sqlite3_column_blob	src/include/sqlite/sqlite3ext.h	332;"	d
sqlite3_column_blob	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_blob	src/sqlite/sqlite3.c	112106;"	d	file:
sqlite3_column_bytes	src/include/sqlite/sqlite3ext.h	333;"	d
sqlite3_column_bytes	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	src/sqlite/sqlite3.c	112107;"	d	file:
sqlite3_column_bytes16	src/include/sqlite/sqlite3ext.h	334;"	d
sqlite3_column_bytes16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	src/sqlite/sqlite3.c	112108;"	d	file:
sqlite3_column_count	src/include/sqlite/sqlite3ext.h	335;"	d
sqlite3_column_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_count	src/sqlite/sqlite3.c	112109;"	d	file:
sqlite3_column_database_name	src/include/sqlite/sqlite3ext.h	336;"	d
sqlite3_column_database_name	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name	src/sqlite/sqlite3.c	112110;"	d	file:
sqlite3_column_database_name	src/sqlite/sqlite3.c	112351;"	d	file:
sqlite3_column_database_name16	src/include/sqlite/sqlite3ext.h	337;"	d
sqlite3_column_database_name16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	src/sqlite/sqlite3.c	112111;"	d	file:
sqlite3_column_database_name16	src/sqlite/sqlite3.c	112352;"	d	file:
sqlite3_column_database_name16	src/sqlite/sqlite3.c	112383;"	d	file:
sqlite3_column_decltype	src/include/sqlite/sqlite3ext.h	338;"	d
sqlite3_column_decltype	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	src/sqlite/sqlite3.c	112112;"	d	file:
sqlite3_column_decltype	src/sqlite/sqlite3.c	112395;"	d	file:
sqlite3_column_decltype16	src/include/sqlite/sqlite3ext.h	339;"	d
sqlite3_column_decltype16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	src/sqlite/sqlite3.c	112113;"	d	file:
sqlite3_column_decltype16	src/sqlite/sqlite3.c	112366;"	d	file:
sqlite3_column_decltype16	src/sqlite/sqlite3.c	112394;"	d	file:
sqlite3_column_double	src/include/sqlite/sqlite3ext.h	340;"	d
sqlite3_column_double	src/sqlite/sqlite3.c	/^SQLITE_API double sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_double	src/sqlite/sqlite3.c	112114;"	d	file:
sqlite3_column_int	src/include/sqlite/sqlite3ext.h	341;"	d
sqlite3_column_int	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	src/sqlite/sqlite3.c	112115;"	d	file:
sqlite3_column_int64	src/include/sqlite/sqlite3ext.h	342;"	d
sqlite3_column_int64	src/sqlite/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	src/sqlite/sqlite3.c	112116;"	d	file:
sqlite3_column_name	src/include/sqlite/sqlite3ext.h	343;"	d
sqlite3_column_name	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name	src/sqlite/sqlite3.c	112117;"	d	file:
sqlite3_column_name16	src/include/sqlite/sqlite3ext.h	344;"	d
sqlite3_column_name16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	src/sqlite/sqlite3.c	112118;"	d	file:
sqlite3_column_name16	src/sqlite/sqlite3.c	112367;"	d	file:
sqlite3_column_origin_name	src/include/sqlite/sqlite3ext.h	345;"	d
sqlite3_column_origin_name	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	src/sqlite/sqlite3.c	112119;"	d	file:
sqlite3_column_origin_name	src/sqlite/sqlite3.c	112355;"	d	file:
sqlite3_column_origin_name16	src/include/sqlite/sqlite3ext.h	346;"	d
sqlite3_column_origin_name16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	src/sqlite/sqlite3.c	112120;"	d	file:
sqlite3_column_origin_name16	src/sqlite/sqlite3.c	112356;"	d	file:
sqlite3_column_origin_name16	src/sqlite/sqlite3.c	112385;"	d	file:
sqlite3_column_table_name	src/include/sqlite/sqlite3ext.h	347;"	d
sqlite3_column_table_name	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	src/sqlite/sqlite3.c	112121;"	d	file:
sqlite3_column_table_name	src/sqlite/sqlite3.c	112353;"	d	file:
sqlite3_column_table_name16	src/include/sqlite/sqlite3ext.h	348;"	d
sqlite3_column_table_name16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	src/sqlite/sqlite3.c	112122;"	d	file:
sqlite3_column_table_name16	src/sqlite/sqlite3.c	112354;"	d	file:
sqlite3_column_table_name16	src/sqlite/sqlite3.c	112384;"	d	file:
sqlite3_column_text	src/include/sqlite/sqlite3ext.h	349;"	d
sqlite3_column_text	src/sqlite/sqlite3.c	/^SQLITE_API const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text	src/sqlite/sqlite3.c	112123;"	d	file:
sqlite3_column_text16	src/include/sqlite/sqlite3ext.h	350;"	d
sqlite3_column_text16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	src/sqlite/sqlite3.c	112124;"	d	file:
sqlite3_column_text16	src/sqlite/sqlite3.c	112368;"	d	file:
sqlite3_column_type	src/include/sqlite/sqlite3ext.h	351;"	d
sqlite3_column_type	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	src/sqlite/sqlite3.c	112125;"	d	file:
sqlite3_column_value	src/include/sqlite/sqlite3ext.h	352;"	d
sqlite3_column_value	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	src/sqlite/sqlite3.c	112126;"	d	file:
sqlite3_commit_hook	src/include/sqlite/sqlite3ext.h	353;"	d
sqlite3_commit_hook	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	src/sqlite/sqlite3.c	112127;"	d	file:
sqlite3_compileoption_get	src/include/sqlite/sqlite3ext.h	482;"	d
sqlite3_compileoption_get	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	src/sqlite/sqlite3.c	112256;"	d	file:
sqlite3_compileoption_used	src/include/sqlite/sqlite3ext.h	483;"	d
sqlite3_compileoption_used	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	src/sqlite/sqlite3.c	112257;"	d	file:
sqlite3_complete	src/include/sqlite/sqlite3ext.h	354;"	d
sqlite3_complete	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	src/sqlite/sqlite3.c	112128;"	d	file:
sqlite3_complete	src/sqlite/sqlite3.c	112389;"	d	file:
sqlite3_complete16	src/include/sqlite/sqlite3ext.h	355;"	d
sqlite3_complete16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	src/sqlite/sqlite3.c	112129;"	d	file:
sqlite3_complete16	src/sqlite/sqlite3.c	112369;"	d	file:
sqlite3_complete16	src/sqlite/sqlite3.c	112390;"	d	file:
sqlite3_config	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_config(int op, ...){$/;"	f
sqlite3_context	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context	src/sqlite/sqlite3.c	/^struct sqlite3_context {$/;"	s	file:
sqlite3_context	src/sqlite/sqlite3.c	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context	file:
sqlite3_context_db_handle	src/include/sqlite/sqlite3ext.h	471;"	d
sqlite3_context_db_handle	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_context_db_handle	src/sqlite/sqlite3.c	112245;"	d	file:
sqlite3_create_collation	src/include/sqlite/sqlite3ext.h	356;"	d
sqlite3_create_collation	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_collation($/;"	f
sqlite3_create_collation	src/sqlite/sqlite3.c	112130;"	d	file:
sqlite3_create_collation16	src/include/sqlite/sqlite3ext.h	357;"	d
sqlite3_create_collation16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	src/sqlite/sqlite3.c	112131;"	d	file:
sqlite3_create_collation16	src/sqlite/sqlite3.c	112370;"	d	file:
sqlite3_create_collation_v2	src/include/sqlite/sqlite3ext.h	448;"	d
sqlite3_create_collation_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	src/sqlite/sqlite3.c	112222;"	d	file:
sqlite3_create_function	src/include/sqlite/sqlite3ext.h	358;"	d
sqlite3_create_function	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_function($/;"	f
sqlite3_create_function	src/sqlite/sqlite3.c	112132;"	d	file:
sqlite3_create_function16	src/include/sqlite/sqlite3ext.h	359;"	d
sqlite3_create_function16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_function16($/;"	f
sqlite3_create_function16	src/sqlite/sqlite3.c	112133;"	d	file:
sqlite3_create_function16	src/sqlite/sqlite3.c	112371;"	d	file:
sqlite3_create_function_v2	src/include/sqlite/sqlite3ext.h	484;"	d
sqlite3_create_function_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	src/sqlite/sqlite3.c	112258;"	d	file:
sqlite3_create_module	src/include/sqlite/sqlite3ext.h	360;"	d
sqlite3_create_module	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_module($/;"	f
sqlite3_create_module	src/sqlite/sqlite3.c	112134;"	d	file:
sqlite3_create_module	src/sqlite/sqlite3.c	112403;"	d	file:
sqlite3_create_module_v2	src/include/sqlite/sqlite3ext.h	361;"	d
sqlite3_create_module_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_create_module_v2($/;"	f
sqlite3_create_module_v2	src/sqlite/sqlite3.c	112135;"	d	file:
sqlite3_create_module_v2	src/sqlite/sqlite3.c	112404;"	d	file:
sqlite3_current_time	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_data_count	src/include/sqlite/sqlite3ext.h	362;"	d
sqlite3_data_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_count	src/sqlite/sqlite3.c	112136;"	d	file:
sqlite3_data_directory	src/include/sqlite/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_data_directory;$/;"	v
sqlite3_data_directory	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_data_directory = 0;$/;"	v
sqlite3_data_directory	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_data_directory;$/;"	v
sqlite3_db_cacheflush	src/include/sqlite/sqlite3ext.h	539;"	d
sqlite3_db_cacheflush	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_db_cacheflush(sqlite3 *db){$/;"	f
sqlite3_db_cacheflush	src/sqlite/sqlite3.c	112313;"	d	file:
sqlite3_db_config	src/include/sqlite/sqlite3ext.h	485;"	d
sqlite3_db_config	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	src/sqlite/sqlite3.c	112259;"	d	file:
sqlite3_db_filename	src/include/sqlite/sqlite3ext.h	503;"	d
sqlite3_db_filename	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_db_filename(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_filename	src/sqlite/sqlite3.c	112277;"	d	file:
sqlite3_db_handle	src/include/sqlite/sqlite3ext.h	363;"	d
sqlite3_db_handle	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_handle	src/sqlite/sqlite3.c	112137;"	d	file:
sqlite3_db_mutex	src/include/sqlite/sqlite3ext.h	486;"	d
sqlite3_db_mutex	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_mutex *sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	src/sqlite/sqlite3.c	112260;"	d	file:
sqlite3_db_readonly	src/include/sqlite/sqlite3ext.h	504;"	d
sqlite3_db_readonly	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_db_readonly(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_readonly	src/sqlite/sqlite3.c	112278;"	d	file:
sqlite3_db_release_memory	src/include/sqlite/sqlite3ext.h	505;"	d
sqlite3_db_release_memory	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_db_release_memory(sqlite3 *db){$/;"	f
sqlite3_db_release_memory	src/sqlite/sqlite3.c	112279;"	d	file:
sqlite3_db_status	src/include/sqlite/sqlite3ext.h	487;"	d
sqlite3_db_status	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_db_status($/;"	f
sqlite3_db_status	src/sqlite/sqlite3.c	112261;"	d	file:
sqlite3_debug_mutex	src/sqlite/sqlite3.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	src/sqlite/sqlite3.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_declare_vtab	src/include/sqlite/sqlite3ext.h	364;"	d
sqlite3_declare_vtab	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_declare_vtab	src/sqlite/sqlite3.c	112138;"	d	file:
sqlite3_declare_vtab	src/sqlite/sqlite3.c	112405;"	d	file:
sqlite3_destructor_type	src/include/sqlite/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_destructor_type	src/sqlite/sqlite3.c	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t	file:
sqlite3_diskfull	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull_pending	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_enable_load_extension	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_shared_cache	src/include/sqlite/sqlite3ext.h	365;"	d
sqlite3_enable_shared_cache	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	src/sqlite/sqlite3.c	112139;"	d	file:
sqlite3_enable_shared_cache	src/sqlite/sqlite3.c	112411;"	d	file:
sqlite3_errcode	src/include/sqlite/sqlite3ext.h	366;"	d
sqlite3_errcode	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	src/sqlite/sqlite3.c	112140;"	d	file:
sqlite3_errmsg	src/include/sqlite/sqlite3ext.h	367;"	d
sqlite3_errmsg	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	src/sqlite/sqlite3.c	112141;"	d	file:
sqlite3_errmsg16	src/include/sqlite/sqlite3ext.h	368;"	d
sqlite3_errmsg16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	src/sqlite/sqlite3.c	112142;"	d	file:
sqlite3_errmsg16	src/sqlite/sqlite3.c	112372;"	d	file:
sqlite3_errstr	src/include/sqlite/sqlite3ext.h	506;"	d
sqlite3_errstr	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_errstr(int rc){$/;"	f
sqlite3_errstr	src/sqlite/sqlite3.c	112280;"	d	file:
sqlite3_exec	src/include/sqlite/sqlite3ext.h	369;"	d
sqlite3_exec	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_exec($/;"	f
sqlite3_exec	src/sqlite/sqlite3.c	112143;"	d	file:
sqlite3_expanded_sql	src/include/sqlite/sqlite3ext.h	544;"	d
sqlite3_expanded_sql	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_expanded_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expanded_sql	src/sqlite/sqlite3.c	112318;"	d	file:
sqlite3_expired	src/include/sqlite/sqlite3ext.h	371;"	d
sqlite3_expired	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	src/sqlite/sqlite3.c	112145;"	d	file:
sqlite3_extended_errcode	src/include/sqlite/sqlite3ext.h	488;"	d
sqlite3_extended_errcode	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	src/sqlite/sqlite3.c	112262;"	d	file:
sqlite3_extended_result_codes	src/include/sqlite/sqlite3ext.h	472;"	d
sqlite3_extended_result_codes	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	src/sqlite/sqlite3.c	112246;"	d	file:
sqlite3_file	src/include/sqlite/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file	src/sqlite/sqlite3.c	/^struct sqlite3_file {$/;"	s	file:
sqlite3_file	src/sqlite/sqlite3.c	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file	file:
sqlite3_file_control	src/include/sqlite/sqlite3ext.h	449;"	d
sqlite3_file_control	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	src/sqlite/sqlite3.c	112223;"	d	file:
sqlite3_finalize	src/include/sqlite/sqlite3ext.h	373;"	d
sqlite3_finalize	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_finalize	src/sqlite/sqlite3.c	112147;"	d	file:
sqlite3_found_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_found_count = 0;$/;"	v
sqlite3_free	src/include/sqlite/sqlite3ext.h	374;"	d
sqlite3_free	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_free(void *p){$/;"	f
sqlite3_free	src/sqlite/sqlite3.c	112148;"	d	file:
sqlite3_free_table	src/include/sqlite/sqlite3ext.h	375;"	d
sqlite3_free_table	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_free_table($/;"	f
sqlite3_free_table	src/sqlite/sqlite3.c	112149;"	d	file:
sqlite3_free_table	src/sqlite/sqlite3.c	112420;"	d	file:
sqlite3_fts3_enable_parentheses	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	src/sqlite/sqlite3.c	153084;"	d	file:
sqlite3_fts3_enable_parentheses	src/sqlite/sqlite3.c	153086;"	d	file:
sqlite3_fts5_may_be_corrupt	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_fts5_may_be_corrupt = 1;$/;"	v
sqlite3_fullsync_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_get_autocommit	src/include/sqlite/sqlite3ext.h	376;"	d
sqlite3_get_autocommit	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	src/sqlite/sqlite3.c	112150;"	d	file:
sqlite3_get_auxdata	src/include/sqlite/sqlite3ext.h	377;"	d
sqlite3_get_auxdata	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_auxdata	src/sqlite/sqlite3.c	112151;"	d	file:
sqlite3_get_table	src/include/sqlite/sqlite3ext.h	378;"	d
sqlite3_get_table	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_get_table($/;"	f
sqlite3_get_table	src/sqlite/sqlite3.c	112152;"	d	file:
sqlite3_get_table	src/sqlite/sqlite3.c	112421;"	d	file:
sqlite3_get_table_cb	src/sqlite/sqlite3.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_global_recover	src/include/sqlite/sqlite3ext.h	380;"	d
sqlite3_global_recover	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	src/sqlite/sqlite3.c	112154;"	d	file:
sqlite3_hostid_num	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_hostid_num = 0;$/;"	v
sqlite3_index_constraint	src/include/sqlite/sqlite3.h	/^struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint	src/sqlite/sqlite3.c	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint_usage	src/include/sqlite/sqlite3.h	/^struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	src/sqlite/sqlite3.c	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_info	src/include/sqlite/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_info	src/sqlite/sqlite3.c	/^struct sqlite3_index_info {$/;"	s	file:
sqlite3_index_info	src/sqlite/sqlite3.c	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info	file:
sqlite3_index_orderby	src/include/sqlite/sqlite3.h	/^struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_index_orderby	src/sqlite/sqlite3.c	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_initialize	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_initialize(void){$/;"	f
sqlite3_int64	src/include/sqlite/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_int64	src/sqlite/sqlite3.c	/^typedef sqlite_int64 sqlite3_int64;$/;"	t	file:
sqlite3_interrupt	src/include/sqlite/sqlite3ext.h	382;"	d
sqlite3_interrupt	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	src/sqlite/sqlite3.c	112156;"	d	file:
sqlite3_interrupt_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_io_error_benign	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_hardhit	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hit	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_pending	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_persist	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_methods	src/include/sqlite/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_io_methods	src/sqlite/sqlite3.c	/^struct sqlite3_io_methods {$/;"	s	file:
sqlite3_io_methods	src/sqlite/sqlite3.c	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods	file:
sqlite3_last_insert_rowid	src/include/sqlite/sqlite3ext.h	383;"	d
sqlite3_last_insert_rowid	src/sqlite/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	src/sqlite/sqlite3.c	112157;"	d	file:
sqlite3_libversion	src/include/sqlite/sqlite3ext.h	384;"	d
sqlite3_libversion	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	src/sqlite/sqlite3.c	112158;"	d	file:
sqlite3_libversion_number	src/include/sqlite/sqlite3ext.h	385;"	d
sqlite3_libversion_number	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	src/sqlite/sqlite3.c	112159;"	d	file:
sqlite3_like_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_like_count = 0;$/;"	v
sqlite3_limit	src/include/sqlite/sqlite3ext.h	473;"	d
sqlite3_limit	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	src/sqlite/sqlite3.c	112247;"	d	file:
sqlite3_load_extension	src/include/sqlite/sqlite3ext.h	520;"	d
sqlite3_load_extension	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_load_extension($/;"	f
sqlite3_load_extension	src/sqlite/sqlite3.c	112294;"	d	file:
sqlite3_loadext_entry	src/include/sqlite/sqlite3ext.h	/^typedef int (*sqlite3_loadext_entry)($/;"	t
sqlite3_loadext_entry	src/sqlite/sqlite3.c	/^typedef int (*sqlite3_loadext_entry)($/;"	t	file:
sqlite3_log	src/include/sqlite/sqlite3ext.h	489;"	d
sqlite3_log	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	src/sqlite/sqlite3.c	112263;"	d	file:
sqlite3_malloc	src/include/sqlite/sqlite3ext.h	386;"	d
sqlite3_malloc	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	src/sqlite/sqlite3.c	112160;"	d	file:
sqlite3_malloc64	src/include/sqlite/sqlite3ext.h	521;"	d
sqlite3_malloc64	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_malloc64(sqlite3_uint64 n){$/;"	f
sqlite3_malloc64	src/sqlite/sqlite3.c	112295;"	d	file:
sqlite3_max_blobsize	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_mem_methods	src/include/sqlite/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_mem_methods	src/sqlite/sqlite3.c	/^struct sqlite3_mem_methods {$/;"	s	file:
sqlite3_mem_methods	src/sqlite/sqlite3.c	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods	file:
sqlite3_memdebug_vfs_oom_test	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memory_alarm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_memory_alarm($/;"	f
sqlite3_memory_highwater	src/include/sqlite/sqlite3ext.h	450;"	d
sqlite3_memory_highwater	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	src/sqlite/sqlite3.c	112224;"	d	file:
sqlite3_memory_used	src/include/sqlite/sqlite3ext.h	451;"	d
sqlite3_memory_used	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	src/sqlite/sqlite3.c	112225;"	d	file:
sqlite3_module	src/include/sqlite/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_module	src/sqlite/sqlite3.c	/^struct sqlite3_module {$/;"	s	file:
sqlite3_module	src/sqlite/sqlite3.c	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module	file:
sqlite3_mprintf	src/include/sqlite/sqlite3ext.h	387;"	d
sqlite3_mprintf	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	src/sqlite/sqlite3.c	112161;"	d	file:
sqlite3_msize	src/include/sqlite/sqlite3ext.h	522;"	d
sqlite3_msize	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_uint64 sqlite3_msize(void *p){$/;"	f
sqlite3_msize	src/sqlite/sqlite3.c	112296;"	d	file:
sqlite3_mutex	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex	src/sqlite/sqlite3.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	src/sqlite/sqlite3.c	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex	file:
sqlite3_mutex_alloc	src/include/sqlite/sqlite3ext.h	452;"	d
sqlite3_mutex_alloc	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_mutex *sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	src/sqlite/sqlite3.c	112226;"	d	file:
sqlite3_mutex_alloc	src/sqlite/sqlite3.c	14740;"	d	file:
sqlite3_mutex_enter	src/include/sqlite/sqlite3ext.h	453;"	d
sqlite3_mutex_enter	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	src/sqlite/sqlite3.c	112227;"	d	file:
sqlite3_mutex_enter	src/sqlite/sqlite3.c	14742;"	d	file:
sqlite3_mutex_free	src/include/sqlite/sqlite3ext.h	454;"	d
sqlite3_mutex_free	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	src/sqlite/sqlite3.c	112228;"	d	file:
sqlite3_mutex_free	src/sqlite/sqlite3.c	14741;"	d	file:
sqlite3_mutex_held	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	src/sqlite/sqlite3.c	14745;"	d	file:
sqlite3_mutex_leave	src/include/sqlite/sqlite3ext.h	455;"	d
sqlite3_mutex_leave	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	src/sqlite/sqlite3.c	112229;"	d	file:
sqlite3_mutex_leave	src/sqlite/sqlite3.c	14744;"	d	file:
sqlite3_mutex_methods	src/include/sqlite/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_methods	src/sqlite/sqlite3.c	/^struct sqlite3_mutex_methods {$/;"	s	file:
sqlite3_mutex_methods	src/sqlite/sqlite3.c	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods	file:
sqlite3_mutex_notheld	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	src/sqlite/sqlite3.c	14746;"	d	file:
sqlite3_mutex_try	src/include/sqlite/sqlite3ext.h	456;"	d
sqlite3_mutex_try	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	src/sqlite/sqlite3.c	112230;"	d	file:
sqlite3_mutex_try	src/sqlite/sqlite3.c	14743;"	d	file:
sqlite3_next_stmt	src/include/sqlite/sqlite3ext.h	474;"	d
sqlite3_next_stmt	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_next_stmt	src/sqlite/sqlite3.c	112248;"	d	file:
sqlite3_open	src/include/sqlite/sqlite3ext.h	388;"	d
sqlite3_open	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_open($/;"	f
sqlite3_open	src/sqlite/sqlite3.c	112162;"	d	file:
sqlite3_open16	src/include/sqlite/sqlite3ext.h	389;"	d
sqlite3_open16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_open16($/;"	f
sqlite3_open16	src/sqlite/sqlite3.c	112163;"	d	file:
sqlite3_open16	src/sqlite/sqlite3.c	112373;"	d	file:
sqlite3_open_file_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_v2	src/include/sqlite/sqlite3ext.h	457;"	d
sqlite3_open_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_open_v2($/;"	f
sqlite3_open_v2	src/sqlite/sqlite3.c	112231;"	d	file:
sqlite3_opentemp_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_os_end	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_os_end(void){$/;"	f
sqlite3_os_init	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_os_init(void){$/;"	f
sqlite3_os_type	src/sqlite/sqlite3.c	/^SQLITE_API LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	src/sqlite/sqlite3.c	/^static LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v	file:
sqlite3_overload_function	src/include/sqlite/sqlite3ext.h	438;"	d
sqlite3_overload_function	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_overload_function($/;"	f
sqlite3_overload_function	src/sqlite/sqlite3.c	112212;"	d	file:
sqlite3_pager_readdb_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_writedb_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writej_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pcache	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache	src/sqlite/sqlite3.c	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache	file:
sqlite3_pcache_methods	src/include/sqlite/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods	src/sqlite/sqlite3.c	/^struct sqlite3_pcache_methods {$/;"	s	file:
sqlite3_pcache_methods	src/sqlite/sqlite3.c	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods	file:
sqlite3_pcache_methods2	src/include/sqlite/sqlite3.h	/^struct sqlite3_pcache_methods2 {$/;"	s
sqlite3_pcache_methods2	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2
sqlite3_pcache_methods2	src/sqlite/sqlite3.c	/^struct sqlite3_pcache_methods2 {$/;"	s	file:
sqlite3_pcache_methods2	src/sqlite/sqlite3.c	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2	file:
sqlite3_pcache_page	src/include/sqlite/sqlite3.h	/^struct sqlite3_pcache_page {$/;"	s
sqlite3_pcache_page	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page
sqlite3_pcache_page	src/sqlite/sqlite3.c	/^struct sqlite3_pcache_page {$/;"	s	file:
sqlite3_pcache_page	src/sqlite/sqlite3.c	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page	file:
sqlite3_prepare	src/include/sqlite/sqlite3ext.h	390;"	d
sqlite3_prepare	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_prepare($/;"	f
sqlite3_prepare	src/sqlite/sqlite3.c	112164;"	d	file:
sqlite3_prepare16	src/include/sqlite/sqlite3ext.h	391;"	d
sqlite3_prepare16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_prepare16($/;"	f
sqlite3_prepare16	src/sqlite/sqlite3.c	112165;"	d	file:
sqlite3_prepare16	src/sqlite/sqlite3.c	112374;"	d	file:
sqlite3_prepare16_v2	src/include/sqlite/sqlite3ext.h	393;"	d
sqlite3_prepare16_v2	src/include/sqlite/sqlite3ext.h	440;"	d
sqlite3_prepare16_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	src/sqlite/sqlite3.c	112167;"	d	file:
sqlite3_prepare16_v2	src/sqlite/sqlite3.c	112214;"	d	file:
sqlite3_prepare16_v2	src/sqlite/sqlite3.c	112375;"	d	file:
sqlite3_prepare16_v3	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_prepare16_v3($/;"	f
sqlite3_prepare_v2	src/include/sqlite/sqlite3ext.h	392;"	d
sqlite3_prepare_v2	src/include/sqlite/sqlite3ext.h	439;"	d
sqlite3_prepare_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	src/sqlite/sqlite3.c	112166;"	d	file:
sqlite3_prepare_v2	src/sqlite/sqlite3.c	112213;"	d	file:
sqlite3_prepare_v3	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_prepare_v3($/;"	f
sqlite3_preupdate_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_preupdate_count(sqlite3 *db){$/;"	f
sqlite3_preupdate_depth	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_preupdate_depth(sqlite3 *db){$/;"	f
sqlite3_preupdate_hook	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_preupdate_hook($/;"	f
sqlite3_preupdate_new	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_preupdate_new(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_preupdate_old	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_preupdate_old(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_profile	src/include/sqlite/sqlite3ext.h	394;"	d
sqlite3_profile	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_profile($/;"	f
sqlite3_profile	src/sqlite/sqlite3.c	112168;"	d	file:
sqlite3_profile	src/sqlite/sqlite3.c	112415;"	d	file:
sqlite3_progress_handler	src/include/sqlite/sqlite3ext.h	395;"	d
sqlite3_progress_handler	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	src/sqlite/sqlite3.c	112169;"	d	file:
sqlite3_progress_handler	src/sqlite/sqlite3.c	112399;"	d	file:
sqlite3_randomness	src/include/sqlite/sqlite3ext.h	470;"	d
sqlite3_randomness	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	src/sqlite/sqlite3.c	112244;"	d	file:
sqlite3_realloc	src/include/sqlite/sqlite3ext.h	396;"	d
sqlite3_realloc	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	src/sqlite/sqlite3.c	112170;"	d	file:
sqlite3_realloc64	src/include/sqlite/sqlite3ext.h	523;"	d
sqlite3_realloc64	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_realloc64(void *pOld, sqlite3_uint64 n){$/;"	f
sqlite3_realloc64	src/sqlite/sqlite3.c	112297;"	d	file:
sqlite3_release_memory	src/include/sqlite/sqlite3ext.h	458;"	d
sqlite3_release_memory	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	src/sqlite/sqlite3.c	112232;"	d	file:
sqlite3_reset	src/include/sqlite/sqlite3ext.h	397;"	d
sqlite3_reset	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset	src/sqlite/sqlite3.c	112171;"	d	file:
sqlite3_reset_auto_extension	src/include/sqlite/sqlite3ext.h	524;"	d
sqlite3_reset_auto_extension	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_reset_auto_extension	src/sqlite/sqlite3.c	112298;"	d	file:
sqlite3_result_blob	src/include/sqlite/sqlite3ext.h	398;"	d
sqlite3_result_blob	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_blob($/;"	f
sqlite3_result_blob	src/sqlite/sqlite3.c	112172;"	d	file:
sqlite3_result_blob64	src/include/sqlite/sqlite3ext.h	525;"	d
sqlite3_result_blob64	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_blob64($/;"	f
sqlite3_result_blob64	src/sqlite/sqlite3.c	112299;"	d	file:
sqlite3_result_double	src/include/sqlite/sqlite3ext.h	399;"	d
sqlite3_result_double	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_double	src/sqlite/sqlite3.c	112173;"	d	file:
sqlite3_result_error	src/include/sqlite/sqlite3ext.h	400;"	d
sqlite3_result_error	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error	src/sqlite/sqlite3.c	112174;"	d	file:
sqlite3_result_error16	src/include/sqlite/sqlite3ext.h	401;"	d
sqlite3_result_error16	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error16	src/sqlite/sqlite3.c	112175;"	d	file:
sqlite3_result_error16	src/sqlite/sqlite3.c	112376;"	d	file:
sqlite3_result_error_code	src/include/sqlite/sqlite3ext.h	468;"	d
sqlite3_result_error_code	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_code	src/sqlite/sqlite3.c	112242;"	d	file:
sqlite3_result_error_nomem	src/include/sqlite/sqlite3ext.h	459;"	d
sqlite3_result_error_nomem	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_nomem	src/sqlite/sqlite3.c	112233;"	d	file:
sqlite3_result_error_toobig	src/include/sqlite/sqlite3ext.h	460;"	d
sqlite3_result_error_toobig	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	src/sqlite/sqlite3.c	112234;"	d	file:
sqlite3_result_int	src/include/sqlite/sqlite3ext.h	402;"	d
sqlite3_result_int	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int	src/sqlite/sqlite3.c	112176;"	d	file:
sqlite3_result_int64	src/include/sqlite/sqlite3ext.h	403;"	d
sqlite3_result_int64	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_int64	src/sqlite/sqlite3.c	112177;"	d	file:
sqlite3_result_null	src/include/sqlite/sqlite3ext.h	404;"	d
sqlite3_result_null	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_null	src/sqlite/sqlite3.c	112178;"	d	file:
sqlite3_result_subtype	src/include/sqlite/sqlite3ext.h	535;"	d
sqlite3_result_subtype	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_subtype(sqlite3_context *pCtx, unsigned int eSubtype){$/;"	f
sqlite3_result_subtype	src/sqlite/sqlite3.c	112309;"	d	file:
sqlite3_result_text	src/include/sqlite/sqlite3ext.h	405;"	d
sqlite3_result_text	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_text($/;"	f
sqlite3_result_text	src/sqlite/sqlite3.c	112179;"	d	file:
sqlite3_result_text16	src/include/sqlite/sqlite3ext.h	406;"	d
sqlite3_result_text16	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_text16($/;"	f
sqlite3_result_text16	src/sqlite/sqlite3.c	112180;"	d	file:
sqlite3_result_text16	src/sqlite/sqlite3.c	112377;"	d	file:
sqlite3_result_text16be	src/include/sqlite/sqlite3ext.h	407;"	d
sqlite3_result_text16be	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_text16be($/;"	f
sqlite3_result_text16be	src/sqlite/sqlite3.c	112181;"	d	file:
sqlite3_result_text16be	src/sqlite/sqlite3.c	112378;"	d	file:
sqlite3_result_text16le	src/include/sqlite/sqlite3ext.h	408;"	d
sqlite3_result_text16le	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_text16le($/;"	f
sqlite3_result_text16le	src/sqlite/sqlite3.c	112182;"	d	file:
sqlite3_result_text16le	src/sqlite/sqlite3.c	112379;"	d	file:
sqlite3_result_text64	src/include/sqlite/sqlite3ext.h	526;"	d
sqlite3_result_text64	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_text64($/;"	f
sqlite3_result_text64	src/sqlite/sqlite3.c	112300;"	d	file:
sqlite3_result_value	src/include/sqlite/sqlite3ext.h	409;"	d
sqlite3_result_value	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_value	src/sqlite/sqlite3.c	112183;"	d	file:
sqlite3_result_zeroblob	src/include/sqlite/sqlite3ext.h	467;"	d
sqlite3_result_zeroblob	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob	src/sqlite/sqlite3.c	112241;"	d	file:
sqlite3_result_zeroblob64	src/include/sqlite/sqlite3ext.h	531;"	d
sqlite3_result_zeroblob64	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_result_zeroblob64(sqlite3_context *pCtx, u64 n){$/;"	f
sqlite3_result_zeroblob64	src/sqlite/sqlite3.c	112305;"	d	file:
sqlite3_rollback_hook	src/include/sqlite/sqlite3ext.h	410;"	d
sqlite3_rollback_hook	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	src/sqlite/sqlite3.c	112184;"	d	file:
sqlite3_rtree_dbl	src/include/sqlite/sqlite3.h	/^typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	src/include/sqlite/sqlite3.h	/^typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	src/sqlite/sqlite3.c	/^  typedef double sqlite3_rtree_dbl;$/;"	t	file:
sqlite3_rtree_dbl	src/sqlite/sqlite3.c	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t	file:
sqlite3_rtree_geometry	src/include/sqlite/sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry	src/sqlite/sqlite3.c	/^struct sqlite3_rtree_geometry {$/;"	s	file:
sqlite3_rtree_geometry	src/sqlite/sqlite3.c	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry	file:
sqlite3_rtree_geometry_callback	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_rtree_geometry_callback($/;"	f
sqlite3_rtree_query_callback	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_rtree_query_callback($/;"	f
sqlite3_rtree_query_info	src/include/sqlite/sqlite3.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_rtree_query_info	src/sqlite/sqlite3.c	/^struct sqlite3_rtree_query_info {$/;"	s	file:
sqlite3_rtree_query_info	src/sqlite/sqlite3.c	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info	file:
sqlite3_search_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_search_count = 0;$/;"	v
sqlite3_session	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_session	src/sqlite/sqlite3.c	/^struct sqlite3_session {$/;"	s	file:
sqlite3_session	src/sqlite/sqlite3.c	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session	file:
sqlite3_set_authorizer	src/include/sqlite/sqlite3ext.h	411;"	d
sqlite3_set_authorizer	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	src/sqlite/sqlite3.c	112185;"	d	file:
sqlite3_set_authorizer	src/sqlite/sqlite3.c	112360;"	d	file:
sqlite3_set_auxdata	src/include/sqlite/sqlite3ext.h	412;"	d
sqlite3_set_auxdata	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_set_auxdata($/;"	f
sqlite3_set_auxdata	src/sqlite/sqlite3.c	112186;"	d	file:
sqlite3_set_last_insert_rowid	src/include/sqlite/sqlite3ext.h	546;"	d
sqlite3_set_last_insert_rowid	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_set_last_insert_rowid(sqlite3 *db, sqlite3_int64 iRowid){$/;"	f
sqlite3_set_last_insert_rowid	src/sqlite/sqlite3.c	112320;"	d	file:
sqlite3_shutdown	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_shutdown(void){$/;"	f
sqlite3_sleep	src/include/sqlite/sqlite3ext.h	461;"	d
sqlite3_sleep	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	src/sqlite/sqlite3.c	112235;"	d	file:
sqlite3_snapshot	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_snapshot {$/;"	s
sqlite3_snapshot	src/include/sqlite/sqlite3.h	/^} sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot
sqlite3_snapshot	src/sqlite/sqlite3.c	/^typedef struct sqlite3_snapshot {$/;"	s	file:
sqlite3_snapshot	src/sqlite/sqlite3.c	/^} sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot	file:
sqlite3_snapshot_cmp	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_snapshot_cmp(sqlite3_snapshot *p1, sqlite3_snapshot *p2){$/;"	f
sqlite3_snapshot_free	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_snapshot_free(sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3_snapshot_get	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_snapshot_get($/;"	f
sqlite3_snapshot_open	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_snapshot_open($/;"	f
sqlite3_snapshot_recover	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_snapshot_recover(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_snprintf	src/include/sqlite/sqlite3ext.h	413;"	d
sqlite3_snprintf	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	src/sqlite/sqlite3.c	112187;"	d	file:
sqlite3_soft_heap_limit	src/include/sqlite/sqlite3ext.h	462;"	d
sqlite3_soft_heap_limit	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	src/sqlite/sqlite3.c	112236;"	d	file:
sqlite3_soft_heap_limit64	src/include/sqlite/sqlite3ext.h	490;"	d
sqlite3_soft_heap_limit64	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	src/sqlite/sqlite3.c	112264;"	d	file:
sqlite3_sort_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_sort_count = 0;$/;"	v
sqlite3_sourceid	src/include/sqlite/sqlite3ext.h	491;"	d
sqlite3_sourceid	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	src/sqlite/sqlite3.c	112265;"	d	file:
sqlite3_sql	src/include/sqlite/sqlite3ext.h	475;"	d
sqlite3_sql	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_sql	src/sqlite/sqlite3.c	112249;"	d	file:
sqlite3_status	src/include/sqlite/sqlite3ext.h	476;"	d
sqlite3_status	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status	src/sqlite/sqlite3.c	112250;"	d	file:
sqlite3_status64	src/include/sqlite/sqlite3ext.h	537;"	d
sqlite3_status64	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_status64($/;"	f
sqlite3_status64	src/sqlite/sqlite3.c	112311;"	d	file:
sqlite3_step	src/include/sqlite/sqlite3ext.h	414;"	d
sqlite3_step	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_step	src/sqlite/sqlite3.c	112188;"	d	file:
sqlite3_stmt	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt	src/sqlite/sqlite3.c	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt	file:
sqlite3_stmt_busy	src/include/sqlite/sqlite3ext.h	507;"	d
sqlite3_stmt_busy	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_stmt_busy(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_busy	src/sqlite/sqlite3.c	112281;"	d	file:
sqlite3_stmt_readonly	src/include/sqlite/sqlite3ext.h	508;"	d
sqlite3_stmt_readonly	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_readonly	src/sqlite/sqlite3.c	112282;"	d	file:
sqlite3_stmt_scanstatus	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_stmt_scanstatus($/;"	f
sqlite3_stmt_scanstatus_reset	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_stmt_scanstatus_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_status	src/include/sqlite/sqlite3ext.h	492;"	d
sqlite3_stmt_status	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_stmt_status	src/sqlite/sqlite3.c	112266;"	d	file:
sqlite3_strglob	src/include/sqlite/sqlite3ext.h	527;"	d
sqlite3_strglob	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_strglob(const char *zGlobPattern, const char *zString){$/;"	f
sqlite3_strglob	src/sqlite/sqlite3.c	112301;"	d	file:
sqlite3_stricmp	src/include/sqlite/sqlite3ext.h	509;"	d
sqlite3_stricmp	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_stricmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3_stricmp	src/sqlite/sqlite3.c	112283;"	d	file:
sqlite3_strlike	src/include/sqlite/sqlite3ext.h	538;"	d
sqlite3_strlike	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){$/;"	f
sqlite3_strlike	src/sqlite/sqlite3.c	112312;"	d	file:
sqlite3_strnicmp	src/include/sqlite/sqlite3ext.h	493;"	d
sqlite3_strnicmp	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_strnicmp	src/sqlite/sqlite3.c	112267;"	d	file:
sqlite3_sync_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_sync_count = 0;$/;"	v
sqlite3_syscall_ptr	src/include/sqlite/sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_syscall_ptr	src/sqlite/sqlite3.c	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t	file:
sqlite3_system_errno	src/include/sqlite/sqlite3ext.h	541;"	d
sqlite3_system_errno	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_system_errno(sqlite3 *db){$/;"	f
sqlite3_system_errno	src/sqlite/sqlite3.c	112315;"	d	file:
sqlite3_table_column_metadata	src/include/sqlite/sqlite3ext.h	415;"	d
sqlite3_table_column_metadata	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	src/sqlite/sqlite3.c	112189;"	d	file:
sqlite3_temp_directory	src/include/sqlite/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_temp_directory	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	src/include/sqlite/sqlite3ext.h	469;"	d
sqlite3_test_control	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	src/sqlite/sqlite3.c	112243;"	d	file:
sqlite3_thread_cleanup	src/include/sqlite/sqlite3ext.h	416;"	d
sqlite3_thread_cleanup	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	src/sqlite/sqlite3.c	112190;"	d	file:
sqlite3_threadsafe	src/include/sqlite/sqlite3ext.h	466;"	d
sqlite3_threadsafe	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	src/sqlite/sqlite3.c	112240;"	d	file:
sqlite3_tokenizer	src/sqlite/sqlite3.c	/^struct sqlite3_tokenizer {$/;"	s	file:
sqlite3_tokenizer	src/sqlite/sqlite3.c	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer	file:
sqlite3_tokenizer_cursor	src/sqlite/sqlite3.c	/^struct sqlite3_tokenizer_cursor {$/;"	s	file:
sqlite3_tokenizer_cursor	src/sqlite/sqlite3.c	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor	file:
sqlite3_tokenizer_module	src/sqlite/sqlite3.c	/^struct sqlite3_tokenizer_module {$/;"	s	file:
sqlite3_tokenizer_module	src/sqlite/sqlite3.c	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module	file:
sqlite3_total_changes	src/include/sqlite/sqlite3ext.h	417;"	d
sqlite3_total_changes	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	src/sqlite/sqlite3.c	112191;"	d	file:
sqlite3_trace	src/include/sqlite/sqlite3ext.h	418;"	d
sqlite3_trace	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_trace(sqlite3 *db, void(*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	src/sqlite/sqlite3.c	112192;"	d	file:
sqlite3_trace	src/sqlite/sqlite3.c	112416;"	d	file:
sqlite3_trace_v2	src/include/sqlite/sqlite3ext.h	543;"	d
sqlite3_trace_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_trace_v2($/;"	f
sqlite3_trace_v2	src/sqlite/sqlite3.c	112317;"	d	file:
sqlite3_trace_v2	src/sqlite/sqlite3.c	112435;"	d	file:
sqlite3_transfer_bindings	src/include/sqlite/sqlite3ext.h	420;"	d
sqlite3_transfer_bindings	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_transfer_bindings	src/sqlite/sqlite3.c	112194;"	d	file:
sqlite3_uint64	src/include/sqlite/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_uint64	src/sqlite/sqlite3.c	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t	file:
sqlite3_unlock_notify	src/include/sqlite/sqlite3ext.h	494;"	d
sqlite3_unlock_notify	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	src/sqlite/sqlite3.c	112268;"	d	file:
sqlite3_update_hook	src/include/sqlite/sqlite3ext.h	422;"	d
sqlite3_update_hook	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_update_hook($/;"	f
sqlite3_update_hook	src/sqlite/sqlite3.c	112196;"	d	file:
sqlite3_uri_boolean	src/include/sqlite/sqlite3ext.h	510;"	d
sqlite3_uri_boolean	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){$/;"	f
sqlite3_uri_boolean	src/sqlite/sqlite3.c	112284;"	d	file:
sqlite3_uri_int64	src/include/sqlite/sqlite3ext.h	511;"	d
sqlite3_uri_int64	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_uri_int64($/;"	f
sqlite3_uri_int64	src/sqlite/sqlite3.c	112285;"	d	file:
sqlite3_uri_parameter	src/include/sqlite/sqlite3ext.h	512;"	d
sqlite3_uri_parameter	src/sqlite/sqlite3.c	/^SQLITE_API const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_uri_parameter	src/sqlite/sqlite3.c	112286;"	d	file:
sqlite3_uri_vsnprintf	src/include/sqlite/sqlite3ext.h	513;"	d
sqlite3_uri_vsnprintf	src/sqlite/sqlite3.c	112287;"	d	file:
sqlite3_user_data	src/include/sqlite/sqlite3ext.h	423;"	d
sqlite3_user_data	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_data	src/sqlite/sqlite3.c	112197;"	d	file:
sqlite3_userauth	src/sqlite/sqlite3.c	/^struct sqlite3_userauth {$/;"	s	file:
sqlite3_userauth	src/sqlite/sqlite3.c	/^typedef struct sqlite3_userauth sqlite3_userauth;$/;"	t	typeref:struct:sqlite3_userauth	file:
sqlite3_value	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_value sqlite3_value;$/;"	t	typeref:struct:sqlite3_value
sqlite3_value	src/sqlite/sqlite3.c	/^struct sqlite3_value {$/;"	s	file:
sqlite3_value	src/sqlite/sqlite3.c	/^typedef struct sqlite3_value sqlite3_value;$/;"	t	typeref:struct:sqlite3_value	file:
sqlite3_value_blob	src/include/sqlite/sqlite3ext.h	424;"	d
sqlite3_value_blob	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_blob	src/sqlite/sqlite3.c	112198;"	d	file:
sqlite3_value_bytes	src/include/sqlite/sqlite3ext.h	425;"	d
sqlite3_value_bytes	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	src/sqlite/sqlite3.c	112199;"	d	file:
sqlite3_value_bytes16	src/include/sqlite/sqlite3ext.h	426;"	d
sqlite3_value_bytes16	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	src/sqlite/sqlite3.c	112200;"	d	file:
sqlite3_value_double	src/include/sqlite/sqlite3ext.h	427;"	d
sqlite3_value_double	src/sqlite/sqlite3.c	/^SQLITE_API double sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	src/sqlite/sqlite3.c	112201;"	d	file:
sqlite3_value_dup	src/include/sqlite/sqlite3ext.h	529;"	d
sqlite3_value_dup	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_value *sqlite3_value_dup(const sqlite3_value *pOrig){$/;"	f
sqlite3_value_dup	src/sqlite/sqlite3.c	112303;"	d	file:
sqlite3_value_free	src/include/sqlite/sqlite3ext.h	530;"	d
sqlite3_value_free	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_value_free(sqlite3_value *pOld){$/;"	f
sqlite3_value_free	src/sqlite/sqlite3.c	112304;"	d	file:
sqlite3_value_int	src/include/sqlite/sqlite3ext.h	428;"	d
sqlite3_value_int	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int	src/sqlite/sqlite3.c	112202;"	d	file:
sqlite3_value_int64	src/include/sqlite/sqlite3ext.h	429;"	d
sqlite3_value_int64	src/sqlite/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	src/sqlite/sqlite3.c	112203;"	d	file:
sqlite3_value_numeric_type	src/include/sqlite/sqlite3ext.h	430;"	d
sqlite3_value_numeric_type	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	src/sqlite/sqlite3.c	112204;"	d	file:
sqlite3_value_subtype	src/include/sqlite/sqlite3ext.h	534;"	d
sqlite3_value_subtype	src/sqlite/sqlite3.c	/^SQLITE_API unsigned int sqlite3_value_subtype(sqlite3_value *pVal){$/;"	f
sqlite3_value_subtype	src/sqlite/sqlite3.c	112308;"	d	file:
sqlite3_value_text	src/include/sqlite/sqlite3ext.h	431;"	d
sqlite3_value_text	src/sqlite/sqlite3.c	/^SQLITE_API const unsigned char *sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	src/sqlite/sqlite3.c	112205;"	d	file:
sqlite3_value_text16	src/include/sqlite/sqlite3ext.h	432;"	d
sqlite3_value_text16	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16	src/sqlite/sqlite3.c	112206;"	d	file:
sqlite3_value_text16	src/sqlite/sqlite3.c	112380;"	d	file:
sqlite3_value_text16be	src/include/sqlite/sqlite3ext.h	433;"	d
sqlite3_value_text16be	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16be	src/sqlite/sqlite3.c	112207;"	d	file:
sqlite3_value_text16be	src/sqlite/sqlite3.c	112381;"	d	file:
sqlite3_value_text16le	src/include/sqlite/sqlite3ext.h	434;"	d
sqlite3_value_text16le	src/sqlite/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	src/sqlite/sqlite3.c	112208;"	d	file:
sqlite3_value_text16le	src/sqlite/sqlite3.c	112382;"	d	file:
sqlite3_value_type	src/include/sqlite/sqlite3ext.h	435;"	d
sqlite3_value_type	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_value_type	src/sqlite/sqlite3.c	112209;"	d	file:
sqlite3_version	src/include/sqlite/sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_version	src/sqlite/sqlite3.c	/^SQLITE_API const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_vfs	src/include/sqlite/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs	src/sqlite/sqlite3.c	/^struct sqlite3_vfs {$/;"	s	file:
sqlite3_vfs	src/sqlite/sqlite3.c	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs	file:
sqlite3_vfs_find	src/include/sqlite/sqlite3ext.h	463;"	d
sqlite3_vfs_find	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	src/sqlite/sqlite3.c	112237;"	d	file:
sqlite3_vfs_register	src/include/sqlite/sqlite3ext.h	464;"	d
sqlite3_vfs_register	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	src/sqlite/sqlite3.c	112238;"	d	file:
sqlite3_vfs_unregister	src/include/sqlite/sqlite3ext.h	465;"	d
sqlite3_vfs_unregister	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	src/sqlite/sqlite3.c	112239;"	d	file:
sqlite3_vmprintf	src/include/sqlite/sqlite3ext.h	436;"	d
sqlite3_vmprintf	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	src/sqlite/sqlite3.c	112210;"	d	file:
sqlite3_vsnprintf	src/include/sqlite/sqlite3ext.h	437;"	d
sqlite3_vsnprintf	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vsnprintf	src/sqlite/sqlite3.c	112211;"	d	file:
sqlite3_vtab	src/include/sqlite/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab	src/sqlite/sqlite3.c	/^struct sqlite3_vtab {$/;"	s	file:
sqlite3_vtab	src/sqlite/sqlite3.c	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab	file:
sqlite3_vtab_config	src/include/sqlite/sqlite3ext.h	499;"	d
sqlite3_vtab_config	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_config	src/sqlite/sqlite3.c	112273;"	d	file:
sqlite3_vtab_config	src/sqlite/sqlite3.c	112406;"	d	file:
sqlite3_vtab_cursor	src/include/sqlite/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	src/include/sqlite/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_cursor	src/sqlite/sqlite3.c	/^struct sqlite3_vtab_cursor {$/;"	s	file:
sqlite3_vtab_cursor	src/sqlite/sqlite3.c	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor	file:
sqlite3_vtab_on_conflict	src/include/sqlite/sqlite3ext.h	500;"	d
sqlite3_vtab_on_conflict	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_vtab_on_conflict	src/sqlite/sqlite3.c	112274;"	d	file:
sqlite3_vtab_on_conflict	src/sqlite/sqlite3.c	112407;"	d	file:
sqlite3_vtable_init	src/vtable/virtual_table.cpp	/^    extern "C" int sqlite3_vtable_init(sqlite3 *db, char **pzErrMsg,$/;"	f	namespace:cmudb
sqlite3_wal_autocheckpoint	src/include/sqlite/sqlite3ext.h	495;"	d
sqlite3_wal_autocheckpoint	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	src/sqlite/sqlite3.c	112269;"	d	file:
sqlite3_wal_checkpoint	src/include/sqlite/sqlite3ext.h	496;"	d
sqlite3_wal_checkpoint	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	src/sqlite/sqlite3.c	112270;"	d	file:
sqlite3_wal_checkpoint_v2	src/include/sqlite/sqlite3ext.h	514;"	d
sqlite3_wal_checkpoint_v2	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_checkpoint_v2	src/sqlite/sqlite3.c	112288;"	d	file:
sqlite3_wal_hook	src/include/sqlite/sqlite3ext.h	497;"	d
sqlite3_wal_hook	src/sqlite/sqlite3.c	/^SQLITE_API void *sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	src/sqlite/sqlite3.c	112271;"	d	file:
sqlite3_win32_compact_heap	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_win32_compact_heap(LPUINT pnLargest){$/;"	f
sqlite3_win32_is_nt	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_win32_is_nt(void){$/;"	f
sqlite3_win32_mbcs_to_utf8	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_win32_mbcs_to_utf8(const char *zText){$/;"	f
sqlite3_win32_mbcs_to_utf8_v2	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_win32_mbcs_to_utf8_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_reset_heap	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_win32_reset_heap(){$/;"	f
sqlite3_win32_set_directory	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_win32_set_directory(DWORD type, LPCWSTR zValue){$/;"	f
sqlite3_win32_sleep	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_win32_sleep(DWORD milliseconds){$/;"	f
sqlite3_win32_unicode_to_utf8	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_win32_unicode_to_utf8(LPCWSTR zWideText){$/;"	f
sqlite3_win32_utf8_to_mbcs	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_win32_utf8_to_mbcs(const char *zText){$/;"	f
sqlite3_win32_utf8_to_mbcs_v2	src/sqlite/sqlite3.c	/^SQLITE_API char *sqlite3_win32_utf8_to_mbcs_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_utf8_to_unicode	src/sqlite/sqlite3.c	/^SQLITE_API LPWSTR sqlite3_win32_utf8_to_unicode(const char *zText){$/;"	f
sqlite3_win32_write_debug	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3_win32_write_debug(const char *zBuf, int nBuf){$/;"	f
sqlite3_xauth	src/sqlite/sqlite3.c	/^  typedef int (*sqlite3_xauth)(void*,int,const char*,const char*,const char*,$/;"	t	file:
sqlite3_xferopt_count	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3_xferopt_count;$/;"	v
sqlite3azCompileOpt	src/sqlite/sqlite3.c	/^static const char * const sqlite3azCompileOpt[] = {$/;"	v	file:
sqlite3changegroup_add	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changegroup_add(sqlite3_changegroup *pGrp, int nData, void *pData){$/;"	f
sqlite3changegroup_add_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changegroup_add_strm($/;"	f
sqlite3changegroup_delete	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3changegroup_delete(sqlite3_changegroup *pGrp){$/;"	f
sqlite3changegroup_new	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changegroup_new(sqlite3_changegroup **pp){$/;"	f
sqlite3changegroup_output	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changegroup_output($/;"	f
sqlite3changegroup_output_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changegroup_output_strm($/;"	f
sqlite3changeset_apply	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_apply($/;"	f
sqlite3changeset_apply_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_apply_strm($/;"	f
sqlite3changeset_concat	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_concat($/;"	f
sqlite3changeset_concat_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_concat_strm($/;"	f
sqlite3changeset_conflict	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_conflict($/;"	f
sqlite3changeset_finalize	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_finalize(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_fk_conflicts	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_fk_conflicts($/;"	f
sqlite3changeset_invert	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_invert($/;"	f
sqlite3changeset_invert_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_invert_strm($/;"	f
sqlite3changeset_new	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_new($/;"	f
sqlite3changeset_next	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_next(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_old	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_old($/;"	f
sqlite3changeset_op	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_op($/;"	f
sqlite3changeset_pk	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_pk($/;"	f
sqlite3changeset_start	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_start($/;"	f
sqlite3changeset_start_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3changeset_start_strm($/;"	f
sqlite3one	src/sqlite/sqlite3.c	/^  const int sqlite3one = 1;$/;"	v
sqlite3one	src/sqlite/sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one = 1;$/;"	v
sqlite3rbu	src/sqlite/sqlite3.c	/^struct sqlite3rbu {$/;"	s	file:
sqlite3rbu	src/sqlite/sqlite3.c	/^typedef struct sqlite3rbu sqlite3rbu;$/;"	t	typeref:struct:sqlite3rbu	file:
sqlite3rbu_bp_progress	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3rbu_bp_progress(sqlite3rbu *p, int *pnOne, int *pnTwo){$/;"	f
sqlite3rbu_close	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3rbu_close(sqlite3rbu *p, char **pzErrmsg){$/;"	f
sqlite3rbu_create_vfs	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3rbu_create_vfs(const char *zName, const char *zParent){$/;"	f
sqlite3rbu_db	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3rbu_db(sqlite3rbu *pRbu, int bRbu){$/;"	f
sqlite3rbu_destroy_vfs	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3rbu_destroy_vfs(const char *zName){$/;"	f
sqlite3rbu_open	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3rbu *sqlite3rbu_open($/;"	f
sqlite3rbu_progress	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3rbu_progress(sqlite3rbu *pRbu){$/;"	f
sqlite3rbu_savestate	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3rbu_savestate(sqlite3rbu *p){$/;"	f
sqlite3rbu_state	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3rbu_state(sqlite3rbu *p){$/;"	f
sqlite3rbu_step	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3rbu_step(sqlite3rbu *p){$/;"	f
sqlite3rbu_vacuum	src/sqlite/sqlite3.c	/^SQLITE_API sqlite3rbu *sqlite3rbu_vacuum($/;"	f
sqlite3session_attach	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_attach($/;"	f
sqlite3session_changeset	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_changeset($/;"	f
sqlite3session_changeset_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_changeset_strm($/;"	f
sqlite3session_create	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_create($/;"	f
sqlite3session_delete	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3session_delete(sqlite3_session *pSession){$/;"	f
sqlite3session_diff	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_diff($/;"	f
sqlite3session_enable	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_enable(sqlite3_session *pSession, int bEnable){$/;"	f
sqlite3session_indirect	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_indirect(sqlite3_session *pSession, int bIndirect){$/;"	f
sqlite3session_isempty	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_isempty(sqlite3_session *pSession){$/;"	f
sqlite3session_patchset	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_patchset($/;"	f
sqlite3session_patchset_strm	src/sqlite/sqlite3.c	/^SQLITE_API int sqlite3session_patchset_strm($/;"	f
sqlite3session_table_filter	src/sqlite/sqlite3.c	/^SQLITE_API void sqlite3session_table_filter($/;"	f
sqliteAuthBadReturnCode	src/sqlite/sqlite3.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteDefaultBusyCallback	src/sqlite/sqlite3.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteErrorFromPosixError	src/sqlite/sqlite3.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteHashData	src/sqlite/sqlite3.c	12293;"	d	file:
sqliteHashFirst	src/sqlite/sqlite3.c	12291;"	d	file:
sqliteHashNext	src/sqlite/sqlite3.c	12292;"	d	file:
sqliteProcessJoin	src/sqlite/sqlite3.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteViewResetAll	src/sqlite/sqlite3.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	src/sqlite/sqlite3.c	102479;"	d	file:
sqlite_int64	src/include/sqlite/sqlite3.h	/^typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	src/include/sqlite/sqlite3.h	/^typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	src/include/sqlite/sqlite3.h	/^typedef long long int sqlite_int64;$/;"	t
sqlite_int64	src/sqlite/sqlite3.c	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t	file:
sqlite_int64	src/sqlite/sqlite3.c	/^  typedef __int64 sqlite_int64;$/;"	t	file:
sqlite_int64	src/sqlite/sqlite3.c	/^  typedef long long int sqlite_int64;$/;"	t	file:
sqlite_uint64	src/include/sqlite/sqlite3.h	/^typedef SQLITE_UINT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	src/include/sqlite/sqlite3.h	/^typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	src/include/sqlite/sqlite3.h	/^typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	src/include/sqlite/sqlite3.h	/^typedef unsigned long long int sqlite_uint64;$/;"	t
sqlite_uint64	src/sqlite/sqlite3.c	/^    typedef SQLITE_UINT64_TYPE sqlite_uint64;$/;"	t	file:
sqlite_uint64	src/sqlite/sqlite3.c	/^    typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t	file:
sqlite_uint64	src/sqlite/sqlite3.c	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t	file:
sqlite_uint64	src/sqlite/sqlite3.c	/^  typedef unsigned long long int sqlite_uint64;$/;"	t	file:
ss_	third_party/gmock/gmock/gmock.h	/^  ::std::stringstream ss_;$/;"	m	class:testing::StringMatchResultListener
ss_	third_party/gmock/gtest/gtest.h	/^  const internal::scoped_ptr< ::std::stringstream> ss_;$/;"	m	class:testing::Message
stack_trace_depth_	third_party/gmock/gmock-gtest-all.cc	/^  internal::Int32 stack_trace_depth_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
star_oh	src/sqlite/sqlite3.c	/^static int star_oh(const char *z){$/;"	f	file:
startEndFlag	src/sqlite/sqlite3.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startTime	src/sqlite/sqlite3.c	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe	file:
start_page	src/include/index/index_iterator.h	/^  B_PLUS_TREE_LEAF_PAGE_TYPE *start_page;$/;"	m	class:cmudb::IndexIterator
start_timestamp	third_party/gmock/gmock-gtest-all.cc	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::internal::UnitTestImpl
start_timestamp	third_party/gmock/gmock-gtest-all.cc	/^internal::TimeInMillis UnitTest::start_timestamp() const {$/;"	f	class:testing::UnitTest
start_timestamp_	third_party/gmock/gmock-gtest-all.cc	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::internal::UnitTestImpl	file:
stat4Destructor	src/sqlite/sqlite3.c	/^static void stat4Destructor(void *pOld){$/;"	f	file:
stat4ValueFromExpr	src/sqlite/sqlite3.c	/^static int stat4ValueFromExpr($/;"	f	file:
statBestIndex	src/sqlite/sqlite3.c	/^static int statBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
statClearPage	src/sqlite/sqlite3.c	/^static void statClearPage(StatPage *p){$/;"	f	file:
statClose	src/sqlite/sqlite3.c	/^static int statClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statColumn	src/sqlite/sqlite3.c	/^static int statColumn($/;"	f	file:
statConnect	src/sqlite/sqlite3.c	/^static int statConnect($/;"	f	file:
statDecodePage	src/sqlite/sqlite3.c	/^static int statDecodePage(Btree *pBt, StatPage *p){$/;"	f	file:
statDisconnect	src/sqlite/sqlite3.c	/^static int statDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
statEof	src/sqlite/sqlite3.c	/^static int statEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statFilter	src/sqlite/sqlite3.c	/^static int statFilter($/;"	f	file:
statGet	src/sqlite/sqlite3.c	/^static void statGet($/;"	f	file:
statGetFuncdef	src/sqlite/sqlite3.c	/^static const FuncDef statGetFuncdef = {$/;"	v	file:
statInit	src/sqlite/sqlite3.c	/^static void statInit($/;"	f	file:
statInitFuncdef	src/sqlite/sqlite3.c	/^static const FuncDef statInitFuncdef = {$/;"	v	file:
statMutex	src/sqlite/sqlite3.c	/^static const char statMutex[] = {$/;"	v	file:
statNext	src/sqlite/sqlite3.c	/^static int statNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statOpen	src/sqlite/sqlite3.c	/^static int statOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
statPush	src/sqlite/sqlite3.c	/^static void statPush($/;"	f	file:
statPushFuncdef	src/sqlite/sqlite3.c	/^static const FuncDef statPushFuncdef = {$/;"	v	file:
statResetCsr	src/sqlite/sqlite3.c	/^static void statResetCsr(StatCursor *pCsr){$/;"	f	file:
statRowid	src/sqlite/sqlite3.c	/^static int statRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
statSizeAndOffset	src/sqlite/sqlite3.c	/^static void statSizeAndOffset(StatCursor *pCsr){$/;"	f	file:
state_	src/include/concurrency/transaction.h	/^  TransactionState state_;$/;"	m	class:cmudb::Transaction
state_	third_party/gmock/gtest/gtest.h	/^  UInt32 state_;$/;"	m	class:testing::internal::Random
statement	third_party/gmock/gmock-gtest-all.cc	/^  const char* statement() const { return statement_; }$/;"	f	class:testing::internal::DeathTestImpl
statement_	third_party/gmock/gmock-gtest-all.cc	/^  const char* const statement_;$/;"	m	class:testing::internal::DeathTestImpl	file:
stateno	src/sqlite/sqlite3.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	src/sqlite/sqlite3.c	/^  fts5YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:fts5yyStackEntry	file:
states	third_party/gmock/gmock-gtest-all.cc	/^  StateMap& states() { return states_; }$/;"	f	class:testing::__anon8::MockObjectRegistry
states_	third_party/gmock/gmock-gtest-all.cc	/^  StateMap states_;$/;"	m	class:testing::__anon8::MockObjectRegistry	file:
statsOn	src/sqlite/shell.c	/^  int statsOn;           \/* True to display memory stats before each finalize *\/$/;"	m	struct:ShellState	file:
status	src/include/sqlite/sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
status	src/sqlite/sqlite3.c	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
status	third_party/gmock/gmock-gtest-all.cc	/^  int status() const { return status_; }$/;"	f	class:testing::internal::DeathTestImpl
status64	src/include/sqlite/sqlite3ext.h	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines
status64	src/sqlite/sqlite3.c	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines	file:
status_	third_party/gmock/gmock-gtest-all.cc	/^  int status_;$/;"	m	class:testing::internal::DeathTestImpl	file:
std	src/include/common/rid.h	/^namespace std {$/;"	n
std	third_party/gmock/gtest/gtest.h	/^namespace std {$/;"	n
stdin_is_interactive	src/sqlite/shell.c	/^static int stdin_is_interactive = 1;$/;"	v	file:
stdout_is_console	src/sqlite/shell.c	/^static int stdout_is_console = 1;$/;"	v	file:
stem	src/sqlite/sqlite3.c	/^static int stem($/;"	f	file:
step	src/include/sqlite/sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
step	src/sqlite/sqlite3.c	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
step_	third_party/gmock/gtest/gtest.h	/^    const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
step_	third_party/gmock/gtest/gtest.h	/^  const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator
step_list	src/sqlite/sqlite3.c	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger	file:
stmtBestIndex	src/sqlite/sqlite3.c	/^static int stmtBestIndex($/;"	f	file:
stmtClose	src/sqlite/sqlite3.c	/^static int stmtClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
stmtColumn	src/sqlite/sqlite3.c	/^static int stmtColumn($/;"	f	file:
stmtConnect	src/sqlite/sqlite3.c	/^static int stmtConnect($/;"	f	file:
stmtDisconnect	src/sqlite/sqlite3.c	/^static int stmtDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
stmtEof	src/sqlite/sqlite3.c	/^static int stmtEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
stmtFilter	src/sqlite/sqlite3.c	/^static int stmtFilter($/;"	f	file:
stmtModule	src/sqlite/sqlite3.c	/^static sqlite3_module stmtModule = {$/;"	v	file:
stmtNext	src/sqlite/sqlite3.c	/^static int stmtNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
stmtOpen	src/sqlite/sqlite3.c	/^static int stmtOpen(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
stmtRowid	src/sqlite/sqlite3.c	/^static int stmtRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
stmt_busy	src/include/sqlite/sqlite3ext.h	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_busy	src/sqlite/sqlite3.c	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stmt_cursor	src/sqlite/sqlite3.c	/^struct stmt_cursor {$/;"	s	file:
stmt_cursor	src/sqlite/sqlite3.c	/^typedef struct stmt_cursor stmt_cursor;$/;"	t	typeref:struct:stmt_cursor	file:
stmt_readonly	src/include/sqlite/sqlite3ext.h	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_readonly	src/sqlite/sqlite3.c	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stmt_status	src/include/sqlite/sqlite3ext.h	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
stmt_status	src/sqlite/sqlite3.c	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
stmt_vtab	src/sqlite/sqlite3.c	/^struct stmt_vtab {$/;"	s	file:
stmt_vtab	src/sqlite/sqlite3.c	/^typedef struct stmt_vtab stmt_vtab;$/;"	t	typeref:struct:stmt_vtab	file:
storeLastErrno	src/sqlite/sqlite3.c	/^static void storeLastErrno(unixFile *pFile, int error){$/;"	f	file:
str	third_party/gmock/gmock/gmock.h	/^  internal::string str() const { return ss_.str(); }$/;"	f	class:testing::StringMatchResultListener
strAccumFinishRealloc	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE char *strAccumFinishRealloc(StrAccum *p){$/;"	f	file:
strHash	src/sqlite/sqlite3.c	/^static unsigned int strHash(const char *z){$/;"	f	file:
str_in_array	src/sqlite/shell.c	/^static int str_in_array(const char *zStr, const char **azArray){$/;"	f	file:
stream	third_party/gmock/gmock/gmock.h	/^  ::std::ostream* stream() { return stream_; }$/;"	f	class:testing::MatchResultListener
stream_	third_party/gmock/gmock/gmock.h	/^  ::std::ostream* const stream_;$/;"	m	class:testing::MatchResultListener::std
stream_result_to_	third_party/gmock/gmock-gtest-all.cc	/^  std::string stream_result_to_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
strftimeFunc	src/sqlite/sqlite3.c	/^static void strftimeFunc($/;"	f	file:
strglob	src/include/sqlite/sqlite3ext.h	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
strglob	src/sqlite/sqlite3.c	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
stricmp	src/include/sqlite/sqlite3ext.h	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
stricmp	src/sqlite/sqlite3.c	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
strict_2PL_	src/include/concurrency/lock_manager.h	/^  bool strict_2PL_;$/;"	m	class:cmudb::LockManager
string	third_party/gmock/gtest/gtest.h	/^  const std::string& string() const { return pathname_; }$/;"	f	class:testing::internal::FilePath
string_	third_party/gmock/gmock/gmock.h	/^  const StringType string_;$/;"	m	class:testing::internal::StrEqualityMatcher
strlen30	src/sqlite/shell.c	/^static int strlen30(const char *z){$/;"	f	file:
strlenChar	src/sqlite/shell.c	/^static int strlenChar(const char *z){$/;"	f	file:
strlike	src/include/sqlite/sqlite3ext.h	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines
strlike	src/sqlite/sqlite3.c	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines	file:
strnicmp	src/include/sqlite/sqlite3ext.h	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
strnicmp	src/sqlite/sqlite3.c	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
subjInMemory	src/sqlite/sqlite3.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjRequiresPage	src/sqlite/sqlite3.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	src/sqlite/sqlite3.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
subjournalPageIfRequired	src/sqlite/sqlite3.c	/^static int subjournalPageIfRequired(PgHdr *pPg){$/;"	f	file:
substExpr	src/sqlite/sqlite3.c	/^static Expr *substExpr($/;"	f	file:
substExprList	src/sqlite/sqlite3.c	/^static void substExprList($/;"	f	file:
substSelect	src/sqlite/sqlite3.c	/^static void substSelect($/;"	f	file:
substrFunc	src/sqlite/sqlite3.c	/^static void substrFunc($/;"	f	file:
substr_	third_party/gmock/gmock-gtest-all.cc	/^  const string substr_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
substring_	third_party/gmock/gmock/gmock.h	/^  const StringType substring_;$/;"	m	class:testing::internal::HasSubstrMatcher
success_	third_party/gmock/gtest/gtest.h	/^  bool success_;$/;"	m	class:testing::AssertionResult
successful_test_case_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::successful_test_case_count() const {$/;"	f	class:testing::UnitTest
successful_test_case_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::successful_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
successful_test_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::successful_test_count() const {$/;"	f	class:testing::TestCase
successful_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::successful_test_count() const {$/;"	f	class:testing::UnitTest
successful_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::successful_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
suffix_	third_party/gmock/gmock/gmock.h	/^  const StringType suffix_;$/;"	m	class:testing::internal::EndsWithMatcher
sumFinalize	src/sqlite/sqlite3.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumStep	src/sqlite/sqlite3.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
summary	third_party/gmock/gtest/gtest.h	/^  const char* summary() const { return summary_.c_str(); }$/;"	f	class:testing::TestPartResult
summary_	third_party/gmock/gtest/gtest.h	/^  std::string summary_;  \/\/ The test failure summary.$/;"	m	class:testing::TestPartResult
suppressErr	src/sqlite/sqlite3.c	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3	file:
swap	src/include/type/value.h	/^  friend void swap(Value &first, Value &second) {$/;"	f	class:cmudb::Value
swapMixedEndianFloat	src/sqlite/sqlite3.c	75143;"	d	file:
swapMixedEndianFloat	src/sqlite/sqlite3.c	75145;"	d	file:
switchLockProxyPath	src/sqlite/sqlite3.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
syncFlags	src/sqlite/sqlite3.c	/^  int syncFlags;               \/* Flags for the fsync *\/$/;"	m	struct:WalWriter	file:
syncFlags	src/sqlite/sqlite3.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncFlags	src/sqlite/sqlite3.c	/^  u8 syncFlags;              \/* Flags to use to sync header writes *\/$/;"	m	struct:Wal	file:
syncHeader	src/sqlite/sqlite3.c	/^  u8 syncHeader;             \/* Fsync the WAL header if true *\/$/;"	m	struct:Wal	file:
syncJournal	src/sqlite/sqlite3.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
synthCollSeq	src/sqlite/sqlite3.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
system_errno	src/include/sqlite/sqlite3ext.h	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
system_errno	src/sqlite/sqlite3.c	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
sz	src/sqlite/sqlite3.c	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside	file:
szAlloc	src/sqlite/sqlite3.c	/^  int szAlloc;                        \/* Total size of one pcache line *\/$/;"	m	struct:PCache1	file:
szAtom	src/sqlite/sqlite3.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szCache	src/sqlite/sqlite3.c	/^  int szCache;                        \/* Configured cache size *\/$/;"	m	struct:PCache	file:
szCell	src/sqlite/sqlite3.c	/^  u16 *szCell;            \/* Local size of all cells in apCell[] *\/$/;"	m	struct:CellArray	file:
szChunk	src/sqlite/sqlite3.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	src/sqlite/sqlite3.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szCol	src/sqlite/sqlite3.c	/^  int szCol;                      \/* Size of column value in tokens *\/$/;"	m	struct:Fts5InsertCtx	file:
szCol	src/sqlite/sqlite3.c	/^  int szCol;$/;"	m	struct:Fts5IntegrityCtx	file:
szEst	src/sqlite/sqlite3.c	/^  u8 szEst;        \/* Estimated size of value in this column. sizeof(INT)==1 *\/$/;"	m	struct:Column	file:
szExtra	src/sqlite/sqlite3.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szExtra	src/sqlite/sqlite3.c	/^  int szExtra;                        \/* sizeof(MemPage)+sizeof(PgHdr) *\/$/;"	m	struct:PCache1	file:
szFirstBlock	src/sqlite/sqlite3.c	/^  int szFirstBlock;          \/* Size of first block written to WAL file *\/$/;"	m	struct:Wal	file:
szIdxRow	src/sqlite/sqlite3.c	/^  LogEst szIdxRow;         \/* Estimated average row size in bytes *\/$/;"	m	struct:Index	file:
szLeaf	src/sqlite/sqlite3.c	/^  int szLeaf;                     \/* Size of leaf without page-index *\/$/;"	m	struct:Fts5Data	file:
szLookaside	src/sqlite/sqlite3.c	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config	file:
szMalloc	src/sqlite/sqlite3.c	/^  int szMalloc;       \/* Size of the zMalloc allocation *\/$/;"	m	struct:sqlite3_value	file:
szMaster	src/sqlite/sqlite3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szMmap	src/sqlite/sqlite3.c	/^  i64 szMmap;                   \/* Default mmap_size setting *\/$/;"	m	struct:sqlite3	file:
szMmap	src/sqlite/sqlite3.c	/^  sqlite3_int64 szMmap;             \/* mmap() space per open file *\/$/;"	m	struct:Sqlite3Config	file:
szMmap	src/sqlite/sqlite3.c	/^  sqlite3_int64 szMmap;       \/* Desired maximum mmap size *\/$/;"	m	struct:Pager	file:
szOpAlloc	src/sqlite/sqlite3.c	/^  int szOpAlloc;       \/* Bytes of memory space allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse	file:
szOsFile	src/include/sqlite/sqlite3.h	/^int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
szOsFile	src/sqlite/sqlite3.c	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	file:
szPMA	src/sqlite/sqlite3.c	/^  int szPMA;                      \/* Size of pList as PMA in bytes *\/$/;"	m	struct:SorterList	file:
szPage	src/sqlite/sqlite3.c	/^  int szPage;                         \/* Size of database content section *\/$/;"	m	struct:PCache1	file:
szPage	src/sqlite/sqlite3.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	src/sqlite/sqlite3.c	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
szPage	src/sqlite/sqlite3.c	/^  int szPage;                     \/* Value of 'pgSize' column *\/$/;"	m	struct:StatCursor	file:
szPage	src/sqlite/sqlite3.c	/^  int szPage;                  \/* Size of one page *\/$/;"	m	struct:WalWriter	file:
szPage	src/sqlite/sqlite3.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	src/sqlite/sqlite3.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szPma	src/sqlite/sqlite3.c	/^  u32 szPma;                        \/* Maximum Sorter PMA size *\/$/;"	m	struct:Sqlite3Config	file:
szRegion	src/sqlite/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	src/sqlite/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szRow	src/sqlite/sqlite3.c	/^  u32 szRow;              \/* Byte available in aRow *\/$/;"	m	struct:VdbeCursor	file:
szScratch	src/sqlite/sqlite3.c	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config	file:
szSlot	src/sqlite/sqlite3.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
szSpill	src/sqlite/sqlite3.c	/^  int szSpill;                        \/* Size before spilling occurs *\/$/;"	m	struct:PCache	file:
szTabRow	src/sqlite/sqlite3.c	/^  LogEst szTabRow;     \/* Estimated size of each table row in bytes *\/$/;"	m	struct:Table	file:
tRowcnt	src/sqlite/sqlite3.c	/^ typedef u32 tRowcnt;    \/* 32-bit is the default *\/$/;"	t	file:
tRowcnt	src/sqlite/sqlite3.c	/^ typedef u64 tRowcnt;    \/* 64-bit only if requested at compile-time *\/$/;"	t	file:
tabFlags	src/sqlite/sqlite3.c	/^  u32 tabFlags;        \/* Mask of TF_* values *\/$/;"	m	struct:Table	file:
tabTnct	src/sqlite/sqlite3.c	/^  int tabTnct;    \/* Ephemeral table used for DISTINCT processing *\/$/;"	m	struct:DistinctCtx	file:
table	src/sqlite/sqlite3.c	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger	file:
tableAndColumnIndex	src/sqlite/sqlite3.c	/^static int tableAndColumnIndex($/;"	f	file:
tableColumnList	src/sqlite/shell.c	/^static char **tableColumnList(ShellState *p, const char *zTab){$/;"	f	file:
tableOfTrigger	src/sqlite/sqlite3.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
tableWithCursor	src/sqlite/sqlite3.c	/^static Table *tableWithCursor(SrcList *pList, int iCursor){$/;"	f	file:
table_	src/include/concurrency/transaction.h	/^  TableHeap *table_;$/;"	m	class:cmudb::WriteRecord
table_column_metadata	src/include/sqlite/sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
table_column_metadata	src/sqlite/sqlite3.c	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
table_heap_	src/include/table/table_iterator.h	/^  TableHeap *table_heap_;$/;"	m	class:cmudb::TableIterator
table_heap_	src/include/vtable/virtual_table.h	/^  TableHeap *table_heap_;$/;"	m	class:cmudb::VirtualTable
table_iterator_	src/include/vtable/virtual_table.h	/^  TableIterator table_iterator_;$/;"	m	class:cmudb::Cursor
table_name_	src/include/index/index.h	/^  std::string table_name_;$/;"	m	class:cmudb::IndexMetadata
targetSrcList	src/sqlite/sqlite3.c	/^static SrcList *targetSrcList($/;"	f	file:
tblHash	src/sqlite/sqlite3.c	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema	file:
tblhdr	src/sqlite/sqlite3.c	/^  SessionBuffer tblhdr;           \/* Buffer to hold apValue\/zTab\/abPK\/ *\/$/;"	m	struct:sqlite3_changeset_iter	file:
tear_down_tc_	third_party/gmock/gtest/gtest.h	/^  Test::TearDownTestCaseFunc tear_down_tc_;$/;"	m	class:testing::TestCase
tempFile	src/sqlite/sqlite3.c	/^  u8 tempFile;                \/* zFilename is a temporary or immutable file *\/$/;"	m	struct:Pager	file:
tempReg	src/sqlite/sqlite3.c	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache	file:
temp_store	src/sqlite/sqlite3.c	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3	file:
term	src/sqlite/sqlite3.c	/^  Blob term;                      \/* Current term *\/$/;"	m	struct:NodeReader	file:
term	src/sqlite/sqlite3.c	/^  Fts5Buffer term;                \/* Buffer containing previous term on page *\/$/;"	m	struct:Fts5PageWriter	file:
term	src/sqlite/sqlite3.c	/^  Fts5Buffer term;                \/* Current term *\/$/;"	m	struct:Fts5SegIter	file:
term	src/sqlite/sqlite3.c	/^  Fts5Buffer term;                \/* Current value of 'term' column *\/$/;"	m	struct:Fts5VocabCursor	file:
termCanDriveIndex	src/sqlite/sqlite3.c	/^static int termCanDriveIndex($/;"	f	file:
termIsEquivalence	src/sqlite/sqlite3.c	/^static int termIsEquivalence(Parse *pParse, Expr *pExpr){$/;"	f	file:
testFunc	src/sqlite/sqlite3.c	/^static void testFunc($/;"	f	file:
test_	third_party/gmock/gtest/gtest.h	/^    DeathTest* const test_;$/;"	m	class:testing::internal::DeathTest::ReturnSentinel
test_addop_breakpoint	src/sqlite/sqlite3.c	/^static void test_addop_breakpoint(void){$/;"	f	file:
test_base_name	third_party/gmock/gtest/gtest.h	/^    const string test_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_breakpoint	src/sqlite/shell.c	/^static void test_breakpoint(void){$/;"	f	file:
test_case_base_name	third_party/gmock/gtest/gtest.h	/^    const string test_case_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_case_indices_	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<int> test_case_indices_;$/;"	m	class:testing::internal::UnitTestImpl	file:
test_case_infos_	third_party/gmock/gtest/gtest.h	/^  TestCaseInfoContainer test_case_infos_;$/;"	m	class:testing::internal::ParameterizedTestCaseRegistry
test_case_name	third_party/gmock/gtest/gtest.h	/^  const char* test_case_name() const { return test_case_name_.c_str(); }$/;"	f	class:testing::TestInfo
test_case_name_	third_party/gmock/gtest/gtest.h	/^  const std::string test_case_name_;     \/\/ Test case name$/;"	m	class:testing::TestInfo
test_case_name_	third_party/gmock/gtest/gtest.h	/^  const string test_case_name_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
test_case_to_run_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::test_case_to_run_count() const {$/;"	f	class:testing::UnitTest
test_case_to_run_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::test_case_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
test_cases_	third_party/gmock/gmock-gtest-all.cc	/^  std::vector<TestCase*> test_cases_;$/;"	m	class:testing::internal::UnitTestImpl	file:
test_control	src/include/sqlite/sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines
test_control	src/sqlite/sqlite3.c	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	file:
test_fts3_node_chunk_threshold	src/sqlite/sqlite3.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunksize	src/sqlite/sqlite3.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
test_indices_	third_party/gmock/gtest/gtest.h	/^  std::vector<int> test_indices_;$/;"	m	class:testing::TestCase
test_info_list	third_party/gmock/gtest/gtest.h	/^  const std::vector<TestInfo*>& test_info_list() const {$/;"	f	class:testing::TestCase
test_info_list	third_party/gmock/gtest/gtest.h	/^  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }$/;"	f	class:testing::TestCase
test_info_list_	third_party/gmock/gtest/gtest.h	/^  std::vector<TestInfo*> test_info_list_;$/;"	m	class:testing::TestCase
test_meta_factory	third_party/gmock/gtest/gtest.h	/^    const scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_part_results	third_party/gmock/gmock-gtest-all.cc	/^  static const std::vector<testing::TestPartResult>& test_part_results($/;"	f	class:testing::internal::TestResultAccessor
test_part_results	third_party/gmock/gtest/gtest.h	/^  const std::vector<TestPartResult>& test_part_results() const {$/;"	f	class:testing::TestResult
test_part_results_	third_party/gmock/gtest/gtest.h	/^  std::vector<TestPartResult> test_part_results_;$/;"	m	class:testing::TestResult
test_properites_mutex_	third_party/gmock/gtest/gtest.h	/^  internal::Mutex test_properites_mutex_;$/;"	m	class:testing::TestResult
test_properties	third_party/gmock/gtest/gtest.h	/^  const std::vector<TestProperty>& test_properties() const {$/;"	f	class:testing::TestResult
test_properties_	third_party/gmock/gtest/gtest.h	/^  std::vector<TestProperty> test_properties_;$/;"	m	class:testing::TestResult
test_property_count	third_party/gmock/gmock-gtest-all.cc	/^int TestResult::test_property_count() const {$/;"	f	class:testing::TestResult
test_to_run_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::test_to_run_count() const {$/;"	f	class:testing::TestCase
test_to_run_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }$/;"	f	class:testing::UnitTest
test_to_run_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::test_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
testcase	src/sqlite/sqlite3.c	12084;"	d	file:
testcase	src/sqlite/sqlite3.c	12086;"	d	file:
testcase	src/sqlite/sqlite3.c	146299;"	d	file:
testcase	src/sqlite/sqlite3.c	165135;"	d	file:
testcase	src/sqlite/sqlite3.c	183176;"	d	file:
testcase_glob	src/sqlite/shell.c	/^static int testcase_glob(const char *zGlob, const char *z){$/;"	f	file:
testing	third_party/gmock/gmock-gtest-all.cc	/^namespace testing {$/;"	n	file:
testing	third_party/gmock/gmock/gmock.h	/^namespace testing {$/;"	n
testing	third_party/gmock/gtest/gtest.h	/^namespace testing {$/;"	n
testing_internal	third_party/gmock/gtest/gtest.h	/^namespace testing_internal {$/;"	n
tests_	third_party/gmock/gtest/gtest.h	/^  TestInfoContainer tests_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
thread_	third_party/gmock/gtest/gtest.h	/^  pthread_t thread_;  \/\/ The native thread object.$/;"	m	class:std::tr1::ThreadWithParam
thread_can_start_	third_party/gmock/gtest/gtest.h	/^  Notification* const thread_can_start_;$/;"	m	class:std::tr1::ThreadWithParam
thread_cleanup	src/include/sqlite/sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines
thread_cleanup	src/sqlite/sqlite3.c	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	file:
thread_id_	src/include/concurrency/transaction.h	/^  std::thread::id thread_id_;$/;"	m	class:cmudb::Transaction
threadid	src/sqlite/sqlite3.c	30611;"	d	file:
threadid	src/sqlite/sqlite3.c	30613;"	d	file:
throw_on_failure_	third_party/gmock/gmock-gtest-all.cc	/^  bool throw_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
tid	src/sqlite/sqlite3.c	/^  pthread_t tid;                 \/* Thread ID *\/$/;"	m	struct:SQLiteThread	file:
tid	src/sqlite/sqlite3.c	/^  void *tid;               \/* The thread handle *\/$/;"	m	struct:SQLiteThread	file:
timeDiff	src/sqlite/shell.c	/^static double timeDiff(FILETIME *pStart, FILETIME *pEnd){$/;"	f	file:
timeDiff	src/sqlite/shell.c	/^static double timeDiff(struct timeval *pStart, struct timeval *pEnd){$/;"	f	file:
timeFunc	src/sqlite/sqlite3.c	/^static void timeFunc($/;"	f	file:
timeOfDay	src/sqlite/shell.c	/^static sqlite3_int64 timeOfDay(void){$/;"	f	file:
timestamp	src/include/type/value.h	/^    uint64_t timestamp;$/;"	m	union:cmudb::Value::Val
tinyint	src/include/type/value.h	/^    int8_t tinyint;$/;"	m	union:cmudb::Value::Val
tkCREATE	src/sqlite/sqlite3.c	140759;"	d	file:
tkEND	src/sqlite/sqlite3.c	140762;"	d	file:
tkEXPLAIN	src/sqlite/sqlite3.c	140758;"	d	file:
tkOTHER	src/sqlite/sqlite3.c	140756;"	d	file:
tkSEMI	src/sqlite/sqlite3.c	140754;"	d	file:
tkTEMP	src/sqlite/sqlite3.c	140760;"	d	file:
tkTRIGGER	src/sqlite/sqlite3.c	140761;"	d	file:
tkWS	src/sqlite/sqlite3.c	140755;"	d	file:
tmask	src/sqlite/sqlite3.c	110432;"	d	file:
tnum	src/sqlite/sqlite3.c	/^  int tnum;                \/* DB Page containing root of this index *\/$/;"	m	struct:Index	file:
tnum	src/sqlite/sqlite3.c	/^  int tnum;            \/* Root BTree page for this table *\/$/;"	m	struct:Table	file:
toggleSelectOrder	src/sqlite/shell.c	/^static void toggleSelectOrder(sqlite3 *db){$/;"	f	file:
token	src/sqlite/sqlite3.c	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram	file:
token	src/sqlite/sqlite3.c	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame	file:
tokenizer	src/sqlite/sqlite3.c	/^  fts5_tokenizer tokenizer;       \/* Parent tokenizer module *\/$/;"	m	struct:PorterTokenizer	file:
totalAlloc	src/sqlite/sqlite3.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalExcess	src/sqlite/sqlite3.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalFinalize	src/sqlite/sqlite3.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
total_changes	src/include/sqlite/sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
total_changes	src/sqlite/sqlite3.c	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
total_changes	src/sqlite/sqlite3.c	/^static void total_changes($/;"	f	file:
total_part_count	third_party/gmock/gmock-gtest-all.cc	/^int TestResult::total_part_count() const {$/;"	f	class:testing::TestResult
total_test_case_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::total_test_case_count() const {$/;"	f	class:testing::UnitTest
total_test_case_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::total_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_test_count	third_party/gmock/gmock-gtest-all.cc	/^int TestCase::total_test_count() const {$/;"	f	class:testing::TestCase
total_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTest::total_test_count() const { return impl()->total_test_count(); }$/;"	f	class:testing::UnitTest
total_test_count	third_party/gmock/gmock-gtest-all.cc	/^int UnitTestImpl::total_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
tr1	third_party/gmock/gtest/gtest.h	/^namespace tr1 {$/;"	n	namespace:std
tr_tm	src/sqlite/sqlite3.c	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger	file:
trace	src/include/sqlite/sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines
trace	src/sqlite/sqlite3.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	src/sqlite/sqlite3.c	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	file:
trace	src/sqlite/sqlite3.c	/^  volatile int trace;        \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
traceOut	src/sqlite/shell.c	/^  FILE *traceOut;        \/* Output for sqlite3_trace() *\/$/;"	m	struct:ShellState	file:
trace_v2	src/include/sqlite/sqlite3ext.h	/^  int (*trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);$/;"	m	struct:sqlite3_api_routines
trace_v2	src/sqlite/sqlite3.c	/^  int (*trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
transCntrChng	src/sqlite/sqlite3.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
transaction_	src/include/vtable/virtual_table.h	/^  Transaction *transaction_;$/;"	m	struct:cmudb::GlobalParameters
transaction_manager_	src/include/vtable/virtual_table.h	/^  TransactionManager *transaction_manager_;$/;"	m	struct:cmudb::GlobalParameters
transferJoinMarkings	src/sqlite/sqlite3.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferParseError	src/sqlite/sqlite3.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transfer_bindings	src/include/sqlite/sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
transfer_bindings	src/sqlite/sqlite3.c	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
translateColumnToCopy	src/sqlite/sqlite3.c	/^static void translateColumnToCopy($/;"	f	file:
translateP	src/sqlite/sqlite3.c	/^static int translateP(char c, const Op *pOp){$/;"	f	file:
trigHash	src/sqlite/sqlite3.c	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema	file:
triggerStepAllocate	src/sqlite/sqlite3.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
trimFunc	src/sqlite/sqlite3.c	/^static void trimFunc($/;"	f	file:
true_type	third_party/gmock/gtest/gtest.h	/^typedef bool_constant<true> true_type;$/;"	t	namespace:std::tr1
truncateOnCommit	src/sqlite/sqlite3.c	/^  u8 truncateOnCommit;       \/* True to truncate WAL file on commit *\/$/;"	m	struct:Wal	file:
truthProb	src/sqlite/sqlite3.c	/^  LogEst truthProb;       \/* Probability of truth for this expression *\/$/;"	m	struct:WhereTerm	file:
tryToClone	src/sqlite/shell.c	/^static void tryToClone(ShellState *p, const char *zNewDb){$/;"	f	file:
tryToCloneData	src/sqlite/shell.c	/^static void tryToCloneData($/;"	f	file:
tryToCloneSchema	src/sqlite/shell.c	/^static void tryToCloneSchema($/;"	f	file:
ts	src/sqlite/sqlite3.c	/^  struct Fts5TransactionState ts;$/;"	m	struct:Fts5Table	typeref:struct:Fts5Table::Fts5TransactionState	file:
tuple	third_party/gmock/gtest/gtest.h	/^  tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_(),$/;"	f	class:std::tr1::tuple
tuple	third_party/gmock/gtest/gtest.h	/^  tuple() {}$/;"	f	class:std::tr1::tuple
tuple	third_party/gmock/gtest/gtest.h	/^  tuple(const tuple& \/* t *\/)  {}$/;"	f	class:std::tr1::tuple
tuple	third_party/gmock/gtest/gtest.h	/^  tuple(const tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),$/;"	f	class:std::tr1::tuple
tuple	third_party/gmock/gtest/gtest.h	/^class tuple {$/;"	c	namespace:std::tr1
tuple	third_party/gmock/gtest/gtest.h	/^class tuple<> {$/;"	c	namespace:std::tr1
tuple_	src/include/concurrency/transaction.h	/^  Tuple tuple_;$/;"	m	class:cmudb::WriteRecord
tuple_	src/include/table/table_iterator.h	/^  Tuple *tuple_;$/;"	m	class:cmudb::TableIterator
tuple_element	third_party/gmock/gtest/gtest.h	/^struct tuple_element {$/;"	s	namespace:std::tr1
tuple_is_inlined	src/include/catalog/schema.h	/^  bool tuple_is_inlined;$/;"	m	class:cmudb::Schema
tuple_matcher_	third_party/gmock/gmock/gmock.h	/^  const TupleMatcher tuple_matcher_;$/;"	m	class:testing::internal::PointwiseMatcher
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_0_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_1_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_2_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_3_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_4_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_5_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_6_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_7_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_8_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	third_party/gmock/gtest/gtest.h	/^struct tuple_size<GTEST_9_TUPLE_(T) > {$/;"	s	namespace:std::tr1
txn_	src/include/table/table_iterator.h	/^  Transaction *txn_;$/;"	m	class:cmudb::TableIterator
txn_id_	src/include/concurrency/transaction.h	/^  txn_id_t txn_id_;$/;"	m	class:cmudb::Transaction
txn_id_t	src/include/common/config.h	/^typedef int32_t txn_id_t;  \/\/ transaction id type$/;"	t	namespace:cmudb
type	src/include/common/exception.h	/^  ExceptionType type;$/;"	m	class:cmudb::Exception
type	src/sqlite/sqlite3.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k1), GMOCK_FIELD_TYPE_(Tuple, k2)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k1)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k3), GMOCK_FIELD_TYPE_(Tuple, k4)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k3)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k5), GMOCK_FIELD_TYPE_(Tuple, k6)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k5)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k7), GMOCK_FIELD_TYPE_(Tuple, k8)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k7)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k9)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A10> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A4> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A5> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7>, Matcher<A8> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7>, Matcher<A8>, Matcher<A9> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult10
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult2
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult3
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult4
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult5
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult6
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult7
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult8
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult9
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult10
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult2
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult3
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult4
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult5
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult6
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult7
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult8
type	third_party/gmock/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult9
type	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple< > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<GMOCK_FIELD_TYPE_(Tuple, k0)> type;$/;"	t	class:testing::internal::TupleFields
type	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<Matcher<A1> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<Matcher<A1>, Matcher<A2> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^  typedef ::std::tr1::tuple<Matcher<A1>, Matcher<A2>, Matcher<A3> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	third_party/gmock/gmock/gmock.h	/^  typedef M1 type;$/;"	t	struct:testing::internal::AllOfResult1
type	third_party/gmock/gmock/gmock.h	/^  typedef M1 type;$/;"	t	struct:testing::internal::AnyOfResult1
type	third_party/gmock/gmock/gmock.h	/^  typedef RawContainer type;$/;"	t	class:testing::internal::StlContainerView
type	third_party/gmock/gmock/gmock.h	/^  typedef Result type();$/;"	t	class:testing::internal::SelectArgs
type	third_party/gmock/gmock/gmock.h	/^  typedef T type;$/;"	t	struct:testing::internal::RemoveConstFromKey
type	third_party/gmock/gmock/gmock.h	/^  typedef const T* type;$/;"	t	struct:testing::internal::DecayArray
type	third_party/gmock/gmock/gmock.h	/^  typedef internal::NativeArray<RawElement> type;$/;"	t	class:testing::internal::StlContainerView
type	third_party/gmock/gmock/gmock.h	/^  typedef std::pair<K, V> type;$/;"	t	struct:testing::internal::RemoveConstFromKey
type	third_party/gmock/gmock/gmock.h	/^  typedef typename Pointer::element_type type;$/;"	t	struct:testing::internal::PointeeOf
type	third_party/gmock/gmock/gmock.h	/^struct PointeeOf<T*> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::PointeeOf
type	third_party/gmock/gmock/gmock.h	/^template <typename T> struct DecayArray { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::DecayArray
type	third_party/gmock/gmock/gmock.h	/^template <typename T> struct remove_reference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::remove_reference
type	third_party/gmock/gmock/gmock.h	/^template <typename T> struct remove_reference<T&> { typedef T type; }; \/\/ NOLINT$/;"	t	struct:testing::internal::remove_reference
type	third_party/gmock/gtest/gtest.h	/^      T12> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16, T17> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15, T16> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14, T15> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13, T14> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T13> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16, T17> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15, T16> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14, T15> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T14> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T26> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30, T31> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29, T30> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28, T29> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27, T28> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T27> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30, T31> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29, T30> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28, T29> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T28> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T40> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;$/;"	t	struct:testing::internal::TypeList
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44, T45> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43, T44> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42, T43> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41, T42> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^      T41> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44, T45> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43, T44> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42, T43> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^      T42> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^    TestPartResult::Type const type;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::TestPartResult
type	third_party/gmock/gtest/gtest.h	/^    typedef Tmpl<T> type;$/;"	t	struct:testing::internal::TemplateSel::Bind
type	third_party/gmock/gtest/gtest.h	/^  Type type() const { return type_; }$/;"	f	class:testing::TestPartResult
type	third_party/gmock/gtest/gtest.h	/^  typedef T0 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T1 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T2 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T3 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T4 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T5 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T6 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T7 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T8 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef T9 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates0 type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates1<T1> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates2<T1, T2> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates3<T1, T2, T3> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates4<T1, T2, T3, T4> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::internal::Templates
type	third_party/gmock/gtest/gtest.h	/^  typedef Types1<T> type;$/;"	t	struct:testing::internal::TypeList
type	third_party/gmock/gtest/gtest.h	/^  typedef bool type;$/;"	t	struct:testing::internal::AssertTypeEq
type	third_party/gmock/gtest/gtest.h	/^  typedef bool_constant<bool_value> type;$/;"	t	struct:std::tr1::bool_constant
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types0 type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types1<T1> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types2<T1, T2> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types3<T1, T2, T3> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types4<T1, T2, T3, T4> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::Types
type	third_party/gmock/gtest/gtest.h	/^  typedef typename RemoveConst<T>::type type[N];$/;"	t	struct:testing::internal::RemoveConst
type	third_party/gmock/gtest/gtest.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	third_party/gmock/gtest/gtest.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	third_party/gmock/gtest/gtest.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	third_party/gmock/gtest/gtest.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	third_party/gmock/gtest/gtest.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	third_party/gmock/gtest/gtest.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	third_party/gmock/gtest/gtest.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	third_party/gmock/gtest/gtest.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	third_party/gmock/gtest/gtest.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	third_party/gmock/gtest/gtest.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	third_party/gmock/gtest/gtest.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::EnableIf
typeMask	src/sqlite/sqlite3.c	/^  u8 typeMask;$/;"	m	struct:VdbeSorter	file:
typeTestTypes	test/type/type_test.cpp	/^const std::vector<TypeId> typeTestTypes = {$/;"	m	namespace:cmudb	file:
type_	third_party/gmock/gmock-gtest-all.cc	/^  const TestPartResult::Type type_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
type_	third_party/gmock/gtest/gtest.h	/^  Type type_;$/;"	m	class:testing::TestPartResult
type_equals	third_party/gmock/gmock/gmock.h	/^template <typename T1, typename T2> struct type_equals : public false_type {};$/;"	s	namespace:testing::internal
type_equals	third_party/gmock/gmock/gmock.h	/^template <typename T> struct type_equals<T, T> : public true_type {};$/;"	s	namespace:testing::internal
type_id_	src/include/type/type.h	/^  TypeId type_id_;$/;"	m	class:cmudb::Type
type_id_	src/include/type/value.h	/^  TypeId type_id_;$/;"	m	class:cmudb::Value
type_param	third_party/gmock/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestCase
type_param	third_party/gmock/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestInfo
type_param_	third_party/gmock/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestCase
type_param_	third_party/gmock/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestInfo
typeofFunc	src/sqlite/sqlite3.c	/^static void typeofFunc($/;"	f	file:
tz	src/sqlite/sqlite3.c	/^  int tz;             \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
tzSet	src/sqlite/sqlite3.c	/^  char tzSet;         \/* Timezone was set explicitly *\/$/;"	m	struct:DateTime	file:
u	src/sqlite/shell.c	/^  } u;$/;"	m	struct:SHA3Context	typeref:union:SHA3Context::__anon10	file:
u	src/sqlite/sqlite3.c	/^    } u;$/;"	m	struct:ExprList::ExprList_item	typeref:union:ExprList::ExprList_item::__anon15	file:
u	src/sqlite/sqlite3.c	/^  u32 u;             \/* Unsigned for byte-order conversions *\/$/;"	m	union:RtreeCoord	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon27	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon13	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:FuncDef	typeref:union:FuncDef::__anon12	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:JsonNode	typeref:union:JsonNode::__anon40	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon24	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:RtreeConstraint	typeref:union:RtreeConstraint::__anon39	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:SorterRecord	typeref:union:SorterRecord::__anon28	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:Stat4Sample	typeref:union:Stat4Sample::__anon29	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon20	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon30	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:WhereLoop	typeref:union:WhereLoop::__anon32	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon35	file:
u	src/sqlite/sqlite3.c	/^  } u;$/;"	m	struct:sqlite3_value	typeref:union:sqlite3_value::MemValue	file:
u1	src/sqlite/sqlite3.c	/^    } u1;$/;"	m	struct:SrcList::SrcList_item	typeref:union:SrcList::SrcList_item::__anon18	file:
u1	src/sqlite/sqlite3.c	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon11	file:
u16	src/sqlite/sqlite3.c	/^  typedef unsigned short int u16;$/;"	t	file:
u16	src/sqlite/sqlite3.c	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t	file:
u16	src/sqlite/sqlite3.c	/^typedef unsigned short u16;$/;"	t	file:
u32	src/sqlite/sqlite3.c	/^  typedef unsigned int u32;$/;"	t	file:
u32	src/sqlite/sqlite3.c	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	src/sqlite/sqlite3.c	/^typedef unsigned int   u32;$/;"	t	file:
u32	src/sqlite/sqlite3.c	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	src/sqlite/sqlite3.c	/^typedef unsigned int u32;$/;"	t	file:
u64	src/sqlite/shell.c	/^typedef sqlite3_uint64 u64;$/;"	t	file:
u64	src/sqlite/sqlite3.c	/^  typedef sqlite3_uint64 u64;$/;"	t	file:
u64	src/sqlite/sqlite3.c	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t	file:
u64	src/sqlite/sqlite3.c	/^typedef sqlite3_uint64 u64;$/;"	t	file:
u64	src/sqlite/sqlite3.c	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t	file:
u8	src/sqlite/sqlite3.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	src/sqlite/sqlite3.c	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t	file:
u8	src/sqlite/sqlite3.c	/^typedef unsigned char  u8;$/;"	t	file:
u8	src/sqlite/sqlite3.c	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t	file:
u8	src/sqlite/sqlite3.c	/^typedef unsigned char u8;$/;"	t	file:
uTemp	src/sqlite/sqlite3.c	/^  u32 uTemp;          \/* Transient storage for serial_type in OP_MakeRecord *\/$/;"	m	struct:sqlite3_value	file:
u_	third_party/gmock/gtest/gtest.h	/^  FloatingPointUnion u_;$/;"	m	class:testing::internal::FloatingPoint
uc	src/sqlite/sqlite3.c	/^  } uc;$/;"	m	struct:VdbeCursor	typeref:union:VdbeCursor::__anon21	file:
unLockFlag	src/sqlite/sqlite3.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
uncaptured_fd_	third_party/gmock/gmock-gtest-all.cc	/^  int uncaptured_fd_;$/;"	m	class:testing::internal::CapturedStream	file:
unicodeAddExceptions	src/sqlite/sqlite3.c	/^static int unicodeAddExceptions($/;"	f	file:
unicodeClose	src/sqlite/sqlite3.c	/^static int unicodeClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
unicodeCreate	src/sqlite/sqlite3.c	/^static int unicodeCreate($/;"	f	file:
unicodeDestroy	src/sqlite/sqlite3.c	/^static int unicodeDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
unicodeFunc	src/sqlite/sqlite3.c	/^static void unicodeFunc($/;"	f	file:
unicodeIsAlnum	src/sqlite/sqlite3.c	/^static int unicodeIsAlnum(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsException	src/sqlite/sqlite3.c	/^static int unicodeIsException(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeNext	src/sqlite/sqlite3.c	/^static int unicodeNext($/;"	f	file:
unicodeOpen	src/sqlite/sqlite3.c	/^static int unicodeOpen($/;"	f	file:
unicode_cursor	src/sqlite/sqlite3.c	/^struct unicode_cursor {$/;"	s	file:
unicode_cursor	src/sqlite/sqlite3.c	/^typedef struct unicode_cursor unicode_cursor;$/;"	t	typeref:struct:unicode_cursor	file:
unicode_tokenizer	src/sqlite/sqlite3.c	/^struct unicode_tokenizer {$/;"	s	file:
unicode_tokenizer	src/sqlite/sqlite3.c	/^typedef struct unicode_tokenizer unicode_tokenizer;$/;"	t	typeref:struct:unicode_tokenizer	file:
uninlined_columns	src/include/catalog/schema.h	/^  std::vector<int> uninlined_columns;$/;"	m	class:cmudb::Schema
uniqNotNull	src/sqlite/sqlite3.c	/^  unsigned uniqNotNull:1;  \/* True if UNIQUE and NOT NULL for all columns *\/$/;"	m	struct:Index	file:
unit_test_	third_party/gmock/gmock-gtest-all.cc	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultGlobalTestPartResultReporter	file:
unit_test_	third_party/gmock/gmock-gtest-all.cc	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultPerThreadTestPartResultReporter	file:
unixAccess	src/sqlite/sqlite3.c	/^static int unixAccess($/;"	f	file:
unixCheckReservedLock	src/sqlite/sqlite3.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixClose	src/sqlite/sqlite3.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixCurrentTime	src/sqlite/sqlite3.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTime	src/sqlite/sqlite3.c	36608;"	d	file:
unixCurrentTimeInt64	src/sqlite/sqlite3.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixDelete	src/sqlite/sqlite3.c	/^static int unixDelete($/;"	f	file:
unixDeviceCharacteristics	src/sqlite/sqlite3.c	/^static int unixDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
unixDlClose	src/sqlite/sqlite3.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	src/sqlite/sqlite3.c	36474;"	d	file:
unixDlError	src/sqlite/sqlite3.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	src/sqlite/sqlite3.c	36472;"	d	file:
unixDlOpen	src/sqlite/sqlite3.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	src/sqlite/sqlite3.c	36471;"	d	file:
unixDlSym	src/sqlite/sqlite3.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	src/sqlite/sqlite3.c	36473;"	d	file:
unixEnterMutex	src/sqlite/sqlite3.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixFetch	src/sqlite/sqlite3.c	/^static int unixFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
unixFile	src/sqlite/sqlite3.c	/^struct unixFile {$/;"	s	file:
unixFile	src/sqlite/sqlite3.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFileControl	src/sqlite/sqlite3.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileId	src/sqlite/sqlite3.c	/^struct unixFileId {$/;"	s	file:
unixFileLock	src/sqlite/sqlite3.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileSize	src/sqlite/sqlite3.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFullPathname	src/sqlite/sqlite3.c	/^static int unixFullPathname($/;"	f	file:
unixGetLastError	src/sqlite/sqlite3.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetSystemCall	src/sqlite/sqlite3.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetTempname	src/sqlite/sqlite3.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixGetpagesize	src/sqlite/sqlite3.c	/^static int unixGetpagesize(void){$/;"	f	file:
unixInodeInfo	src/sqlite/sqlite3.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	src/sqlite/sqlite3.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixLeaveMutex	src/sqlite/sqlite3.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLock	src/sqlite/sqlite3.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLogError	src/sqlite/sqlite3.c	31429;"	d	file:
unixLogErrorAtLine	src/sqlite/sqlite3.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixMapfile	src/sqlite/sqlite3.c	/^static int unixMapfile(unixFile *pFd, i64 nMap){$/;"	f	file:
unixModeBit	src/sqlite/sqlite3.c	/^static void unixModeBit(unixFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
unixMutexHeld	src/sqlite/sqlite3.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixNextSystemCall	src/sqlite/sqlite3.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixOpen	src/sqlite/sqlite3.c	/^static int unixOpen($/;"	f	file:
unixOpenSharedMemory	src/sqlite/sqlite3.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixRandomness	src/sqlite/sqlite3.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRead	src/sqlite/sqlite3.c	/^static int unixRead($/;"	f	file:
unixRemapfile	src/sqlite/sqlite3.c	/^static void unixRemapfile($/;"	f	file:
unixSectorSize	src/sqlite/sqlite3.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSectorSize	src/sqlite/sqlite3.c	/^static int unixSectorSize(sqlite3_file *id){$/;"	f	file:
unixSetSystemCall	src/sqlite/sqlite3.c	/^static int unixSetSystemCall($/;"	f	file:
unixShm	src/sqlite/sqlite3.c	/^struct unixShm {$/;"	s	file:
unixShm	src/sqlite/sqlite3.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShmBarrier	src/sqlite/sqlite3.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	src/sqlite/sqlite3.c	35008;"	d	file:
unixShmLock	src/sqlite/sqlite3.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	src/sqlite/sqlite3.c	35007;"	d	file:
unixShmMap	src/sqlite/sqlite3.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	src/sqlite/sqlite3.c	35006;"	d	file:
unixShmNode	src/sqlite/sqlite3.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	src/sqlite/sqlite3.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmPurge	src/sqlite/sqlite3.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmRegionPerMap	src/sqlite/sqlite3.c	/^static int unixShmRegionPerMap(void){$/;"	f	file:
unixShmSystemLock	src/sqlite/sqlite3.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmUnmap	src/sqlite/sqlite3.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	src/sqlite/sqlite3.c	35009;"	d	file:
unixSleep	src/sqlite/sqlite3.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSync	src/sqlite/sqlite3.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixTempFileDir	src/sqlite/sqlite3.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTruncate	src/sqlite/sqlite3.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixUnfetch	src/sqlite/sqlite3.c	/^static int unixUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
unixUnlock	src/sqlite/sqlite3.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixUnmapfile	src/sqlite/sqlite3.c	/^static void unixUnmapfile(unixFile *pFd){$/;"	f	file:
unixWrite	src/sqlite/sqlite3.c	/^static int unixWrite($/;"	f	file:
unix_syscall	src/sqlite/sqlite3.c	/^static struct unix_syscall {$/;"	s	file:
unknownFunc	src/sqlite/sqlite3.c	/^static void unknownFunc($/;"	f	file:
unlikely	src/sqlite/sqlite3.c	12203;"	d	file:
unlockBtreeIfUnused	src/sqlite/sqlite3.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeMutex	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE unlockBtreeMutex(Btree *p){$/;"	f	file:
unlock_notify	src/include/sqlite/sqlite3ext.h	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines
unlock_notify	src/sqlite/sqlite3.c	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
untestedTerms	src/sqlite/sqlite3.c	/^  u8 untestedTerms;         \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo	file:
untyped_actions_	third_party/gmock/gmock/gmock.h	/^  UntypedActions untyped_actions_;$/;"	m	class:testing::internal::ExpectationBase
untyped_expectations_	third_party/gmock/gmock/gmock.h	/^  UntypedExpectations untyped_expectations_;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
untyped_on_call_specs_	third_party/gmock/gmock/gmock.h	/^  UntypedOnCallSpecs untyped_on_call_specs_;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
unused	src/sqlite/sqlite3.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
unused_string	src/sqlite/shell.c	/^static const char *unused_string($/;"	f	file:
updateAccumulator	src/sqlite/sqlite3.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateMapping	src/sqlite/sqlite3.c	/^static int updateMapping($/;"	f	file:
updateMaxBlobsize	src/sqlite/sqlite3.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateRangeAffinityStr	src/sqlite/sqlite3.c	/^static void updateRangeAffinityStr($/;"	f	file:
updateVirtualTable	src/sqlite/sqlite3.c	/^static void updateVirtualTable($/;"	f	file:
update_hook	src/include/sqlite/sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines
update_hook	src/sqlite/sqlite3.c	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines	file:
upperFunc	src/sqlite/sqlite3.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
uptr	src/sqlite/sqlite3.c	/^  typedef u32 uptr;$/;"	t	file:
uptr	src/sqlite/sqlite3.c	/^  typedef u64 uptr;$/;"	t	file:
uptr	src/sqlite/sqlite3.c	/^  typedef uintptr_t uptr;$/;"	t	file:
uri_boolean	src/include/sqlite/sqlite3ext.h	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
uri_boolean	src/sqlite/sqlite3.c	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
uri_int64	src/include/sqlite/sqlite3ext.h	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
uri_int64	src/sqlite/sqlite3.c	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
uri_parameter	src/include/sqlite/sqlite3ext.h	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
uri_parameter	src/sqlite/sqlite3.c	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
usable	src/include/sqlite/sqlite3.h	/^unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usable	src/sqlite/sqlite3.c	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
usableSize	src/sqlite/sqlite3.c	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared	file:
usage	src/sqlite/shell.c	/^static void usage(int showDetail){$/;"	f	file:
usageMessage	test/index/b_plus_tree_print_test.cpp	/^std::string usageMessage() {$/;"	f	namespace:cmudb
useJournal	src/sqlite/sqlite3.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useRandomRowid	src/sqlite/sqlite3.c	/^  Bool useRandomRowid:1;  \/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor	file:
useSortingIdx	src/sqlite/sqlite3.c	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo	file:
usedAsColumnCache	src/sqlite/sqlite3.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
user_data	src/include/sqlite/sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
user_data	src/sqlite/sqlite3.c	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
usesStmtJournal	src/sqlite/sqlite3.c	/^  bft usesStmtJournal:1;  \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe	file:
utf8_printf	src/sqlite/shell.c	/^void utf8_printf(FILE *out, const char *zFormat, ...){$/;"	f
utf8_printf	src/sqlite/shell.c	407;"	d	file:
utf8_width_print	src/sqlite/shell.c	/^static void utf8_width_print(FILE *pOut, int w, const char *zUtf){$/;"	f	file:
v	src/sqlite/sqlite3.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v	src/sqlite/sqlite3.c	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame	file:
v	src/sqlite/sqlite3.c	/^  Vdbe *v;$/;"	m	struct:PreUpdate	file:
v	src/sqlite/sqlite3.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
v1	src/sqlite/sqlite3.c	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk	file:
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray10
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray11
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray12
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray13
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray14
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray15
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray16
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray17
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray18
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray19
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray20
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray21
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray22
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray23
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray24
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray25
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray26
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray27
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray28
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray29
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray30
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray31
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray32
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray33
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray34
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray35
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray36
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray37
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray38
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray39
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray40
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray41
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray42
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray43
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray44
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray45
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray46
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray47
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray48
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray49
v10_	third_party/gmock/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray50
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray11
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray12
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray13
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray14
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray15
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray16
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray17
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray18
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray19
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray20
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray21
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray22
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray23
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray24
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray25
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray26
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray27
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray28
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray29
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray30
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray31
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray32
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray33
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray34
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray35
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray36
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray37
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray38
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray39
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray40
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray41
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray42
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray43
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray44
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray45
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray46
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray47
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray48
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray49
v11_	third_party/gmock/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray50
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray12
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray13
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray14
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray15
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray16
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray17
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray18
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray19
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray20
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray21
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray22
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray23
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray24
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray25
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray26
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray27
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray28
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray29
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray30
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray31
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray32
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray33
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray34
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray35
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray36
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray37
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray38
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray39
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray40
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray41
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray42
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray43
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray44
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray45
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray46
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray47
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray48
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray49
v12_	third_party/gmock/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray50
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray13
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray14
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray15
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray16
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray17
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray18
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray19
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray20
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray21
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray22
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray23
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray24
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray25
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray26
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray27
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray28
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray29
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray30
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray31
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray32
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray33
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray34
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray35
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray36
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray37
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray38
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray39
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray40
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray41
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray42
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray43
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray44
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray45
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray46
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray47
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray48
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray49
v13_	third_party/gmock/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray50
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray14
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray15
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray16
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray17
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray18
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray19
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray20
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray21
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray22
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray23
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray24
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray25
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray26
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray27
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray28
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray29
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray30
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray31
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray32
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray33
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray34
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray35
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray36
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray37
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray38
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray39
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray40
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray41
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray42
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray43
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray44
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray45
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray46
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray47
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray48
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray49
v14_	third_party/gmock/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray50
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray15
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray16
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray17
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray18
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray19
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray20
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray21
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray22
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray23
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray24
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray25
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray26
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray27
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray28
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray29
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray30
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray31
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray32
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray33
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray34
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray35
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray36
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray37
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray38
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray39
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray40
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray41
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray42
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray43
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray44
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray45
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray46
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray47
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray48
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray49
v15_	third_party/gmock/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray50
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray16
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray17
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray18
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray19
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray20
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray21
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray22
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray23
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray24
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray25
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray26
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray27
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray28
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray29
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray30
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray31
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray32
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray33
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray34
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray35
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray36
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray37
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray38
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray39
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray40
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray41
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray42
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray43
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray44
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray45
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray46
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray47
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray48
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray49
v16_	third_party/gmock/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray50
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray17
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray18
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray19
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray20
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray21
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray22
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray23
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray24
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray25
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray26
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray27
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray28
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray29
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray30
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray31
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray32
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray33
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray34
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray35
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray36
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray37
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray38
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray39
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray40
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray41
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray42
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray43
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray44
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray45
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray46
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray47
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray48
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray49
v17_	third_party/gmock/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray50
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray18
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray19
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray20
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray21
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray22
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray23
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray24
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray25
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray26
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray27
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray28
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray29
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray30
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray31
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray32
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray33
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray34
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray35
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray36
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray37
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray38
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray39
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray40
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray41
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray42
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray43
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray44
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray45
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray46
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray47
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray48
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray49
v18_	third_party/gmock/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray50
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray19
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray20
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray21
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray22
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray23
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray24
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray25
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray26
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray27
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray28
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray29
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray30
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray31
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray32
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray33
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray34
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray35
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray36
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray37
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray38
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray39
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray40
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray41
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray42
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray43
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray44
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray45
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray46
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray47
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray48
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray49
v19_	third_party/gmock/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray50
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray1
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray10
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray11
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray12
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray13
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray14
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray15
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray16
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray17
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray18
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray19
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray2
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray20
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray21
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray22
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray23
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray24
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray25
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray26
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray27
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray28
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray29
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray3
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray30
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray31
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray32
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray33
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray34
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray35
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray36
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray37
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray38
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray39
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray4
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray40
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray41
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray42
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray43
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray44
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray45
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray46
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray47
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray48
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray49
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray5
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray50
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray6
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray7
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray8
v1_	third_party/gmock/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray9
v2	src/sqlite/sqlite3.c	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk	file:
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray20
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray21
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray22
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray23
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray24
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray25
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray26
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray27
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray28
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray29
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray30
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray31
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray32
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray33
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray34
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray35
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray36
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray37
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray38
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray39
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray40
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray41
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray42
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray43
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray44
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray45
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray46
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray47
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray48
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray49
v20_	third_party/gmock/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray50
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray21
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray22
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray23
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray24
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray25
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray26
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray27
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray28
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray29
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray30
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray31
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray32
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray33
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray34
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray35
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray36
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray37
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray38
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray39
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray40
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray41
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray42
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray43
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray44
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray45
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray46
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray47
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray48
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray49
v21_	third_party/gmock/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray50
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray22
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray23
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray24
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray25
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray26
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray27
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray28
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray29
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray30
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray31
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray32
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray33
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray34
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray35
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray36
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray37
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray38
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray39
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray40
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray41
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray42
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray43
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray44
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray45
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray46
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray47
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray48
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray49
v22_	third_party/gmock/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray50
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray23
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray24
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray25
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray26
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray27
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray28
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray29
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray30
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray31
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray32
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray33
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray34
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray35
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray36
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray37
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray38
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray39
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray40
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray41
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray42
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray43
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray44
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray45
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray46
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray47
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray48
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray49
v23_	third_party/gmock/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray50
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray24
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray25
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray26
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray27
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray28
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray29
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray30
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray31
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray32
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray33
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray34
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray35
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray36
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray37
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray38
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray39
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray40
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray41
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray42
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray43
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray44
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray45
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray46
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray47
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray48
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray49
v24_	third_party/gmock/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray50
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray25
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray26
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray27
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray28
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray29
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray30
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray31
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray32
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray33
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray34
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray35
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray36
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray37
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray38
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray39
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray40
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray41
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray42
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray43
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray44
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray45
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray46
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray47
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray48
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray49
v25_	third_party/gmock/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray50
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray26
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray27
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray28
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray29
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray30
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray31
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray32
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray33
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray34
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray35
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray36
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray37
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray38
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray39
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray40
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray41
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray42
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray43
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray44
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray45
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray46
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray47
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray48
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray49
v26_	third_party/gmock/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray50
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray27
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray28
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray29
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray30
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray31
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray32
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray33
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray34
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray35
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray36
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray37
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray38
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray39
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray40
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray41
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray42
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray43
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray44
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray45
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray46
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray47
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray48
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray49
v27_	third_party/gmock/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray50
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray28
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray29
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray30
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray31
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray32
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray33
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray34
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray35
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray36
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray37
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray38
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray39
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray40
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray41
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray42
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray43
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray44
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray45
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray46
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray47
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray48
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray49
v28_	third_party/gmock/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray50
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray29
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray30
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray31
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray32
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray33
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray34
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray35
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray36
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray37
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray38
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray39
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray40
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray41
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray42
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray43
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray44
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray45
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray46
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray47
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray48
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray49
v29_	third_party/gmock/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray50
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray10
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray11
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray12
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray13
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray14
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray15
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray16
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray17
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray18
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray19
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray2
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray20
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray21
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray22
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray23
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray24
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray25
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray26
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray27
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray28
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray29
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray3
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray30
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray31
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray32
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray33
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray34
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray35
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray36
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray37
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray38
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray39
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray4
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray40
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray41
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray42
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray43
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray44
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray45
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray46
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray47
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray48
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray49
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray5
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray50
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray6
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray7
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray8
v2_	third_party/gmock/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray9
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray30
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray31
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray32
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray33
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray34
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray35
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray36
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray37
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray38
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray39
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray40
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray41
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray42
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray43
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray44
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray45
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray46
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray47
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray48
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray49
v30_	third_party/gmock/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray50
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray31
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray32
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray33
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray34
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray35
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray36
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray37
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray38
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray39
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray40
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray41
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray42
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray43
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray44
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray45
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray46
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray47
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray48
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray49
v31_	third_party/gmock/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray50
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray32
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray33
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray34
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray35
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray36
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray37
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray38
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray39
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray40
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray41
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray42
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray43
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray44
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray45
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray46
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray47
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray48
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray49
v32_	third_party/gmock/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray50
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray33
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray34
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray35
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray36
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray37
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray38
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray39
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray40
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray41
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray42
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray43
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray44
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray45
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray46
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray47
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray48
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray49
v33_	third_party/gmock/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray50
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray34
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray35
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray36
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray37
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray38
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray39
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray40
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray41
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray42
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray43
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray44
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray45
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray46
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray47
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray48
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray49
v34_	third_party/gmock/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray50
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray35
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray36
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray37
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray38
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray39
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray40
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray41
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray42
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray43
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray44
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray45
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray46
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray47
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray48
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray49
v35_	third_party/gmock/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray50
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray36
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray37
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray38
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray39
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray40
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray41
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray42
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray43
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray44
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray45
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray46
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray47
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray48
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray49
v36_	third_party/gmock/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray50
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray37
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray38
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray39
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray40
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray41
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray42
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray43
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray44
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray45
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray46
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray47
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray48
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray49
v37_	third_party/gmock/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray50
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray38
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray39
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray40
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray41
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray42
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray43
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray44
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray45
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray46
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray47
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray48
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray49
v38_	third_party/gmock/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray50
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray39
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray40
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray41
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray42
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray43
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray44
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray45
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray46
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray47
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray48
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray49
v39_	third_party/gmock/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray50
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray10
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray11
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray12
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray13
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray14
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray15
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray16
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray17
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray18
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray19
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray20
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray21
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray22
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray23
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray24
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray25
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray26
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray27
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray28
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray29
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray3
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray30
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray31
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray32
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray33
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray34
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray35
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray36
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray37
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray38
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray39
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray4
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray40
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray41
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray42
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray43
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray44
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray45
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray46
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray47
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray48
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray49
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray5
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray50
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray6
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray7
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray8
v3_	third_party/gmock/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray9
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray40
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray41
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray42
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray43
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray44
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray45
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray46
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray47
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray48
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray49
v40_	third_party/gmock/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray50
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray41
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray42
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray43
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray44
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray45
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray46
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray47
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray48
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray49
v41_	third_party/gmock/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray50
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray42
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray43
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray44
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray45
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray46
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray47
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray48
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray49
v42_	third_party/gmock/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray50
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray43
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray44
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray45
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray46
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray47
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray48
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray49
v43_	third_party/gmock/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray50
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray44
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray45
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray46
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray47
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray48
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray49
v44_	third_party/gmock/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray50
v45_	third_party/gmock/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray45
v45_	third_party/gmock/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray46
v45_	third_party/gmock/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray47
v45_	third_party/gmock/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray48
v45_	third_party/gmock/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray49
v45_	third_party/gmock/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray50
v46_	third_party/gmock/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray46
v46_	third_party/gmock/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray47
v46_	third_party/gmock/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray48
v46_	third_party/gmock/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray49
v46_	third_party/gmock/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray50
v47_	third_party/gmock/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray47
v47_	third_party/gmock/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray48
v47_	third_party/gmock/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray49
v47_	third_party/gmock/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray50
v48_	third_party/gmock/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray48
v48_	third_party/gmock/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray49
v48_	third_party/gmock/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray50
v49_	third_party/gmock/gtest/gtest.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray49
v49_	third_party/gmock/gtest/gtest.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray50
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray10
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray11
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray12
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray13
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray14
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray15
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray16
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray17
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray18
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray19
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray20
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray21
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray22
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray23
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray24
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray25
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray26
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray27
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray28
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray29
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray30
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray31
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray32
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray33
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray34
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray35
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray36
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray37
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray38
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray39
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray4
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray40
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray41
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray42
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray43
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray44
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray45
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray46
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray47
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray48
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray49
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray5
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray50
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray6
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray7
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray8
v4_	third_party/gmock/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray9
v50_	third_party/gmock/gtest/gtest.h	/^  const T50 v50_;$/;"	m	class:testing::internal::ValueArray50
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray10
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray11
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray12
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray13
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray14
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray15
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray16
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray17
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray18
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray19
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray20
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray21
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray22
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray23
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray24
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray25
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray26
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray27
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray28
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray29
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray30
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray31
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray32
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray33
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray34
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray35
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray36
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray37
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray38
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray39
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray40
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray41
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray42
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray43
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray44
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray45
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray46
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray47
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray48
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray49
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray5
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray50
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray6
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray7
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray8
v5_	third_party/gmock/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray9
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray10
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray11
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray12
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray13
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray14
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray15
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray16
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray17
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray18
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray19
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray20
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray21
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray22
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray23
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray24
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray25
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray26
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray27
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray28
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray29
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray30
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray31
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray32
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray33
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray34
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray35
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray36
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray37
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray38
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray39
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray40
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray41
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray42
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray43
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray44
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray45
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray46
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray47
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray48
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray49
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray50
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray6
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray7
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray8
v6_	third_party/gmock/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray9
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray10
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray11
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray12
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray13
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray14
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray15
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray16
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray17
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray18
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray19
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray20
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray21
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray22
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray23
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray24
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray25
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray26
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray27
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray28
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray29
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray30
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray31
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray32
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray33
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray34
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray35
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray36
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray37
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray38
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray39
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray40
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray41
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray42
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray43
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray44
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray45
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray46
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray47
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray48
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray49
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray50
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray7
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray8
v7_	third_party/gmock/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray9
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray10
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray11
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray12
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray13
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray14
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray15
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray16
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray17
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray18
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray19
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray20
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray21
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray22
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray23
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray24
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray25
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray26
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray27
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray28
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray29
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray30
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray31
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray32
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray33
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray34
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray35
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray36
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray37
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray38
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray39
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray40
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray41
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray42
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray43
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray44
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray45
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray46
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray47
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray48
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray49
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray50
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray8
v8_	third_party/gmock/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray9
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray10
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray11
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray12
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray13
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray14
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray15
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray16
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray17
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray18
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray19
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray20
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray21
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray22
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray23
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray24
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray25
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray26
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray27
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray28
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray29
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray30
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray31
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray32
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray33
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray34
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray35
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray36
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray37
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray38
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray39
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray40
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray41
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray42
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray43
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray44
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray45
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray46
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray47
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray48
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray49
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray50
v9_	third_party/gmock/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray9
valid	src/sqlite/shell.c	/^  int valid;          \/* Is there legit data in here? *\/$/;"	m	struct:SavedModeInfo	file:
validHMS	src/sqlite/sqlite3.c	/^  char validHMS;      \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validJD	src/sqlite/sqlite3.c	/^  char validJD;       \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validJulianDay	src/sqlite/sqlite3.c	/^static int validJulianDay(sqlite3_int64 iJD){$/;"	f	file:
validTZ	src/sqlite/sqlite3.c	/^  char validTZ;       \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validYMD	src/sqlite/sqlite3.c	/^  char validYMD;      \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
value	src/sqlite/sqlite3.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon36::__anon37	file:
value	third_party/gmock/gmock/gmock.h	/^  enum { value = kOther };  \/\/ The default kind.$/;"	e	enum:testing::internal::KindOf::__anon1
value	third_party/gmock/gtest/gtest.h	/^  const char* value() const {$/;"	f	class:testing::TestProperty
value	third_party/gmock/gtest/gtest.h	/^  const char* value;$/;"	m	struct:testing::internal::ConstCharPtr
value	third_party/gmock/gtest/gtest.h	/^  static const bool value = __is_convertible(From, To);$/;"	m	class:testing::internal::ImplicitlyConvertible
value	third_party/gmock/gtest/gtest.h	/^  static const bool value = bool_value;$/;"	m	struct:std::tr1::bool_constant
value	third_party/gmock/gtest/gtest.h	/^  static const bool value =$/;"	m	class:testing::internal::ImplicitlyConvertible
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 0;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 10;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 1;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 2;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 3;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 4;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 5;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 6;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 7;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 8;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^  static const int value = 9;$/;"	m	struct:std::tr1::tuple_size
value	third_party/gmock/gtest/gtest.h	/^const bool ImplicitlyConvertible<From, To>::value;$/;"	m	class:testing::internal::ImplicitlyConvertible
value	third_party/gmock/gtest/gtest.h	/^template <bool bool_value> const bool bool_constant<bool_value>::value;$/;"	m	class:std::tr1::bool_constant
valueBytes	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int valueBytes(sqlite3_value *pVal, u8 enc){$/;"	f	file:
valueFromExpr	src/sqlite/sqlite3.c	/^static int valueFromExpr($/;"	f	file:
valueFromFunction	src/sqlite/sqlite3.c	/^static int valueFromFunction($/;"	f	file:
valueFromFunction	src/sqlite/sqlite3.c	71361;"	d	file:
valueNew	src/sqlite/sqlite3.c	/^static sqlite3_value *valueNew(sqlite3 *db, struct ValueNewStat4Ctx *p){$/;"	f	file:
valueToText	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE const void *valueToText(sqlite3_value* pVal, u8 enc){$/;"	f	file:
value_	src/include/type/value.h	/^  } value_;$/;"	m	class:cmudb::Value	typeref:union:cmudb::Value::Val
value_	third_party/gmock/gmock/gmock.h	/^    Result value_;$/;"	m	class:testing::internal::ReturnAction::Impl
value_	third_party/gmock/gmock/gmock.h	/^    T value_;$/;"	m	class:testing::internal::ReturnRefOfCopyAction::Impl
value_	third_party/gmock/gmock/gmock.h	/^  R value_;$/;"	m	class:testing::internal::ReturnAction
value_	third_party/gmock/gmock/gmock.h	/^  T value_;$/;"	m	class:testing::internal::ActionResultHolder
value_	third_party/gmock/gmock/gmock.h	/^  const A value_;$/;"	m	class:testing::internal::SetArgumentPointeeAction
value_	third_party/gmock/gmock/gmock.h	/^  const T value_;$/;"	m	class:testing::internal::ReturnRefOfCopyAction
value_	third_party/gmock/gmock/gmock.h	/^  const T2 value_;$/;"	m	class:testing::internal::AssignAction
value_	third_party/gmock/gmock/gmock.h	/^  static const T* value_;$/;"	m	class:testing::DefaultValue
value_	third_party/gmock/gmock/gmock.h	/^const T* DefaultValue<T>::value_ = NULL;$/;"	m	class:testing::DefaultValue
value_	third_party/gmock/gtest/gtest.h	/^    RawType value_;  \/\/ The raw floating-point number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
value_	third_party/gmock/gtest/gtest.h	/^    T value_;$/;"	m	class:std::tr1::ThreadLocal::ValueHolder
value_	third_party/gmock/gtest/gtest.h	/^    T value_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
value_	third_party/gmock/gtest/gtest.h	/^    mutable scoped_ptr<const T> value_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
value_	third_party/gmock/gtest/gtest.h	/^  T value_;$/;"	m	class:std::tr1::ThreadLocal
value_	third_party/gmock/gtest/gtest.h	/^  T* value_;$/;"	m	class:testing::internal::linked_ptr
value_	third_party/gmock/gtest/gtest.h	/^  std::string value_;$/;"	m	class:testing::TestProperty
value_blob	src/include/sqlite/sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_blob	src/sqlite/sqlite3.c	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes	src/include/sqlite/sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes	src/sqlite/sqlite3.c	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes16	src/include/sqlite/sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes16	src/sqlite/sqlite3.c	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_double	src/include/sqlite/sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_double	src/sqlite/sqlite3.c	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_dup	src/include/sqlite/sqlite3ext.h	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_dup	src/sqlite/sqlite3.c	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_free	src/include/sqlite/sqlite3ext.h	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_free	src/sqlite/sqlite3.c	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int	src/include/sqlite/sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int	src/sqlite/sqlite3.c	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int64	src/include/sqlite/sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int64	src/sqlite/sqlite3.c	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_numeric_type	src/include/sqlite/sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_numeric_type	src/sqlite/sqlite3.c	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_param	third_party/gmock/gtest/gtest.h	/^  const char* value_param() const {$/;"	f	class:testing::TestInfo
value_param_	third_party/gmock/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> value_param_;$/;"	m	class:testing::TestInfo
value_subtype	src/include/sqlite/sqlite3ext.h	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_subtype	src/sqlite/sqlite3.c	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text	src/include/sqlite/sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text	src/sqlite/sqlite3.c	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16	src/include/sqlite/sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16	src/sqlite/sqlite3.c	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16be	src/include/sqlite/sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16be	src/sqlite/sqlite3.c	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16le	src/include/sqlite/sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16le	src/sqlite/sqlite3.c	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_type	src/include/sqlite/sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_type	src/sqlite/sqlite3.c	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_type	third_party/gmock/gmock/gmock.h	/^  typedef Expectation::Set::value_type value_type;$/;"	t	class:testing::ExpectationSet
value_type	third_party/gmock/gtest/gtest.h	/^  typedef Element value_type;$/;"	t	class:testing::internal::NativeArray
value_type	third_party/gmock/gtest/gtest.h	/^  typedef T value_type;$/;"	t	class:testing::internal::ParamIterator
value_type	third_party/gmock/gtest/gtest.h	/^  typedef T value_type;$/;"	t	struct:std::tr1::IteratorTraits
value_type	third_party/gmock/gtest/gtest.h	/^  typedef typename Iterator::value_type value_type;$/;"	t	struct:std::tr1::IteratorTraits
variable_length	src/include/catalog/column.h	/^  int32_t variable_length = -1;$/;"	m	class:cmudb::Column
varlen	src/include/type/value.h	/^    char *varlen;$/;"	m	union:cmudb::Value::Val
vdbeAssertFieldCountWithinLimits	src/sqlite/sqlite3.c	/^static void vdbeAssertFieldCountWithinLimits($/;"	f	file:
vdbeAssertFieldCountWithinLimits	src/sqlite/sqlite3.c	75543;"	d	file:
vdbeChangeP4Full	src/sqlite/sqlite3.c	/^static void SQLITE_NOINLINE vdbeChangeP4Full($/;"	f	file:
vdbeCloseStatement	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int vdbeCloseStatement(Vdbe *p, int eOp){$/;"	f	file:
vdbeClrCopy	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void vdbeClrCopy(Mem *pTo, const Mem *pFrom, int eType){$/;"	f	file:
vdbeCommit	src/sqlite/sqlite3.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeCompareMemString	src/sqlite/sqlite3.c	/^static int vdbeCompareMemString($/;"	f	file:
vdbeFreeOpArray	src/sqlite/sqlite3.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeFreeUnpacked	src/sqlite/sqlite3.c	/^static void vdbeFreeUnpacked(sqlite3 *db, int nField, UnpackedRecord *p){$/;"	f	file:
vdbeIncrBgPopulate	src/sqlite/sqlite3.c	/^static int vdbeIncrBgPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrFree	src/sqlite/sqlite3.c	/^static void vdbeIncrFree(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrMergerNew	src/sqlite/sqlite3.c	/^static int vdbeIncrMergerNew($/;"	f	file:
vdbeIncrMergerSetThreads	src/sqlite/sqlite3.c	/^static void vdbeIncrMergerSetThreads(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulate	src/sqlite/sqlite3.c	/^static int vdbeIncrPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulateThread	src/sqlite/sqlite3.c	/^static void *vdbeIncrPopulateThread(void *pCtx){$/;"	f	file:
vdbeIncrSwap	src/sqlite/sqlite3.c	/^static int vdbeIncrSwap(IncrMerger *pIncr){$/;"	f	file:
vdbeInvokeSqllog	src/sqlite/sqlite3.c	/^static void vdbeInvokeSqllog(Vdbe *v){$/;"	f	file:
vdbeInvokeSqllog	src/sqlite/sqlite3.c	74679;"	d	file:
vdbeLeave	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void vdbeLeave(Vdbe *p){$/;"	f	file:
vdbeMemAddTerminator	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int vdbeMemAddTerminator(Mem *pMem){$/;"	f	file:
vdbeMemClear	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void vdbeMemClear(Mem *p){$/;"	f	file:
vdbeMemClearExternAndSetNull	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void vdbeMemClearExternAndSetNull(Mem *p){$/;"	f	file:
vdbeMemFromBtreeResize	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int vdbeMemFromBtreeResize($/;"	f	file:
vdbeMergeEngineCompare	src/sqlite/sqlite3.c	/^static void vdbeMergeEngineCompare($/;"	f	file:
vdbeMergeEngineFree	src/sqlite/sqlite3.c	/^static void vdbeMergeEngineFree(MergeEngine *pMerger){$/;"	f	file:
vdbeMergeEngineInit	src/sqlite/sqlite3.c	/^static int vdbeMergeEngineInit($/;"	f	file:
vdbeMergeEngineLevel0	src/sqlite/sqlite3.c	/^static int vdbeMergeEngineLevel0($/;"	f	file:
vdbeMergeEngineNew	src/sqlite/sqlite3.c	/^static MergeEngine *vdbeMergeEngineNew(int nReader){$/;"	f	file:
vdbeMergeEngineStep	src/sqlite/sqlite3.c	/^static int vdbeMergeEngineStep($/;"	f	file:
vdbePmaReadBlob	src/sqlite/sqlite3.c	/^static int vdbePmaReadBlob($/;"	f	file:
vdbePmaReadVarint	src/sqlite/sqlite3.c	/^static int vdbePmaReadVarint(PmaReader *p, u64 *pnOut){$/;"	f	file:
vdbePmaReaderBgIncrInit	src/sqlite/sqlite3.c	/^static void *vdbePmaReaderBgIncrInit(void *pCtx){$/;"	f	file:
vdbePmaReaderClear	src/sqlite/sqlite3.c	/^static void vdbePmaReaderClear(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderIncrInit	src/sqlite/sqlite3.c	/^static int vdbePmaReaderIncrInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrMergeInit	src/sqlite/sqlite3.c	/^static int vdbePmaReaderIncrMergeInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderInit	src/sqlite/sqlite3.c	/^static int vdbePmaReaderInit($/;"	f	file:
vdbePmaReaderNext	src/sqlite/sqlite3.c	/^static int vdbePmaReaderNext(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderSeek	src/sqlite/sqlite3.c	/^static int vdbePmaReaderSeek($/;"	f	file:
vdbePmaWriteBlob	src/sqlite/sqlite3.c	/^static void vdbePmaWriteBlob(PmaWriter *p, u8 *pData, int nData){$/;"	f	file:
vdbePmaWriteVarint	src/sqlite/sqlite3.c	/^static void vdbePmaWriteVarint(PmaWriter *p, u64 iVal){$/;"	f	file:
vdbePmaWriterFinish	src/sqlite/sqlite3.c	/^static int vdbePmaWriterFinish(PmaWriter *p, i64 *piEof){$/;"	f	file:
vdbePmaWriterInit	src/sqlite/sqlite3.c	/^static void vdbePmaWriterInit($/;"	f	file:
vdbeRecordCompareDebug	src/sqlite/sqlite3.c	/^static int vdbeRecordCompareDebug($/;"	f	file:
vdbeRecordCompareInt	src/sqlite/sqlite3.c	/^static int vdbeRecordCompareInt($/;"	f	file:
vdbeRecordCompareString	src/sqlite/sqlite3.c	/^static int vdbeRecordCompareString($/;"	f	file:
vdbeRecordDecodeInt	src/sqlite/sqlite3.c	/^static i64 vdbeRecordDecodeInt(u32 serial_type, const u8 *aKey){$/;"	f	file:
vdbeReleaseAndSetInt64	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE void vdbeReleaseAndSetInt64(Mem *pMem, i64 val){$/;"	f	file:
vdbeSafety	src/sqlite/sqlite3.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	src/sqlite/sqlite3.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSortAllocUnpacked	src/sqlite/sqlite3.c	/^static int vdbeSortAllocUnpacked(SortSubtask *pTask){$/;"	f	file:
vdbeSortSubtaskCleanup	src/sqlite/sqlite3.c	/^static void vdbeSortSubtaskCleanup(sqlite3 *db, SortSubtask *pTask){$/;"	f	file:
vdbeSorterAddToTree	src/sqlite/sqlite3.c	/^static int vdbeSorterAddToTree($/;"	f	file:
vdbeSorterBlockDebug	src/sqlite/sqlite3.c	/^static void vdbeSorterBlockDebug($/;"	f	file:
vdbeSorterBlockDebug	src/sqlite/sqlite3.c	87566;"	d	file:
vdbeSorterCompare	src/sqlite/sqlite3.c	/^static int vdbeSorterCompare($/;"	f	file:
vdbeSorterCompareInt	src/sqlite/sqlite3.c	/^static int vdbeSorterCompareInt($/;"	f	file:
vdbeSorterCompareTail	src/sqlite/sqlite3.c	/^static int vdbeSorterCompareTail($/;"	f	file:
vdbeSorterCompareText	src/sqlite/sqlite3.c	/^static int vdbeSorterCompareText($/;"	f	file:
vdbeSorterCreateThread	src/sqlite/sqlite3.c	/^static int vdbeSorterCreateThread($/;"	f	file:
vdbeSorterExtendFile	src/sqlite/sqlite3.c	/^static void vdbeSorterExtendFile(sqlite3 *db, sqlite3_file *pFd, i64 nByte){$/;"	f	file:
vdbeSorterExtendFile	src/sqlite/sqlite3.c	87757;"	d	file:
vdbeSorterFlushPMA	src/sqlite/sqlite3.c	/^static int vdbeSorterFlushPMA(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterFlushThread	src/sqlite/sqlite3.c	/^static void *vdbeSorterFlushThread(void *pCtx){$/;"	f	file:
vdbeSorterGetCompare	src/sqlite/sqlite3.c	/^static SorterCompare vdbeSorterGetCompare(VdbeSorter *p){$/;"	f	file:
vdbeSorterJoinAll	src/sqlite/sqlite3.c	/^static int vdbeSorterJoinAll(VdbeSorter *pSorter, int rcin){$/;"	f	file:
vdbeSorterJoinAll	src/sqlite/sqlite3.c	87626;"	d	file:
vdbeSorterJoinThread	src/sqlite/sqlite3.c	/^static int vdbeSorterJoinThread(SortSubtask *pTask){$/;"	f	file:
vdbeSorterJoinThread	src/sqlite/sqlite3.c	87627;"	d	file:
vdbeSorterListToPMA	src/sqlite/sqlite3.c	/^static int vdbeSorterListToPMA(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterMapFile	src/sqlite/sqlite3.c	/^static int vdbeSorterMapFile(SortSubtask *pTask, SorterFile *pFile, u8 **pp){$/;"	f	file:
vdbeSorterMerge	src/sqlite/sqlite3.c	/^static SorterRecord *vdbeSorterMerge($/;"	f	file:
vdbeSorterMergeTreeBuild	src/sqlite/sqlite3.c	/^static int vdbeSorterMergeTreeBuild($/;"	f	file:
vdbeSorterOpenTempFile	src/sqlite/sqlite3.c	/^static int vdbeSorterOpenTempFile($/;"	f	file:
vdbeSorterPopulateDebug	src/sqlite/sqlite3.c	/^static void vdbeSorterPopulateDebug($/;"	f	file:
vdbeSorterPopulateDebug	src/sqlite/sqlite3.c	87565;"	d	file:
vdbeSorterRecordFree	src/sqlite/sqlite3.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRewindDebug	src/sqlite/sqlite3.c	/^static void vdbeSorterRewindDebug(const char *zEvent){$/;"	f	file:
vdbeSorterRewindDebug	src/sqlite/sqlite3.c	87564;"	d	file:
vdbeSorterRowkey	src/sqlite/sqlite3.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterSetupMerge	src/sqlite/sqlite3.c	/^static int vdbeSorterSetupMerge(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterSort	src/sqlite/sqlite3.c	/^static int vdbeSorterSort(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterTreeDepth	src/sqlite/sqlite3.c	/^static int vdbeSorterTreeDepth(int nPMA){$/;"	f	file:
vdbeSorterWorkDebug	src/sqlite/sqlite3.c	/^static void vdbeSorterWorkDebug(SortSubtask *pTask, const char *zEvent){$/;"	f	file:
vdbeSorterWorkDebug	src/sqlite/sqlite3.c	87563;"	d	file:
vdbeTakeBranch	src/sqlite/sqlite3.c	/^  static void vdbeTakeBranch(int iSrcLine, u8 I, u8 M){$/;"	f	file:
vdbeUnbind	src/sqlite/sqlite3.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
vdbeUnpackRecord	src/sqlite/sqlite3.c	/^static UnpackedRecord *vdbeUnpackRecord($/;"	f	file:
vdbeVComment	src/sqlite/sqlite3.c	/^static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){$/;"	f	file:
verifyDbFile	src/sqlite/sqlite3.c	/^static void verifyDbFile(unixFile *pFile){$/;"	f	file:
versionFunc	src/sqlite/sqlite3.c	/^static void versionFunc($/;"	f	file:
vfsFlags	src/sqlite/sqlite3.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsList	src/sqlite/sqlite3.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	src/sqlite/sqlite3.c	20826;"	d	file:
vfsUnlink	src/sqlite/sqlite3.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfs_find	src/include/sqlite/sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines
vfs_find	src/sqlite/sqlite3.c	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_register	src/include/sqlite/sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines
vfs_register	src/sqlite/sqlite3.c	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	file:
vfs_unregister	src/include/sqlite/sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines
vfs_unregister	src/sqlite/sqlite3.c	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	file:
viaCoroutine	src/sqlite/sqlite3.c	/^      unsigned viaCoroutine :1;  \/* Implemented as a co-routine *\/$/;"	m	struct:SrcList::SrcList_item::__anon17	file:
virtual_table_	src/include/vtable/virtual_table.h	/^  VirtualTable *virtual_table_;$/;"	m	class:cmudb::Cursor
vmprintf	src/include/sqlite/sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vmprintf	src/sqlite/sqlite3.c	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vsnprintf	src/include/sqlite/sqlite3ext.h	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vsnprintf	src/sqlite/sqlite3.c	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vsnprintf	third_party/gmock/gmock-gtest-all.cc	1623;"	d	file:
vtab	src/sqlite/sqlite3.c	/^    } vtab;$/;"	m	union:WhereLoop::__anon32	typeref:struct:WhereLoop::__anon32::__anon34	file:
vtabBestIndex	src/sqlite/sqlite3.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabCallConstructor	src/sqlite/sqlite3.c	/^static int vtabCallConstructor($/;"	f	file:
vtabDisconnectAll	src/sqlite/sqlite3.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabOnConflict	src/sqlite/sqlite3.c	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3	file:
vtab_config	src/include/sqlite/sqlite3ext.h	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines
vtab_config	src/sqlite/sqlite3.c	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines	file:
vtab_on_conflict	src/include/sqlite/sqlite3ext.h	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
vtab_on_conflict	src/sqlite/sqlite3.c	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
vxworksFileId	src/sqlite/sqlite3.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileList	src/sqlite/sqlite3.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFindFileId	src/sqlite/sqlite3.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksIoFinder	src/sqlite/sqlite3.c	/^  *(*const vxworksIoFinder)(const char*,unixFile*) = vxworksIoFinderImpl;$/;"	v	file:
vxworksIoFinderImpl	src/sqlite/sqlite3.c	/^static const sqlite3_io_methods *vxworksIoFinderImpl($/;"	f	file:
vxworksReleaseFileId	src/sqlite/sqlite3.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksSimplifyName	src/sqlite/sqlite3.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
walBusyLock	src/sqlite/sqlite3.c	/^static int walBusyLock($/;"	f	file:
walCheckpoint	src/sqlite/sqlite3.c	/^static int walCheckpoint($/;"	f	file:
walChecksumBytes	src/sqlite/sqlite3.c	/^static void walChecksumBytes($/;"	f	file:
walCkptInfo	src/sqlite/sqlite3.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCleanupHash	src/sqlite/sqlite3.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walDecodeFrame	src/sqlite/sqlite3.c	/^static int walDecodeFrame($/;"	f	file:
walEncodeFrame	src/sqlite/sqlite3.c	/^static void walEncodeFrame($/;"	f	file:
walFrameOffset	src/sqlite/sqlite3.c	55309;"	d	file:
walFramePage	src/sqlite/sqlite3.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePgno	src/sqlite/sqlite3.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walHash	src/sqlite/sqlite3.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHashGet	src/sqlite/sqlite3.c	/^static int walHashGet($/;"	f	file:
walIndexAppend	src/sqlite/sqlite3.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexClose	src/sqlite/sqlite3.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexHdr	src/sqlite/sqlite3.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexPage	src/sqlite/sqlite3.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexReadHdr	src/sqlite/sqlite3.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexRecover	src/sqlite/sqlite3.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexTryHdr	src/sqlite/sqlite3.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexWriteHdr	src/sqlite/sqlite3.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIteratorFree	src/sqlite/sqlite3.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorInit	src/sqlite/sqlite3.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorNext	src/sqlite/sqlite3.c	/^static int walIteratorNext($/;"	f	file:
walLimitSize	src/sqlite/sqlite3.c	/^static void walLimitSize(Wal *pWal, i64 nMax){$/;"	f	file:
walLockExclusive	src/sqlite/sqlite3.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockName	src/sqlite/sqlite3.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockShared	src/sqlite/sqlite3.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walMerge	src/sqlite/sqlite3.c	/^static void walMerge($/;"	f	file:
walMergesort	src/sqlite/sqlite3.c	/^static void walMergesort($/;"	f	file:
walNextHash	src/sqlite/sqlite3.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walPagesize	src/sqlite/sqlite3.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walRestartHdr	src/sqlite/sqlite3.c	/^static void walRestartHdr(Wal *pWal, u32 salt1){$/;"	f	file:
walRestartLog	src/sqlite/sqlite3.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walRewriteChecksums	src/sqlite/sqlite3.c	/^static int walRewriteChecksums(Wal *pWal, u32 iLast){$/;"	f	file:
walShmBarrier	src/sqlite/sqlite3.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walSyncFlags	src/sqlite/sqlite3.c	/^  u8 walSyncFlags;            \/* SYNC_NORMAL or SYNC_FULL for wal writes *\/$/;"	m	struct:Pager	file:
walTryBeginRead	src/sqlite/sqlite3.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walUnlockExclusive	src/sqlite/sqlite3.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockShared	src/sqlite/sqlite3.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walWriteOneFrame	src/sqlite/sqlite3.c	/^static int walWriteOneFrame($/;"	f	file:
walWriteToLog	src/sqlite/sqlite3.c	/^static int walWriteToLog($/;"	f	file:
wal_autocheckpoint	src/include/sqlite/sqlite3ext.h	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
wal_autocheckpoint	src/sqlite/sqlite3.c	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint	src/include/sqlite/sqlite3ext.h	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint	src/sqlite/sqlite3.c	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint_v2	src/include/sqlite/sqlite3ext.h	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint_v2	src/sqlite/sqlite3.c	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines	file:
wal_hook	src/include/sqlite/sqlite3ext.h	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines
wal_hook	src/sqlite/sqlite3.c	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
walkExpr	src/sqlite/sqlite3.c	/^static SQLITE_NOINLINE int walkExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
walkerDepth	src/sqlite/sqlite3.c	/^  int walkerDepth;                          \/* Number of subqueries *\/$/;"	m	struct:Walker	file:
wantToLock	src/sqlite/sqlite3.c	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree	file:
wc	src/sqlite/sqlite3.c	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo	file:
wc	src/sqlite/sqlite3.c	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo	file:
wctrlFlags	src/sqlite/sqlite3.c	/^  u16 wctrlFlags;           \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo	file:
whereAndInfoDelete	src/sqlite/sqlite3.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereClauseInsert	src/sqlite/sqlite3.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u16 wtFlags){$/;"	f	file:
whereCombineDisjuncts	src/sqlite/sqlite3.c	/^static void whereCombineDisjuncts($/;"	f	file:
whereEqualScanEst	src/sqlite/sqlite3.c	/^static int whereEqualScanEst($/;"	f	file:
whereForeignKeys	src/sqlite/sqlite3.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereInScanEst	src/sqlite/sqlite3.c	/^static int whereInScanEst($/;"	f	file:
whereIndexExprTrans	src/sqlite/sqlite3.c	/^static void whereIndexExprTrans($/;"	f	file:
whereIndexExprTransNode	src/sqlite/sqlite3.c	/^static int whereIndexExprTransNode(Walker *p, Expr *pExpr){$/;"	f	file:
whereInfoFree	src/sqlite/sqlite3.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereKeyStats	src/sqlite/sqlite3.c	/^static int whereKeyStats($/;"	f	file:
whereLikeOptimizationStringFixup	src/sqlite/sqlite3.c	/^static void whereLikeOptimizationStringFixup($/;"	f	file:
whereLikeOptimizationStringFixup	src/sqlite/sqlite3.c	128108;"	d	file:
whereLoopAddAll	src/sqlite/sqlite3.c	/^static int whereLoopAddAll(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereLoopAddBtree	src/sqlite/sqlite3.c	/^static int whereLoopAddBtree($/;"	f	file:
whereLoopAddBtreeIndex	src/sqlite/sqlite3.c	/^static int whereLoopAddBtreeIndex($/;"	f	file:
whereLoopAddOr	src/sqlite/sqlite3.c	/^static int whereLoopAddOr($/;"	f	file:
whereLoopAddVirtual	src/sqlite/sqlite3.c	/^static int whereLoopAddVirtual($/;"	f	file:
whereLoopAddVirtualOne	src/sqlite/sqlite3.c	/^static int whereLoopAddVirtualOne($/;"	f	file:
whereLoopAdjustCost	src/sqlite/sqlite3.c	/^static void whereLoopAdjustCost(const WhereLoop *p, WhereLoop *pTemplate){$/;"	f	file:
whereLoopCheaperProperSubset	src/sqlite/sqlite3.c	/^static int whereLoopCheaperProperSubset($/;"	f	file:
whereLoopClear	src/sqlite/sqlite3.c	/^static void whereLoopClear(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClearUnion	src/sqlite/sqlite3.c	/^static void whereLoopClearUnion(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopDelete	src/sqlite/sqlite3.c	/^static void whereLoopDelete(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopFindLesser	src/sqlite/sqlite3.c	/^static WhereLoop **whereLoopFindLesser($/;"	f	file:
whereLoopInit	src/sqlite/sqlite3.c	/^static void whereLoopInit(WhereLoop *p){$/;"	f	file:
whereLoopInsert	src/sqlite/sqlite3.c	/^static int whereLoopInsert(WhereLoopBuilder *pBuilder, WhereLoop *pTemplate){$/;"	f	file:
whereLoopOutputAdjust	src/sqlite/sqlite3.c	/^static void whereLoopOutputAdjust($/;"	f	file:
whereLoopPrint	src/sqlite/sqlite3.c	/^static void whereLoopPrint(WhereLoop *p, WhereClause *pWC){$/;"	f	file:
whereLoopResize	src/sqlite/sqlite3.c	/^static int whereLoopResize(sqlite3 *db, WhereLoop *p, int n){$/;"	f	file:
whereLoopXfer	src/sqlite/sqlite3.c	/^static int whereLoopXfer(sqlite3 *db, WhereLoop *pTo, WhereLoop *pFrom){$/;"	f	file:
whereNthSubterm	src/sqlite/sqlite3.c	/^static WhereTerm *whereNthSubterm(WhereTerm *pTerm, int N){$/;"	f	file:
whereOrInfoDelete	src/sqlite/sqlite3.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrInsert	src/sqlite/sqlite3.c	/^static int whereOrInsert($/;"	f	file:
whereOrMove	src/sqlite/sqlite3.c	/^static void whereOrMove(WhereOrSet *pDest, WhereOrSet *pSrc){$/;"	f	file:
whereOrName	src/sqlite/sqlite3.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
wherePathName	src/sqlite/sqlite3.c	/^static const char *wherePathName(WherePath *pPath, int nLoop, WhereLoop *pLast){$/;"	f	file:
wherePathSatisfiesOrderBy	src/sqlite/sqlite3.c	/^static i8 wherePathSatisfiesOrderBy($/;"	f	file:
wherePathSolver	src/sqlite/sqlite3.c	/^static int wherePathSolver(WhereInfo *pWInfo, LogEst nRowEst){$/;"	f	file:
whereRangeAdjust	src/sqlite/sqlite3.c	/^static LogEst whereRangeAdjust(WhereTerm *pTerm, LogEst nNew){$/;"	f	file:
whereRangeScanEst	src/sqlite/sqlite3.c	/^static int whereRangeScanEst($/;"	f	file:
whereRangeSkipScanEst	src/sqlite/sqlite3.c	/^static int whereRangeSkipScanEst($/;"	f	file:
whereRangeVectorLen	src/sqlite/sqlite3.c	/^static int whereRangeVectorLen($/;"	f	file:
whereScanInit	src/sqlite/sqlite3.c	/^static WhereTerm *whereScanInit($/;"	f	file:
whereScanNext	src/sqlite/sqlite3.c	/^static WhereTerm *whereScanNext(WhereScan *pScan){$/;"	f	file:
whereShortCut	src/sqlite/sqlite3.c	/^static int whereShortCut(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereSortingCost	src/sqlite/sqlite3.c	/^static LogEst whereSortingCost($/;"	f	file:
whereTempTriggers	src/sqlite/sqlite3.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
whereTermPrint	src/sqlite/sqlite3.c	/^static void whereTermPrint(WhereTerm *pTerm, int iTerm){$/;"	f	file:
whereUsablePartialIndex	src/sqlite/sqlite3.c	/^static int whereUsablePartialIndex(int iTab, WhereClause *pWC, Expr *pWhere){$/;"	f	file:
winAccess	src/sqlite/sqlite3.c	/^static int winAccess($/;"	f	file:
winAppData	src/sqlite/sqlite3.c	/^static winVfsAppData winAppData = {$/;"	v	file:
winCheckReservedLock	src/sqlite/sqlite3.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winClose	src/sqlite/sqlite3.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winConvertFromUtf8Filename	src/sqlite/sqlite3.c	/^static void *winConvertFromUtf8Filename(const char *zFilename){$/;"	f	file:
winConvertToUtf8Filename	src/sqlite/sqlite3.c	/^static char *winConvertToUtf8Filename(const void *zFilename){$/;"	f	file:
winCurrentTime	src/sqlite/sqlite3.c	/^static int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f	file:
winCurrentTimeInt64	src/sqlite/sqlite3.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winDelete	src/sqlite/sqlite3.c	/^static int winDelete($/;"	f	file:
winDeviceCharacteristics	src/sqlite/sqlite3.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDlClose	src/sqlite/sqlite3.c	/^static void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
winDlClose	src/sqlite/sqlite3.c	43780;"	d	file:
winDlError	src/sqlite/sqlite3.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	src/sqlite/sqlite3.c	43778;"	d	file:
winDlOpen	src/sqlite/sqlite3.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	src/sqlite/sqlite3.c	43777;"	d	file:
winDlSym	src/sqlite/sqlite3.c	/^static void (*winDlSym(sqlite3_vfs *pVfs,void *pH,const char *zSym))(void){$/;"	f	file:
winDlSym	src/sqlite/sqlite3.c	43779;"	d	file:
winFetch	src/sqlite/sqlite3.c	/^static int winFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
winFile	src/sqlite/sqlite3.c	/^struct winFile {$/;"	s	file:
winFile	src/sqlite/sqlite3.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFileControl	src/sqlite/sqlite3.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileSize	src/sqlite/sqlite3.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFullPathname	src/sqlite/sqlite3.c	/^static int winFullPathname($/;"	f	file:
winGetDirSep	src/sqlite/sqlite3.c	38309;"	d	file:
winGetLastError	src/sqlite/sqlite3.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winGetLastErrorMsg	src/sqlite/sqlite3.c	/^static int winGetLastErrorMsg(DWORD lastErrno, int nBuf, char *zBuf){$/;"	f	file:
winGetReadLock	src/sqlite/sqlite3.c	/^static int winGetReadLock(winFile *pFile){$/;"	f	file:
winGetSystemCall	src/sqlite/sqlite3.c	/^static sqlite3_syscall_ptr winGetSystemCall($/;"	f	file:
winGetTempname	src/sqlite/sqlite3.c	/^static int winGetTempname(sqlite3_vfs *pVfs, char **pzBuf){$/;"	f	file:
winIoMethod	src/sqlite/sqlite3.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winIoNolockMethod	src/sqlite/sqlite3.c	/^static const sqlite3_io_methods winIoNolockMethod = {$/;"	v	file:
winIoerrCanRetry1	src/sqlite/sqlite3.c	40244;"	d	file:
winIoerrRetry	src/sqlite/sqlite3.c	/^static int winIoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
winIoerrRetryDelay	src/sqlite/sqlite3.c	/^static int winIoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
winIsDir	src/sqlite/sqlite3.c	/^static int winIsDir(const void *zConverted){$/;"	f	file:
winIsDirSep	src/sqlite/sqlite3.c	38294;"	d	file:
winIsDriveLetterAndColon	src/sqlite/sqlite3.c	/^static BOOL winIsDriveLetterAndColon($/;"	f	file:
winIsVerbatimPathname	src/sqlite/sqlite3.c	/^static BOOL winIsVerbatimPathname($/;"	f	file:
winLock	src/sqlite/sqlite3.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLockFile	src/sqlite/sqlite3.c	/^static BOOL winLockFile($/;"	f	file:
winLogError	src/sqlite/sqlite3.c	40187;"	d	file:
winLogErrorAtLine	src/sqlite/sqlite3.c	/^static int winLogErrorAtLine($/;"	f	file:
winLogIoerr	src/sqlite/sqlite3.c	/^static void winLogIoerr(int nRetry, int lineno){$/;"	f	file:
winMakeEndInDirSep	src/sqlite/sqlite3.c	/^static int winMakeEndInDirSep(int nBuf, char *zBuf){$/;"	f	file:
winMapfile	src/sqlite/sqlite3.c	/^static int winMapfile(winFile *pFd, sqlite3_int64 nByte){$/;"	f	file:
winMbcsToUnicode	src/sqlite/sqlite3.c	/^static LPWSTR winMbcsToUnicode(const char *zText, int useAnsi){$/;"	f	file:
winMbcsToUtf8	src/sqlite/sqlite3.c	/^static char *winMbcsToUtf8(const char *zText, int useAnsi){$/;"	f	file:
winMemAssertMagic	src/sqlite/sqlite3.c	38592;"	d	file:
winMemAssertMagic	src/sqlite/sqlite3.c	38594;"	d	file:
winMemAssertMagic1	src/sqlite/sqlite3.c	38590;"	d	file:
winMemAssertMagic2	src/sqlite/sqlite3.c	38591;"	d	file:
winMemData	src/sqlite/sqlite3.c	/^struct winMemData {$/;"	s	file:
winMemData	src/sqlite/sqlite3.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemFree	src/sqlite/sqlite3.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemGetDataPtr	src/sqlite/sqlite3.c	38597;"	d	file:
winMemGetHeap	src/sqlite/sqlite3.c	38598;"	d	file:
winMemGetOwned	src/sqlite/sqlite3.c	38599;"	d	file:
winMemInit	src/sqlite/sqlite3.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemMalloc	src/sqlite/sqlite3.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemRealloc	src/sqlite/sqlite3.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRoundup	src/sqlite/sqlite3.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemShutdown	src/sqlite/sqlite3.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemSize	src/sqlite/sqlite3.c	/^static int winMemSize(void *p){$/;"	f	file:
winModeBit	src/sqlite/sqlite3.c	/^static void winModeBit(winFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
winMutexAlloc	src/sqlite/sqlite3.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexEnd	src/sqlite/sqlite3.c	/^static int winMutexEnd(void){$/;"	f	file:
winMutexEnter	src/sqlite/sqlite3.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	src/sqlite/sqlite3.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	src/sqlite/sqlite3.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexInit	src/sqlite/sqlite3.c	/^static int winMutexInit(void){$/;"	f	file:
winMutexLeave	src/sqlite/sqlite3.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	src/sqlite/sqlite3.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld2	src/sqlite/sqlite3.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexTry	src/sqlite/sqlite3.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutex_isInit	src/sqlite/sqlite3.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_isNt	src/sqlite/sqlite3.c	/^static int winMutex_isNt = -1; \/* <0 means "need to query" *\/$/;"	v	file:
winMutex_lock	src/sqlite/sqlite3.c	/^static LONG SQLITE_WIN32_VOLATILE winMutex_lock = 0;$/;"	v	file:
winMutex_staticMutexes	src/sqlite/sqlite3.c	/^static sqlite3_mutex winMutex_staticMutexes[] = {$/;"	v	file:
winNextSystemCall	src/sqlite/sqlite3.c	/^static const char *winNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
winNolockAppData	src/sqlite/sqlite3.c	/^static winVfsAppData winNolockAppData = {$/;"	v	file:
winNolockCheckReservedLock	src/sqlite/sqlite3.c	/^static int winNolockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winNolockLock	src/sqlite/sqlite3.c	/^static int winNolockLock(sqlite3_file *id, int locktype){$/;"	f	file:
winNolockUnlock	src/sqlite/sqlite3.c	/^static int winNolockUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winOpen	src/sqlite/sqlite3.c	/^static int winOpen($/;"	f	file:
winOpenSharedMemory	src/sqlite/sqlite3.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winRandomness	src/sqlite/sqlite3.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRead	src/sqlite/sqlite3.c	/^static int winRead($/;"	f	file:
winRetryIoerr	src/sqlite/sqlite3.c	/^static int winRetryIoerr(int *pnRetry, DWORD *pError){$/;"	f	file:
winSectorSize	src/sqlite/sqlite3.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winSeekFile	src/sqlite/sqlite3.c	/^static int winSeekFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
winSetSystemCall	src/sqlite/sqlite3.c	/^static int winSetSystemCall($/;"	f	file:
winShm	src/sqlite/sqlite3.c	/^struct winShm {$/;"	s	file:
winShm	src/sqlite/sqlite3.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShmBarrier	src/sqlite/sqlite3.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	src/sqlite/sqlite3.c	42371;"	d	file:
winShmEnterMutex	src/sqlite/sqlite3.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmLeaveMutex	src/sqlite/sqlite3.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLock	src/sqlite/sqlite3.c	/^static int winShmLock($/;"	f	file:
winShmLock	src/sqlite/sqlite3.c	42370;"	d	file:
winShmMap	src/sqlite/sqlite3.c	/^static int winShmMap($/;"	f	file:
winShmMap	src/sqlite/sqlite3.c	42369;"	d	file:
winShmMutexHeld	src/sqlite/sqlite3.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmNode	src/sqlite/sqlite3.c	/^struct winShmNode {$/;"	s	file:
winShmNode	src/sqlite/sqlite3.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNodeList	src/sqlite/sqlite3.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmPurge	src/sqlite/sqlite3.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmSystemLock	src/sqlite/sqlite3.c	/^static int winShmSystemLock($/;"	f	file:
winShmUnmap	src/sqlite/sqlite3.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	src/sqlite/sqlite3.c	42372;"	d	file:
winSleep	src/sqlite/sqlite3.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSync	src/sqlite/sqlite3.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSysInfo	src/sqlite/sqlite3.c	/^static SYSTEM_INFO winSysInfo;$/;"	v	file:
winTruncate	src/sqlite/sqlite3.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winUnfetch	src/sqlite/sqlite3.c	/^static int winUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
winUnicodeToMbcs	src/sqlite/sqlite3.c	/^static char *winUnicodeToMbcs(LPCWSTR zWideText, int useAnsi){$/;"	f	file:
winUnicodeToUtf8	src/sqlite/sqlite3.c	/^static char *winUnicodeToUtf8(LPCWSTR zWideText){$/;"	f	file:
winUnlock	src/sqlite/sqlite3.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winUnlockFile	src/sqlite/sqlite3.c	/^static BOOL winUnlockFile($/;"	f	file:
winUnlockReadLock	src/sqlite/sqlite3.c	/^static int winUnlockReadLock(winFile *pFile){$/;"	f	file:
winUnmapfile	src/sqlite/sqlite3.c	/^static int winUnmapfile(winFile *pFile){$/;"	f	file:
winUtf8ToMbcs	src/sqlite/sqlite3.c	/^static char *winUtf8ToMbcs(const char *zText, int useAnsi){$/;"	f	file:
winUtf8ToUnicode	src/sqlite/sqlite3.c	/^static LPWSTR winUtf8ToUnicode(const char *zText){$/;"	f	file:
winVfsAppData	src/sqlite/sqlite3.c	/^struct winVfsAppData {$/;"	s	file:
winVfsAppData	src/sqlite/sqlite3.c	/^typedef struct winVfsAppData winVfsAppData;$/;"	t	typeref:struct:winVfsAppData	file:
winWrite	src/sqlite/sqlite3.c	/^static int winWrite($/;"	f	file:
win_mem_data	src/sqlite/sqlite3.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
win_syscall	src/sqlite/sqlite3.c	/^static struct win_syscall {$/;"	s	file:
winceCreateLock	src/sqlite/sqlite3.c	/^static int winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceDestroyLock	src/sqlite/sqlite3.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceLock	src/sqlite/sqlite3.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	src/sqlite/sqlite3.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLockFile	src/sqlite/sqlite3.c	/^static BOOL winceLockFile($/;"	f	file:
winceMutexAcquire	src/sqlite/sqlite3.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexRelease	src/sqlite/sqlite3.c	40348;"	d	file:
winceUnlockFile	src/sqlite/sqlite3.c	/^static BOOL winceUnlockFile($/;"	f	file:
withDup	src/sqlite/sqlite3.c	/^static With *withDup(sqlite3 *db, With *p){$/;"	f	file:
withDup	src/sqlite/sqlite3.c	92612;"	d	file:
withExpand	src/sqlite/sqlite3.c	/^static int withExpand($/;"	f	file:
wrFlag	src/sqlite/sqlite3.c	/^  u8 wrFlag;              \/* The wrFlag argument to sqlite3BtreeCursor() *\/$/;"	m	struct:VdbeCursor	file:
writableSchema	src/sqlite/shell.c	/^  int writableSchema;    \/* True if PRAGMA writable_schema=ON *\/$/;"	m	struct:ShellState	file:
write32bits	src/sqlite/sqlite3.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
writeCoord	src/sqlite/sqlite3.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeInt16	src/sqlite/sqlite3.c	/^static void writeInt16(u8 *p, int i){$/;"	f	file:
writeInt64	src/sqlite/sqlite3.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeJournalHdr	src/sqlite/sqlite3.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeLock	src/sqlite/sqlite3.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeMask	src/sqlite/sqlite3.c	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse	file:
writeMasterJournal	src/sqlite/sqlite3.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
write_fd	third_party/gmock/gmock-gtest-all.cc	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
write_fd	third_party/gmock/gtest/gtest.h	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
write_fd_	third_party/gmock/gmock-gtest-all.cc	/^  int write_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
write_fd_	third_party/gmock/gtest/gtest.h	/^  int write_fd_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
write_handle_	third_party/gmock/gmock-gtest-all.cc	/^  AutoHandle write_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
write_set_	src/include/concurrency/transaction.h	/^  std::shared_ptr<std::deque<WriteRecord>> write_set_;$/;"	m	class:cmudb::Transaction
writefileFunc	src/sqlite/shell.c	/^static void writefileFunc($/;"	f	file:
writer	src/sqlite/sqlite3.c	/^  Fts5PageWriter writer;          \/* PageWriter object *\/$/;"	m	struct:Fts5SegWriter	file:
writer	src/sqlite/sqlite3.c	/^  Fts5PoslistWriter writer;       \/* Writer context *\/$/;"	m	struct:Fts5NearTrimmer	file:
writer	src/sqlite/sqlite3.c	/^  Fts5PoslistWriter writer;$/;"	m	struct:Fts5PoslistPopulator	file:
writer	src/sqlite/sqlite3.c	/^  Fts5SegWriter writer;$/;"	m	struct:Fts5FlushCtx	file:
writer_	src/include/common/rwmutex.h	/^  cond_t writer_;$/;"	m	class:cmudb::RWMutex
writer_entered_	src/include/common/rwmutex.h	/^  bool writer_entered_;$/;"	m	class:cmudb::RWMutex
wsFlags	src/sqlite/sqlite3.c	/^  u32 wsFlags;          \/* WHERE_* flags describing the plan *\/$/;"	m	struct:WhereLoop	file:
wsdAutoext	src/sqlite/sqlite3.c	112970;"	d	file:
wsdAutoext	src/sqlite/sqlite3.c	112973;"	d	file:
wsdAutoextInit	src/sqlite/sqlite3.c	112968;"	d	file:
wsdAutoextInit	src/sqlite/sqlite3.c	112972;"	d	file:
wsdHooks	src/sqlite/sqlite3.c	20966;"	d	file:
wsdHooks	src/sqlite/sqlite3.c	20969;"	d	file:
wsdHooksInit	src/sqlite/sqlite3.c	20964;"	d	file:
wsdHooksInit	src/sqlite/sqlite3.c	20968;"	d	file:
wsdPrng	src/sqlite/sqlite3.c	27175;"	d	file:
wsdStat	src/sqlite/sqlite3.c	18952;"	d	file:
wsdStat	src/sqlite/sqlite3.c	18955;"	d	file:
wsdStatInit	src/sqlite/sqlite3.c	18951;"	d	file:
wsdStatInit	src/sqlite/sqlite3.c	18954;"	d	file:
wtFlags	src/sqlite/sqlite3.c	/^  u16 wtFlags;            \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm	file:
wtype_	src/include/concurrency/transaction.h	/^  WType wtype_;$/;"	m	class:cmudb::WriteRecord
x	src/sqlite/shell.c	/^    unsigned char x[1600];    \/* ... or 1600 bytes *\/$/;"	m	union:SHA3Context::__anon10	file:
x	src/sqlite/sqlite3.c	/^      } x;$/;"	m	union:ExprList::ExprList_item::__anon15	typeref:struct:ExprList::ExprList_item::__anon15::__anon16	file:
x	src/sqlite/sqlite3.c	/^  fts5_tokenizer x;               \/* Tokenizer functions *\/$/;"	m	struct:Fts5TokenizerModule	file:
x	src/sqlite/sqlite3.c	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon14	file:
xAccess	src/include/sqlite/sqlite3.h	/^int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xAccess	src/sqlite/sqlite3.c	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	file:
xAdvance	src/sqlite/sqlite3.c	/^    int (*xAdvance)(BtCursor *, int);$/;"	m	union:VdbeOp::p4union	file:
xAuth	src/sqlite/sqlite3.c	/^  sqlite3_xauth xAuth;          \/* Access authorization function *\/$/;"	m	struct:sqlite3	file:
xBacktrace	src/sqlite/sqlite3.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon23	file:
xBegin	src/include/sqlite/sqlite3.h	/^int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBegin	src/sqlite/sqlite3.c	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xBenignBegin	src/sqlite/sqlite3.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	src/sqlite/sqlite3.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBestIndex	src/include/sqlite/sqlite3.h	/^int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xBestIndex	src/sqlite/sqlite3.c	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	file:
xBusyHandler	src/sqlite/sqlite3.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xCachesize	src/include/sqlite/sqlite3.h	/^void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCachesize	src/include/sqlite/sqlite3.h	/^void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2
xCachesize	src/sqlite/sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	file:
xCachesize	src/sqlite/sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2	file:
xCellSize	src/sqlite/sqlite3.c	/^  u16 (*xCellSize)(MemPage*,u8*);             \/* cellSizePtr method *\/$/;"	m	struct:MemPage	file:
xCheckReservedLock	src/include/sqlite/sqlite3.h	/^int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xCheckReservedLock	src/sqlite/sqlite3.c	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	file:
xClose	src/include/sqlite/sqlite3.h	/^int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	src/include/sqlite/sqlite3.h	/^int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xClose	src/sqlite/sqlite3.c	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xClose	src/sqlite/sqlite3.c	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module	file:
xClose	src/sqlite/sqlite3.c	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xCmp	src/sqlite/sqlite3.c	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq	file:
xCodec	src/sqlite/sqlite3.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodecFree	src/sqlite/sqlite3.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	src/sqlite/sqlite3.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCollNeeded	src/sqlite/sqlite3.c	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3	file:
xCollNeeded16	src/sqlite/sqlite3.c	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3	file:
xColumn	src/include/sqlite/sqlite3.h	/^int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xColumn	src/sqlite/sqlite3.c	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	file:
xColumnCount	src/include/sqlite/sqlite3.h	/^int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnCount	src/sqlite/sqlite3.c	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnSize	src/include/sqlite/sqlite3.h	/^int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	src/sqlite/sqlite3.c	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnText	src/include/sqlite/sqlite3.h	/^int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnText	src/sqlite/sqlite3.c	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnTotalSize	src/include/sqlite/sqlite3.h	/^int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	src/sqlite/sqlite3.c	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xCommit	src/include/sqlite/sqlite3.h	/^int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xCommit	src/sqlite/sqlite3.c	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xCommitCallback	src/sqlite/sqlite3.c	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xCompare	src/sqlite/sqlite3.c	/^  SorterCompare xCompare;         \/* Compare function to use *\/$/;"	m	struct:SortSubtask	file:
xCond	src/sqlite/sqlite3.c	/^  int (*xCond)(char *zStem, int nStem);$/;"	m	struct:PorterRule	file:
xConnect	src/include/sqlite/sqlite3.h	/^int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xConnect	src/sqlite/sqlite3.c	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xCount	src/sqlite/sqlite3.c	/^  int (*xCount)(void*);$/;"	m	struct:SessionHook	file:
xCreate	src/include/sqlite/sqlite3.h	/^int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	src/include/sqlite/sqlite3.h	/^int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	src/include/sqlite/sqlite3.h	/^sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCreate	src/include/sqlite/sqlite3.h	/^sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2
xCreate	src/sqlite/sqlite3.c	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module	file:
xCreate	src/sqlite/sqlite3.c	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xCreate	src/sqlite/sqlite3.c	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer	file:
xCreate	src/sqlite/sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	file:
xCreate	src/sqlite/sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2	file:
xCreateFunction	src/include/sqlite/sqlite3.h	/^int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateFunction	src/sqlite/sqlite3.c	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api	file:
xCreateTokenizer	src/include/sqlite/sqlite3.h	/^int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCreateTokenizer	src/sqlite/sqlite3.c	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api	file:
xCurrentTime	src/include/sqlite/sqlite3.h	/^int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTime	src/sqlite/sqlite3.c	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTimeInt64	src/include/sqlite/sqlite3.h	/^int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	src/sqlite/sqlite3.c	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs	file:
xDel	src/sqlite/sqlite3.c	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq	file:
xDel	src/sqlite/sqlite3.c	/^  void (*xDel)(void*);\/* Destructor for Mem.z - only valid if MEM_Dyn *\/$/;"	m	struct:sqlite3_value	file:
xDelUser	src/include/sqlite/sqlite3.h	/^void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	src/include/sqlite/sqlite3.h	/^void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelUser	src/sqlite/sqlite3.c	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
xDelUser	src/sqlite/sqlite3.c	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
xDelete	src/include/sqlite/sqlite3.h	/^int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDelete	src/include/sqlite/sqlite3.h	/^void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDelete	src/sqlite/sqlite3.c	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	file:
xDelete	src/sqlite/sqlite3.c	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer	file:
xDelete	src/sqlite/sqlite3.c	/^  void(*xDelete)(void*);          \/* Destructor *\/$/;"	m	struct:Fts5Auxdata	file:
xDeleteAux	src/sqlite/sqlite3.c	/^  void (*xDeleteAux)(void*);      \/* Destructor for the aux data *\/$/;"	m	struct:AuxData	file:
xDepth	src/sqlite/sqlite3.c	/^  int (*xDepth)(void*);$/;"	m	struct:SessionHook	file:
xDestroy	src/include/sqlite/sqlite3.h	/^int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	src/include/sqlite/sqlite3.h	/^void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDestroy	src/include/sqlite/sqlite3.h	/^void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xDestroy	src/sqlite/sqlite3.c	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module	file:
xDestroy	src/sqlite/sqlite3.c	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDestroy	src/sqlite/sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xDestroy	src/sqlite/sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xDestroy	src/sqlite/sqlite3.c	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module	file:
xDestroy	src/sqlite/sqlite3.c	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor	file:
xDestroy	src/sqlite/sqlite3.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5Auxiliary	file:
xDestroy	src/sqlite/sqlite3.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5TokenizerModule	file:
xDestructor	src/sqlite/sqlite3.c	/^  void (*xDestructor)(void*);$/;"	m	struct:RtreeGeomCallback	file:
xDeviceCharacteristics	src/include/sqlite/sqlite3.h	/^int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDeviceCharacteristics	src/sqlite/sqlite3.c	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xDisconnect	src/include/sqlite/sqlite3.h	/^int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDisconnect	src/sqlite/sqlite3.c	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDlClose	src/include/sqlite/sqlite3.h	/^void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlClose	src/sqlite/sqlite3.c	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	file:
xDlError	src/include/sqlite/sqlite3.h	/^void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlError	src/sqlite/sqlite3.c	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	file:
xDlOpen	src/include/sqlite/sqlite3.h	/^void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xDlOpen	src/sqlite/sqlite3.c	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	file:
xEof	src/include/sqlite/sqlite3.h	/^int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xEof	src/sqlite/sqlite3.c	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xExprCallback	src/sqlite/sqlite3.c	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker	file:
xFetch	src/include/sqlite/sqlite3.h	/^int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods
xFetch	src/include/sqlite/sqlite3.h	/^sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2
xFetch	src/include/sqlite/sqlite3.h	/^void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFetch	src/sqlite/sqlite3.c	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods	file:
xFetch	src/sqlite/sqlite3.c	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2	file:
xFetch	src/sqlite/sqlite3.c	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	file:
xFileControl	src/include/sqlite/sqlite3.h	/^int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileControl	src/sqlite/sqlite3.c	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	file:
xFileSize	src/include/sqlite/sqlite3.h	/^int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFileSize	src/sqlite/sqlite3.c	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	file:
xFilter	src/include/sqlite/sqlite3.h	/^int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFilter	src/sqlite/sqlite3.c	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	file:
xFinalize	src/sqlite/sqlite3.c	/^  void (*xFinalize)(sqlite3_context*);                  \/* Agg finalizer *\/$/;"	m	struct:FuncDef	file:
xFindFunction	src/include/sqlite/sqlite3.h	/^int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFindFunction	src/sqlite/sqlite3.c	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	file:
xFindTokenizer	src/include/sqlite/sqlite3.h	/^int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFindTokenizer	src/sqlite/sqlite3.c	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api	file:
xFree	src/include/sqlite/sqlite3.h	/^void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFree	src/sqlite/sqlite3.c	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xFree	src/sqlite/sqlite3.c	/^static void xFree(void *p){$/;"	f	file:
xFreeSchema	src/sqlite/sqlite3.c	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared	file:
xFullPathname	src/include/sqlite/sqlite3.h	/^int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xFullPathname	src/sqlite/sqlite3.c	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xFunc	src/sqlite/sqlite3.c	/^  fts5_extension_function xFunc;  \/* Callback function *\/$/;"	m	struct:Fts5Auxiliary	file:
xFunc	src/sqlite/sqlite3.c	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler	file:
xGeom	src/sqlite/sqlite3.c	/^    int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*);$/;"	m	union:RtreeConstraint::__anon39	file:
xGeom	src/sqlite/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*);$/;"	m	struct:RtreeGeomCallback	file:
xGet	src/sqlite/sqlite3.c	/^  int (*xGet)(Pager*,Pgno,DbPage**,int); \/* Routine to fetch a patch *\/$/;"	m	struct:Pager	file:
xGetAuxdata	src/include/sqlite/sqlite3.h	/^void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetAuxdata	src/sqlite/sqlite3.c	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi	file:
xGetLastError	src/include/sqlite/sqlite3.h	/^int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetLastError	src/sqlite/sqlite3.c	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	file:
xGetSystemCall	src/include/sqlite/sqlite3.h	/^sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	src/sqlite/sqlite3.c	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xInit	src/include/sqlite/sqlite3.h	/^int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	src/include/sqlite/sqlite3.h	/^int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xInit	src/include/sqlite/sqlite3.h	/^int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xInit	src/sqlite/sqlite3.c	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xInit	src/sqlite/sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xInit	src/sqlite/sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xInput	src/sqlite/sqlite3.c	/^  int (*xInput)(void*, void*, int*);        \/* Input stream call (or NULL) *\/$/;"	m	struct:SessionInput	file:
xInst	src/include/sqlite/sqlite3.h	/^int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInst	src/sqlite/sqlite3.c	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xInstCount	src/include/sqlite/sqlite3.h	/^int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xInstCount	src/sqlite/sqlite3.c	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi	file:
xLanguageid	src/sqlite/sqlite3.c	/^  int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid);$/;"	m	struct:sqlite3_tokenizer_module	file:
xLock	src/include/sqlite/sqlite3.h	/^int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xLock	src/sqlite/sqlite3.c	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xLog	src/sqlite/sqlite3.c	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config	file:
xMalloc	src/include/sqlite/sqlite3.h	/^void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMalloc	src/sqlite/sqlite3.c	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	file:
xMutexAlloc	src/include/sqlite/sqlite3.h	/^sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexAlloc	src/sqlite/sqlite3.c	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnd	src/include/sqlite/sqlite3.h	/^int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	src/sqlite/sqlite3.c	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnter	src/include/sqlite/sqlite3.h	/^void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	src/sqlite/sqlite3.c	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexFree	src/include/sqlite/sqlite3.h	/^void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	src/sqlite/sqlite3.c	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexHeld	src/include/sqlite/sqlite3.h	/^int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	src/sqlite/sqlite3.c	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexInit	src/include/sqlite/sqlite3.h	/^int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	src/sqlite/sqlite3.c	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexLeave	src/include/sqlite/sqlite3.h	/^void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	src/sqlite/sqlite3.c	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexNotheld	src/include/sqlite/sqlite3.h	/^int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	src/sqlite/sqlite3.c	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexTry	src/include/sqlite/sqlite3.h	/^int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	src/sqlite/sqlite3.c	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xNew	src/sqlite/sqlite3.c	/^  int (*xNew)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xNext	src/include/sqlite/sqlite3.h	/^int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNext	src/sqlite/sqlite3.c	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module	file:
xNext	src/sqlite/sqlite3.c	/^  int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64);$/;"	m	struct:Fts5ExprNode	file:
xNext	src/sqlite/sqlite3.c	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xNext	src/sqlite/sqlite3.c	/^  void (*xNext)(Fts5Index*, Fts5SegIter*, int*);$/;"	m	struct:Fts5SegIter	file:
xNextSystemCall	src/include/sqlite/sqlite3.h	/^const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xNextSystemCall	src/sqlite/sqlite3.c	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xOld	src/sqlite/sqlite3.c	/^  int (*xOld)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xOpen	src/include/sqlite/sqlite3.h	/^int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	src/include/sqlite/sqlite3.h	/^int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xOpen	src/sqlite/sqlite3.c	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module	file:
xOpen	src/sqlite/sqlite3.c	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	file:
xOpen	src/sqlite/sqlite3.c	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	file:
xPagecount	src/include/sqlite/sqlite3.h	/^int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xPagecount	src/include/sqlite/sqlite3.h	/^int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xPagecount	src/sqlite/sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xPagecount	src/sqlite/sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xParseCell	src/sqlite/sqlite3.c	/^  void (*xParseCell)(MemPage*,u8*,CellInfo*); \/* btreeParseCell method *\/$/;"	m	struct:MemPage	file:
xPhraseCount	src/include/sqlite/sqlite3.h	/^int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseCount	src/sqlite/sqlite3.c	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirst	src/include/sqlite/sqlite3.h	/^int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	src/sqlite/sqlite3.c	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirstColumn	src/include/sqlite/sqlite3.h	/^int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	src/sqlite/sqlite3.c	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNext	src/include/sqlite/sqlite3.h	/^void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	src/sqlite/sqlite3.c	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNextColumn	src/include/sqlite/sqlite3.h	/^void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	src/sqlite/sqlite3.c	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseSize	src/include/sqlite/sqlite3.h	/^int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	src/sqlite/sqlite3.c	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi	file:
xPreUpdate	src/sqlite/sqlite3.c	/^static void xPreUpdate($/;"	f	file:
xPreUpdateCallback	src/sqlite/sqlite3.c	/^  void (*xPreUpdateCallback)(   \/* Registered using sqlite3_preupdate_hook() *\/$/;"	m	struct:sqlite3	file:
xProfile	src/sqlite/sqlite3.c	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3	file:
xProgress	src/sqlite/sqlite3.c	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3	file:
xQueryFunc	src/sqlite/sqlite3.c	/^    int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	union:RtreeConstraint::__anon39	file:
xQueryFunc	src/sqlite/sqlite3.c	/^  int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	struct:RtreeGeomCallback	file:
xQueryPhrase	src/include/sqlite/sqlite3.h	/^int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xQueryPhrase	src/sqlite/sqlite3.c	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi	file:
xRandomness	src/include/sqlite/sqlite3.h	/^int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRandomness	src/sqlite/sqlite3.c	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xRead	src/include/sqlite/sqlite3.h	/^int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRead	src/sqlite/sqlite3.c	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xRealloc	src/include/sqlite/sqlite3.h	/^void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xRealloc	src/sqlite/sqlite3.c	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xReiniter	src/sqlite/sqlite3.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xRekey	src/include/sqlite/sqlite3.h	/^void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,$/;"	m	struct:sqlite3_pcache_methods2
xRekey	src/include/sqlite/sqlite3.h	/^void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRekey	src/sqlite/sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*,$/;"	m	struct:sqlite3_pcache_methods2	file:
xRekey	src/sqlite/sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	file:
xRelease	src/include/sqlite/sqlite3.h	/^int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRelease	src/sqlite/sqlite3.c	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRename	src/include/sqlite/sqlite3.h	/^int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRename	src/sqlite/sqlite3.c	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	file:
xRollback	src/include/sqlite/sqlite3.h	/^int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollback	src/sqlite/sqlite3.c	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xRollbackCallback	src/sqlite/sqlite3.c	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xRollbackTo	src/include/sqlite/sqlite3.h	/^int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRollbackTo	src/sqlite/sqlite3.c	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRoundup	src/include/sqlite/sqlite3.h	/^int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRoundup	src/sqlite/sqlite3.c	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRowCount	src/include/sqlite/sqlite3.h	/^int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowCount	src/sqlite/sqlite3.c	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi	file:
xRowid	src/include/sqlite/sqlite3.h	/^int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xRowid	src/include/sqlite/sqlite3.h	/^sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xRowid	src/sqlite/sqlite3.c	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	file:
xRowid	src/sqlite/sqlite3.c	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xSFunc	src/sqlite/sqlite3.c	/^  void (*xSFunc)(sqlite3_context*,int,sqlite3_value**); \/* func or agg-step *\/$/;"	m	struct:FuncDef	file:
xSavepoint	src/include/sqlite/sqlite3.h	/^int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSavepoint	src/sqlite/sqlite3.c	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xSectorSize	src/include/sqlite/sqlite3.h	/^int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSectorSize	src/sqlite/sqlite3.c	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xSelectCallback	src/sqlite/sqlite3.c	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSelectCallback2	src/sqlite/sqlite3.c	/^  void (*xSelectCallback2)(Walker*,Select*);\/* Second callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSetAuxdata	src/include/sqlite/sqlite3.h	/^int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetAuxdata	src/sqlite/sqlite3.c	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi	file:
xSetOutputs	src/sqlite/sqlite3.c	/^  void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*);$/;"	m	struct:Fts5Iter	file:
xSetSystemCall	src/include/sqlite/sqlite3.h	/^int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xSetSystemCall	src/sqlite/sqlite3.c	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs	file:
xShmBarrier	src/include/sqlite/sqlite3.h	/^void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmBarrier	src/sqlite/sqlite3.c	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xShmLock	src/include/sqlite/sqlite3.h	/^int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmLock	src/sqlite/sqlite3.c	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xShmMap	src/include/sqlite/sqlite3.h	/^int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmMap	src/sqlite/sqlite3.c	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods	file:
xShmUnmap	src/include/sqlite/sqlite3.h	/^int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	src/sqlite/sqlite3.c	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods	file:
xShrink	src/include/sqlite/sqlite3.h	/^void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xShrink	src/sqlite/sqlite3.c	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xShutdown	src/include/sqlite/sqlite3.h	/^void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	src/include/sqlite/sqlite3.h	/^void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xShutdown	src/include/sqlite/sqlite3.h	/^void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xShutdown	src/sqlite/sqlite3.c	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xShutdown	src/sqlite/sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xShutdown	src/sqlite/sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xSize	src/include/sqlite/sqlite3.h	/^int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSize	src/sqlite/sqlite3.c	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xSleep	src/include/sqlite/sqlite3.h	/^int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSleep	src/sqlite/sqlite3.c	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	file:
xSqllog	src/sqlite/sqlite3.c	/^  void(*xSqllog)(void*,sqlite3*,const char*, int);$/;"	m	struct:Sqlite3Config	file:
xStress	src/sqlite/sqlite3.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xSync	src/include/sqlite/sqlite3.h	/^int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	src/include/sqlite/sqlite3.h	/^int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xSync	src/sqlite/sqlite3.c	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xSync	src/sqlite/sqlite3.c	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xTableFilter	src/sqlite/sqlite3.c	/^  int (*xTableFilter)(void *pCtx, const char *zTab);$/;"	m	struct:sqlite3_session	file:
xTask	src/sqlite/sqlite3.c	/^  void *(*xTask)(void*);         \/* The thread routine *\/$/;"	m	struct:SQLiteThread	file:
xTask	src/sqlite/sqlite3.c	/^  void *(*xTask)(void*);   \/* The routine to run as a thread *\/$/;"	m	struct:SQLiteThread	file:
xTestCallback	src/sqlite/sqlite3.c	/^  int (*xTestCallback)(int);        \/* Invoked by sqlite3FaultSim() *\/$/;"	m	struct:Sqlite3Config	file:
xToken	src/sqlite/sqlite3.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:PorterContext	file:
xTokenize	src/include/sqlite/sqlite3.h	/^int (*xTokenize)(Fts5Context*,$/;"	m	struct:Fts5ExtensionApi
xTokenize	src/include/sqlite/sqlite3.h	/^int (*xTokenize)(Fts5Tokenizer*,$/;"	m	struct:fts5_tokenizer
xTokenize	src/sqlite/sqlite3.c	/^  int (*xTokenize)(Fts5Context*,$/;"	m	struct:Fts5ExtensionApi	file:
xTokenize	src/sqlite/sqlite3.c	/^  int (*xTokenize)(Fts5Tokenizer*,$/;"	m	struct:fts5_tokenizer	file:
xTrace	src/sqlite/sqlite3.c	/^  int (*xTrace)(u32,void*,void*,void*);     \/* Trace function *\/$/;"	m	struct:sqlite3	file:
xTruncate	src/include/sqlite/sqlite3.h	/^int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	src/include/sqlite/sqlite3.h	/^void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xTruncate	src/include/sqlite/sqlite3.h	/^void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2
xTruncate	src/sqlite/sqlite3.c	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	file:
xTruncate	src/sqlite/sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	file:
xTruncate	src/sqlite/sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2	file:
xUnfetch	src/include/sqlite/sqlite3.h	/^int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods
xUnfetch	src/sqlite/sqlite3.c	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods	file:
xUnlock	src/include/sqlite/sqlite3.h	/^int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnlock	src/sqlite/sqlite3.c	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xUnlockNotify	src/sqlite/sqlite3.c	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3	file:
xUnpin	src/include/sqlite/sqlite3.h	/^void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2
xUnpin	src/include/sqlite/sqlite3.h	/^void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUnpin	src/sqlite/sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2	file:
xUnpin	src/sqlite/sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	file:
xUpdate	src/include/sqlite/sqlite3.h	/^int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUpdate	src/sqlite/sqlite3.c	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	file:
xUpdateCallback	src/sqlite/sqlite3.c	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3	file:
xUserData	src/include/sqlite/sqlite3.h	/^void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xUserData	src/sqlite/sqlite3.c	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xVdbeBranch	src/sqlite/sqlite3.c	/^  void (*xVdbeBranch)(void*,int iSrcLine,u8 eThis,u8 eMx);  \/* Callback *\/$/;"	m	struct:Sqlite3Config	file:
xWalCallback	src/sqlite/sqlite3.c	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3	file:
xWrite	src/include/sqlite/sqlite3.h	/^int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xWrite	src/sqlite/sqlite3.c	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xferCompatibleIndex	src/sqlite/sqlite3.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferOptimization	src/sqlite/sqlite3.c	/^static int xferOptimization($/;"	f	file:
xorMemory	src/sqlite/sqlite3.c	/^static void xorMemory(EntropyGatherer *p, unsigned char *x, int sz){$/;"	f	file:
xthreadsafe	src/include/sqlite/sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines
xthreadsafe	src/sqlite/sqlite3.c	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	file:
yColCache	src/sqlite/sqlite3.c	/^  struct yColCache {$/;"	s	struct:Parse	file:
yDbMask	src/sqlite/sqlite3.c	/^  typedef unsigned char yDbMask[(SQLITE_MAX_ATTACHED+9)\/8];$/;"	t	file:
yDbMask	src/sqlite/sqlite3.c	/^  typedef unsigned int yDbMask;$/;"	t	file:
ynVar	src/sqlite/sqlite3.c	/^typedef i16 ynVar;$/;"	t	file:
ynVar	src/sqlite/sqlite3.c	/^typedef int ynVar;$/;"	t	file:
yy0	src/sqlite/sqlite3.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon36	file:
yy145	src/sqlite/sqlite3.c	/^  TriggerStep* yy145;$/;"	m	union:__anon36	file:
yy148	src/sqlite/sqlite3.c	/^  ExprList* yy148;$/;"	m	union:__anon36	file:
yy185	src/sqlite/sqlite3.c	/^  SrcList* yy185;$/;"	m	union:__anon36	file:
yy190	src/sqlite/sqlite3.c	/^  ExprSpan yy190;$/;"	m	union:__anon36	file:
yy194	src/sqlite/sqlite3.c	/^  int yy194;$/;"	m	union:__anon36	file:
yy243	src/sqlite/sqlite3.c	/^  Select* yy243;$/;"	m	union:__anon36	file:
yy254	src/sqlite/sqlite3.c	/^  IdList* yy254;$/;"	m	union:__anon36	file:
yy285	src/sqlite/sqlite3.c	/^  With* yy285;$/;"	m	union:__anon36	file:
yy332	src/sqlite/sqlite3.c	/^  struct TrigEvent yy332;$/;"	m	union:__anon36	typeref:struct:__anon36::TrigEvent	file:
yy354	src/sqlite/sqlite3.c	/^  struct LimitVal yy354;$/;"	m	union:__anon36	typeref:struct:__anon36::LimitVal	file:
yy497	src/sqlite/sqlite3.c	/^  struct {int value; int mask;} yy497;$/;"	m	union:__anon36	typeref:struct:__anon36::__anon37	file:
yy72	src/sqlite/sqlite3.c	/^  Expr* yy72;$/;"	m	union:__anon36	file:
yyFallback	src/sqlite/sqlite3.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyGrowStack	src/sqlite/sqlite3.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyParser	src/sqlite/sqlite3.c	/^struct yyParser {$/;"	s	file:
yyParser	src/sqlite/sqlite3.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	src/sqlite/sqlite3.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon38	file:
yyRuleName	src/sqlite/sqlite3.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	src/sqlite/sqlite3.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	src/sqlite/sqlite3.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackOverflow	src/sqlite/sqlite3.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyTokenName	src/sqlite/sqlite3.c	/^static const char *const yyTokenName[] = {$/;"	v	file:
yyTraceFILE	src/sqlite/sqlite3.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTracePrompt	src/sqlite/sqlite3.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTraceShift	src/sqlite/sqlite3.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	src/sqlite/sqlite3.c	137870;"	d	file:
yy_accept	src/sqlite/sqlite3.c	/^static void yy_accept($/;"	f	file:
yy_action	src/sqlite/sqlite3.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	src/sqlite/sqlite3.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	src/sqlite/sqlite3.c	/^static void yy_destructor($/;"	f	file:
yy_find_reduce_action	src/sqlite/sqlite3.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	src/sqlite/sqlite3.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_lookahead	src/sqlite/sqlite3.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	src/sqlite/sqlite3.c	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	src/sqlite/sqlite3.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_reduce	src/sqlite/sqlite3.c	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	src/sqlite/sqlite3.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_shift	src/sqlite/sqlite3.c	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	src/sqlite/sqlite3.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_syntax_error	src/sqlite/sqlite3.c	/^static void yy_syntax_error($/;"	f	file:
yyerrcnt	src/sqlite/sqlite3.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyhwm	src/sqlite/sqlite3.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyinit	src/sqlite/sqlite3.c	/^  int yyinit;$/;"	m	union:__anon36	file:
yystack	src/sqlite/sqlite3.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystk0	src/sqlite/sqlite3.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystksz	src/sqlite/sqlite3.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yytestcase	src/sqlite/sqlite3.c	136084;"	d	file:
yytestcase	src/sqlite/sqlite3.c	136388;"	d	file:
yytos	src/sqlite/sqlite3.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
z	src/sqlite/shell.c	/^  char *z;            \/* Accumulated text for a field *\/$/;"	m	struct:ImportCtx	file:
z	src/sqlite/shell.c	/^  char *z;$/;"	m	struct:ShellText	file:
z	src/sqlite/sqlite3.c	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::p4union	file:
z	src/sqlite/sqlite3.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	src/sqlite/sqlite3.c	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken	file:
z	src/sqlite/sqlite3.c	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:sqlite3_value	file:
z	src/sqlite/sqlite3.c	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token	file:
zAffSdst	src/sqlite/sqlite3.c	/^  char *zAffSdst;      \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest	file:
zAlias	src/sqlite/sqlite3.c	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item	file:
zAuthContext	src/sqlite/sqlite3.c	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext	file:
zAuthContext	src/sqlite/sqlite3.c	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse	file:
zAuthPW	src/sqlite/sqlite3.c	/^  char *zAuthPW;                \/* Password used to authenticate *\/$/;"	m	struct:sqlite3_userauth	file:
zAuthUser	src/sqlite/sqlite3.c	/^  char *zAuthUser;              \/* User name used to authenticate *\/$/;"	m	struct:sqlite3_userauth	file:
zBase	src/sqlite/sqlite3.c	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum	file:
zBuf	src/sqlite/sqlite3.c	/^  char *zBuf;              \/* Append JSON content here *\/$/;"	m	struct:JsonString	file:
zBuffer	src/sqlite/sqlite3.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zCanonicalName	src/sqlite/sqlite3.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zChunk	src/sqlite/sqlite3.c	/^  u8 zChunk[8];                   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zClose	src/sqlite/sqlite3.c	/^  const char *zClose;             \/* Closing highlight *\/$/;"	m	struct:HighlightContext	file:
zCol	src/sqlite/sqlite3.c	/^    char *zCol;           \/* Name of column in zTo.  If NULL use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap	file:
zColAff	src/sqlite/sqlite3.c	/^  char *zColAff;           \/* String defining the affinity of each column *\/$/;"	m	struct:Index	file:
zColAff	src/sqlite/sqlite3.c	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table	file:
zColl	src/sqlite/sqlite3.c	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column	file:
zCollName	src/sqlite/sqlite3.c	/^  const char *zCollName;     \/* Required collating sequence, if not NULL *\/$/;"	m	struct:WhereScan	file:
zComment	src/sqlite/sqlite3.c	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp	file:
zContent	src/sqlite/sqlite3.c	/^  char *zContent;                 \/* content table *\/$/;"	m	struct:Fts5Config	file:
zContentExprlist	src/sqlite/sqlite3.c	/^  char *zContentExprlist;$/;"	m	struct:Fts5Config	file:
zContentRowid	src/sqlite/sqlite3.c	/^  char *zContentRowid;            \/* "content_rowid=" option value *\/$/;"	m	struct:Fts5Config	file:
zContentTbl	src/sqlite/sqlite3.c	/^  char *zContentTbl;              \/* content=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zCteErr	src/sqlite/sqlite3.c	/^    const char *zCteErr;            \/* Error message for circular references *\/$/;"	m	struct:With::Cte	file:
zData	src/sqlite/sqlite3.c	/^  u8 *zData;                  \/* Content of the node, as should be on disk *\/$/;"	m	struct:RtreeNode	file:
zDataTbl	src/sqlite/sqlite3.c	/^  char *zDataTbl;                 \/* Name of %_data table *\/$/;"	m	struct:Fts5Index	file:
zDataTbl	src/sqlite/sqlite3.c	/^  const char *zDataTbl;           \/* Name of rbu db table (or null) *\/$/;"	m	struct:RbuObjIter	file:
zDatabase	src/sqlite/sqlite3.c	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zDatabase	src/sqlite/sqlite3.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDb	src/sqlite/sqlite3.c	/^  char *zDb;                      \/* Database holding FTS index (e.g. "main") *\/$/;"	m	struct:Fts5Config	file:
zDb	src/sqlite/sqlite3.c	/^  char *zDb;                      \/* Name of database session is attached to *\/$/;"	m	struct:sqlite3_session	file:
zDb	src/sqlite/sqlite3.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	src/sqlite/sqlite3.c	/^  char *zDb;              \/* Database name *\/$/;"	m	struct:Incrblob	file:
zDb	src/sqlite/sqlite3.c	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table	file:
zDb	src/sqlite/sqlite3.c	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer	file:
zDbFilename	src/sqlite/shell.c	/^  const char *zDbFilename;    \/* name of the database file *\/$/;"	m	struct:ShellState	file:
zDbSName	src/sqlite/sqlite3.c	/^  char *zDbSName;      \/* Name of this database. (schema name, not filename) *\/$/;"	m	struct:Db	file:
zDel	src/sqlite/sqlite3.c	/^  char *zDel;                     \/* Delete this when closing file *\/$/;"	m	struct:rbu_file	file:
zDeleteOnClose	src/sqlite/sqlite3.c	/^  LPWSTR zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zDestTable	src/sqlite/shell.c	/^  char *zDestTable;      \/* Name of destination table when MODE_Insert *\/$/;"	m	struct:ShellState	file:
zDoc	src/sqlite/sqlite3.c	/^  const char *zDoc;               \/* Document being tokenized *\/$/;"	m	struct:Fts5SFinder	file:
zEnd	src/sqlite/sqlite3.c	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan	file:
zErr	src/sqlite/sqlite3.c	/^  char *zErr;$/;"	m	struct:Fts5Parse	file:
zErrMsg	src/include/sqlite/sqlite3.h	/^char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zErrMsg	src/sqlite/sqlite3.c	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	file:
zErrMsg	src/sqlite/sqlite3.c	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe	file:
zErrMsg	src/sqlite/sqlite3.c	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse	file:
zErrMsg	src/sqlite/sqlite3.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrmsg	src/sqlite/sqlite3.c	/^  char *zErrmsg;                  \/* Error message if rc!=SQLITE_OK *\/$/;"	m	struct:sqlite3rbu	file:
zFile	src/sqlite/shell.c	/^  const char *zFile;  \/* Name of the input file *\/$/;"	m	struct:ImportCtx	file:
zFilename	src/sqlite/sqlite3.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFilename	src/sqlite/sqlite3.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	src/sqlite/sqlite3.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFreeOnClose	src/sqlite/shell.c	/^  char *zFreeOnClose;         \/* Filename to free when closing *\/$/;"	m	struct:ShellState	file:
zFts5Db	src/sqlite/sqlite3.c	/^  char *zFts5Db;                  \/* Db containing fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Tbl	src/sqlite/sqlite3.c	/^  char *zFts5Tbl;                 \/* Name of fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFunc	src/sqlite/sqlite3.c	/^  char *zFunc;                    \/* Function name (nul-terminated) *\/$/;"	m	struct:Fts5Auxiliary	file:
zHelp	src/sqlite/shell.c	/^static char zHelp[] =$/;"	v	file:
zIdx	src/sqlite/sqlite3.c	/^  char *zIdx;$/;"	m	struct:RbuState	file:
zIdx	src/sqlite/sqlite3.c	/^  const char *zIdx;               \/* Name of target db index (or null) *\/$/;"	m	struct:RbuObjIter	file:
zIn	src/sqlite/sqlite3.c	/^  const char *zIn;                \/* Input text *\/$/;"	m	struct:HighlightContext	file:
zIndexedBy	src/sqlite/sqlite3.c	/^      char *zIndexedBy;    \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	union:SrcList::SrcList_item::__anon18	file:
zInput	src/sqlite/sqlite3.c	/^  char *zInput;                   \/* Input string *\/$/;"	m	struct:Fts3tokCursor	file:
zInput	src/sqlite/sqlite3.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zJContent	src/sqlite/sqlite3.c	/^    const char *zJContent; \/* Content for INT, REAL, and STRING *\/$/;"	m	union:JsonNode::__anon40	file:
zJournal	src/sqlite/sqlite3.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJournal	src/sqlite/sqlite3.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:MemJournal	file:
zJson	src/sqlite/sqlite3.c	/^  char *zJson;               \/* Input JSON *\/$/;"	m	struct:JsonEachCursor	file:
zJson	src/sqlite/sqlite3.c	/^  const char *zJson; \/* Original JSON string *\/$/;"	m	struct:JsonParse	file:
zLanguageid	src/sqlite/sqlite3.c	/^  char *zLanguageid;              \/* languageid=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zLeTerm	src/sqlite/sqlite3.c	/^  char *zLeTerm;                  \/* (term <= $zLeTerm) paramater, or NULL *\/$/;"	m	struct:Fts5VocabCursor	file:
zLocale	src/sqlite/sqlite3.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zLockName	src/sqlite/sqlite3.c	/^  const char *zLockName; \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zMagicHeader	src/sqlite/sqlite3.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMalloc	src/sqlite/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	src/sqlite/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	src/sqlite/sqlite3.c	/^  char *zMalloc;      \/* Space to hold MEM_Str or MEM_Blob if szMalloc>0 *\/$/;"	m	struct:sqlite3_value	file:
zMask	src/sqlite/sqlite3.c	/^  char *zMask;                    \/* Copy of update mask used with pUpdate *\/$/;"	m	struct:RbuUpdateStmt	file:
zMatchinfo	src/sqlite/sqlite3.c	/^  char *zMatchinfo;$/;"	m	struct:MatchinfoBuffer	file:
zName	src/include/sqlite/sqlite3.h	/^const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
zName	src/sqlite/shell.c	/^  char *zName;             \/* Symbolic name for this session *\/$/;"	m	struct:OpenSession	file:
zName	src/sqlite/sqlite3.c	/^    char *zName;                    \/* Name of this CTE *\/$/;"	m	struct:With::Cte	file:
zName	src/sqlite/sqlite3.c	/^    char *zName;            \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zName	src/sqlite/sqlite3.c	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item	file:
zName	src/sqlite/sqlite3.c	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                    \/* Local name of table *\/$/;"	m	struct:SessionTable	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                    \/* Name of FTS index *\/$/;"	m	struct:Fts5Config	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                    \/* Name of table or index *\/$/;"	m	struct:ScanStatus	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                    \/* Name of tokenizer *\/$/;"	m	struct:Fts5TokenizerModule	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                    \/* Value of 'name' column *\/$/;"	m	struct:StatCursor	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;                \/* Name of r-tree table *\/$/;"	m	struct:Rtree	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;             \/* Name of this index *\/$/;"	m	struct:Index	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;        \/* Name of the transformation *\/$/;"	m	struct:__anon22	file:
zName	src/sqlite/sqlite3.c	/^  char *zName;     \/* Name of this column, \\000, then the type *\/$/;"	m	struct:Column	file:
zName	src/sqlite/sqlite3.c	/^  const char *const zName; \/* Name of pragma *\/$/;"	m	struct:PragmaName	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:unix_syscall	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:win_syscall	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;   \/* SQL name of the function. *\/$/;"	m	struct:FuncDef	file:
zName	src/sqlite/sqlite3.c	/^  const char *zName;$/;"	m	struct:Fts5Enum	file:
zOpen	src/sqlite/sqlite3.c	/^  const char *zOpen;              \/* Opening highlight *\/$/;"	m	struct:HighlightContext	file:
zOptions	src/sqlite/shell.c	/^static const char zOptions[] =$/;"	v	file:
zOut	src/sqlite/sqlite3.c	/^  char *zOut;                     \/* Output value *\/$/;"	m	struct:HighlightContext	file:
zOutput	src/sqlite/sqlite3.c	/^  const char *zOutput;$/;"	m	struct:PorterRule	file:
zPagetype	src/sqlite/sqlite3.c	/^  char *zPagetype;                \/* Value of 'pagetype' column *\/$/;"	m	struct:StatCursor	file:
zPath	src/sqlite/sqlite3.c	/^  char *zPath;                    \/* Path to this page *\/$/;"	m	struct:StatPage	file:
zPath	src/sqlite/sqlite3.c	/^  char *zPath;                    \/* Value of 'path' column *\/$/;"	m	struct:StatCursor	file:
zPath	src/sqlite/sqlite3.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	src/sqlite/sqlite3.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPfx	src/sqlite/sqlite3.c	/^  const char *zPfx; \/* Error message prefix *\/$/;"	m	struct:IntegrityCk	file:
zPool	src/sqlite/sqlite3.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zRank	src/sqlite/sqlite3.c	/^  char *zRank;                    \/* Custom rank function *\/$/;"	m	struct:Fts5Cursor	file:
zRank	src/sqlite/sqlite3.c	/^  char *zRank;                    \/* Name of rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	src/sqlite/sqlite3.c	/^  char *zRankArgs;                \/* Arguments to rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	src/sqlite/sqlite3.c	/^  char *zRankArgs;                \/* Custom rank function args *\/$/;"	m	struct:Fts5Cursor	file:
zRbu	src/sqlite/sqlite3.c	/^  char *zRbu;                     \/* Path to rbu db *\/$/;"	m	struct:sqlite3rbu	file:
zReadExprlist	src/sqlite/sqlite3.c	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table	file:
zRoot	src/sqlite/sqlite3.c	/^  char *zRoot;               \/* Path by which to filter zJson *\/$/;"	m	struct:JsonEachCursor	file:
zSegmentsTbl	src/sqlite/sqlite3.c	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table	file:
zSelName	src/sqlite/sqlite3.c	/^  char zSelName[12];     \/* Symbolic name of this SELECT use for debugging *\/$/;"	m	struct:Select	file:
zSpace	src/sqlite/sqlite3.c	/^  char zSpace[100];        \/* Initial static space *\/$/;"	m	struct:JsonString	file:
zSpan	src/sqlite/sqlite3.c	/^    char *zSpan;            \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zSql	src/sqlite/sqlite3.c	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe	file:
zStart	src/sqlite/sqlite3.c	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan	file:
zState	src/sqlite/sqlite3.c	/^  char *zState;                   \/* Path to state db (or NULL if zRbu) *\/$/;"	m	struct:sqlite3rbu	file:
zStateDb	src/sqlite/sqlite3.c	/^  char zStateDb[5];               \/* Db name for state ("stat" or "main") *\/$/;"	m	struct:sqlite3rbu	file:
zStop	src/sqlite/sqlite3.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zSuffix	src/sqlite/sqlite3.c	/^  const char *zSuffix;$/;"	m	struct:PorterRule	file:
zTab	src/sqlite/sqlite3.c	/^  char *zTab;                     \/* Current table *\/$/;"	m	struct:sqlite3_changeset_iter	file:
zTail	src/sqlite/sqlite3.c	/^  const char *zTail;        \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse	file:
zTarget	src/sqlite/sqlite3.c	/^  char *zTarget;                  \/* Path to target db *\/$/;"	m	struct:sqlite3rbu	file:
zTarget	src/sqlite/sqlite3.c	/^  char *zTarget;       \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep	file:
zTbl	src/sqlite/sqlite3.c	/^  char *zTbl;$/;"	m	struct:RbuState	file:
zTbl	src/sqlite/sqlite3.c	/^  const char *zTbl;               \/* Name of target db table *\/$/;"	m	struct:RbuObjIter	file:
zTerm	src/sqlite/sqlite3.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	src/sqlite/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	src/sqlite/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	src/sqlite/sqlite3.c	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
zTerm	src/sqlite/sqlite3.c	/^  char *zTerm;                    \/* nul-terminated term *\/$/;"	m	struct:Fts5ExprTerm	file:
zTerm	src/sqlite/sqlite3.c	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter	file:
zTestcase	src/sqlite/shell.c	/^  char zTestcase[30];    \/* Name of current test case *\/$/;"	m	struct:ShellState	file:
zText	src/sqlite/sqlite3.c	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum	file:
zTitle	src/sqlite/sqlite3.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon23	file:
zTo	src/sqlite/sqlite3.c	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey	file:
zToken	src/sqlite/sqlite3.c	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon13	file:
zToken	src/sqlite/sqlite3.c	/^  char *zToken;                   \/* storage for current token *\/$/;"	m	struct:unicode_cursor	file:
zToken	src/sqlite/sqlite3.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	src/sqlite/sqlite3.c	/^  const char *zToken;             \/* Current 'token' value *\/$/;"	m	struct:Fts3tokCursor	file:
zType	src/sqlite/sqlite3.c	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
zVfs	src/sqlite/shell.c	/^  const char *zVfs;           \/* Name of VFS to use *\/$/;"	m	struct:ShellState	file:
zVfsName	src/sqlite/sqlite3.c	/^  const char *zVfsName;           \/* Name of automatically created rbu vfs *\/$/;"	m	struct:sqlite3rbu	file:
zWal	src/sqlite/sqlite3.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWal	src/sqlite/sqlite3.c	/^  const char *zWal;               \/* Wal filename for this main db file *\/$/;"	m	struct:rbu_file	file:
zWalName	src/sqlite/sqlite3.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWriteExprlist	src/sqlite/sqlite3.c	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table	file:
zeroJournalHdr	src/sqlite/sqlite3.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroPage	src/sqlite/sqlite3.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroblobFunc	src/sqlite/sqlite3.c	/^static void zeroblobFunc($/;"	f	file:
~AbstractSocketWriter	third_party/gmock/gmock-gtest-all.cc	/^    virtual ~AbstractSocketWriter() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
~ActionInterface	third_party/gmock/gmock/gmock.h	/^  virtual ~ActionInterface() {}$/;"	f	class:testing::ActionInterface
~Arguments	third_party/gmock/gmock-gtest-all.cc	/^  ~Arguments() {$/;"	f	class:testing::internal::Arguments
~AssertHelper	third_party/gmock/gmock-gtest-all.cc	/^AssertHelper::~AssertHelper() {$/;"	f	class:testing::internal::AssertHelper
~AutoHandle	third_party/gmock/gmock-gtest-all.cc	/^  ~AutoHandle() { Reset(); }$/;"	f	class:testing::internal::AutoHandle
~BPlusTreeIndex	src/include/index/b_plus_tree_index.h	/^  ~BPlusTreeIndex() {}$/;"	f	class:cmudb::BPlusTreeIndex
~BigintType	src/include/type/bigint_type.h	/^  ~BigintType() {}$/;"	f	class:cmudb::BigintType
~BooleanType	src/include/type/boolean_type.h	/^  ~BooleanType() {}$/;"	f	class:cmudb::BooleanType
~BufferPoolManager	src/buffer/buffer_pool_manager.cpp	/^BufferPoolManager::~BufferPoolManager() {$/;"	f	class:cmudb::BufferPoolManager
~CapturedStream	third_party/gmock/gmock-gtest-all.cc	/^  ~CapturedStream() {$/;"	f	class:testing::internal::CapturedStream
~CardinalityInterface	third_party/gmock/gmock/gmock.h	/^  virtual ~CardinalityInterface() {}$/;"	f	class:testing::CardinalityInterface
~CartesianProductGenerator10	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator10() {}$/;"	f	class:testing::internal::CartesianProductGenerator10
~CartesianProductGenerator2	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator2() {}$/;"	f	class:testing::internal::CartesianProductGenerator2
~CartesianProductGenerator3	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator3() {}$/;"	f	class:testing::internal::CartesianProductGenerator3
~CartesianProductGenerator4	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator4() {}$/;"	f	class:testing::internal::CartesianProductGenerator4
~CartesianProductGenerator5	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator5() {}$/;"	f	class:testing::internal::CartesianProductGenerator5
~CartesianProductGenerator6	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator6() {}$/;"	f	class:testing::internal::CartesianProductGenerator6
~CartesianProductGenerator7	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator7() {}$/;"	f	class:testing::internal::CartesianProductGenerator7
~CartesianProductGenerator8	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator8() {}$/;"	f	class:testing::internal::CartesianProductGenerator8
~CartesianProductGenerator9	third_party/gmock/gtest/gtest.h	/^  virtual ~CartesianProductGenerator9() {}$/;"	f	class:testing::internal::CartesianProductGenerator9
~DeathTest	third_party/gmock/gtest/gtest.h	/^  virtual ~DeathTest() { }$/;"	f	class:testing::internal::DeathTest
~DeathTestFactory	third_party/gmock/gtest/gtest.h	/^  virtual ~DeathTestFactory() { }$/;"	f	class:testing::internal::DeathTestFactory
~DeathTestImpl	third_party/gmock/gmock-gtest-all.cc	/^  ~DeathTestImpl() { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }$/;"	f	class:testing::internal::DeathTestImpl
~DiskManager	src/disk/disk_manager.cpp	/^DiskManager::~DiskManager() { db_io_.close(); }$/;"	f	class:cmudb::DiskManager
~Environment	third_party/gmock/gtest/gtest.h	/^  virtual ~Environment() {}$/;"	f	class:testing::Environment
~Expectation	third_party/gmock/gmock-gtest-all.cc	/^Expectation::~Expectation() {}$/;"	f	class:testing::Expectation
~ExpectationBase	third_party/gmock/gmock-gtest-all.cc	/^ExpectationBase::~ExpectationBase() {}$/;"	f	class:testing::internal::ExpectationBase
~GTestFlagSaver	third_party/gmock/gmock-gtest-all.cc	/^  ~GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
~GTestLog	third_party/gmock/gmock-gtest-all.cc	/^GTestLog::~GTestLog() {$/;"	f	class:testing::internal::GTestLog
~GTestMutexLock	third_party/gmock/gtest/gtest.h	/^  ~GTestMutexLock() { mutex_->Unlock(); }$/;"	f	class:std::tr1::GTestMutexLock
~HasNewFatalFailureHelper	third_party/gmock/gmock-gtest-all.cc	/^HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {$/;"	f	class:testing::internal::HasNewFatalFailureHelper
~HashTable	src/include/hash/hash_table.h	/^  virtual ~HashTable() {}$/;"	f	class:cmudb::HashTable
~InSequence	third_party/gmock/gmock-gtest-all.cc	/^InSequence::~InSequence() {$/;"	f	class:testing::InSequence
~Index	src/include/index/index.h	/^  virtual ~Index() { delete metadata_; }$/;"	f	class:cmudb::Index
~IndexIterator	src/index/index_iterator.cpp	/^INDEXITERATOR_TYPE::~IndexIterator() $/;"	f	class:cmudb::INDEXITERATOR_TYPE
~IndexMetadata	src/include/index/index.h	/^  ~IndexMetadata() { delete key_schema_; };$/;"	f	class:cmudb::IndexMetadata
~IntegerParentType	src/include/type/integer_parent_type.h	/^  ~IntegerParentType() {}$/;"	f	class:cmudb::IntegerParentType
~IntegerType	src/include/type/integer_type.h	/^  ~IntegerType() {}$/;"	f	class:cmudb::IntegerType
~InternalRunDeathTestFlag	third_party/gmock/gtest/gtest.h	/^  ~InternalRunDeathTestFlag() {$/;"	f	class:testing::internal::InternalRunDeathTestFlag
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::RangeGenerator::Iterator
~Iterator	third_party/gmock/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
~LRUReplacer	src/buffer/lru_replacer.cpp	/^template <typename T> LRUReplacer<T>::~LRUReplacer() {$/;"	f	class:cmudb::LRUReplacer
~MatchResultListener	third_party/gmock/gmock/gmock.h	/^inline MatchResultListener::~MatchResultListener() {$/;"	f	class:testing::MatchResultListener
~MatcherBase	third_party/gmock/gmock/gmock.h	/^  virtual ~MatcherBase() {}$/;"	f	class:testing::internal::MatcherBase
~MatcherDescriberInterface	third_party/gmock/gmock/gmock.h	/^  virtual ~MatcherDescriberInterface() {}$/;"	f	class:testing::MatcherDescriberInterface
~MockObjectRegistry	third_party/gmock/gmock-gtest-all.cc	/^  ~MockObjectRegistry() {$/;"	f	class:testing::__anon8::MockObjectRegistry
~Mutex	third_party/gmock/gtest/gtest.h	/^  ~Mutex() {$/;"	f	class:std::tr1::Mutex
~NaggyMock	third_party/gmock/gmock/gmock.h	/^  virtual ~NaggyMock() {$/;"	f	class:testing::NaggyMock
~NativeArray	third_party/gmock/gtest/gtest.h	/^  ~NativeArray() {$/;"	f	class:testing::internal::NativeArray
~NiceMock	third_party/gmock/gmock/gmock.h	/^  virtual ~NiceMock() {$/;"	f	class:testing::NiceMock
~Notification	third_party/gmock/gtest/gtest.h	/^  ~Notification() {$/;"	f	class:std::tr1::Notification
~NumericType	src/include/type/numeric_type.h	/^  ~NumericType() {}$/;"	f	class:cmudb::NumericType
~OsStackTraceGetterInterface	third_party/gmock/gmock-gtest-all.cc	/^  virtual ~OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
~Page	src/include/page/page.h	/^  ~Page(){};$/;"	f	class:cmudb::Page
~ParamGeneratorInterface	third_party/gmock/gtest/gtest.h	/^  virtual ~ParamGeneratorInterface() {}$/;"	f	class:testing::internal::ParamGeneratorInterface
~ParamIteratorInterface	third_party/gmock/gtest/gtest.h	/^  virtual ~ParamIteratorInterface() {}$/;"	f	class:testing::internal::ParamIteratorInterface
~ParameterizedTestCaseInfoBase	third_party/gmock/gtest/gtest.h	/^  virtual ~ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
~ParameterizedTestCaseRegistry	third_party/gmock/gtest/gtest.h	/^  ~ParameterizedTestCaseRegistry() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
~RE	third_party/gmock/gmock-gtest-all.cc	/^RE::~RE() {$/;"	f	class:testing::internal::RE
~RWMutex	src/include/common/rwmutex.h	/^  ~RWMutex() { std::lock_guard<mutex_t> guard(mutex_); }$/;"	f	class:cmudb::RWMutex
~RangeGenerator	third_party/gmock/gtest/gtest.h	/^  virtual ~RangeGenerator() {}$/;"	f	class:testing::internal::RangeGenerator
~Replacer	src/include/buffer/replacer.h	/^  virtual ~Replacer() {}$/;"	f	class:cmudb::Replacer
~ReturnSentinel	third_party/gmock/gtest/gtest.h	/^    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
~ScopedFakeTestPartResultReporter	third_party/gmock/gmock-gtest-all.cc	/^ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
~ScopedPrematureExitFile	third_party/gmock/gmock-gtest-all.cc	/^  ~ScopedPrematureExitFile() {$/;"	f	class:testing::internal::ScopedPrematureExitFile
~SingleFailureChecker	third_party/gmock/gmock-gtest-all.cc	/^SingleFailureChecker::~SingleFailureChecker() {$/;"	f	class:testing::internal::SingleFailureChecker
~SmallintType	src/include/type/smallint_type.h	/^  ~SmallintType() {}$/;"	f	class:cmudb::SmallintType
~SocketWriter	third_party/gmock/gmock-gtest-all.cc	/^    virtual ~SocketWriter() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
~StrictMock	third_party/gmock/gmock/gmock.h	/^  virtual ~StrictMock() {$/;"	f	class:testing::StrictMock
~TableHeap	src/include/table/table_heap.h	/^  ~TableHeap() {$/;"	f	class:cmudb::TableHeap
~TableIterator	src/include/table/table_iterator.h	/^  ~TableIterator() { delete tuple_; }$/;"	f	class:cmudb::TableIterator
~Test	third_party/gmock/gmock-gtest-all.cc	/^Test::~Test() {$/;"	f	class:testing::Test
~TestCase	third_party/gmock/gmock-gtest-all.cc	/^TestCase::~TestCase() {$/;"	f	class:testing::TestCase
~TestEventListener	third_party/gmock/gtest/gtest.h	/^  virtual ~TestEventListener() {}$/;"	f	class:testing::TestEventListener
~TestEventListeners	third_party/gmock/gmock-gtest-all.cc	/^TestEventListeners::~TestEventListeners() { delete repeater_; }$/;"	f	class:testing::TestEventListeners
~TestEventRepeater	third_party/gmock/gmock-gtest-all.cc	/^TestEventRepeater::~TestEventRepeater() {$/;"	f	class:testing::internal::TestEventRepeater
~TestFactoryBase	third_party/gmock/gtest/gtest.h	/^  virtual ~TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
~TestInfo	third_party/gmock/gmock-gtest-all.cc	/^TestInfo::~TestInfo() { delete factory_; }$/;"	f	class:testing::TestInfo
~TestMetaFactoryBase	third_party/gmock/gtest/gtest.h	/^  virtual ~TestMetaFactoryBase() {}$/;"	f	class:testing::internal::TestMetaFactoryBase
~TestPartResultReporterInterface	third_party/gmock/gtest/gtest.h	/^  virtual ~TestPartResultReporterInterface() {}$/;"	f	class:testing::TestPartResultReporterInterface
~TestResult	third_party/gmock/gmock-gtest-all.cc	/^TestResult::~TestResult() {$/;"	f	class:testing::TestResult
~ThreadLocal	third_party/gmock/gtest/gtest.h	/^  ~ThreadLocal() {$/;"	f	class:std::tr1::ThreadLocal
~ThreadLocalValueHolderBase	third_party/gmock/gtest/gtest.h	/^  virtual ~ThreadLocalValueHolderBase() {}$/;"	f	class:std::tr1::ThreadLocalValueHolderBase
~ThreadWithParam	third_party/gmock/gtest/gtest.h	/^  ~ThreadWithParam() { Join(); }$/;"	f	class:std::tr1::ThreadWithParam
~ThreadWithParamBase	third_party/gmock/gtest/gtest.h	/^  virtual ~ThreadWithParamBase() {}$/;"	f	class:std::tr1::ThreadWithParamBase
~TinyintType	src/include/type/tinyint_type.h	/^  ~TinyintType() {}$/;"	f	class:cmudb::TinyintType
~Transaction	src/include/concurrency/transaction.h	/^  ~Transaction() {}$/;"	f	class:cmudb::Transaction
~Tuple	src/include/table/tuple.h	/^  ~Tuple() {$/;"	f	class:cmudb::Tuple
~Type	src/include/type/type.h	/^  virtual ~Type() {}$/;"	f	class:cmudb::Type
~TypedExpectation	third_party/gmock/gmock/gmock.h	/^  virtual ~TypedExpectation() {$/;"	f	class:testing::internal::TypedExpectation
~UnitTest	third_party/gmock/gmock-gtest-all.cc	/^UnitTest::~UnitTest() {$/;"	f	class:testing::UnitTest
~UnitTestImpl	third_party/gmock/gmock-gtest-all.cc	/^UnitTestImpl::~UnitTestImpl() {$/;"	f	class:testing::internal::UnitTestImpl
~UntypedActionResultHolderBase	third_party/gmock/gmock/gmock.h	/^  virtual ~UntypedActionResultHolderBase() {}$/;"	f	class:testing::internal::UntypedActionResultHolderBase
~UntypedFunctionMockerBase	third_party/gmock/gmock-gtest-all.cc	/^UntypedFunctionMockerBase::~UntypedFunctionMockerBase() {}$/;"	f	class:testing::internal::UntypedFunctionMockerBase
~Value	src/type/value.cpp	/^Value::~Value() {$/;"	f	class:cmudb::Value
~ValuesInIteratorRangeGenerator	third_party/gmock/gtest/gtest.h	/^  virtual ~ValuesInIteratorRangeGenerator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
~VarlenType	src/type/varlen_type.cpp	/^VarlenType::~VarlenType() {}$/;"	f	class:cmudb::VarlenType
~VirtualTable	src/include/vtable/virtual_table.h	/^  ~VirtualTable() {$/;"	f	class:cmudb::VirtualTable
~WithParamInterface	third_party/gmock/gtest/gtest.h	/^  virtual ~WithParamInterface() {}$/;"	f	class:testing::WithParamInterface
~linked_ptr	third_party/gmock/gtest/gtest.h	/^  ~linked_ptr() { depart(); }$/;"	f	class:testing::internal::linked_ptr
